
e_os2.h,2690
#define HEADER_E_OS2_H59,2706
#define OPENSSL_SYS_UNIX71,3043
# undef OPENSSL_SYS_UNIX75,3227
# define OPENSSL_SYS_MACINTOSH_CLASSIC76,3252
# undef OPENSSL_SYS_UNIX81,3436
# define OPENSSL_SYS_NETWARE82,3461
# undef OPENSSL_SYS_UNIX90,3721
# define OPENSSL_SYS_MSDOS91,3746
# undef OPENSSL_SYS_UNIX97,3961
# define OPENSSL_SYS_WIN32_UWIN98,3986
#  undef OPENSSL_SYS_UNIX101,4088
#  define OPENSSL_SYS_WIN32_CYGWIN102,4114
#   undef OPENSSL_SYS_UNIX105,4212
#   define OPENSSL_SYS_WIN32106,4239
#   undef OPENSSL_SYS_UNIX109,4314
#   define OPENSSL_SYS_WINNT110,4341
#   undef OPENSSL_SYS_UNIX113,4416
#   define OPENSSL_SYS_WINCE114,4443
# undef OPENSSL_SYS_UNIX121,4650
# define OPENSSL_SYS_WINDOWS122,4675
#  define OPENSSL_SYS_MSDOS124,4731
#   define OPENSSL_OPT_WINDLL135,5143
# undef OPENSSL_SYS_UNIX142,5345
# define OPENSSL_SYS_VMS143,5370
#  define OPENSSL_SYS_VMS_DECC145,5416
#  define OPENSSL_SYS_VMS_DECC147,5472
#  define OPENSSL_SYS_VMS_DECCXX148,5503
#  define OPENSSL_SYS_VMS_NODECC150,5543
# undef OPENSSL_SYS_UNIX156,5713
# define OPENSSL_SYS_OS2157,5738
#  define OPENSSL_SYS_LINUX163,5951
#  define OPENSSL_SYS_MPE166,6015
#  define OPENSSL_SYS_SNI169,6077
#  define OPENSSL_SYS_ULTRASPARC172,6146
#  define OPENSSL_SYS_NEWS4175,6217
#  define OPENSSL_SYS_MACOSX178,6284
#  define OPENSSL_SYS_MACOSX_RHAPSODY181,6361
#  define OPENSSL_SYS_MACOSX182,6399
#  define OPENSSL_SYS_SUNOS185,6466
#  define OPENSSL_SYS_CRAY188,6554
#  define OPENSSL_SYS_AIX191,6640
# define OPENSSL_SYS_VOS197,6815
# define OPENSSL_SYS_VOS_HPPA199,6856
# define OPENSSL_SYS_VOS_IA32202,6909
# define OPENSSL_SYS_VXWORKS208,7065
# define OPENSSL_SYS_BEOS213,7204
#  define OPENSSL_SYS_BEOS_BONE216,7282
#  define OPENSSL_SYS_BEOS_R5218,7321
# define OPENSSL_UNISTD_IO 229,7544
# define OPENSSL_DECLARE_EXIT 230,7578
# define OPENSSL_UNISTD_IO 232,7637
# define OPENSSL_DECLARE_EXIT 233,7679
# define OPENSSL_EXPORT 256,8639
# define OPENSSL_IMPORT 257,8673
# define OPENSSL_GLOBAL 258,8707
# define OPENSSL_EXPORT 260,8807
# define OPENSSL_IMPORT 261,8860
# define OPENSSL_GLOBAL262,8913
# define OPENSSL_EXPORT 264,8943
# define OPENSSL_IMPORT 265,8974
# define OPENSSL_GLOBAL266,9005
#define OPENSSL_EXTERN 268,9036
# define OPENSSL_IMPLEMENT_GLOBAL(281,9465
# define OPENSSL_DECLARE_GLOBAL(284,9613
# define OPENSSL_GLOBAL_REF(285,9683
# define OPENSSL_IMPLEMENT_GLOBAL(287,9745
# define OPENSSL_DECLARE_GLOBAL(288,9838
# define OPENSSL_GLOBAL_REF(289,9916
#  define ossl_ssize_t 293,10064
#  define ossl_ssize_t 297,10125
#  define ssize_t 301,10239
#  define ossl_ssize_t 305,10312
#  define ossl_ssize_t 309,10369

e_os.h,7197
#define HEADER_E_OS_H60,3205
#undef REF_PRINT75,3569
#define REF_PRINT(76,3586
#define DEVRANDOM 82,3831
#define DEVRANDOM_EGD 88,4132
#  define NO_SYS_PARAM_H92,4262
#  define NO_CHMOD93,4287
#  define NO_SYSLOG94,4306
#    define MAC_OS_pre_X100,4426
#    define NO_SYS_TYPES_H101,4451
#  define NO_SYS_PARAM_H103,4487
#  define NO_CHMOD104,4512
#  define NO_SYSLOG105,4531
#  undef  DEVRANDOM106,4551
#  define GETPID_IS_MEANINGLESS107,4571
#  define MS_STATIC	117,4943
#  define MS_STATIC119,4976
#  define WIN32123,5054
#  define WINDOWS126,5131
#  define MSDOS129,5206
#  define GETPID_IS_MEANINGLESS133,5284
#define get_last_sys_error(137,5337
#define clear_sys_error(138,5381
#define WIN_CONSOLE_BUG140,5443
#define get_last_sys_error(143,5480
#define clear_sys_error(144,5515
#define get_last_socket_error(148,5578
#define clear_socket_error(149,5628
#define readsocket(150,5676
#define writesocket(151,5722
#define WATT32153,5794
#define get_last_socket_error(154,5809
#define clear_socket_error(155,5847
#define closesocket(156,5884
#define readsocket(157,5919
#define writesocket(158,5959
#define get_last_socket_error(160,6028
#define clear_socket_error(161,6066
#define closesocket(162,6103
#define readsocket(163,6146
#define writesocket(164,6205
#define get_last_socket_error(166,6291
#define clear_socket_error(167,6329
#define ioctlsocket(168,6369
#define closesocket(169,6414
#define readsocket(170,6455
#define writesocket(171,6507
#define get_last_socket_error(173,6594
#define clear_socket_error(174,6632
#define ioctlsocket(175,6669
#define closesocket(176,6724
#define readsocket(177,6761
#define writesocket(178,6809
#define get_last_socket_error(180,6902
#define clear_socket_error(181,6940
#define FIONBIO 182,6980
#define ioctlsocket(183,7008
#define readsocket(184,7086
#define writesocket(185,7138
#define get_last_socket_error(188,7254
#define clear_socket_error(189,7292
#define closesocket(190,7332
#define ioctlsocket(191,7373
#define readsocket(193,7444
#define writesocket(194,7496
#define readsocket(196,7554
#define writesocket(197,7613
#define get_last_socket_error(200,7685
#define clear_socket_error(201,7735
#define readsocket(202,7783
#define writesocket(203,7830
#define get_last_socket_error(206,7891
#define clear_socket_error(207,7929
#define ioctlsocket(208,7966
#define closesocket(209,8006
#define readsocket(210,8039
#define writesocket(211,8083
#  define MS_CALLBACK	215,8171
#  define MS_FAR	216,8206
#  define MS_CALLBACK218,8234
#  define MS_FAR219,8256
#  undef OPENSSL_NO_FP_API223,8305
#  define OPENSSL_NO_FP_API224,8332
#    define _setmode 235,8551
#    define _O_TEXT 236,8580
#    define _O_BINARY 237,8607
#    undef DEVRANDOM238,8638
#    define DEVRANDOM 239,8659
#    define S_IFDIR	243,8744
#    define S_IFMT	247,8800
#    define NO_SYSLOG251,8882
#  define NO_DIRENT253,8913
#      define _WIN32_WINNT 271,9802
#      define strlen(291,10548
static unsigned int _strlen31(293,10610
#      undef isspace303,10917
#      undef isdigit304,10938
#      undef isalnum305,10959
#      undef isupper306,10980
#      undef isxdigit307,11001
#        undef stdin311,11121
#        undef stdout312,11142
#        undef stderr313,11164
#        define stdin 315,11215
#        define stdout 316,11257
#        define stderr 317,11299
#        undef stdin319,11386
#        undef stdout320,11407
#        undef stderr321,11429
#        define stdin 329,11822
#        define stdout 330,11862
#        define stderr 331,11902
#    define OPENSSL_NO_POSIX_IO339,12042
#    define _setmode 343,12113
#    define _O_TEXT 344,12142
#    define _O_BINARY 345,12169
#    define _int64 346,12200
#    define _kbhit 347,12227
#  define EXIT(350,12262
#  define LIST_SEPARATOR_CHAR 351,12288
#    define X_OK	353,12337
#    define W_OK	356,12380
#    define R_OK	359,12423
#  define OPENSSL_CONF	361,12451
#  define SSLEAY_CONF	362,12488
#  define NUL_DEV	363,12523
#  define RFILE	364,12547
#    define DEFAULT_HOME 366,12598
#    define DEFAULT_HOME 368,12635
#    define VMS 374,12738
#    define OPENSSL_CONF	383,12981
#    define SSLEAY_CONF	384,13020
#    define RFILE	385,13058
#    define LIST_SEPARATOR_CHAR 386,13084
#    define NUL_DEV	387,13120
#    undef DEVRANDOM389,13218
#    define EXIT(405,14044
#    define NO_SYS_PARAM_H412,14340
#    define NO_SYS_TYPES_H417,14452
#    undef  DEVRANDOM418,14479
#      define getpid 420,14525
#    define NO_SYSLOG427,14704
#    define _setmode 428,14726
#    define _kbhit 429,14755
#    define _O_TEXT 430,14780
#    define _O_BINARY 431,14807
#    define OPENSSL_CONF 432,14838
#    define SSLEAY_CONF 433,14879
#    define RFILE 434,14919
#    define LIST_SEPARATOR_CHAR 435,14947
#    define EXIT(436,14983
#      define NO_SYS_PARAM_H441,15115
#      define pid_t 452,15377
#      define setvbuf(457,15653
       typedef unsigned long clock_t;458,15712
#    define OPENSSL_CONF	465,15856
#    define SSLEAY_CONF	466,15895
#    define RFILE	467,15933
#    define LIST_SEPARATOR_CHAR 468,15959
#    define NUL_DEV	469,15995
#    define EXIT(470,16028
#  define SSLeay_getpid(473,16067
#      define SSLeay_Write(485,16243
#      define SSLeay_Read(486,16282
#      define SHUTDOWN(487,16320
#      define SHUTDOWN2(488,16358
#        define getservbyname 491,16475
#        undef getservbyname498,16702
#        define socket(509,17084
#        define accept(510,17135
#      define SSLeay_Write(512,17199
#      define SSLeay_Read(513,17253
#      define SHUTDOWN(514,17306
#      define SHUTDOWN2(515,17373
#      define SSLeay_Write(517,17451
#      define SSLeay_Read(518,17502
#      define SHUTDOWN(519,17549
#      define SHUTDOWN2(520,17589
#    define SSLeay_Write(526,17700
#    define SSLeay_Read(527,17761
#    define SHUTDOWN(528,17826
#    define SHUTDOWN2(529,17872
#        define INVALID_SOCKET 543,18320
#      define SSLeay_Write(547,18416
#      define SSLeay_Read(548,18472
#      define SHUTDOWN(549,18525
#      define SHUTDOWN2(550,18594
#    define SSLeay_Read(612,20047
#    define SSLeay_Write(613,20100
#    define SHUTDOWN(614,20154
#    define SHUTDOWN2(615,20223
#    define INVALID_SOCKET	617,20319
#      define OPENSSL_USE_IPV6 626,20597
#      define OPENSSL_USE_IPV6 628,20640
# define memmove(639,20938
# define strtoul(640,20985
# define strerror(642,21099
# define memcmp 646,21290
#  define OPENSSL_EXIT(651,21396
#  define OPENSSL_EXIT(653,21439
#define DG_GCC_BUG	659,21568
#define IRIX_CC_BUG	662,21625
#define IRIX_CC_BUG	665,21723
#  define strcasecmp 669,21844
#  define strncasecmp 670,21874
#  define strcasecmp 674,22012
#  define strncasecmp 675,22052
#  define OPENSSL_IMPLEMENTS_strncasecmp676,22094
#  define strcasecmp 678,22186
#  define strncasecmp 679,22215
#    define strcasecmp 683,22331
#    define strncasecmp 684,22362
# define NO_SYSLOG691,22517
#define TTY_STRUCT 700,22652
#define sleep(702,22676
#define getpid 708,22791
#define SO_ERROR 722,23211
#define NO_SYS_UN723,23230
#define IPPROTO_IP 724,23248

e_os2.h,2690
#define HEADER_E_OS2_H59,2706
#define OPENSSL_SYS_UNIX71,3043
# undef OPENSSL_SYS_UNIX75,3227
# define OPENSSL_SYS_MACINTOSH_CLASSIC76,3252
# undef OPENSSL_SYS_UNIX81,3436
# define OPENSSL_SYS_NETWARE82,3461
# undef OPENSSL_SYS_UNIX90,3721
# define OPENSSL_SYS_MSDOS91,3746
# undef OPENSSL_SYS_UNIX97,3961
# define OPENSSL_SYS_WIN32_UWIN98,3986
#  undef OPENSSL_SYS_UNIX101,4088
#  define OPENSSL_SYS_WIN32_CYGWIN102,4114
#   undef OPENSSL_SYS_UNIX105,4212
#   define OPENSSL_SYS_WIN32106,4239
#   undef OPENSSL_SYS_UNIX109,4314
#   define OPENSSL_SYS_WINNT110,4341
#   undef OPENSSL_SYS_UNIX113,4416
#   define OPENSSL_SYS_WINCE114,4443
# undef OPENSSL_SYS_UNIX121,4650
# define OPENSSL_SYS_WINDOWS122,4675
#  define OPENSSL_SYS_MSDOS124,4731
#   define OPENSSL_OPT_WINDLL135,5143
# undef OPENSSL_SYS_UNIX142,5345
# define OPENSSL_SYS_VMS143,5370
#  define OPENSSL_SYS_VMS_DECC145,5416
#  define OPENSSL_SYS_VMS_DECC147,5472
#  define OPENSSL_SYS_VMS_DECCXX148,5503
#  define OPENSSL_SYS_VMS_NODECC150,5543
# undef OPENSSL_SYS_UNIX156,5713
# define OPENSSL_SYS_OS2157,5738
#  define OPENSSL_SYS_LINUX163,5951
#  define OPENSSL_SYS_MPE166,6015
#  define OPENSSL_SYS_SNI169,6077
#  define OPENSSL_SYS_ULTRASPARC172,6146
#  define OPENSSL_SYS_NEWS4175,6217
#  define OPENSSL_SYS_MACOSX178,6284
#  define OPENSSL_SYS_MACOSX_RHAPSODY181,6361
#  define OPENSSL_SYS_MACOSX182,6399
#  define OPENSSL_SYS_SUNOS185,6466
#  define OPENSSL_SYS_CRAY188,6554
#  define OPENSSL_SYS_AIX191,6640
# define OPENSSL_SYS_VOS197,6815
# define OPENSSL_SYS_VOS_HPPA199,6856
# define OPENSSL_SYS_VOS_IA32202,6909
# define OPENSSL_SYS_VXWORKS208,7065
# define OPENSSL_SYS_BEOS213,7204
#  define OPENSSL_SYS_BEOS_BONE216,7282
#  define OPENSSL_SYS_BEOS_R5218,7321
# define OPENSSL_UNISTD_IO 229,7544
# define OPENSSL_DECLARE_EXIT 230,7578
# define OPENSSL_UNISTD_IO 232,7637
# define OPENSSL_DECLARE_EXIT 233,7679
# define OPENSSL_EXPORT 256,8639
# define OPENSSL_IMPORT 257,8673
# define OPENSSL_GLOBAL 258,8707
# define OPENSSL_EXPORT 260,8807
# define OPENSSL_IMPORT 261,8860
# define OPENSSL_GLOBAL262,8913
# define OPENSSL_EXPORT 264,8943
# define OPENSSL_IMPORT 265,8974
# define OPENSSL_GLOBAL266,9005
#define OPENSSL_EXTERN 268,9036
# define OPENSSL_IMPLEMENT_GLOBAL(281,9465
# define OPENSSL_DECLARE_GLOBAL(284,9613
# define OPENSSL_GLOBAL_REF(285,9683
# define OPENSSL_IMPLEMENT_GLOBAL(287,9745
# define OPENSSL_DECLARE_GLOBAL(288,9838
# define OPENSSL_GLOBAL_REF(289,9916
#  define ossl_ssize_t 293,10064
#  define ossl_ssize_t 297,10125
#  define ssize_t 301,10239
#  define ossl_ssize_t 305,10312
#  define ossl_ssize_t 309,10369

crypto/md4/md4_one.c,32
unsigned char *MD4(MD468,3348

crypto/md4/md4.c,81
#define BUFSIZE	63,3258
int main(71,3425
void do_fp(99,3755
void pt(119,4057

crypto/md4/md4.h,493
#define HEADER_MD4_H60,3214
#define MD4_LONG 81,3667
#define MD4_LONG 83,3752
#define MD4_LONG_LOG2 84,3783
#define MD4_LONG 93,4085
#define MD4_CBLOCK	96,4123
#define MD4_LBLOCK	97,4145
#define MD4_DIGEST_LENGTH 98,4179
typedef struct MD4state_st100,4209
	MD4_LONG A,102,4239
	MD4_LONG A,B,102,4239
	MD4_LONG A,B,C,102,4239
	MD4_LONG A,B,C,D;102,4239
	MD4_LONG Nl,103,4258
	MD4_LONG Nl,Nh;103,4258
	MD4_LONG data[data104,4275
	unsigned int num;105,4303
	} MD4_CTX;106,4322

crypto/md4/md4test.c,127
int main(66,3301
static char *test[test75,3442
static char *ret[ret86,3697
int main(97,4010
static char *pt(pt127,4485

crypto/md4/md4_dgst.c,274
const char MD4_version[MD4_version64,3298
#define INIT_DATA_A 69,3419
#define INIT_DATA_B 70,3466
#define INIT_DATA_C 71,3513
#define INIT_DATA_D 72,3560
fips_md_init(74,3608
#undef X86,3784
void md4_block_data_order 88,3800
# define X(96,4130
# define X(99,4182

crypto/md4/md4_locl.h,440
#define MD4_LONG_LOG2 65,3319
#define DATA_ORDER_IS_LITTLE_ENDIAN70,3443
#define HASH_LONG	72,3480
#define HASH_CTX	73,3508
#define HASH_CBLOCK	74,3534
#define HASH_UPDATE	75,3566
#define HASH_TRANSFORM	76,3598
#define HASH_FINAL	77,3636
#define	HASH_MAKE_STRING(78,3666
#define	HASH_BLOCK_DATA_ORDER	85,3866
#define	F(98,4279
#define G(99,4324
#define	H(100,4383
#define R0(102,4419
#define R1(106,4501
#define R2(110,4584

crypto/dsa/dsatest.c,471
#undef OPENSSL_NO_DEPRECATED62,3357
int main(80,3672
#define MS_CALLBACK 89,3813
#define MS_CALLBACK91,3856
static unsigned char seed[seed98,4082
static unsigned char out_p[out_p103,4223
static unsigned char out_q[out_q114,4595
static unsigned char out_g[out_g120,4737
static const unsigned char str1[str1131,5109
static const char rnd_seed[rnd_seed133,5168
static BIO *bio_err=bio_err135,5267
int main(137,5294
static int MS_CALLBACK dsa_cb(240,7500

crypto/dsa/dsa_ossl.c,344
static DSA_METHOD openssl_dsa_meth 76,3755
#define DSA_MOD_EXP(104,4439
#define DSA_BN_MOD_EXP(115,4817
const DSA_METHOD *DSA_OpenSSL(DSA_OpenSSL126,5145
static DSA_SIG *dsa_do_sign(dsa_do_sign131,5213
static int dsa_sign_setup(216,6958
static int dsa_do_verify(307,8883
static int dsa_init(400,11116
static int dsa_finish(406,11199

crypto/dsa/dsa_vrf.c,27
int DSA_do_verify(64,3316

crypto/dsa/dsa_sign.c,129
DSA_SIG * DSA_do_sign(66,3367
int DSA_sign_setup(79,3708
DSA_SIG *DSA_SIG_new(DSA_SIG_new92,4064
void DSA_SIG_free(103,4224

crypto/dsa/dsa_err.c,217
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA DSA_str_functs[DSA_str_functs71,3086
static ERR_STRING_DATA DSA_str_reasons[DSA_str_reasons101,4428
void ERR_load_DSA_strings(120,5274

crypto/dsa/dsa_asn1.c,239
static int sig_cb(67,2925
} ASN1_SEQUENCE_END_cb(89,3395
} ASN1_SEQUENCE_END_cb(116,4112
} ASN1_SEQUENCE_END_cb(124,4366
} ASN1_SEQUENCE_END_name(139,4869
} ASN1_CHOICE_END_cb(144,5036
int DSA_sign(153,5260
int DSA_verify(175,5720

crypto/dsa/dsa_depr.c,167
#undef GENUINE_DSA59,2760
#define HASH 64,2930
#define HASH 69,3126
static void *dummy=dummy72,3162
DSA *DSA_generate_parameters(DSA_generate_parameters86,3429

crypto/dsa/dsa_lib.c,552
const char DSA_version[DSA_version77,3553
static const DSA_METHOD *default_DSA_method default_DSA_method79,3608
void DSA_set_default_method(81,3661
const DSA_METHOD *DSA_get_default_method(DSA_get_default_method86,3748
DSA *DSA_new(DSA_new102,4015
int DSA_set_method(107,4071
DSA *DSA_new_method(DSA_new_method126,4552
void DSA_free(195,5850
int DSA_up_ref(233,6647
int DSA_size(249,6917
int DSA_get_ex_new_index(271,7433
int DSA_set_ex_data(278,7686
void *DSA_get_ex_data(DSA_get_ex_data283,7791
DH *DSA_dup_DH(DSA_dup_DH289,7905

crypto/dsa/dsa_prn.c,111
int DSA_print_fp(65,2863
int DSAparams_print_fp(81,3129
int DSA_print(98,3408
int DSAparams_print(110,3649

crypto/dsa/dsa_gen.c,146
#undef GENUINE_DSA59,3197
#define HASH 64,3367
#define HASH 69,3563
int DSA_generate_parameters_ex(88,3917
int dsa_builtin_paramgen(132,4912

crypto/dsa/dsa_pmeth.c,530
	int nbits;72,2990
	int qbits;73,3043
	const EVP_MD *pmd;pmd74,3096
	int gentmp[gentmp76,3178
	const EVP_MD *md;md78,3216
	} DSA_PKEY_CTX;79,3262
static int pkey_dsa_init(81,3280
static int pkey_dsa_copy(99,3596
static void pkey_dsa_cleanup(113,3891
static int pkey_dsa_sign(120,4012
static int pkey_dsa_verify(141,4435
static int pkey_dsa_ctrl(159,4806
static int pkey_dsa_ctrl_str(217,6291
static int pkey_dsa_paramgen(241,7004
static int pkey_dsa_keygen(266,7510
const EVP_PKEY_METHOD dsa_pkey_meth 284,7938

crypto/dsa/dsa_key.c,69
int DSA_generate_key(73,3451
static int dsa_builtin_keygen(92,3886

crypto/dsa/dsa_ameth.c,888
static int dsa_pub_decode(69,2939
static int dsa_pub_encode(138,4222
static int dsa_priv_decode(190,5226
static int dsa_priv_encode(303,7741
static int int_dsa_size(355,8750
static int dsa_bits(360,8838
static int dsa_missing_parameters(365,8927
static int dsa_copy_parameters(374,9109
static int dsa_cmp_parameters(398,9611
static int dsa_pub_cmp(408,9847
static void int_dsa_free(416,10006
static void update_buflen(421,10081
static int do_dsa_print(430,10242
static int dsa_param_decode(490,11488
static int dsa_param_encode(503,11757
static int dsa_param_print(508,11881
static int dsa_pub_print(514,12034
static int dsa_priv_print(521,12186
static int old_dsa_priv_decode(527,12338
static int old_dsa_priv_encode(540,12618
static int dsa_sig_print(545,12749
static int dsa_pkey_ctrl(591,13671
const EVP_PKEY_ASN1_METHOD dsa_asn1_meths[dsa_asn1_meths643,14893

crypto/dsa/dsagen.c,168
#define TEST62,3241
#define GENUINE_DSA63,3254
#define LAST_VALUE 66,3294
#define LAST_VALUE 68,3324
unsigned char seed[seed72,3368
int cb(80,3518
main(92,3675

crypto/dsa/dsa.h,3234
#define HEADER_DSA_H66,3438
# define OPENSSL_DSA_MAX_MODULUS_BITS	88,3809
#define DSA_FLAG_CACHE_MONT_P	91,3861
#define DSA_FLAG_NO_EXP_CONSTTIME 92,3896
#define DSA_FLAG_FIPS_METHOD	106,4705
#define DSA_FLAG_NON_FIPS_ALLOW	113,4920
typedef struct DSA_SIG_st123,5117
	BIGNUM *r;r125,5146
	BIGNUM *s;s126,5158
	} DSA_SIG;127,5170
struct dsa_method129,5183
	const char *name;name131,5204
	DSA_SIG * (*dsa_do_sign)dsa_do_sign132,5223
	int (*dsa_sign_setup)dsa_sign_setup133,5297
	int (*dsa_do_verify)dsa_do_verify135,5384
	int (*dsa_mod_exp)dsa_mod_exp137,5480
	int (*bn_mod_exp)bn_mod_exp140,5623
	int (*init)init143,5768
	int (*finish)finish144,5792
	int flags;145,5818
	char *app_data;app_data146,5830
	int (*dsa_paramgen)dsa_paramgen148,5913
	int (*dsa_keygen)dsa_keygen153,6119
struct dsa_st156,6154
	int pad;160,6275
	long version;161,6285
	int write_params;162,6300
	BIGNUM *p;p163,6319
	BIGNUM *q;q164,6331
	BIGNUM *g;g165,6355
	BIGNUM *pub_key;pub_key167,6368
	BIGNUM *priv_key;priv_key168,6406
	BIGNUM *kinv;kinv170,6446
	BIGNUM *r;r171,6484
	int flags;173,6520
	BN_MONT_CTX *method_mont_p;method_mont_p175,6580
	int references;176,6609
	CRYPTO_EX_DATA ex_data;177,6626
	const DSA_METHOD *meth;meth178,6651
	ENGINE *engine;engine180,6733
#define d2i_DSAparams_fp(183,6755
#define i2d_DSAparams_fp(185,6886
#define d2i_DSAparams_bio(187,6975
#define i2d_DSAparams_bio(188,7055
#define DSS_prime_checks 255,9542
#define DSA_is_prime(258,9665
#define EVP_PKEY_CTX_set_dsa_paramgen_bits(267,9964
#define	EVP_PKEY_CTRL_DSA_PARAMGEN_BITS	271,10134
#define	EVP_PKEY_CTRL_DSA_PARAMGEN_Q_BITS	272,10199
#define	EVP_PKEY_CTRL_DSA_PARAMGEN_MD	273,10265
#define DSA_F_D2I_DSA_SIG	284,10606
#define DSA_F_DO_DSA_PRINT	285,10640
#define DSA_F_DSAPARAMS_PRINT	286,10675
#define DSA_F_DSAPARAMS_PRINT_FP	287,10713
#define DSA_F_DSA_DO_SIGN	288,10753
#define DSA_F_DSA_DO_VERIFY	289,10787
#define DSA_F_DSA_GENERATE_KEY	290,10823
#define DSA_F_DSA_GENERATE_PARAMETERS_EX	291,10862
#define DSA_F_DSA_NEW_METHOD	292,10909
#define DSA_F_DSA_PARAM_DECODE	293,10946
#define DSA_F_DSA_PRINT_FP	294,10985
#define DSA_F_DSA_PRIV_DECODE	295,11020
#define DSA_F_DSA_PRIV_ENCODE	296,11058
#define DSA_F_DSA_PUB_DECODE	297,11096
#define DSA_F_DSA_PUB_ENCODE	298,11133
#define DSA_F_DSA_SIGN	299,11170
#define DSA_F_DSA_SIGN_SETUP	300,11202
#define DSA_F_DSA_SIG_NEW	301,11239
#define DSA_F_DSA_SIG_PRINT	302,11273
#define DSA_F_DSA_VERIFY	303,11309
#define DSA_F_I2D_DSA_SIG	304,11342
#define DSA_F_OLD_DSA_PRIV_DECODE	305,11376
#define DSA_F_PKEY_DSA_CTRL	306,11417
#define DSA_F_PKEY_DSA_KEYGEN	307,11453
#define DSA_F_SIG_CB	308,11491
#define DSA_R_BAD_Q_VALUE	311,11542
#define DSA_R_BN_DECODE_ERROR	312,11576
#define DSA_R_BN_ERROR	313,11614
#define DSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE	314,11646
#define DSA_R_DECODE_ERROR	315,11694
#define DSA_R_INVALID_DIGEST_TYPE	316,11729
#define DSA_R_MISSING_PARAMETERS	317,11770
#define DSA_R_MODULUS_TOO_LARGE	318,11810
#define DSA_R_NEED_NEW_SETUP_VALUES	319,11850
#define DSA_R_NON_FIPS_DSA_METHOD	320,11893
#define DSA_R_NO_PARAMETERS_SET	321,11934
#define DSA_R_PARAMETER_ENCODING_ERROR	322,11974

crypto/uid.c,93
int OPENSSL_issetugid(63,2804
int OPENSSL_issetugid(70,2958
int OPENSSL_issetugid(80,3059

crypto/cms/cms_ess.c,368
DECLARE_ASN1_ITEM(63,2762
CMS_ReceiptRequest *CMS_ReceiptRequest_create0(CMS_ReceiptRequest_create092,3390
int CMS_add1_ReceiptRequest(140,4359
void CMS_ReceiptRequest_get0_values(166,4834
static int cms_msgSigDigest(194,5450
int cms_msgSigDigest_add1(209,5836
int cms_Receipt_verify(229,6376
ASN1_OCTET_STRING *cms_encode_Receipt(cms_encode_Receipt377,9556

crypto/cms/cms_io.c,290
int CMS_stream(61,2703
CMS_ContentInfo *d2i_CMS_bio(d2i_CMS_bio80,3104
int i2d_CMS_bio(85,3241
IMPLEMENT_PEM_rw_const(90,3364
int i2d_CMS_bio_stream(100,3646
int PEM_write_bio_CMS_stream(106,3830
int SMIME_write_CMS(113,4039
CMS_ContentInfo *SMIME_read_CMS(SMIME_read_CMS128,4502

crypto/cms/cms_env.c,1082
DECLARE_ASN1_ITEM(67,2845
static CMS_EnvelopedData *cms_enveloped_data_init(cms_enveloped_data_init85,3304
STACK_OF(106,3892
int CMS_RecipientInfo_type(115,4086
CMS_ContentInfo *CMS_EnvelopedData_create(CMS_EnvelopedData_create120,4161
CMS_RecipientInfo *CMS_add1_recipient_cert(CMS_add1_recipient_cert147,4809
int CMS_RecipientInfo_ktri_get0_algs(235,6568
int CMS_RecipientInfo_ktri_get0_signer_id(258,7012
int CMS_RecipientInfo_ktri_cert_cmp(275,7440
int CMS_RecipientInfo_set0_pkey(286,7716
static int cms_RecipientInfo_ktri_encrypt(300,8021
static int cms_RecipientInfo_ktri_decrypt(365,9287
int CMS_RecipientInfo_kekri_id_cmp(441,10771
static size_t aes_wrap_keylen(461,11312
CMS_RecipientInfo *CMS_add0_recipient_key(CMS_add0_recipient_key479,11528
int CMS_RecipientInfo_kekri_get0_id(591,13559
int CMS_RecipientInfo_set0_key(628,14313
static int cms_RecipientInfo_kekri_encrypt(647,14687
static int cms_RecipientInfo_kekri_decrypt(707,15799
int CMS_RecipientInfo_decrypt(786,17352
BIO *cms_EnvelopedData_init_bio(cms_EnvelopedData_init_bio806,17802

crypto/cms/cms_lib.c,1070
IMPLEMENT_ASN1_FUNCTIONS(63,2755
CMS_ContentInfo *cms_Data_create(cms_Data_create76,3104
BIO *cms_content_bio(cms_content_bio89,3335
BIO *CMS_dataInit(CMS_dataInit105,3833
int CMS_dataFinal(161,4809
ASN1_OCTET_STRING **CMS_get0_content(CMS_get0_content213,6091
static ASN1_OBJECT **cms_get0_econtent_type(cms_get0_econtent_type255,7195
const ASN1_OBJECT *CMS_get0_eContentType(CMS_get0_eContentType286,7996
int CMS_set1_eContentType(295,8173
int CMS_is_detached(311,8476
int CMS_set_detached(322,8639
void cms_DigestAlgorithm_set(353,9219
BIO *cms_DigestAlgorithm_init_bio(cms_DigestAlgorithm_init_bio368,9546
int cms_DigestAlgorithm_find_ctx(397,10212
static STACK_OF(428,10967
CMS_CertificateChoices *CMS_add0_CertificateChoices(CMS_add0_CertificateChoices447,11386
int CMS_add0_cert(469,11917
int CMS_add1_cert(500,12609
static STACK_OF(509,12784
CMS_RevocationInfoChoice *CMS_add0_RevocationInfoChoice(CMS_add0_RevocationInfoChoice528,13187
int CMS_add0_crl(550,13726
int CMS_add1_crl(561,13947
STACK_OF(570,14125
STACK_OF(603,14829

crypto/cms/cms_cd.c,98
DECLARE_ASN1_ITEM(64,2786
BIO *cms_CompressedData_init_bio(cms_CompressedData_init_bio113,3751

crypto/cms/cms_lcl.h,12899
#define HEADER_CMS_LCL_H59,2715
typedef struct CMS_IssuerAndSerialNumber_st CMS_IssuerAndSerialNumber;74,2939
typedef struct CMS_EncapsulatedContentInfo_st CMS_EncapsulatedContentInfo;75,3010
typedef struct CMS_SignerIdentifier_st CMS_SignerIdentifier;76,3085
typedef struct CMS_SignedData_st CMS_SignedData;77,3146
typedef struct CMS_OtherRevocationInfoFormat_st CMS_OtherRevocationInfoFormat;78,3195
typedef struct CMS_OriginatorInfo_st CMS_OriginatorInfo;79,3274
typedef struct CMS_EncryptedContentInfo_st CMS_EncryptedContentInfo;80,3331
typedef struct CMS_EnvelopedData_st CMS_EnvelopedData;81,3400
typedef struct CMS_DigestedData_st CMS_DigestedData;82,3455
typedef struct CMS_EncryptedData_st CMS_EncryptedData;83,3508
typedef struct CMS_AuthenticatedData_st CMS_AuthenticatedData;84,3563
typedef struct CMS_CompressedData_st CMS_CompressedData;85,3626
typedef struct CMS_OtherCertificateFormat_st CMS_OtherCertificateFormat;86,3683
typedef struct CMS_KeyTransRecipientInfo_st CMS_KeyTransRecipientInfo;87,3756
typedef struct CMS_OriginatorPublicKey_st CMS_OriginatorPublicKey;88,3827
typedef struct CMS_OriginatorIdentifierOrKey_st CMS_OriginatorIdentifierOrKey;89,3894
typedef struct CMS_KeyAgreeRecipientInfo_st CMS_KeyAgreeRecipientInfo;90,3973
typedef struct CMS_OtherKeyAttribute_st CMS_OtherKeyAttribute;91,4044
typedef struct CMS_RecipientKeyIdentifier_st CMS_RecipientKeyIdentifier;92,4107
typedef struct CMS_KeyAgreeRecipientIdentifier_st CMS_KeyAgreeRecipientIdentifier;93,4180
typedef struct CMS_RecipientEncryptedKey_st CMS_RecipientEncryptedKey;94,4263
typedef struct CMS_KEKIdentifier_st CMS_KEKIdentifier;95,4334
typedef struct CMS_KEKRecipientInfo_st CMS_KEKRecipientInfo;96,4389
typedef struct CMS_PasswordRecipientInfo_st CMS_PasswordRecipientInfo;97,4450
typedef struct CMS_OtherRecipientInfo_st CMS_OtherRecipientInfo;98,4521
typedef struct CMS_ReceiptsFrom_st CMS_ReceiptsFrom;99,4586
typedef struct CMS_TimestampedData_st CMS_TimestampedData;101,4675
typedef struct CMS_MetaData_st CMS_MetaData;102,4734
typedef struct CMS_Evidence_st CMS_Evidence;103,4779
typedef struct CMS_TimeStampTokenEvidence_st CMS_TimeStampTokenEvidence;104,4824
typedef struct CMS_TimeStampAndCRL_st CMS_TimeStampAndCRL;105,4897
typedef struct CMS_EvidenceRecord_st CMS_EvidenceRecord;106,4956
typedef struct CMS_EncryptionInfo_st CMS_EncryptionInfo;107,5013
typedef struct CMS_ArchiveTimeStamp_st CMS_ArchiveTimeStamp;108,5070
typedef struct CMS_ArchiveTimeStampChain_st CMS_ArchiveTimeStampChain;109,5131
typedef struct CMS_OtherEvidence_st CMS_OtherEvidence;110,5202
typedef struct CMS_TimeStampResp_st CMS_TimeStampResp;111,5257
typedef struct CMS_PKIStatusInfo_st CMS_PKIStatusInfo;112,5312
typedef struct CMS_TSTInfo_st CMS_TSTInfo;113,5367
typedef struct CMS_MessageImprint_st CMS_MessageImprint;114,5410
typedef struct CMS_Accuracy_st CMS_Accuracy;115,5467
struct CMS_ContentInfo_st117,5513
	ASN1_OBJECT *contentType;contentType119,5542
		ASN1_OCTET_STRING *data;data121,5578
		CMS_SignedData *signedData;signedData122,5605
		CMS_EnvelopedData *envelopedData;envelopedData123,5635
		CMS_DigestedData *digestedData;digestedData124,5671
		CMS_EncryptedData *encryptedData;encryptedData125,5705
		CMS_AuthenticatedData *authenticatedData;authenticatedData126,5741
		CMS_CompressedData *compressedData;compressedData127,5785
		CMS_TimestampedData *timestampedData;timestampedData128,5823
		ASN1_TYPE *other;other129,5863
		void *otherData;otherData131,5907
		} d;132,5926
struct CMS_SignedData_st135,5938
	long version;137,5966
	STACK_OF(138,5981
struct CMS_EncapsulatedContentInfo_st145,6208
	ASN1_OBJECT *eContentType;eContentType147,6249
	ASN1_OCTET_STRING *eContent;eContent148,6277
	int partial;150,6364
struct CMS_SignerInfo_st153,6383
	long version;155,6411
	CMS_SignerIdentifier *sid;sid156,6426
	X509_ALGOR *digestAlgorithm;digestAlgorithm157,6454
	STACK_OF(158,6484
struct CMS_SignerIdentifier_st167,6702
	int type;169,6736
		CMS_IssuerAndSerialNumber *issuerAndSerialNumber;issuerAndSerialNumber171,6756
		ASN1_OCTET_STRING *subjectKeyIdentifier;subjectKeyIdentifier172,6808
		} d;173,6851
struct CMS_EnvelopedData_st176,6863
	long version;178,6894
	CMS_OriginatorInfo *originatorInfo;originatorInfo179,6909
	STACK_OF(180,6946
struct CMS_OriginatorInfo_st185,7091
	STACK_OF(187,7123
struct CMS_EncryptedContentInfo_st191,7220
	ASN1_OBJECT *contentType;contentType193,7258
	X509_ALGOR *contentEncryptionAlgorithm;contentEncryptionAlgorithm194,7285
	ASN1_OCTET_STRING *encryptedContent;encryptedContent195,7326
	const EVP_CIPHER *cipher;cipher197,7408
	unsigned char *key;key198,7435
	size_t keylen;199,7456
	int debug;201,7544
struct CMS_RecipientInfo_st204,7561
 	int type;206,7592
  	 	CMS_KeyTransRecipientInfo *ktri;ktri208,7614
   		CMS_KeyAgreeRecipientInfo *kari;kari209,7652
   		CMS_KEKRecipientInfo *kekri;kekri210,7690
		CMS_PasswordRecipientInfo *pwri;pwri211,7724
		CMS_OtherRecipientInfo *ori;ori212,7759
		} d;213,7790
typedef CMS_SignerIdentifier CMS_RecipientIdentifier;216,7802
struct CMS_KeyTransRecipientInfo_st218,7857
	long version;220,7896
	CMS_RecipientIdentifier *rid;rid221,7911
	X509_ALGOR *keyEncryptionAlgorithm;keyEncryptionAlgorithm222,7942
	ASN1_OCTET_STRING *encryptedKey;encryptedKey223,7979
	X509 *recip;recip225,8043
	EVP_PKEY *pkey;pkey226,8057
struct CMS_KeyAgreeRecipientInfo_st229,8079
	long version;231,8118
	CMS_OriginatorIdentifierOrKey *originator;originator232,8133
	ASN1_OCTET_STRING *ukm;ukm233,8177
 	X509_ALGOR *keyEncryptionAlgorithm;keyEncryptionAlgorithm234,8202
	STACK_OF(235,8240
struct CMS_OriginatorIdentifierOrKey_st238,8307
	int type;240,8350
		CMS_IssuerAndSerialNumber *issuerAndSerialNumber;issuerAndSerialNumber242,8370
		ASN1_OCTET_STRING *subjectKeyIdentifier;subjectKeyIdentifier243,8422
		CMS_OriginatorPublicKey *originatorKey;originatorKey244,8465
		} d;245,8507
struct CMS_OriginatorPublicKey_st248,8519
	X509_ALGOR *algorithm;algorithm250,8556
	ASN1_BIT_STRING *publicKey;publicKey251,8580
struct CMS_RecipientEncryptedKey_st254,8614
 	CMS_KeyAgreeRecipientIdentifier *rid;rid256,8653
 	ASN1_OCTET_STRING *encryptedKey;encryptedKey257,8693
struct CMS_KeyAgreeRecipientIdentifier_st260,8733
	int type;262,8778
		CMS_IssuerAndSerialNumber *issuerAndSerialNumber;issuerAndSerialNumber264,8798
		CMS_RecipientKeyIdentifier *rKeyId;rKeyId265,8850
		} d;266,8888
struct CMS_RecipientKeyIdentifier_st269,8900
 	ASN1_OCTET_STRING *subjectKeyIdentifier;subjectKeyIdentifier271,8940
 	ASN1_GENERALIZEDTIME *date;date272,8983
 	CMS_OtherKeyAttribute *other;other273,9013
struct CMS_KEKRecipientInfo_st276,9050
 	long version;278,9084
 	CMS_KEKIdentifier *kekid;kekid279,9100
 	X509_ALGOR *keyEncryptionAlgorithm;keyEncryptionAlgorithm280,9128
 	ASN1_OCTET_STRING *encryptedKey;encryptedKey281,9166
	unsigned char *key;key283,9241
	size_t keylen;284,9262
struct CMS_KEKIdentifier_st287,9283
 	ASN1_OCTET_STRING *keyIdentifier;keyIdentifier289,9314
 	ASN1_GENERALIZEDTIME *date;date290,9350
 	CMS_OtherKeyAttribute *other;other291,9380
struct CMS_PasswordRecipientInfo_st294,9417
 	long version;296,9456
 	X509_ALGOR *keyDerivationAlgorithm;keyDerivationAlgorithm297,9472
 	X509_ALGOR *keyEncryptionAlgorithm;keyEncryptionAlgorithm298,9510
 	ASN1_OCTET_STRING *encryptedKey;encryptedKey299,9548
	unsigned char *pass;pass301,9618
	size_t passlen;302,9640
struct CMS_OtherRecipientInfo_st305,9662
 	ASN1_OBJECT *oriType;oriType307,9698
 	ASN1_TYPE *oriValue;oriValue308,9722
struct CMS_DigestedData_st311,9750
	long version;313,9780
	X509_ALGOR *digestAlgorithm;digestAlgorithm314,9795
	CMS_EncapsulatedContentInfo *encapContentInfo;encapContentInfo315,9825
	ASN1_OCTET_STRING *digest;digest316,9873
struct CMS_EncryptedData_st319,9906
	long version;321,9937
	CMS_EncryptedContentInfo *encryptedContentInfo;encryptedContentInfo322,9952
	STACK_OF(323,10001
struct CMS_AuthenticatedData_st326,10051
	long version;328,10086
	CMS_OriginatorInfo *originatorInfo;originatorInfo329,10101
	STACK_OF(330,10138
struct CMS_CompressedData_st339,10397
	long version;341,10429
	X509_ALGOR *compressionAlgorithm;compressionAlgorithm342,10444
	STACK_OF(343,10479
struct CMS_RevocationInfoChoice_st347,10578
	int type;349,10616
		X509_CRL *crl;crl351,10636
		CMS_OtherRevocationInfoFormat *other;other352,10653
		} d;353,10693
#define CMS_REVCHOICE_CRL	356,10705
#define CMS_REVCHOICE_OTHER	357,10734
struct CMS_OtherRevocationInfoFormat_st359,10766
	ASN1_OBJECT *otherRevInfoFormat;otherRevInfoFormat361,10809
 	ASN1_TYPE *otherRevInfo;otherRevInfo362,10843
struct CMS_CertificateChoices365,10875
	int type;367,10908
		X509 *certificate;certificate370,10930
		ASN1_STRING *extendedCertificate;extendedCertificate371,10951
		ASN1_STRING *v1AttrCert;v1AttrCert372,11002
		ASN1_STRING *v2AttrCert;v2AttrCert373,11056
		CMS_OtherCertificateFormat *other;other374,11110
		} d;375,11147
#define CMS_CERTCHOICE_CERT	378,11159
#define CMS_CERTCHOICE_EXCERT	379,11191
#define CMS_CERTCHOICE_V1ACERT	380,11224
#define CMS_CERTCHOICE_V2ACERT	381,11258
#define CMS_CERTCHOICE_OTHER	382,11292
struct CMS_OtherCertificateFormat_st384,11325
	ASN1_OBJECT *otherCertFormat;otherCertFormat386,11365
 	ASN1_TYPE *otherCert;otherCert387,11396
struct CMS_IssuerAndSerialNumber_st394,11538
	X509_NAME *issuer;issuer396,11577
	ASN1_INTEGER *serialNumber;serialNumber397,11597
struct CMS_OtherKeyAttribute_st400,11631
	ASN1_OBJECT *keyAttrId;keyAttrId402,11666
 	ASN1_TYPE *keyAttr;keyAttr403,11691
struct CMS_ReceiptRequest_st410,11764
	ASN1_OCTET_STRING *signedContentIdentifier;signedContentIdentifier412,11796
	CMS_ReceiptsFrom *receiptsFrom;receiptsFrom413,11841
	STACK_OF(414,11874
struct CMS_ReceiptsFrom_st418,11918
	int type;420,11948
		long allOrFirstTier;423,11970
		STACK_OF(424,11993
struct CMS_Receipt_st429,12052
	long version;431,12077
	ASN1_OBJECT *contentType;contentType432,12092
	ASN1_OCTET_STRING *signedContentIdentifier;signedContentIdentifier433,12119
	ASN1_OCTET_STRING *originatorSignatureValue;originatorSignatureValue434,12164
struct CMS_TimestampedData_st448,12561
	ASN1_INTEGER *version;version450,12594
	ASN1_IA5STRING *dataUri;dataUri451,12618
	CMS_MetaData *metaData;metaData452,12644
	ASN1_OCTET_STRING *content;content453,12669
	CMS_Evidence *temporalEvidence;temporalEvidence454,12698
struct CMS_MetaData_st466,13042
	ASN1_BOOLEAN *hashProtected;hashProtected468,13068
	ASN1_UTF8STRING *fileName;fileName469,13098
	ASN1_IA5STRING *mediaType;mediaType470,13126
	STACK_OF(471,13154
struct CMS_Evidence_st483,13522
	int type;485,13548
		STACK_OF(488,13570
#define CMS_EVIDENCE_TIMESTAMP 494,13744
#define CMS_EVIDENCE_RECORD	495,13778
#define CMS_EVIDENCE_OTHER 496,13809
typedef CMS_ContentInfo	 CMS_TimeStampToken;503,14015
struct CMS_TimeStampAndCRL_st505,14061
	CMS_TimeStampToken *timeStamp;timeStamp507,14094
	X509_CRL *crl;crl508,14156
struct CMS_TimeStampResp_st521,14530
	CMS_PKIStatusInfo *status;status523,14561
	CMS_TimeStampToken *timeStampToken;timeStampToken524,14589
struct CMS_PKIStatusInfo_st535,14905
	ASN1_INTEGER *status;status537,14936
	STACK_OF(538,14959
struct CMS_TSTInfo_st564,16086
	ASN1_INTEGER *version;version566,16111
	ASN1_OBJECT *policy;policy567,16135
	CMS_MessageImprint *messageImprint;messageImprint568,16157
	ASN1_INTEGER *serialNumber;serialNumber569,16194
	ASN1_GENERALIZEDTIME *genTime;genTime570,16223
	CMS_Accuracy *accuracy;accuracy571,16255
	ASN1_BOOLEAN ordering;572,16280
	ASN1_INTEGER *nonce;nonce573,16304
	GENERAL_NAME *tsa;tsa574,16326
	STACK_OF(575,16346
struct CMS_MessageImprint_st582,16535
	X509_ALGOR *hashAlgorithm;hashAlgorithm584,16567
	ASN1_OCTET_STRING *hashedMessage;hashedMessage585,16595
struct CMS_Accuracy_st595,16822
	ASN1_INTEGER *seconds;seconds597,16848
	ASN1_INTEGER *millis;millis598,16872
	ASN1_INTEGER *micros;micros599,16895
struct CMS_OtherEvidence_st606,17034
	ASN1_OBJECT *oeType;oeType608,17065
    ASN1_TYPE *oeValue;oeValue609,17087
struct CMS_EvidenceRecord_st628,17696
	ASN1_INTEGER *version;version630,17728
	STACK_OF(631,17752
struct CMS_EncryptionInfo_st641,18091
	ASN1_OBJECT *encryptionInfoType;encryptionInfoType643,18123
	ASN1_TYPE *encryptionInfoValue;encryptionInfoValue644,18157
struct CMS_ArchiveTimeStamp_st657,18539
	X509_ALGOR *digestAlgorithm;digestAlgorithm659,18573
	STACK_OF(660,18603
struct CMS_ArchiveTimeStampChain_st669,18827
	STACK_OF(671,18866
#define CMS_SIGNERINFO_ISSUER_SERIAL	689,19448
#define CMS_SIGNERINFO_KEYIDENTIFIER	690,19487
#define CMS_RECIPINFO_ISSUER_SERIAL	692,19527
#define CMS_RECIPINFO_KEYIDENTIFIER	693,19565

crypto/cms/cms_err.c,218
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA CMS_str_functs[CMS_str_functs71,3086
static ERR_STRING_DATA CMS_str_reasons[CMS_str_reasons161,8870
void ERR_load_CMS_strings(258,15233

crypto/cms/cms_dd.c,133
DECLARE_ASN1_ITEM(62,2735
BIO *cms_DigestedData_init_bio(cms_DigestedData_init_bio97,3330
int cms_DigestedData_do_final(104,3499

crypto/cms/cms_pwri.c,242
int CMS_RecipientInfo_set0_password(65,2811
CMS_RecipientInfo *CMS_add0_recipient_password(CMS_add0_recipient_password83,3219
static int kek_unwrap_key(224,6630
static int kek_wrap_key(278,8071
int cms_RecipientInfo_pwri_crypt(322,9075

crypto/cms/cms_sd.c,1171
DECLARE_ASN1_ITEM(65,2790
static CMS_SignedData *cms_signed_data_init(cms_signed_data_init77,3068
int CMS_SignedData_init(100,3729
static void cms_sd_set_version(110,3909
static int cms_copy_messageDigest(172,5236
int cms_set1_SignerIdentifier(210,6244
int cms_SignerIdentifier_get0_signer_id(255,7237
int cms_SignerIdentifier_cert_cmp(276,7718
CMS_SignerInfo *CMS_add1_signer(CMS_add1_signer300,8318
static int cms_add1_signingTime(462,11706
STACK_OF(492,12124
STACK_OF(501,12299
void CMS_SignerInfo_set1_signer_cert(529,12842
int CMS_SignerInfo_get0_signer_id(543,13143
int CMS_SignerInfo_cert_cmp(550,13355
int CMS_set1_signers_certs(555,13476
void CMS_SignerInfo_get0_algs(606,14551
static int cms_SignerInfo_content_sign(619,14832
int cms_SignedData_final(686,16305
int CMS_SignerInfo_sign(702,16703
int CMS_SignerInfo_verify(769,18096
BIO *cms_SignedData_init_bio(cms_SignedData_init_bio812,19059
int CMS_SignerInfo_verify_content(842,19699
int CMS_add_smimecap(911,21162
int CMS_add_simple_smimecap(924,21494
static int cms_add_cipher_smcap(957,22158
static int cms_add_digest_smcap(964,22332
int CMS_add_standard_smimecap(971,22506

crypto/cms/cms_tsd.c,889
static CMS_TimestampedData *cms_get0_timestampedData(cms_get0_timestampedData71,2884
STACK_OF(87,3282
CMS_ContentInfo *cms_get_token(cms_get_token97,3525
static CMS_TSTInfo *cms_get0_tstInfo(cms_get0_tstInfo116,3980
static CMS_MessageImprint *cms_TSTInfo_get0_msgImprint(cms_TSTInfo_get0_msgImprint121,4083
static X509_ALGOR *cms_TSTInfo_get0_hashAlgorithm(cms_TSTInfo_get0_hashAlgorithm126,4200
static ASN1_OCTET_STRING *cms_TSTInfo_get0_hashedMessage(cms_TSTInfo_get0_hashedMessage133,4411
CMS_MetaData *cms_get0_metaData(cms_get0_metaData140,4629
int cms_metaData_init(145,4739
int cms_check_dataUri(173,5506
static int cms_compute_content_digest(181,5655
static int cms_compute_token_digest(200,6173
static int cms_digest_matching_verify(215,6544
int cms_Token_digest_verify(240,7326
int cms_Token_signature_verify(306,8943
int cms_TimeStampedData_init(323,9340

crypto/cms/cms_smime.c,1131
static int cms_copy_content(66,2867
static int check_content(126,3856
static void do_free_upto(137,4060
int CMS_data(154,4256
CMS_ContentInfo *CMS_data_create(CMS_data_create171,4601
int CMS_digest_verify(186,4866
CMS_ContentInfo *CMS_digest_create(CMS_digest_create210,5372
int CMS_EncryptedData_decrypt(230,5758
CMS_ContentInfo *CMS_EncryptedData_encrypt(CMS_EncryptedData_encrypt256,6350
static int cms_signerinfo_verify_cert(283,6951
int CMS_verify(326,7926
int CMS_verify_receipt(466,11102
CMS_ContentInfo *CMS_sign(CMS_sign478,11411
CMS_ContentInfo *CMS_sign_receipt(CMS_sign_receipt519,12205
CMS_ContentInfo *CMS_encrypt(CMS_encrypt591,13641
int CMS_decrypt_set1_pkey(627,14371
int CMS_decrypt_set1_key(687,15881
int CMS_decrypt_set1_password(726,16822
int CMS_decrypt(750,17465
int CMS_final(779,18196
int CMS_uncompress(811,18680
CMS_ContentInfo *CMS_compress(CMS_compress834,19146
int CMS_uncompress(855,19559
CMS_ContentInfo *CMS_compress(CMS_compress862,19739
int CMS_timeStampedData_verify(870,19911
int CMS_timeStampedData_request(964,22295
int CMS_timeStampedData_create(970,22461

crypto/cms/cms_asn1.c,1529
} ASN1_SEQUENCE_END(69,3009
} ASN1_SEQUENCE_END(74,3234
} ASN1_CHOICE_END(82,3666
} ASN1_CHOICE_END(87,3913
} ASN1_NDEF_SEQUENCE_END(92,4161
} ASN1_SEQUENCE_END_cb(117,5039
} ASN1_SEQUENCE_END(122,5287
} ASN1_CHOICE_END(127,5517
} ASN1_NDEF_SEQUENCE_END(136,5993
} ASN1_SEQUENCE_END(141,6232
} ASN1_NDEF_SEQUENCE_END(147,6553
} ASN1_SEQUENCE_END(154,6924
} ASN1_SEQUENCE_END(159,7126
} ASN1_SEQUENCE_END(165,7434
} ASN1_CHOICE_END(170,7717
} ASN1_SEQUENCE_END(175,7966
} ASN1_SEQUENCE_END(180,8187
} ASN1_CHOICE_END(186,8554
} ASN1_SEQUENCE_END(194,9031
} ASN1_SEQUENCE_END(200,9300
} ASN1_SEQUENCE_END(207,9633
} ASN1_SEQUENCE_END(214,10008
} ASN1_SEQUENCE_END(219,10214
} ASN1_CHOICE_END_cb(264,11508
} ASN1_NDEF_SEQUENCE_END(272,11963
} ASN1_NDEF_SEQUENCE_END(279,12294
} ASN1_NDEF_SEQUENCE_END(285,12586
} ASN1_NDEF_SEQUENCE_END(297,13295
} ASN1_NDEF_SEQUENCE_END(303,13585
}ASN1_NDEF_SEQUENCE_END(ASN1_NDEF_SEQUENCE_END312,13918
} ASN1_NDEF_SEQUENCE_END(335,14562
} ASN1_NDEF_SEQUENCE_END(340,14779
} ASN1_NDEF_SEQUENCE_END(347,15160
} ASN1_NDEF_SEQUENCE_END(351,15334
} ASN1_NDEF_SEQUENCE_END(359,15774
} ASN1_NDEF_SEQUENCE_END(364,15964
} ASN1_CHOICE_END(370,16242
} ASN1_NDEF_SEQUENCE_END(378,16614
} ASN1_SEQUENCE_END(383,16827
} ASN1_SEQUENCE_END(389,17056
} ASN1_SEQUENCE_END(395,17312
} ASN1_SEQUENCE_END(408,17919
} ASN1_SEQUENCE_END(433,18623
static int cms_cb(451,19811
} ASN1_NDEF_SEQUENCE_END_cb(485,20554
} ASN1_CHOICE_END(511,21421
} ASN1_SEQUENCE_END(517,21708

crypto/cms/cms_enc.c,177
DECLARE_ASN1_ITEM(65,2797
int cms_EncryptedContent_init(239,6190
int CMS_EncryptedData_set1_key(257,6565
BIO *cms_EncryptedData_init_bio(cms_EncryptedData_init_bio288,7386

crypto/cms/cms.h,9759
#define HEADER_CMS_H56,2580
typedef struct CMS_ContentInfo_st CMS_ContentInfo;69,2724
typedef struct CMS_SignerInfo_st CMS_SignerInfo;70,2775
typedef struct CMS_CertificateChoices CMS_CertificateChoices;71,2824
typedef struct CMS_RevocationInfoChoice_st CMS_RevocationInfoChoice;72,2886
typedef struct CMS_RecipientInfo_st CMS_RecipientInfo;73,2955
typedef struct CMS_ReceiptRequest_st CMS_ReceiptRequest;74,3010
typedef struct CMS_Receipt_st CMS_Receipt;75,3067
DECLARE_STACK_OF(77,3111
#define CMS_SIGNERINFO_ISSUER_SERIAL	83,3305
#define CMS_SIGNERINFO_KEYIDENTIFIER	84,3344
#define CMS_RECIPINFO_TRANS	86,3384
#define CMS_RECIPINFO_AGREE	87,3415
#define CMS_RECIPINFO_KEK	88,3446
#define CMS_RECIPINFO_PASS	89,3475
#define CMS_RECIPINFO_OTHER	90,3505
#define CMS_TEXT	94,3565
#define CMS_NOCERTS	95,3588
#define CMS_NO_CONTENT_VERIFY	96,3614
#define CMS_NO_ATTR_VERIFY	97,3649
#define CMS_NOSIGS	98,3681
#define CMS_NOINTERN	100,3750
#define CMS_NO_SIGNER_CERT_VERIFY	101,3778
#define CMS_NOVERIFY	102,3817
#define CMS_DETACHED	103,3845
#define CMS_BINARY	104,3873
#define CMS_NOATTR	105,3899
#define	CMS_NOSMIMECAP	106,3926
#define CMS_NOOLDMIMETYPE	107,3957
#define CMS_CRLFEOL	108,3990
#define CMS_STREAM	109,4018
#define CMS_NOCRL	110,4046
#define CMS_PARTIAL	111,4073
#define CMS_REUSE_DIGEST	112,4102
#define CMS_USE_KEYID	113,4135
#define CMS_DEBUG_DECRYPT	114,4167
#define CMS_TIMESTAMP_VERIFY	115,4202
#define CMS_EXT_TOKEN	116,4239
#define CMS_HASH_PROTECTED_METADATA	117,4271
#define CMS_F_CHECK_CONTENT	352,13716
#define CMS_F_CMS_ADD0_CERT	353,13751
#define CMS_F_CMS_ADD0_RECIPIENT_KEY	354,13787
#define CMS_F_CMS_ADD0_RECIPIENT_PASSWORD	355,13831
#define CMS_F_CMS_ADD1_RECEIPTREQUEST	356,13879
#define CMS_F_CMS_ADD1_RECIPIENT_CERT	357,13924
#define CMS_F_CMS_ADD1_SIGNER	358,13969
#define CMS_F_CMS_ADD1_SIGNINGTIME	359,14007
#define CMS_F_CMS_COMPRESS	360,14049
#define CMS_F_CMS_COMPRESSEDDATA_CREATE	361,14084
#define CMS_F_CMS_COMPRESSEDDATA_INIT_BIO	362,14131
#define CMS_F_CMS_COMPUTE_DIGEST	363,14179
#define CMS_F_CMS_COPY_CONTENT	364,14219
#define CMS_F_CMS_COPY_MESSAGEDIGEST	365,14258
#define CMS_F_CMS_DATA	366,14302
#define CMS_F_CMS_DATAFINAL	367,14334
#define CMS_F_CMS_DATAINIT	368,14370
#define CMS_F_CMS_DECRYPT	369,14405
#define CMS_F_CMS_DECRYPT_SET1_KEY	370,14439
#define CMS_F_CMS_DECRYPT_SET1_PASSWORD	371,14481
#define CMS_F_CMS_DECRYPT_SET1_PKEY	372,14528
#define CMS_F_CMS_DIGESTALGORITHM_FIND_CTX	373,14571
#define CMS_F_CMS_DIGESTALGORITHM_INIT_BIO	374,14620
#define CMS_F_CMS_DIGESTEDDATA_DO_FINAL	375,14669
#define CMS_F_CMS_DIGEST_MATCHING_VERIFY	376,14716
#define CMS_F_CMS_DIGEST_VERIFY	377,14763
#define CMS_F_CMS_ENCODE_RECEIPT	378,14803
#define CMS_F_CMS_ENCRYPT	379,14843
#define CMS_F_CMS_ENCRYPTEDCONTENT_INIT_BIO	380,14877
#define CMS_F_CMS_ENCRYPTEDDATA_DECRYPT	381,14927
#define CMS_F_CMS_ENCRYPTEDDATA_ENCRYPT	382,14974
#define CMS_F_CMS_ENCRYPTEDDATA_SET1_KEY	383,15021
#define CMS_F_CMS_ENVELOPEDDATA_CREATE	384,15068
#define CMS_F_CMS_ENVELOPEDDATA_INIT_BIO	385,15114
#define CMS_F_CMS_ENVELOPED_DATA_INIT	386,15161
#define CMS_F_CMS_FINAL	387,15206
#define CMS_F_CMS_GET0_CERTIFICATE_CHOICES	388,15239
#define CMS_F_CMS_GET0_CONTENT	389,15288
#define CMS_F_CMS_GET0_ECONTENT_TYPE	390,15327
#define CMS_F_CMS_GET0_ENVELOPED	391,15371
#define CMS_F_CMS_GET0_EVIDENCE	392,15411
#define CMS_F_CMS_GET0_REVOCATION_CHOICES	393,15451
#define CMS_F_CMS_GET0_SIGNED	394,15499
#define CMS_F_CMS_GET0_TIMESTAMPEDDATA	395,15537
#define CMS_F_CMS_GET_TOKEN	396,15583
#define CMS_F_CMS_METADATA_ENCODE	397,15619
#define CMS_F_CMS_METADATA_INIT	398,15660
#define CMS_F_CMS_MSGSIGDIGEST_ADD1	399,15700
#define CMS_F_CMS_RECEIPTREQUEST_CREATE0	400,15743
#define CMS_F_CMS_RECEIPT_VERIFY	401,15790
#define CMS_F_CMS_RECIPIENTINFO_DECRYPT	402,15830
#define CMS_F_CMS_RECIPIENTINFO_KEKRI_DECRYPT	403,15877
#define CMS_F_CMS_RECIPIENTINFO_KEKRI_ENCRYPT	404,15929
#define CMS_F_CMS_RECIPIENTINFO_KEKRI_GET0_ID	405,15981
#define CMS_F_CMS_RECIPIENTINFO_KEKRI_ID_CMP	406,16033
#define CMS_F_CMS_RECIPIENTINFO_KTRI_CERT_CMP	407,16084
#define CMS_F_CMS_RECIPIENTINFO_KTRI_DECRYPT	408,16136
#define CMS_F_CMS_RECIPIENTINFO_KTRI_ENCRYPT	409,16187
#define CMS_F_CMS_RECIPIENTINFO_KTRI_GET0_ALGS	410,16238
#define CMS_F_CMS_RECIPIENTINFO_KTRI_GET0_SIGNER_ID	411,16291
#define CMS_F_CMS_RECIPIENTINFO_PWRI_CRYPT	412,16348
#define CMS_F_CMS_RECIPIENTINFO_SET0_KEY	413,16397
#define CMS_F_CMS_RECIPIENTINFO_SET0_PASSWORD	414,16444
#define CMS_F_CMS_RECIPIENTINFO_SET0_PKEY	415,16496
#define CMS_F_CMS_SET1_SIGNERIDENTIFIER	416,16544
#define CMS_F_CMS_SET_DETACHED	417,16591
#define CMS_F_CMS_SIGN	418,16630
#define CMS_F_CMS_SIGNED_DATA_INIT	419,16662
#define CMS_F_CMS_SIGNERINFO_CONTENT_SIGN	420,16704
#define CMS_F_CMS_SIGNERINFO_SIGN	421,16752
#define CMS_F_CMS_SIGNERINFO_VERIFY	422,16793
#define CMS_F_CMS_SIGNERINFO_VERIFY_CERT	423,16836
#define CMS_F_CMS_SIGNERINFO_VERIFY_CONTENT	424,16883
#define CMS_F_CMS_SIGN_RECEIPT	425,16933
#define CMS_F_CMS_STREAM	426,16972
#define CMS_F_CMS_TIMESTAMPEDDATA_CREATE	427,17005
#define CMS_F_CMS_TIMESTAMPEDDATA_VERIFY	428,17052
#define CMS_F_CMS_TIMESTAMP_CREATE	429,17099
#define CMS_F_CMS_TIMESTAMP_VERIFY	430,17141
#define CMS_F_CMS_TOKEN_DIGEST_VERIFY	431,17183
#define CMS_F_CMS_TOKEN_SIGNATURE_VERIFY	432,17228
#define CMS_F_CMS_TOKEN_VERIFY	433,17275
#define CMS_F_CMS_TSTINFO_DECODE	434,17314
#define CMS_F_CMS_UNCOMPRESS	435,17354
#define CMS_F_CMS_VERIFY	436,17391
#define CMS_R_ADD_SIGNER_ERROR	439,17445
#define CMS_R_CERTIFICATE_ALREADY_PRESENT	440,17483
#define CMS_R_CERTIFICATE_HAS_NO_KEYID	441,17531
#define CMS_R_CERTIFICATE_VERIFY_ERROR	442,17577
#define CMS_R_CIPHER_INITIALISATION_ERROR	443,17623
#define CMS_R_CIPHER_PARAMETER_INITIALISATION_ERROR	444,17671
#define CMS_R_CMS_DATAFINAL_ERROR	445,17728
#define CMS_R_CMS_LIB	446,17769
#define CMS_R_CONTENTIDENTIFIER_MISMATCH	447,17800
#define CMS_R_CONTENT_NOT_FOUND	448,17847
#define CMS_R_CONTENT_TYPE_MISMATCH	449,17887
#define CMS_R_CONTENT_TYPE_NOT_COMPRESSED_DATA	450,17930
#define CMS_R_CONTENT_TYPE_NOT_ENVELOPED_DATA	451,17983
#define CMS_R_CONTENT_TYPE_NOT_SIGNED_DATA	452,18035
#define CMS_R_CONTENT_TYPE_NOT_TIMESTAMPED_DATA	453,18084
#define CMS_R_CONTENT_TYPE_NOT_TSTINFO	454,18138
#define CMS_R_CONTENT_VERIFY_ERROR	455,18184
#define CMS_R_CTRL_ERROR	456,18226
#define CMS_R_CTRL_FAILURE	457,18259
#define CMS_R_DECRYPT_ERROR	458,18294
#define CMS_R_DIGEST_ERROR	459,18330
#define CMS_R_ERROR_GETTING_PUBLIC_KEY	460,18365
#define CMS_R_ERROR_READING_MESSAGEDIGEST_ATTRIBUTE	461,18411
#define CMS_R_ERROR_SETTING_KEY	462,18468
#define CMS_R_ERROR_SETTING_RECIPIENTINFO	463,18508
#define CMS_R_INVALID_ENCRYPTED_KEY_LENGTH	464,18556
#define CMS_R_INVALID_KEY_ENCRYPTION_PARAMETER	465,18605
#define CMS_R_INVALID_KEY_LENGTH	466,18658
#define CMS_R_MD_BIO_INIT_ERROR	467,18698
#define CMS_R_MESSAGEDIGEST_ATTRIBUTE_WRONG_LENGTH	468,18738
#define CMS_R_MESSAGEDIGEST_WRONG_LENGTH	469,18794
#define CMS_R_MSGSIGDIGEST_ERROR	470,18841
#define CMS_R_MSGSIGDIGEST_VERIFICATION_FAILURE	471,18881
#define CMS_R_MSGSIGDIGEST_WRONG_LENGTH	472,18935
#define CMS_R_NEED_ONE_SIGNER	473,18982
#define CMS_R_NOT_A_SIGNED_RECEIPT	474,19020
#define CMS_R_NOT_ENCRYPTED_DATA	475,19062
#define CMS_R_NOT_KEK	476,19102
#define CMS_R_NOT_KEY_TRANSPORT	477,19133
#define CMS_R_NOT_PWRI	478,19173
#define CMS_R_NOT_SUPPORTED_FOR_THIS_KEY_TYPE	479,19205
#define CMS_R_NO_CIPHER	480,19257
#define CMS_R_NO_CONTENT	481,19290
#define CMS_R_NO_CONTENT_TYPE	482,19323
#define CMS_R_NO_DEFAULT_DIGEST	483,19361
#define CMS_R_NO_DIGEST_SET	484,19401
#define CMS_R_NO_KEY	485,19437
#define CMS_R_NO_KEY_OR_CERT	486,19467
#define CMS_R_NO_MATCHING_DIGEST	487,19504
#define CMS_R_NO_MATCHING_RECIPIENT	488,19544
#define CMS_R_NO_MATCHING_SIGNATURE	489,19587
#define CMS_R_NO_MSGSIGDIGEST	490,19630
#define CMS_R_NO_PASSWORD	491,19668
#define CMS_R_NO_PRIVATE_KEY	492,19702
#define CMS_R_NO_PUBLIC_KEY	493,19739
#define CMS_R_NO_RECEIPT_REQUEST	494,19775
#define CMS_R_NO_SIGNERS	495,19815
#define CMS_R_NO_SINGLE_SIGNERS	496,19848
#define CMS_R_NO_TIMESTAMP_TOKEN_EVIDENCE	497,19888
#define CMS_R_NULL_TIMESTAMP_TOKEN	498,19936
#define CMS_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE	499,19978
#define CMS_R_RECEIPT_DECODE_ERROR	500,20036
#define CMS_R_RECIPIENT_ERROR	501,20078
#define CMS_R_SIGNER_CERTIFICATE_NOT_FOUND	502,20116
#define CMS_R_SIGNFINAL_ERROR	503,20165
#define CMS_R_SMIME_TEXT_ERROR	504,20203
#define CMS_R_STORE_INIT_ERROR	505,20242
#define CMS_R_TSTINFO_CHECK_FAIL	506,20281
#define CMS_R_TYPE_NOT_COMPRESSED_DATA	507,20321
#define CMS_R_TYPE_NOT_DATA	508,20367
#define CMS_R_TYPE_NOT_DIGESTED_DATA	509,20403
#define CMS_R_TYPE_NOT_ENCRYPTED_DATA	510,20447
#define CMS_R_TYPE_NOT_ENVELOPED_DATA	511,20492
#define CMS_R_TYPE_NOT_TIMESTAMPED_DATA	512,20537
#define CMS_R_UNABLE_TO_FINALIZE_CONTEXT	513,20584
#define CMS_R_UNKNOWN_CIPHER	514,20631
#define CMS_R_UNKNOWN_DIGEST_ALGORIHM	515,20668
#define CMS_R_UNKNOWN_ID	516,20713
#define CMS_R_UNSUPPORTED_COMPRESSION_ALGORITHM	517,20746
#define CMS_R_UNSUPPORTED_CONTENT_TYPE	518,20800
#define CMS_R_UNSUPPORTED_KEK_ALGORITHM	519,20846
#define CMS_R_UNSUPPORTED_KEY_ENCRYPTION_ALGORITHM	520,20893
#define CMS_R_UNSUPPORTED_RECIPIENT_TYPE	521,20949
#define CMS_R_UNSUPPORTED_RECPIENTINFO_TYPE	522,20996
#define CMS_R_UNSUPPORTED_TYPE	523,21046
#define CMS_R_UNSUPPORTED_VERSION	524,21085
#define CMS_R_UNWRAP_ERROR	525,21126
#define CMS_R_UNWRAP_FAILURE	526,21161
#define CMS_R_VERIFICATION_FAILURE	527,21198
#define CMS_R_WRAP_ERROR	528,21240

crypto/cms/cms_att.c,1005
int CMS_signed_get_attr_count(63,2748
int CMS_signed_get_attr_by_NID(68,2857
int CMS_signed_get_attr_by_OBJ(74,3009
X509_ATTRIBUTE *CMS_signed_get_attr(CMS_signed_get_attr80,3170
X509_ATTRIBUTE *CMS_signed_delete_attr(CMS_signed_delete_attr85,3293
int CMS_signed_add1_attr(90,3416
int CMS_signed_add1_attr_by_OBJ(96,3555
int CMS_signed_add1_attr_by_NID(105,3775
int CMS_signed_add1_attr_by_txt(114,3980
void *CMS_signed_get0_data_by_OBJ(CMS_signed_get0_data_by_OBJ123,4203
int CMS_unsigned_get_attr_count(129,4378
int CMS_unsigned_get_attr_by_NID(134,4491
int CMS_unsigned_get_attr_by_OBJ(140,4647
X509_ATTRIBUTE *CMS_unsigned_get_attr(CMS_unsigned_get_attr146,4812
X509_ATTRIBUTE *CMS_unsigned_delete_attr(CMS_unsigned_delete_attr151,4939
int CMS_unsigned_add1_attr(156,5066
int CMS_unsigned_add1_attr_by_OBJ(162,5209
int CMS_unsigned_add1_attr_by_NID(171,5433
int CMS_unsigned_add1_attr_by_txt(180,5642
void *CMS_unsigned_get0_data_by_OBJ(CMS_unsigned_get0_data_by_OBJ189,5869

crypto/o_time.h,32
#define HEADER_O_TIME_H60,2798

crypto/o_dir.c,151
#define LP_DIR_CTX 65,2978
#define LP_dir_context_st 66,3013
#define LP_find_file 67,3062
#define LP_find_file_end 68,3100
#define LPDIR_H72,3162

crypto/x509v3/pcy_cache.c,333
static int policy_cache_create(73,3136
static int policy_cache_new(129,4414
void policy_cache_free(235,6583
const X509_POLICY_CACHE *policy_cache_set(policy_cache_set246,6826
X509_POLICY_DATA *policy_cache_find_data(policy_cache_find_data260,7046
static int policy_data_cmp(272,7363
static int policy_cache_set_int(278,7528

crypto/x509v3/v3_prn.c,175
void X509V3_EXT_val_prn(71,3043
int X509V3_EXT_print(108,3990
int X509V3_extensions_print(165,5469
static int unknown_ext_print(198,6298
int X509V3_EXT_print_fp(225,6960

crypto/x509v3/pcy_map.c,38
int policy_cache_set_mapping(69,2938

crypto/x509v3/v3_skey.c,235
const X509V3_EXT_METHOD v3_skey_id 65,2899
char *i2s_ASN1_OCTET_STRING(i2s_ASN1_OCTET_STRING73,3098
ASN1_OCTET_STRING *s2i_ASN1_OCTET_STRING(s2i_ASN1_OCTET_STRING79,3235
static ASN1_OCTET_STRING *s2i_skey_id(s2i_skey_id101,3649

crypto/x509v3/x509v3.h,19002
#define HEADER_X509V3_H59,2761
typedef void * (*X509V3_EXT_NEW)X509V3_EXT_NEW75,2993
typedef void (*X509V3_EXT_FREE)X509V3_EXT_FREE76,3033
typedef void * (*X509V3_EXT_D2I)X509V3_EXT_D2I77,3074
typedef int (*X509V3_EXT_I2D)X509V3_EXT_I2D78,3147
typedef STACK_OF(CONF_VALUE)79,3204
typedef void * (*X509V3_EXT_V2I)X509V3_EXT_V2I82,3340
typedef char * (*X509V3_EXT_I2S)X509V3_EXT_I2S85,3474
typedef void * (*X509V3_EXT_S2I)X509V3_EXT_S2I86,3555
typedef int (*X509V3_EXT_I2R)X509V3_EXT_I2R88,3671
typedef void * (*X509V3_EXT_R2I)X509V3_EXT_R2I90,3780
struct v3_ext_method 95,3927
int ext_nid;96,3950
int ext_flags;97,3963
ASN1_ITEM_EXP *it;it99,4037
X509V3_EXT_NEW ext_new;101,4083
X509V3_EXT_FREE ext_free;102,4107
X509V3_EXT_D2I d2i;103,4133
X509V3_EXT_I2D i2d;104,4153
X509V3_EXT_I2S i2s;107,4229
X509V3_EXT_S2I s2i;108,4249
X509V3_EXT_I2V i2v;111,4331
X509V3_EXT_V2I v2i;112,4351
X509V3_EXT_I2R i2r;115,4420
X509V3_EXT_R2I r2i;116,4440
void *usr_data;usr_data118,4461
typedef struct X509V3_CONF_METHOD_st 121,4515
char * (*get_string)get_string122,4554
STACK_OF(123,4614
void (*free_string)free_string124,4678
void (*free_section)free_section125,4724
} X509V3_CONF_METHOD;126,4787
struct v3_ext_ctx 129,4838
#define CTX_TEST 130,4858
int flags;131,4879
X509 *issuer_cert;issuer_cert132,4890
X509 *subject_cert;subject_cert133,4909
X509_REQ *subject_req;subject_req134,4929
X509_CRL *crl;crl135,4952
X509V3_CONF_METHOD *db_meth;db_meth136,4967
void *db;db137,4996
typedef struct v3_ext_method X509V3_EXT_METHOD;141,5032
#define X509V3_EXT_DYNAMIC	146,5141
#define X509V3_EXT_CTX_DEP	147,5172
#define X509V3_EXT_MULTILINE	148,5203
DECLARE_STACK_OF(X509V3_EXT_MULTILINE143,5081
typedef BIT_STRING_BITNAME ENUMERATED_NAMES;150,5237
typedef struct BASIC_CONSTRAINTS_st 152,5283
int ca;153,5321
ASN1_INTEGER *pathlen;pathlen154,5329
} BASIC_CONSTRAINTS;155,5352
typedef struct PKEY_USAGE_PERIOD_st 158,5375
ASN1_GENERALIZEDTIME *notBefore;notBefore159,5413
ASN1_GENERALIZEDTIME *notAfter;notAfter160,5446
} PKEY_USAGE_PERIOD;161,5478
typedef struct otherName_st 163,5500
ASN1_OBJECT *type_id;type_id164,5530
ASN1_TYPE *value;value165,5552
} OTHERNAME;166,5570
typedef struct EDIPartyName_st 168,5584
	ASN1_STRING *nameAssigner;nameAssigner169,5617
	ASN1_STRING *partyName;partyName170,5645
} EDIPARTYNAME;171,5670
typedef struct GENERAL_NAME_st 173,5687
#define GEN_OTHERNAME	175,5721
#define GEN_EMAIL	176,5745
#define GEN_DNS	177,5765
#define GEN_X400	178,5784
#define GEN_DIRNAME	179,5803
#define GEN_EDIPARTY	180,5825
#define GEN_URI	181,5848
#define GEN_IPADD	182,5867
#define GEN_RID	183,5887
int type;185,5907
	char *ptr;ptr187,5925
	OTHERNAME *otherName;otherName188,5937
	ASN1_IA5STRING *rfc822Name;rfc822Name189,5976
	ASN1_IA5STRING *dNSName;dNSName190,6005
	ASN1_TYPE *x400Address;x400Address191,6031
	X509_NAME *directoryName;directoryName192,6056
	EDIPARTYNAME *ediPartyName;ediPartyName193,6083
	ASN1_IA5STRING *uniformResourceIdentifier;uniformResourceIdentifier194,6112
	ASN1_OCTET_STRING *iPAddress;iPAddress195,6156
	ASN1_OBJECT *registeredID;registeredID196,6187
	ASN1_OCTET_STRING *ip;ip199,6233
	X509_NAME *dirn;dirn200,6273
	ASN1_IA5STRING *ia5;ia5201,6303
	ASN1_OBJECT *rid;rid202,6377
	ASN1_TYPE *other;other203,6415
} d;204,6452
} GENERAL_NAME;205,6457
typedef STACK_OF(GENERAL_NAME)207,6474
typedef struct ACCESS_DESCRIPTION_st 209,6521
	ASN1_OBJECT *method;method210,6560
	GENERAL_NAME *location;location211,6582
} ACCESS_DESCRIPTION;212,6607
typedef STACK_OF(ACCESS_DESCRIPTION)214,6630
typedef STACK_OF(ASN1_OBJECT)216,6691
DECLARE_STACK_OF(218,6742
typedef struct DIST_POINT_NAME_st 224,6886
int type;225,6922
	GENERAL_NAMES *fullname;fullname227,6940
	STACK_OF(228,6966
} name;229,7008
X509_NAME *dpname;dpname231,7090
} DIST_POINT_NAME;232,7109
#define CRLDP_ALL_REASONS	234,7155
#define CRL_REASON_NONE	236,7189
#define CRL_REASON_UNSPECIFIED	237,7219
#define CRL_REASON_KEY_COMPROMISE	238,7254
#define CRL_REASON_CA_COMPROMISE	239,7291
#define CRL_REASON_AFFILIATION_CHANGED	240,7327
#define CRL_REASON_SUPERSEDED	241,7369
#define CRL_REASON_CESSATION_OF_OPERATION	242,7403
#define CRL_REASON_CERTIFICATE_HOLD	243,7447
#define CRL_REASON_REMOVE_FROM_CRL	244,7486
#define CRL_REASON_PRIVILEGE_WITHDRAWN	245,7524
#define CRL_REASON_AA_COMPROMISE	246,7566
struct DIST_POINT_st 248,7604
DIST_POINT_NAME	*distpoint;distpoint249,7627
ASN1_BIT_STRING *reasons;reasons250,7655
GENERAL_NAMES *CRLissuer;CRLissuer251,7681
int dp_reasons;252,7707
typedef STACK_OF(DIST_POINT)255,7727
DECLARE_STACK_OF(257,7774
struct AUTHORITY_KEYID_st 260,7836
ASN1_OCTET_STRING *keyid;keyid261,7864
GENERAL_NAMES *issuer;issuer262,7890
ASN1_INTEGER *serial;serial263,7913
typedef struct SXNET_ID_st 268,7973
	ASN1_INTEGER *zone;zone269,8002
	ASN1_OCTET_STRING *user;user270,8023
} SXNETID;271,8049
DECLARE_STACK_OF(273,8061
typedef struct SXNET_st 276,8117
	ASN1_INTEGER *version;version277,8143
	STACK_OF(278,8167
} SXNET;279,8192
typedef struct NOTICEREF_st 281,8202
	ASN1_STRING *organization;organization282,8232
	STACK_OF(283,8260
} NOTICEREF;284,8296
typedef struct USERNOTICE_st 286,8310
	NOTICEREF *noticeref;noticeref287,8341
	ASN1_STRING *exptext;exptext288,8364
} USERNOTICE;289,8387
typedef struct POLICYQUALINFO_st 291,8402
	ASN1_OBJECT *pqualid;pqualid292,8437
		ASN1_IA5STRING *cpsuri;cpsuri294,8469
		USERNOTICE *usernotice;usernotice295,8495
		ASN1_TYPE *other;other296,8521
	} d;297,8541
} POLICYQUALINFO;298,8547
DECLARE_STACK_OF(300,8566
typedef struct POLICYINFO_st 303,8636
	ASN1_OBJECT *policyid;policyid304,8667
	STACK_OF(305,8691
} POLICYINFO;306,8730
typedef STACK_OF(POLICYINFO)308,8745
DECLARE_STACK_OF(310,8796
typedef struct POLICY_MAPPING_st 313,8858
	ASN1_OBJECT *issuerDomainPolicy;issuerDomainPolicy314,8893
	ASN1_OBJECT *subjectDomainPolicy;subjectDomainPolicy315,8927
} POLICY_MAPPING;316,8962
DECLARE_STACK_OF(318,8981
typedef STACK_OF(POLICY_MAPPING)320,9015
typedef struct GENERAL_SUBTREE_st 322,9066
	GENERAL_NAME *base;base323,9102
	ASN1_INTEGER *minimum;minimum324,9123
	ASN1_INTEGER *maximum;maximum325,9147
} GENERAL_SUBTREE;326,9171
DECLARE_STACK_OF(328,9191
struct NAME_CONSTRAINTS_st 330,9226
	STACK_OF(331,9255
typedef struct POLICY_CONSTRAINTS_st 335,9352
	ASN1_INTEGER *requireExplicitPolicy;requireExplicitPolicy336,9391
	ASN1_INTEGER *inhibitPolicyMapping;inhibitPolicyMapping337,9429
} POLICY_CONSTRAINTS;338,9466
typedef struct PROXY_POLICY_st341,9538
	ASN1_OBJECT *policyLanguage;policyLanguage343,9572
	ASN1_OCTET_STRING *policy;policy344,9602
	} PROXY_POLICY;345,9630
typedef struct PROXY_CERT_INFO_EXTENSION_st347,9648
	ASN1_INTEGER *pcPathLengthConstraint;pcPathLengthConstraint349,9695
	PROXY_POLICY *proxyPolicy;proxyPolicy350,9734
	} PROXY_CERT_INFO_EXTENSION;351,9762
DECLARE_ASN1_FUNCTIONS(353,9793
struct ISSUING_DIST_POINT_st356,9881
	DIST_POINT_NAME *distpoint;distpoint358,9913
	int onlyuser;359,9942
	int onlyCA;360,9957
	ASN1_BIT_STRING *onlysomereasons;onlysomereasons361,9970
	int indirectCRL;362,10005
	int onlyattr;363,10023
#define	IDP_PRESENT	368,10093
#define IDP_INVALID	370,10147
#define	IDP_ONLYUSER	372,10191
#define	IDP_ONLYCA	374,10234
#define IDP_ONLYATTR	376,10277
#define IDP_INDIRECT	378,10326
#define IDP_REASONS	380,10382
#define X509V3_conf_err(382,10408
#define X509V3_set_ctx_test(385,10533
#define X509V3_set_ctx_nodb(387,10625
#define EXT_BITSTRING(389,10677
#define EXT_IA5STRING(397,10891
#define EXT_END 404,11081
#define EXFLAG_BCONS	409,11170
#define EXFLAG_KUSAGE	410,11196
#define EXFLAG_XKUSAGE	411,11223
#define EXFLAG_NSCERT	412,11251
#define EXFLAG_CA	414,11279
#define EXFLAG_SI	416,11356
#define EXFLAG_SS	417,11380
#define EXFLAG_V1	418,11404
#define EXFLAG_INVALID	419,11428
#define EXFLAG_SET	420,11457
#define EXFLAG_CRITICAL	421,11483
#define EXFLAG_PROXY	422,11514
#define EXFLAG_INVALID_POLICY	424,11543
#define EXFLAG_FRESHEST	425,11579
#define KU_DIGITAL_SIGNATURE	427,11612
#define KU_NON_REPUDIATION	428,11648
#define KU_KEY_ENCIPHERMENT	429,11682
#define KU_DATA_ENCIPHERMENT	430,11717
#define KU_KEY_AGREEMENT	431,11753
#define KU_KEY_CERT_SIGN	432,11785
#define KU_CRL_SIGN	433,11817
#define KU_ENCIPHER_ONLY	434,11845
#define KU_DECIPHER_ONLY	435,11877
#define NS_SSL_CLIENT	437,11910
#define NS_SSL_SERVER	438,11938
#define NS_SMIME	439,11966
#define NS_OBJSIGN	440,11989
#define NS_SSL_CA	441,12014
#define NS_SMIME_CA	442,12038
#define NS_OBJSIGN_CA	443,12064
#define NS_ANY_CA	444,12092
#define XKU_SSL_SERVER	446,12150
#define XKU_SSL_CLIENT	447,12179
#define XKU_SMIME	448,12207
#define XKU_CODE_SIGN	449,12230
#define XKU_SGC	450,12257
#define XKU_OCSP_SIGN	451,12280
#define XKU_TIMESTAMP	452,12308
#define XKU_DVCS	453,12336
#define X509_PURPOSE_DYNAMIC	455,12360
#define X509_PURPOSE_DYNAMIC_NAME	456,12393
typedef struct x509_purpose_st 458,12432
	int purpose;459,12465
	int trust;460,12479
	int flags;461,12515
	int (*check_purpose)check_purpose462,12527
	char *name;name464,12605
	char *sname;sname465,12618
	void *usr_data;usr_data466,12632
} X509_PURPOSE;467,12649
#define X509_PURPOSE_SSL_CLIENT	469,12666
#define X509_PURPOSE_SSL_SERVER	470,12701
#define X509_PURPOSE_NS_SSL_SERVER	471,12736
#define X509_PURPOSE_SMIME_SIGN	472,12773
#define X509_PURPOSE_SMIME_ENCRYPT	473,12808
#define X509_PURPOSE_CRL_SIGN	474,12845
#define X509_PURPOSE_ANY	475,12878
#define X509_PURPOSE_OCSP_HELPER	476,12906
#define X509_PURPOSE_TIMESTAMP_SIGN	477,12941
#define X509_PURPOSE_MIN	479,12980
#define X509_PURPOSE_MAX	480,13008
#define X509V3_EXT_UNKNOWN_MASK	484,13073
#define X509V3_EXT_DEFAULT	486,13161
#define X509V3_EXT_ERROR_UNKNOWN	488,13232
#define X509V3_EXT_PARSE_UNKNOWN	490,13312
#define X509V3_EXT_DUMP_UNKNOWN	492,13390
#define X509V3_ADD_OP_MASK	496,13468
#define X509V3_ADD_DEFAULT	497,13501
#define X509V3_ADD_APPEND	498,13532
#define X509V3_ADD_REPLACE	499,13562
#define X509V3_ADD_REPLACE_EXISTING	500,13593
#define X509V3_ADD_KEEP_EXISTING	501,13632
#define X509V3_ADD_DELETE	502,13668
#define X509V3_ADD_SILENT	503,13698
DECLARE_STACK_OF(505,13731
typedef struct ASRange_st 712,22579
  ASN1_INTEGER *min,min713,22607
  ASN1_INTEGER *min, *max;max713,22607
} ASRange;714,22634
#define	ASIdOrRange_id	716,22646
#define	ASIdOrRange_range	717,22672
typedef struct ASIdOrRange_st 719,22701
  int type;720,22733
    ASN1_INTEGER *id;id722,22755
    ASRange      *range;range723,22777
  } u;724,22802
} ASIdOrRange;725,22809
typedef STACK_OF(ASIdOrRange)727,22825
#define	ASIdentifierChoice_inherit	730,22900
#define	ASIdentifierChoice_asIdsOrRanges	731,22938
DECLARE_STACK_OF(ASIdentifierChoice_asIdsOrRanges728,22869
typedef struct ASIdentifierChoice_st 733,22982
  int type;734,23021
    ASN1_NULL    *inherit;inherit736,23043
    ASIdOrRanges *asIdsOrRanges;asIdsOrRanges737,23070
  } u;738,23103
} ASIdentifierChoice;739,23110
typedef struct ASIdentifiers_st 741,23133
  ASIdentifierChoice *asnum,asnum742,23167
  ASIdentifierChoice *asnum, *rdi;rdi742,23167
} ASIdentifiers;743,23202
DECLARE_ASN1_FUNCTIONS(745,23220
typedef struct IPAddressRange_st 751,23371
  ASN1_BIT_STRING	*min,min752,23406
  ASN1_BIT_STRING	*min, *max;max752,23406
} IPAddressRange;753,23436
#define	IPAddressOrRange_addressPrefix	755,23455
#define	IPAddressOrRange_addressRange	756,23496
typedef struct IPAddressOrRange_st 758,23537
  int type;759,23574
    ASN1_BIT_STRING	*addressPrefix;addressPrefix761,23596
    IPAddressRange	*addressRange;addressRange762,23632
  } u;763,23666
} IPAddressOrRange;764,23673
typedef STACK_OF(IPAddressOrRange)766,23694
#define	IPAddressChoice_inherit	769,23784
#define	IPAddressChoice_addressesOrRanges	770,23820
DECLARE_STACK_OF(IPAddressChoice_addressesOrRanges767,23748
typedef struct IPAddressChoice_st 772,23865
  int type;773,23901
    ASN1_NULL		*inherit;inherit775,23923
    IPAddressOrRanges	*addressesOrRanges;addressesOrRanges776,23948
  } u;777,23990
} IPAddressChoice;778,23997
typedef struct IPAddressFamily_st 780,24017
  ASN1_OCTET_STRING	*addressFamily;addressFamily781,24053
  IPAddressChoice	*ipAddressChoice;ipAddressChoice782,24089
} IPAddressFamily;783,24125
typedef STACK_OF(IPAddressFamily)785,24145
DECLARE_STACK_OF(786,24193
#define	V3_ASID_ASNUM	796,24449
#define	V3_ASID_RDI	797,24473
#define	IANA_AFI_IPV4	805,24732
#define	IANA_AFI_IPV6	806,24756
#define X509V3_F_A2I_GENERAL_NAME	868,26865
#define X509V3_F_ASIDENTIFIERCHOICE_CANONIZE	869,26906
#define X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL	870,26957
#define X509V3_F_COPY_EMAIL	871,27011
#define X509V3_F_COPY_ISSUER	872,27047
#define X509V3_F_DO_DIRNAME	873,27084
#define X509V3_F_DO_EXT_CONF	874,27120
#define X509V3_F_DO_EXT_I2D	875,27157
#define X509V3_F_DO_EXT_NCONF	876,27193
#define X509V3_F_DO_I2V_NAME_CONSTRAINTS	877,27231
#define X509V3_F_GNAMES_FROM_SECTNAME	878,27278
#define X509V3_F_HEX_TO_STRING	879,27323
#define X509V3_F_I2S_ASN1_ENUMERATED	880,27362
#define X509V3_F_I2S_ASN1_IA5STRING	881,27406
#define X509V3_F_I2S_ASN1_INTEGER	882,27449
#define X509V3_F_I2V_AUTHORITY_INFO_ACCESS	883,27490
#define X509V3_F_NOTICE_SECTION	884,27539
#define X509V3_F_NREF_NOS	885,27579
#define X509V3_F_POLICY_SECTION	886,27613
#define X509V3_F_PROCESS_PCI_VALUE	887,27653
#define X509V3_F_R2I_CERTPOL	888,27695
#define X509V3_F_R2I_PCI	889,27732
#define X509V3_F_S2I_ASN1_IA5STRING	890,27765
#define X509V3_F_S2I_ASN1_INTEGER	891,27808
#define X509V3_F_S2I_ASN1_OCTET_STRING	892,27849
#define X509V3_F_S2I_ASN1_SKEY_ID	893,27895
#define X509V3_F_S2I_SKEY_ID	894,27936
#define X509V3_F_SET_DIST_POINT_NAME	895,27973
#define X509V3_F_STRING_TO_HEX	896,28017
#define X509V3_F_SXNET_ADD_ID_ASC	897,28056
#define X509V3_F_SXNET_ADD_ID_INTEGER	898,28097
#define X509V3_F_SXNET_ADD_ID_ULONG	899,28142
#define X509V3_F_SXNET_GET_ID_ASC	900,28185
#define X509V3_F_SXNET_GET_ID_ULONG	901,28226
#define X509V3_F_V2I_ASIDENTIFIERS	902,28269
#define X509V3_F_V2I_ASN1_BIT_STRING	903,28311
#define X509V3_F_V2I_AUTHORITY_INFO_ACCESS	904,28355
#define X509V3_F_V2I_AUTHORITY_KEYID	905,28404
#define X509V3_F_V2I_BASIC_CONSTRAINTS	906,28448
#define X509V3_F_V2I_CRLD	907,28494
#define X509V3_F_V2I_EXTENDED_KEY_USAGE	908,28528
#define X509V3_F_V2I_GENERAL_NAMES	909,28575
#define X509V3_F_V2I_GENERAL_NAME_EX	910,28617
#define X509V3_F_V2I_IDP	911,28661
#define X509V3_F_V2I_IPADDRBLOCKS	912,28694
#define X509V3_F_V2I_ISSUER_ALT	913,28735
#define X509V3_F_V2I_NAME_CONSTRAINTS	914,28775
#define X509V3_F_V2I_POLICY_CONSTRAINTS	915,28820
#define X509V3_F_V2I_POLICY_MAPPINGS	916,28867
#define X509V3_F_V2I_SUBJECT_ALT	917,28911
#define X509V3_F_V3_ADDR_VALIDATE_PATH_INTERNAL	918,28951
#define X509V3_F_V3_GENERIC_EXTENSION	919,29005
#define X509V3_F_X509V3_ADD1_I2D	920,29050
#define X509V3_F_X509V3_ADD_VALUE	921,29090
#define X509V3_F_X509V3_EXT_ADD	922,29131
#define X509V3_F_X509V3_EXT_ADD_ALIAS	923,29171
#define X509V3_F_X509V3_EXT_CONF	924,29216
#define X509V3_F_X509V3_EXT_I2D	925,29256
#define X509V3_F_X509V3_EXT_NCONF	926,29296
#define X509V3_F_X509V3_GET_SECTION	927,29337
#define X509V3_F_X509V3_GET_STRING	928,29380
#define X509V3_F_X509V3_GET_VALUE_BOOL	929,29422
#define X509V3_F_X509V3_PARSE_LIST	930,29468
#define X509V3_F_X509_PURPOSE_ADD	931,29510
#define X509V3_F_X509_PURPOSE_SET	932,29551
#define X509V3_R_BAD_IP_ADDRESS	935,29613
#define X509V3_R_BAD_OBJECT	936,29653
#define X509V3_R_BN_DEC2BN_ERROR	937,29689
#define X509V3_R_BN_TO_ASN1_INTEGER_ERROR	938,29729
#define X509V3_R_DIRNAME_ERROR	939,29777
#define X509V3_R_DISTPOINT_ALREADY_SET	940,29816
#define X509V3_R_DUPLICATE_ZONE_ID	941,29862
#define X509V3_R_ERROR_CONVERTING_ZONE	942,29904
#define X509V3_R_ERROR_CREATING_EXTENSION	943,29950
#define X509V3_R_ERROR_IN_EXTENSION	944,29998
#define X509V3_R_EXPECTED_A_SECTION_NAME	945,30041
#define X509V3_R_EXTENSION_EXISTS	946,30088
#define X509V3_R_EXTENSION_NAME_ERROR	947,30129
#define X509V3_R_EXTENSION_NOT_FOUND	948,30174
#define X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED	949,30218
#define X509V3_R_EXTENSION_VALUE_ERROR	950,30272
#define X509V3_R_ILLEGAL_EMPTY_EXTENSION	951,30318
#define X509V3_R_ILLEGAL_HEX_DIGIT	952,30365
#define X509V3_R_INCORRECT_POLICY_SYNTAX_TAG	953,30407
#define X509V3_R_INVALID_MULTIPLE_RDNS	954,30458
#define X509V3_R_INVALID_ASNUMBER	955,30504
#define X509V3_R_INVALID_ASRANGE	956,30545
#define X509V3_R_INVALID_BOOLEAN_STRING	957,30585
#define X509V3_R_INVALID_EXTENSION_STRING	958,30632
#define X509V3_R_INVALID_INHERITANCE	959,30680
#define X509V3_R_INVALID_IPADDRESS	960,30724
#define X509V3_R_INVALID_NAME	961,30766
#define X509V3_R_INVALID_NULL_ARGUMENT	962,30804
#define X509V3_R_INVALID_NULL_NAME	963,30850
#define X509V3_R_INVALID_NULL_VALUE	964,30892
#define X509V3_R_INVALID_NUMBER	965,30935
#define X509V3_R_INVALID_NUMBERS	966,30975
#define X509V3_R_INVALID_OBJECT_IDENTIFIER	967,31015
#define X509V3_R_INVALID_OPTION	968,31064
#define X509V3_R_INVALID_POLICY_IDENTIFIER	969,31104
#define X509V3_R_INVALID_PROXY_POLICY_SETTING	970,31153
#define X509V3_R_INVALID_PURPOSE	971,31205
#define X509V3_R_INVALID_SAFI	972,31245
#define X509V3_R_INVALID_SECTION	973,31283
#define X509V3_R_INVALID_SYNTAX	974,31323
#define X509V3_R_ISSUER_DECODE_ERROR	975,31363
#define X509V3_R_MISSING_VALUE	976,31407
#define X509V3_R_NEED_ORGANIZATION_AND_NUMBERS	977,31446
#define X509V3_R_NO_CONFIG_DATABASE	978,31499
#define X509V3_R_NO_ISSUER_CERTIFICATE	979,31542
#define X509V3_R_NO_ISSUER_DETAILS	980,31588
#define X509V3_R_NO_POLICY_IDENTIFIER	981,31630
#define X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED	982,31675
#define X509V3_R_NO_PUBLIC_KEY	983,31735
#define X509V3_R_NO_SUBJECT_DETAILS	984,31774
#define X509V3_R_ODD_NUMBER_OF_DIGITS	985,31817
#define X509V3_R_OPERATION_NOT_DEFINED	986,31862
#define X509V3_R_OTHERNAME_ERROR	987,31908
#define X509V3_R_POLICY_LANGUAGE_ALREADY_DEFINED	988,31948
#define X509V3_R_POLICY_PATH_LENGTH	989,32002
#define X509V3_R_POLICY_PATH_LENGTH_ALREADY_DEFINED	990,32045
#define X509V3_R_POLICY_SYNTAX_NOT_CURRENTLY_SUPPORTED	991,32102
#define X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY 992,32162
#define X509V3_R_SECTION_NOT_FOUND	993,32229
#define X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS	994,32271
#define X509V3_R_UNABLE_TO_GET_ISSUER_KEYID	995,32323
#define X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT	996,32373
#define X509V3_R_UNKNOWN_EXTENSION	997,32424
#define X509V3_R_UNKNOWN_EXTENSION_NAME	998,32466
#define X509V3_R_UNKNOWN_OPTION	999,32513
#define X509V3_R_UNSUPPORTED_OPTION	1000,32553
#define X509V3_R_UNSUPPORTED_TYPE	1001,32596
#define X509V3_R_USER_TOO_LONG	1002,32637

crypto/x509v3/v3conf.c,18
int main(69,2943

crypto/x509v3/v3_pku.c,83
const X509V3_EXT_METHOD v3_pkey_usage_period 69,3094
} ASN1_SEQUENCE_END(80,3457

crypto/x509v3/v3_int.c,175
const X509V3_EXT_METHOD v3_crl_num 63,2808
const X509V3_EXT_METHOD v3_delta_crl 70,2964
static void * s2i_asn1_int(77,3121
const X509V3_EXT_METHOD v3_inhibit_anyp 82,3249

crypto/x509v3/pcy_node.c,281
static int node_cmp(65,2838
STACK_OF(71,3007
X509_POLICY_NODE *tree_find_sk(tree_find_sk76,3111
X509_POLICY_NODE *level_find_node(level_find_node94,3441
X509_POLICY_NODE *level_add_node(level_add_node112,3853
void policy_node_free(165,4856
int policy_node_match(174,5065

crypto/x509v3/pcy_int.h,1060
typedef struct X509_POLICY_DATA_st X509_POLICY_DATA;60,2735
DECLARE_STACK_OF(62,2789
struct X509_POLICY_DATA_st72,3133
	unsigned int flags;74,3163
	ASN1_OBJECT *valid_policy;valid_policy76,3231
	STACK_OF(77,3259
#define POLICY_DATA_FLAG_MAPPED	87,3544
#define POLICY_DATA_FLAG_MAPPED_ANY	93,3713
#define POLICY_DATA_FLAG_MAP_MASK	97,3812
#define POLICY_DATA_FLAG_SHARED_QUALIFIERS	101,3904
#define POLICY_DATA_FLAG_EXTRA_NODE	105,4008
#define POLICY_DATA_FLAG_CRITICAL	109,4103
struct X509_POLICY_CACHE_st 113,4195
	X509_POLICY_DATA *anyPolicy;anyPolicy115,4271
	STACK_OF(117,4326
struct X509_POLICY_NODE_st134,4825
	const X509_POLICY_DATA *data;data137,4887
	X509_POLICY_NODE *parent;parent139,4937
	int nchild;141,4993
struct X509_POLICY_LEVEL_st144,5011
	X509 *cert;cert147,5069
	STACK_OF(149,5109
struct X509_POLICY_TREE_st157,5286
	X509_POLICY_LEVEL *levels;levels160,5353
	int nlevel;161,5381
	STACK_OF(165,5488
#define POLICY_FLAG_ANY_POLICY	173,5742
#define node_data_critical(177,5800
#define node_critical(178,5875

crypto/x509v3/v3err.c,233
#define ERR_FUNC(68,2979
#define ERR_REASON(69,3034
static ERR_STRING_DATA X509V3_str_functs[X509V3_str_functs71,3096
static ERR_STRING_DATA X509V3_str_reasons[X509V3_str_reasons141,7092
void ERR_load_X509V3_strings(216,11945

crypto/x509v3/v3_asid.c,871
} ASN1_SEQUENCE_END(81,3203
} ASN1_CHOICE_END(86,3358
} ASN1_CHOICE_END(91,3563
} ASN1_SEQUENCE_END(96,3756
static int i2r_ASIdentifiers(154,5178
static int ASIdOrRange_cmp(169,5590
int v3_asid_add_inherit(199,6604
int v3_asid_add_id_or_range(228,7278
static void extract_min_max(284,8654
static int ASIdentifierChoice_is_canonical(304,9092
int v3_asid_is_canonical(386,11214
static int ASIdentifierChoice_canonize(396,11452
int v3_asid_canonize(531,14844
static void *v2i_ASIdentifiers(v2i_ASIdentifiers541,15063
const X509V3_EXT_METHOD v3_asid 657,18023
int v3_asid_inherits(674,18447
static int asid_contains(686,18738
int v3_asid_subset(717,19429
#define validation_err(733,19802
static int v3_asid_validate_path_internal(750,20164
#undef validation_err863,23482
int v3_asid_validate_path(868,23579
int v3_asid_validate_resource_set(877,23791

crypto/x509v3/v3_pcons.c,123
static STACK_OF(67,2880
} ASN1_SEQUENCE_END(88,3532
static void *v2i_POLICY_CONSTRAINTS(v2i_POLICY_CONSTRAINTS105,3999

crypto/x509v3/v3_pmaps.c,117
static STACK_OF(68,2971
} ASN1_SEQUENCE_END(86,3446
static void *v2i_POLICY_MAPPINGS(v2i_POLICY_MAPPINGS114,4225

crypto/x509v3/v3_lib.c,496
static STACK_OF(67,2885
static int ext_cmp(86,3409
const X509V3_EXT_METHOD *X509V3_EXT_get_nid(X509V3_EXT_get_nid97,3742
const X509V3_EXT_METHOD *X509V3_EXT_get(X509V3_EXT_get112,4178
int X509V3_EXT_add_list(120,4352
int X509V3_EXT_add_alias(127,4501
void X509V3_EXT_cleanup(146,5030
static void ext_list_free(152,5140
int X509V3_add_standard_extensions(161,5373
void *X509V3_EXT_d2i(X509V3_EXT_d2i168,5476
void *X509V3_get_d2i(X509V3_get_d2i194,6501
int X509V3_add1_i2d(239,7551

crypto/x509v3/v3_alt.c,621
const X509V3_EXT_METHOD v3_alt[v3_alt71,3332
STACK_OF(93,3822
STACK_OF(106,4165
int GENERAL_NAME_print(177,5664
static GENERAL_NAMES *v2i_issuer_alt(v2i_issuer_alt243,6924
static int copy_issuer(273,7739
static GENERAL_NAMES *v2i_subject_alt(v2i_subject_alt308,8598
static int copy_email(343,9567
GENERAL_NAMES *v2i_GENERAL_NAMES(v2i_GENERAL_NAMES396,10928
GENERAL_NAME *v2i_GENERAL_NAME(v2i_GENERAL_NAME418,11519
GENERAL_NAME *a2i_GENERAL_NAME(a2i_GENERAL_NAME424,11690
GENERAL_NAME *v2i_GENERAL_NAME_ex(v2i_GENERAL_NAME_ex524,13539
static int do_othername(566,14449
static int do_dirname(591,15133

crypto/x509v3/v3_crld.c,733
const X509V3_EXT_METHOD v3_crld 71,3096
const X509V3_EXT_METHOD v3_freshest_crl 82,3254
static STACK_OF(93,3409
static int set_dist_point_name(115,3954
static const BIT_STRING_BITNAME reason_flags[reason_flags193,5555
static int set_reasons(206,6000
static int print_reasons(246,6743
static DIST_POINT *crldp_from_section(crldp_from_section270,7249
static void *v2i_crld(v2i_crld311,8016
IMPLEMENT_STACK_OF(373,9454
} ASN1_CHOICE_END_cb(399,10043
} ASN1_SEQUENCE_END(408,10359
} ASN1_SEQUENCE_END(425,11065
static void *v2i_idp(v2i_idp446,11532
static int print_gens(507,12894
static int print_distpoint(519,13175
static int i2r_idp(538,13619
static int i2r_crldp(563,14471
int DIST_POINT_set_dpname(587,15062

crypto/x509v3/v3_pci.c,166
const X509V3_EXT_METHOD v3_pci 47,2075
static int i2r_pci(57,2280
static int process_pci_value(75,2902
static PROXY_CERT_INFO_EXTENSION *r2i_pci(r2i_pci243,6829

crypto/x509v3/v3_conf.c,1380
static STACK_OF(74,3292
X509_EXTENSION *X509V3_EXT_nconf_nid(X509V3_EXT_nconf_nid101,4231
static X509_EXTENSION *do_ext_nconf(do_ext_nconf115,4650
static X509_EXTENSION *do_ext_i2d(do_ext_i2d175,6321
X509_EXTENSION *X509V3_EXT_i2d(X509V3_EXT_i2d215,7306
static int v3_check_critical(226,7653
static int v3_check_generic(237,7924
static X509_EXTENSION *v3_generic_extension(v3_generic_extension260,8331
static unsigned char *generic_asn1(generic_asn1308,9445
int X509V3_EXT_add_nconf_sk(325,9851
int X509V3_EXT_add_nconf(346,10442
int X509V3_EXT_CRL_add_nconf(357,10713
int X509V3_EXT_REQ_add_nconf(368,10997
char * X509V3_get_string(385,11418
STACK_OF(397,11754
void X509V3_string_free(409,12093
void X509V3_section_free(416,12247
static char *nconf_get_string(nconf_get_string423,12432
static STACK_OF(428,12553
static X509V3_CONF_METHOD nconf_method 433,12672
void X509V3_set_nconf(440,12767
void X509V3_set_ctx(446,12873
X509_EXTENSION *X509V3_EXT_conf(X509V3_EXT_conf458,13148
X509_EXTENSION *X509V3_EXT_conf_nid(X509V3_EXT_conf_nid468,13418
static char *conf_lhash_get_string(conf_lhash_get_string476,13640
static STACK_OF(481,13765
static X509V3_CONF_METHOD conf_lhash_method 486,13888
void X509V3_set_conf_lhash(493,13998
int X509V3_EXT_add_conf(499,14132
int X509V3_EXT_CRL_add_conf(509,14372
int X509V3_EXT_REQ_add_conf(519,14636

crypto/x509v3/v3prin.c,18
int main(67,2861

crypto/x509v3/v3_genn.c,331
} ASN1_SEQUENCE_END(70,3026
} ASN1_SEQUENCE_END(77,3249
} ASN1_CHOICE_END(93,4029
int GENERAL_NAME_cmp(111,4529
int OTHERNAME_cmp(149,5261
void GENERAL_NAME_set0_value(162,5546
void *GENERAL_NAME_get0_value(GENERAL_NAME_get0_value196,6004
int GENERAL_NAME_set0_othername(228,6436
int GENERAL_NAME_get0_otherName(241,6702

crypto/x509v3/v3_sxnet.c,492
#define SXNET_TEST68,2936
const X509V3_EXT_METHOD v3_sxnet 75,3167
} ASN1_SEQUENCE_END(93,3494
} ASN1_SEQUENCE_END(100,3667
static SXNET * sxnet_v2i(131,4467
int SXNET_add_id_asc(152,4903
int SXNET_add_id_ulong(165,5256
int SXNET_add_id_INTEGER(183,5776
ASN1_OCTET_STRING *SXNET_get_id_asc(SXNET_get_id_asc223,6786
ASN1_OCTET_STRING *SXNET_get_id_ulong(SXNET_get_id_ulong236,7122
ASN1_OCTET_STRING *SXNET_get_id_INTEGER(SXNET_get_id_INTEGER250,7518
IMPLEMENT_STACK_OF(261,7777

crypto/x509v3/v3_akeya.c,29
} ASN1_SEQUENCE_END(70,3109

crypto/x509v3/v3_bitst.c,324
static BIT_STRING_BITNAME ns_cert_type_table[ns_cert_type_table64,2831
static BIT_STRING_BITNAME key_usage_type_table[key_usage_type_table76,3134
const X509V3_EXT_METHOD v3_nscert 91,3570
const X509V3_EXT_METHOD v3_key_usage 92,3665
STACK_OF(94,3757
ASN1_BIT_STRING *v2i_ASN1_BIT_STRING(v2i_ASN1_BIT_STRING105,4080

crypto/x509v3/v3_ia5.c,193
const X509V3_EXT_METHOD v3_ns_ia5_list[v3_ns_ia5_list68,3035
static char *i2s_ASN1_IA5STRING(i2s_ASN1_IA5STRING80,3389
static ASN1_IA5STRING *s2i_ASN1_IA5STRING(s2i_ASN1_IA5STRING94,3734

crypto/x509v3/ext_dat.h,112
static const X509V3_EXT_METHOD *standard_exts[standard_exts76,3651
#define STANDARD_EXTENSION_COUNT 131,4522

crypto/x509v3/v3_pcia.c,58
} ASN1_SEQUENCE_END(45,1997
} ASN1_SEQUENCE_END(53,2257

crypto/x509v3/v3_ncons.c,457
const X509V3_EXT_METHOD v3_name_constraints 82,3642
} ASN1_SEQUENCE_END(96,4028
} ASN1_SEQUENCE_END(103,4283
static int i2r_NAME_CONSTRAINTS(165,5695
static int do_i2r_name_constraints(176,6011
static int print_nc_ipadd(197,6581
int NAME_CONSTRAINTS_check(239,7680
static int nc_match(295,8722
static int nc_match_single(348,10026
static int nc_dn(376,10694
static int nc_dns(390,11179
static int nc_email(415,11779
static int nc_uri(460,12921

crypto/x509v3/v3_ocsp.c,801
const X509V3_EXT_METHOD v3_ocsp_crlid 92,3894
const X509V3_EXT_METHOD v3_ocsp_acutoff 101,4042
const X509V3_EXT_METHOD v3_crl_invdate 110,4212
const X509V3_EXT_METHOD v3_crl_hold 119,4370
const X509V3_EXT_METHOD v3_ocsp_nonce 128,4516
const X509V3_EXT_METHOD v3_ocsp_nocheck 140,4702
const X509V3_EXT_METHOD v3_ocsp_serviceloc 149,4870
static int i2r_ocsp_crlid(158,5042
static int i2r_ocsp_acutoff(185,5781
static int i2r_object(194,6005
static void *ocsp_nonce_new(ocsp_nonce_new206,6347
static int i2d_ocsp_nonce(211,6419
static void *d2i_ocsp_nonce(d2i_ocsp_nonce221,6598
static void ocsp_nonce_free(240,7031
static int i2r_ocsp_nonce(245,7103
static int i2r_ocsp_nocheck(255,7419
static void *s2i_ocsp_nocheck(s2i_ocsp_nocheck261,7540
static int i2r_ocsp_serviceloc(267,7676

crypto/x509v3/v3_purp.c,1527
static X509_PURPOSE xstandard[xstandard82,3838
#define X509_PURPOSE_COUNT 94,4881
IMPLEMENT_STACK_OF(96,4950
int X509_check_purpose(109,5318
int X509_PURPOSE_set(125,5699
int X509_PURPOSE_get_count(135,5898
X509_PURPOSE * X509_PURPOSE_get0(141,6036
int X509_PURPOSE_get_by_sname(148,6234
int X509_PURPOSE_get_by_id(159,6453
int X509_PURPOSE_add(172,6785
static void xptable_free(229,8433
void X509_PURPOSE_cleanup(242,8667
int X509_PURPOSE_get_id(250,8858
char *X509_PURPOSE_get0_name(X509_PURPOSE_get0_name255,8926
char *X509_PURPOSE_get0_sname(X509_PURPOSE_get0_sname260,8996
int X509_PURPOSE_get_trust(265,9068
static int nid_cmp(270,9137
int X509_supported_extension(278,9297
static void setup_dp(317,10438
static void setup_crldp(349,11159
static void x509v3_cache_extensions(357,11381
#define V1_ROOT 500,15448
#define ku_reject(501,15486
#define xku_reject(503,15582
#define ns_reject(505,15681
static int check_ca(508,15778
int X509_check_ca(529,16531
static int check_ssl_ca(541,16785
static int check_purpose_ssl_client(552,17000
static int check_purpose_ssl_server(563,17373
static int check_purpose_ns_ssl_server(576,17741
static int purpose_smime(587,18052
static int check_purpose_smime_sign(607,18528
static int check_purpose_smime_encrypt(616,18765
static int check_purpose_crl_sign(625,18985
static int ocsp_helper(640,19356
static int check_purpose_timestamp_sign(649,19609
static int no_check(684,20615
int X509_check_issued(701,21213
int X509_check_akid(726,21840

crypto/x509v3/v3_addr.c,1521
} ASN1_SEQUENCE_END(81,3209
} ASN1_CHOICE_END(86,3412
} ASN1_CHOICE_END(91,3626
} ASN1_SEQUENCE_END(96,3830
#define ADDR_RAW_BUF_LEN	111,4257
unsigned int v3_addr_get_afi(131,4570
static int addr_expand(145,4938
#define addr_prefixlen(169,5507
static int i2r_address(174,5631
static int i2r_IPAddressOrRanges(214,6660
static int i2r_IPAddrBlocks(245,7530
static int IPAddressOrRange_cmp(325,9538
static int v4IPAddressOrRange_cmp(369,10762
static int v6IPAddressOrRange_cmp(379,11050
static int range_should_be_prefix(389,11310
static int make_addressPrefix(425,12099
static int make_addressRange(460,13081
static IPAddressFamily *make_IPAddressFamily(make_IPAddressFamily523,14826
int v3_addr_add_inherit(572,15953
static IPAddressOrRanges *make_prefix_or_range(make_prefix_or_range595,16699
int v3_addr_add_prefix(629,17735
int v3_addr_add_range(648,18191
static int extract_min_max(670,18741
int v3_addr_get_range(691,19360
static int IPAddressFamily_cmp(718,20329
int v3_addr_is_canonical(731,20764
static int IPAddressOrRanges_canonize(841,23784
int v3_addr_canonize(916,25798
static void *v2i_IPAddrBlocks(v2i_IPAddrBlocks935,26374
const X509V3_EXT_METHOD v3_addr 1100,30765
int v3_addr_inherits(1117,31182
static int addr_contains(1133,31531
int v3_addr_subset(1171,32414
#define validation_err(1197,33169
static int v3_addr_validate_path_internal(1214,33531
#undef validation_err1311,36576
int v3_addr_validate_path(1316,36673
int v3_addr_validate_resource_set(1325,36885

crypto/x509v3/v3_enum.c,171
static ENUMERATED_NAMES crl_reasons[crl_reasons63,2804
const X509V3_EXT_METHOD v3_crl_reason 78,3555
char *i2s_ASN1_ENUMERATED_TABLE(i2s_ASN1_ENUMERATED_TABLE87,3729

crypto/x509v3/v3_extku.c,143
static STACK_OF(69,2990
const X509V3_EXT_METHOD v3_ocsp_accresp 84,3364
static void *v2i_EXTENDED_KEY_USAGE(v2i_EXTENDED_KEY_USAGE117,4186

crypto/x509v3/tabtest.c,14
main(69,2902

crypto/x509v3/v3_akey.c,124
static STACK_OF(66,2883
static STACK_OF(83,3377
static AUTHORITY_KEYID *v2i_AUTHORITY_KEYID(v2i_AUTHORITY_KEYID111,4291

crypto/x509v3/v3_cpols.c,476
static STACK_OF(71,3087
} ASN1_SEQUENCE_END(99,4165
} ASN1_SEQUENCE_END(113,4708
} ASN1_SEQUENCE_END(120,4906
} ASN1_SEQUENCE_END(127,5112
static POLICYINFO *policy_section(policy_section198,6909
static POLICYQUALINFO *notice_section(notice_section272,8913
static int nref_nos(339,10907
static int i2r_certpol(365,11446
static void print_qualifiers(382,11911
static void print_notice(412,12619
void X509_POLICY_NODE_print(438,13363
IMPLEMENT_STACK_OF(455,13849

crypto/x509v3/pcy_tree.c,643
static void expected_print(73,2994
static void tree_print(96,3569
#define tree_print(130,4456
static int tree_init(143,4787
static int tree_link_matching_nodes(310,8303
static int tree_link_nodes(340,9070
static int tree_add_unmatched(374,10065
static int tree_link_unmatched(402,10742
static int tree_link_any(442,11732
static int tree_prune(504,13225
static int tree_add_auth_node(558,14437
static int tree_calculate_authority_set(586,15236
static int tree_calculate_user_set(632,16291
static int tree_evaluate(696,17840
static void exnode_free(721,18355
void X509_policy_tree_free(728,18503
int X509_policy_check(767,19397

crypto/x509v3/pcy_data.c,90
void policy_data_free(67,2862
X509_POLICY_DATA *policy_data_new(policy_data_new85,3534

crypto/x509v3/pcy_lib.c,434
int X509_policy_tree_level_count(70,2890
	X509_policy_tree_get0_level(78,3026
STACK_OF(85,3186
STACK_OF(93,3341
int X509_policy_level_node_count(106,3611
X509_POLICY_NODE *X509_policy_level_get0_node(X509_policy_level_get0_node120,3833
const ASN1_OBJECT *X509_policy_node_get0_policy(X509_policy_node_get0_policy135,4109
int X509_policy_node_get_critical(143,4261
STACK_OF(151,4388
		X509_policy_node_get0_parent(160,4574

crypto/x509v3/v3_bcons.c,133
static STACK_OF(67,2885
} ASN1_SEQUENCE_END(84,3492
static BASIC_CONSTRAINTS *v2i_BASIC_CONSTRAINTS(v2i_BASIC_CONSTRAINTS97,3852

crypto/x509v3/v3_utl.c,1355
static STACK_OF(70,3014
int X509V3_add_value_uchar(103,4226
void X509V3_conf_free(111,4459
int X509V3_add_value_bool(120,4678
int X509V3_add_value_bool_nf(127,4893
char *i2s_ASN1_ENUMERATED(i2s_ASN1_ENUMERATED135,5067
char *i2s_ASN1_INTEGER(i2s_ASN1_INTEGER147,5393
ASN1_INTEGER *s2i_ASN1_INTEGER(s2i_ASN1_INTEGER159,5707
int X509V3_add_value_int(201,6599
int X509V3_get_value_bool(213,6891
int X509V3_get_value_int(234,7501
#define HDR_NAME	245,7713
#define HDR_VALUE	246,7732
STACK_OF(250,7772
static char *strip_spaces(strip_spaces342,9675
char *hex_to_string(hex_to_string363,10184
unsigned char *string_to_hex(string_to_hex392,10785
int name_cmp(450,12088
static int sk_strcmp(461,12291
STACK_OF(466,12387
STACK_OF(477,12676
STACK_OF(502,13258
static STACK_OF(517,13686
static void str_free(542,14378
static int append_ia5(547,14444
void X509_email_free(566,14991
ASN1_OCTET_STRING *a2i_IPADDRESS(a2i_IPADDRESS575,15188
ASN1_OCTET_STRING *a2i_IPADDRESS_NC(a2i_IPADDRESS_NC599,15593
int a2i_ipadd(644,16330
static int ipv4_from_asc(662,16607
		unsigned char tmp[tmp679,17005
		int total;681,17067
		int zero_pos;683,17135
		int zero_cnt;685,17176
	} IPV6_STAT;686,17192
static int ipv6_from_asc(689,17208
static int ipv6_cb(760,18839
static int ipv6_hex(805,19736
int X509V3_NAME_from_section(830,20177

crypto/x509v3/v3_info.c,225
static STACK_OF(66,2883
const X509V3_EXT_METHOD v3_sinfo 81,3394
} ASN1_SEQUENCE_END(93,3772
static AUTHORITY_INFO_ACCESS *v2i_AUTHORITY_INFO_ACCESS(v2i_AUTHORITY_INFO_ACCESS135,5004
int i2a_ACCESS_DESCRIPTION(186,6512

crypto/LPdir_nyi.c,165
struct LP_dir_context_st 32,1506
struct LP_dir_context_st { void *dummy;dummy32,1506
const char *LP_find_file(LP_find_file33,1549
int LP_find_file_end(38,1649

crypto/ts/ts_rsp_verify.c,1006
static const char *TS_status_text[TS_status_text93,4277
#define TS_STATUS_TEXT_SIZE	101,4437
#define TS_STATUS_BUF_SIZE	107,4635
	int code;111,4684
	const char *text;text112,4695
	} TS_failure_info[TS_failure_info113,4714
#define TS_FAILURE_INFO_SIZE	123,5152
int TS_RESP_verify_signature(140,5859
static int TS_verify_cert(231,8165
static int TS_check_signing_certs(262,8929
static ESS_SIGNING_CERT *ESS_get_signing_cert(ESS_get_signing_cert296,9848
static int TS_find_cert(308,10255
static int TS_issuer_serial_cmp(337,11016
int TS_RESP_verify_response(362,11758
int TS_RESP_verify_token(384,12361
static int int_TS_RESP_verify_token(408,13146
static int TS_check_status_info(479,15017
static char *TS_get_status_text(TS_get_status_text534,16577
static int TS_check_policy(569,17506
static int TS_compute_imprint(582,17771
static int TS_check_imprints(635,19043
static int TS_check_nonces(666,19941
static int TS_check_signer_name(689,20514
static int TS_find_name(718,21374

crypto/ts/ts_rsp_print.c,268
struct status_map_st66,2884
	int bit;68,2908
	const char *text;text69,2918
int TS_RESP_print_bio(80,3178
int TS_STATUS_INFO_print_bio(97,3559
static int TS_status_map_print(165,5452
int TS_TST_INFO_print_bio(183,5756
static int TS_ACCURACY_print_bio(264,7730

crypto/ts/ts_err.c,212
#define ERR_FUNC(68,2972
#define ERR_REASON(69,3023
static ERR_STRING_DATA TS_str_functs[TS_str_functs71,3081
static ERR_STRING_DATA TS_str_reasons[TS_str_reasons127,6403
void ERR_load_TS_strings(169,8861

crypto/ts/ts_req_utils.c,1053
int TS_REQ_set_version(65,2867
long TS_REQ_get_version(70,2969
int TS_REQ_set_msg_imprint(75,3055
TS_MSG_IMPRINT *TS_REQ_get_msg_imprint(TS_REQ_get_msg_imprint92,3458
int TS_MSG_IMPRINT_set_algo(97,3539
X509_ALGOR *TS_MSG_IMPRINT_get_algo(TS_MSG_IMPRINT_get_algo114,3874
int TS_MSG_IMPRINT_set_msg(119,3958
ASN1_OCTET_STRING *TS_MSG_IMPRINT_get_msg(TS_MSG_IMPRINT_get_msg124,4092
int TS_REQ_set_policy_id(129,4183
ASN1_OBJECT *TS_REQ_get_policy_id(TS_REQ_get_policy_id146,4521
int TS_REQ_set_nonce(151,4595
const ASN1_INTEGER *TS_REQ_get_nonce(TS_REQ_get_nonce168,4924
int TS_REQ_set_cert_req(173,5003
int TS_REQ_get_cert_req(179,5109
STACK_OF(184,5186
void TS_REQ_ext_free(189,5269
int TS_REQ_get_ext_count(196,5413
int TS_REQ_get_ext_by_NID(201,5501
int TS_REQ_get_ext_by_OBJ(206,5627
int TS_REQ_get_ext_by_critical(211,5762
X509_EXTENSION *TS_REQ_get_ext(TS_REQ_get_ext216,5900
X509_EXTENSION *TS_REQ_delete_ext(TS_REQ_delete_ext221,6001
int TS_REQ_add_ext(226,6108
void *TS_REQ_get_ext_d2i(TS_REQ_get_ext_d2i231,6229

crypto/ts/ts_asn1.c,782
} ASN1_SEQUENCE_END(65,2937
int i2d_TS_MSG_IMPRINT_bio(75,3251
TS_MSG_IMPRINT *d2i_TS_MSG_IMPRINT_fp(d2i_TS_MSG_IMPRINT_fp81,3417
int i2d_TS_MSG_IMPRINT_fp(86,3579
} ASN1_SEQUENCE_END(99,4035
int i2d_TS_REQ_bio(109,4277
TS_REQ *d2i_TS_REQ_fp(d2i_TS_REQ_fp115,4413
int i2d_TS_REQ_fp(120,4527
} ASN1_SEQUENCE_END(130,4820
} ASN1_SEQUENCE_END(146,5493
int i2d_TS_TST_INFO_bio(156,5780
TS_TST_INFO *d2i_TS_TST_INFO_fp(d2i_TS_TST_INFO_fp162,5936
int i2d_TS_TST_INFO_fp(167,6080
} ASN1_SEQUENCE_END(177,6415
static int ts_resp_cb(208,7139
} ASN1_SEQUENCE_END_cb(227,7672
int i2d_TS_RESP_bio(237,7935
TS_RESP *d2i_TS_RESP_fp(d2i_TS_RESP_fp243,8075
int i2d_TS_RESP_fp(248,8195
} ASN1_SEQUENCE_END(257,8460
} ASN1_SEQUENCE_END(265,8738
} ASN1_SEQUENCE_END(273,9019

crypto/ts/ts_verify_ctx.c,235
TS_VERIFY_CTX *TS_VERIFY_CTX_new(TS_VERIFY_CTX_new63,2821
void TS_VERIFY_CTX_init(74,3074
void TS_VERIFY_CTX_free(80,3195
void TS_VERIFY_CTX_cleanup(88,3315
TS_VERIFY_CTX *TS_REQ_to_TS_VERIFY_CTX(TS_REQ_to_TS_VERIFY_CTX109,3679

crypto/ts/ts_req_print.c,30
int TS_REQ_print_bio(68,2920

crypto/ts/ts_conf.c,1503
#define	BASE_SECTION	71,2974
#define	ENV_DEFAULT_TSA	72,3003
#define	ENV_SERIAL	73,3043
#define ENV_CRYPTO_DEVICE	74,3073
#define	ENV_SIGNER_CERT	75,3116
#define	ENV_CERTS	76,3156
#define	ENV_SIGNER_KEY	77,3184
#define	ENV_DEFAULT_POLICY	78,3222
#define	ENV_OTHER_POLICIES	79,3267
#define	ENV_DIGESTS	80,3312
#define	ENV_ACCURACY	81,3344
#define	ENV_ORDERING	82,3378
#define	ENV_TSA_NAME	83,3412
#define	ENV_ESS_CERT_ID_CHAIN	84,3446
#define	ENV_VALUE_SECS	85,3497
#define	ENV_VALUE_MILLISECS	86,3529
#define	ENV_VALUE_MICROSECS	87,3570
#define	ENV_CLOCK_PRECISION_DIGITS	88,3611
#define	ENV_VALUE_YES	89,3672
#define	ENV_VALUE_NO	90,3702
X509 *TS_CONF_load_cert(TS_CONF_load_cert94,3792
STACK_OF(108,4097
EVP_PKEY *TS_CONF_load_key(TS_CONF_load_key136,4798
static void TS_CONF_lookup_fail(152,5205
static void TS_CONF_invalid(157,5347
const char *TS_CONF_get_tsa_section(TS_CONF_get_tsa_section162,5485
int TS_CONF_set_serial(173,5739
int TS_CONF_set_crypto_device(192,6101
int TS_CONF_set_default_engine(211,6449
int TS_CONF_set_signer_cert(239,7155
int TS_CONF_set_certs(262,7627
int TS_CONF_set_signer_key(280,8100
int TS_CONF_set_def_policy(302,8591
int TS_CONF_set_policies(329,9159
int TS_CONF_set_digests(364,10026
int TS_CONF_set_accuracy(406,10934
int TS_CONF_set_clock_precision_digits(449,11951
static int TS_CONF_add_flag(473,12500
int TS_CONF_set_ordering(492,12922
int TS_CONF_set_tsa_name(497,13078
int TS_CONF_set_ess_cert_id_chain(502,13234

crypto/ts/ts_rsp_utils.c,2006
int TS_RESP_set_status_info(67,2896
TS_STATUS_INFO *TS_RESP_get_status_info(TS_RESP_get_status_info85,3303
void TS_RESP_set_tst_info(91,3449
PKCS7 *TS_RESP_get_token(TS_RESP_get_token100,3667
TS_TST_INFO *TS_RESP_get_tst_info(TS_RESP_get_tst_info105,3729
int TS_TST_INFO_set_version(110,3803
long TS_TST_INFO_get_version(115,3915
int TS_TST_INFO_set_policy_id(120,4011
ASN1_OBJECT *TS_TST_INFO_get_policy_id(TS_TST_INFO_get_policy_id137,4364
int TS_TST_INFO_set_msg_imprint(142,4448
TS_MSG_IMPRINT *TS_TST_INFO_get_msg_imprint(TS_TST_INFO_get_msg_imprint159,4866
int TS_TST_INFO_set_serial(164,4957
const ASN1_INTEGER *TS_TST_INFO_get_serial(TS_TST_INFO_get_serial181,5313
int TS_TST_INFO_set_time(186,5404
const ASN1_GENERALIZEDTIME *TS_TST_INFO_get_time(TS_TST_INFO_get_time203,5773
int TS_TST_INFO_set_accuracy(208,5868
TS_ACCURACY *TS_TST_INFO_get_accuracy(TS_TST_INFO_get_accuracy225,6238
int TS_ACCURACY_set_seconds(230,6320
const ASN1_INTEGER *TS_ACCURACY_get_seconds(TS_ACCURACY_get_seconds247,6688
int TS_ACCURACY_set_millis(252,6781
const ASN1_INTEGER *TS_ACCURACY_get_millis(TS_ACCURACY_get_millis273,7189
int TS_ACCURACY_set_micros(278,7280
const ASN1_INTEGER *TS_ACCURACY_get_micros(TS_ACCURACY_get_micros299,7688
int TS_TST_INFO_set_ordering(304,7779
int TS_TST_INFO_get_ordering(310,7895
int TS_TST_INFO_set_nonce(315,7982
const ASN1_INTEGER *TS_TST_INFO_get_nonce(TS_TST_INFO_get_nonce332,8326
int TS_TST_INFO_set_tsa(337,8415
GENERAL_NAME *TS_TST_INFO_get_tsa(TS_TST_INFO_get_tsa354,8729
STACK_OF(359,8802
void TS_TST_INFO_ext_free(364,8895
int TS_TST_INFO_get_ext_count(371,9049
int TS_TST_INFO_get_ext_by_NID(376,9147
int TS_TST_INFO_get_ext_by_OBJ(381,9283
int TS_TST_INFO_get_ext_by_critical(386,9428
X509_EXTENSION *TS_TST_INFO_get_ext(TS_TST_INFO_get_ext391,9576
X509_EXTENSION *TS_TST_INFO_delete_ext(TS_TST_INFO_delete_ext396,9687
int TS_TST_INFO_add_ext(401,9804
void *TS_TST_INFO_get_ext_d2i(TS_TST_INFO_get_ext_d2i406,9935

crypto/ts/ts_rsp_sign.c,1777
static ASN1_INTEGER *def_serial_cb(def_serial_cb95,4035
static int def_time_cb(111,4492
static int def_time_cb(133,5037
static int def_extension_cb(154,5510
TS_RESP_CTX *TS_RESP_CTX_new(TS_RESP_CTX_new166,5859
void TS_RESP_CTX_free(185,6248
int TS_RESP_CTX_set_signer_cert(201,6702
int TS_RESP_CTX_set_signer_key(215,7113
int TS_RESP_CTX_set_def_policy(224,7343
int TS_RESP_CTX_set_certs(234,7641
int TS_RESP_CTX_add_policy(258,8124
int TS_RESP_CTX_add_md(275,8565
#define TS_RESP_CTX_accuracy_free(289,8921
int TS_RESP_CTX_set_accuracy(297,9144
void TS_RESP_CTX_add_flags(319,9745
void TS_RESP_CTX_set_serial_cb(324,9830
void TS_RESP_CTX_set_time_cb(330,9966
void TS_RESP_CTX_set_extension_cb(336,10094
int TS_RESP_CTX_set_status_info(343,10249
int TS_RESP_CTX_set_status_info_cond(372,11062
int TS_RESP_CTX_add_failure_info(386,11419
TS_REQ *TS_RESP_CTX_get_request(TS_RESP_CTX_get_request399,11801
TS_TST_INFO *TS_RESP_CTX_get_tst_info(TS_RESP_CTX_get_tst_info404,11880
int TS_RESP_CTX_set_clock_precision_digits(409,11966
TS_RESP *TS_RESP_create_response(TS_RESP_create_response418,12255
static void TS_RESP_CTX_init(487,13964
static void TS_RESP_CTX_cleanup(495,14136
static int TS_RESP_check_request(506,14405
static ASN1_OBJECT *TS_RESP_get_policy(TS_RESP_get_policy568,16138
static TS_TST_INFO *TS_RESP_create_tst_info(TS_RESP_create_tst_info603,17194
static int TS_RESP_process_extensions(685,19684
static int TS_RESP_sign(708,20384
static ESS_SIGNING_CERT *ESS_SIGNING_CERT_new_init(ESS_SIGNING_CERT_new_init820,23455
static ESS_CERT_ID *ESS_CERT_ID_new_init(ESS_CERT_ID_new_init852,24298
static int TS_TST_INFO_content_new(895,25558
static int ESS_add_signing_cert(918,26210
TS_RESP_set_genTime_with_precision(950,26951

crypto/ts/ts_lib.c,177
int TS_ASN1_INTEGER_print_bio(70,2942
int TS_OBJ_print_bio(89,3312
int TS_ext_print_bio(100,3522
int TS_X509_ALGOR_print_bio(126,4148
int TS_MSG_IMPRINT_print_bio(133,4351

crypto/ts/ts.h,7369
#define HEADER_TS_H60,2767
#undef X509_NAME95,3375
typedef struct TS_msg_imprint_st107,3598
	X509_ALGOR *hash_algo;hash_algo109,3634
	ASN1_OCTET_STRING *hashed_msg;hashed_msg110,3658
	} TS_MSG_IMPRINT;111,3690
typedef struct TS_req_st125,4190
	ASN1_INTEGER *version;version127,4218
	TS_MSG_IMPRINT *msg_imprint;msg_imprint128,4242
	ASN1_OBJECT *policy_id;policy_id129,4272
	ASN1_INTEGER *nonce;nonce130,4313
	ASN1_BOOLEAN cert_req;131,4351
	STACK_OF(132,4396
	} TS_REQ;133,4454
typedef struct TS_accuracy_st142,4676
	ASN1_INTEGER *seconds;seconds144,4709
	ASN1_INTEGER *millis;millis145,4733
	ASN1_INTEGER *micros;micros146,4756
	} TS_ACCURACY;147,4779
typedef struct TS_tst_info_st169,5707
	ASN1_INTEGER *version;version171,5740
	ASN1_OBJECT *policy_id;policy_id172,5764
	TS_MSG_IMPRINT *msg_imprint;msg_imprint173,5789
	ASN1_INTEGER *serial;serial174,5819
	ASN1_GENERALIZEDTIME *time;time175,5842
	TS_ACCURACY *accuracy;accuracy176,5871
	ASN1_BOOLEAN ordering;177,5895
	ASN1_INTEGER *nonce;nonce178,5919
	GENERAL_NAME *tsa;tsa179,5941
	STACK_OF(180,5961
	} TS_TST_INFO;181,6000
#define	TS_STATUS_GRANTED	198,6487
#define	TS_STATUS_GRANTED_WITH_MODS	199,6517
#define	TS_STATUS_REJECTION	200,6556
#define	TS_STATUS_WAITING	201,6588
#define	TS_STATUS_REVOCATION_WARNING	202,6618
#define	TS_STATUS_REVOCATION_NOTIFICATION	203,6658
#define	TS_INFO_BAD_ALG	207,6784
#define	TS_INFO_BAD_REQUEST	208,6812
#define	TS_INFO_BAD_DATA_FORMAT	209,6843
#define	TS_INFO_TIME_NOT_AVAILABLE	210,6878
#define	TS_INFO_UNACCEPTED_POLICY	211,6916
#define	TS_INFO_UNACCEPTED_EXTENSION	212,6953
#define	TS_INFO_ADD_INFO_NOT_AVAILABLE	213,6993
#define	TS_INFO_SYSTEM_FAILURE	214,7035
typedef struct TS_status_info_st216,7071
	ASN1_INTEGER *status;status218,7107
	STACK_OF(219,7130
	} TS_STATUS_INFO;221,7196
DECLARE_STACK_OF(223,7216
typedef struct TS_resp_st232,7428
	TS_STATUS_INFO *status_info;status_info234,7457
	PKCS7 *token;token235,7487
	TS_TST_INFO *tst_info;tst_info236,7502
	} TS_RESP;237,7526
typedef struct ESS_issuer_serial248,7729
	STACK_OF(250,7765
	} ESS_ISSUER_SERIAL;252,7822
typedef struct ESS_cert_id261,7974
	ASN1_OCTET_STRING *hash;hash263,8004
	ESS_ISSUER_SERIAL *issuer_serial;issuer_serial264,8057
	} ESS_CERT_ID;265,8092
DECLARE_STACK_OF(267,8109
typedef struct ESS_signing_cert277,8319
	STACK_OF(279,8354
	} ESS_SIGNING_CERT;281,8424
STACK_OF(393,12770
#define	TS_TSA_NAME	470,16251
#define	TS_ORDERING	473,16318
#define	TS_ESS_CERT_ID_CHAIN	480,16553
typedef ASN1_INTEGER *(*TS_serial_cb)TS_serial_cb486,16700
typedef	int (*TS_time_cb)TS_time_cb491,16952
typedef	int (*TS_extension_cb)TS_extension_cb498,17242
typedef struct TS_resp_ctx500,17323
	X509		*signer_cert;signer_cert502,17353
	EVP_PKEY	*signer_key;signer_key503,17374
	STACK_OF(504,17397
	} TS_RESP_CTX;529,18383
DECLARE_STACK_OF(531,18400
#define TS_MAX_CLOCK_PRECISION_DIGITS	567,19824
#define	TS_VFY_SIGNATURE	617,21679
#define	TS_VFY_VERSION	619,21763
#define	TS_VFY_POLICY	621,21876
#define	TS_VFY_IMPRINT	624,22019
#define	TS_VFY_DATA	628,22243
#define	TS_VFY_NONCE	630,22304
#define	TS_VFY_SIGNER	632,22403
#define	TS_VFY_TSA_NAME	634,22505
#define	TS_VFY_ALL_IMPRINT	637,22596
#define	TS_VFY_ALL_DATA	644,22784
typedef struct TS_verify_ctx652,22969
	unsigned	flags;655,23073
	X509_STORE	*store;store658,23157
	STACK_OF(659,23177
	} TS_VERIFY_CTX;678,23645
STACK_OF(730,25600
#define TS_F_D2I_TS_RESP	766,27374
#define TS_F_DEF_SERIAL_CB	767,27407
#define TS_F_DEF_TIME_CB	768,27442
#define TS_F_ESS_ADD_SIGNING_CERT	769,27475
#define TS_F_ESS_CERT_ID_NEW_INIT	770,27516
#define TS_F_ESS_SIGNING_CERT_NEW_INIT	771,27557
#define TS_F_INT_TS_RESP_VERIFY_TOKEN	772,27603
#define TS_F_PKCS7_TO_TS_TST_INFO	773,27648
#define TS_F_TS_ACCURACY_SET_MICROS	774,27689
#define TS_F_TS_ACCURACY_SET_MILLIS	775,27732
#define TS_F_TS_ACCURACY_SET_SECONDS	776,27775
#define TS_F_TS_CHECK_IMPRINTS	777,27819
#define TS_F_TS_CHECK_NONCES	778,27858
#define TS_F_TS_CHECK_POLICY	779,27895
#define TS_F_TS_CHECK_SIGNING_CERTS	780,27932
#define TS_F_TS_CHECK_STATUS_INFO	781,27975
#define TS_F_TS_COMPUTE_IMPRINT	782,28016
#define TS_F_TS_CONF_SET_DEFAULT_ENGINE	783,28056
#define TS_F_TS_GET_STATUS_TEXT	784,28103
#define TS_F_TS_MSG_IMPRINT_SET_ALGO	785,28143
#define TS_F_TS_REQ_SET_MSG_IMPRINT	786,28187
#define TS_F_TS_REQ_SET_NONCE	787,28230
#define TS_F_TS_REQ_SET_POLICY_ID	788,28268
#define TS_F_TS_RESP_CREATE_RESPONSE	789,28309
#define TS_F_TS_RESP_CREATE_TST_INFO	790,28353
#define TS_F_TS_RESP_CTX_ADD_FAILURE_INFO	791,28397
#define TS_F_TS_RESP_CTX_ADD_MD	792,28445
#define TS_F_TS_RESP_CTX_ADD_POLICY	793,28485
#define TS_F_TS_RESP_CTX_NEW	794,28528
#define TS_F_TS_RESP_CTX_SET_ACCURACY	795,28565
#define TS_F_TS_RESP_CTX_SET_CERTS	796,28610
#define TS_F_TS_RESP_CTX_SET_DEF_POLICY	797,28652
#define TS_F_TS_RESP_CTX_SET_SIGNER_CERT	798,28699
#define TS_F_TS_RESP_CTX_SET_STATUS_INFO	799,28746
#define TS_F_TS_RESP_GET_POLICY	800,28793
#define TS_F_TS_RESP_SET_GENTIME_WITH_PRECISION	801,28833
#define TS_F_TS_RESP_SET_STATUS_INFO	802,28887
#define TS_F_TS_RESP_SET_TST_INFO	803,28931
#define TS_F_TS_RESP_SIGN	804,28972
#define TS_F_TS_RESP_VERIFY_SIGNATURE	805,29006
#define TS_F_TS_RESP_VERIFY_TOKEN	806,29051
#define TS_F_TS_TST_INFO_SET_ACCURACY	807,29092
#define TS_F_TS_TST_INFO_SET_MSG_IMPRINT	808,29137
#define TS_F_TS_TST_INFO_SET_NONCE	809,29184
#define TS_F_TS_TST_INFO_SET_POLICY_ID	810,29226
#define TS_F_TS_TST_INFO_SET_SERIAL	811,29272
#define TS_F_TS_TST_INFO_SET_TIME	812,29315
#define TS_F_TS_TST_INFO_SET_TSA	813,29356
#define TS_F_TS_VERIFY	814,29396
#define TS_F_TS_VERIFY_CERT	815,29428
#define TS_F_TS_VERIFY_CTX_NEW	816,29464
#define TS_R_BAD_PKCS7_TYPE	819,29524
#define TS_R_BAD_TYPE	820,29560
#define TS_R_CERTIFICATE_VERIFY_ERROR	821,29591
#define TS_R_COULD_NOT_SET_ENGINE	822,29636
#define TS_R_COULD_NOT_SET_TIME	823,29677
#define TS_R_D2I_TS_RESP_INT_FAILED	824,29717
#define TS_R_DETACHED_CONTENT	825,29760
#define TS_R_ESS_ADD_SIGNING_CERT_ERROR	826,29798
#define TS_R_ESS_SIGNING_CERTIFICATE_ERROR	827,29845
#define TS_R_INVALID_NULL_POINTER	828,29894
#define TS_R_INVALID_SIGNER_CERTIFICATE_PURPOSE	829,29935
#define TS_R_MESSAGE_IMPRINT_MISMATCH	830,29989
#define TS_R_NONCE_MISMATCH	831,30034
#define TS_R_NONCE_NOT_RETURNED	832,30070
#define TS_R_NO_CONTENT	833,30110
#define TS_R_NO_TIME_STAMP_TOKEN	834,30143
#define TS_R_PKCS7_ADD_SIGNATURE_ERROR	835,30183
#define TS_R_PKCS7_ADD_SIGNED_ATTR_ERROR	836,30229
#define TS_R_PKCS7_TO_TS_TST_INFO_FAILED	837,30276
#define TS_R_POLICY_MISMATCH	838,30323
#define TS_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE	839,30360
#define TS_R_RESPONSE_SETUP_ERROR	840,30417
#define TS_R_SIGNATURE_FAILURE	841,30458
#define TS_R_THERE_MUST_BE_ONE_SIGNER	842,30497
#define TS_R_TIME_SYSCALL_ERROR	843,30542
#define TS_R_TOKEN_NOT_PRESENT	844,30582
#define TS_R_TOKEN_PRESENT	845,30621
#define TS_R_TSA_NAME_MISMATCH	846,30656
#define TS_R_TSA_UNTRUSTED	847,30695
#define TS_R_TST_INFO_SETUP_ERROR	848,30730
#define TS_R_TS_DATASIGN	849,30771
#define TS_R_UNACCEPTABLE_POLICY	850,30804
#define TS_R_UNSUPPORTED_MD_ALGORITHM	851,30844
#define TS_R_UNSUPPORTED_VERSION	852,30889
#define TS_R_WRONG_CONTENT_TYPE	853,30929

crypto/ec/ec_oct.c,177
int EC_POINT_set_compressed_coordinates_GFp(71,3102
int EC_POINT_set_compressed_coordinates_GF2m(105,4128
size_t EC_POINT_point2oct(132,5000
int EC_POINT_oct2point(167,5913

crypto/ec/ecp_nistp521.c,2481
  typedef __uint128_t uint128_t;44,1389
typedef uint8_t u8;49,1552
typedef uint64_t u64;50,1572
typedef int64_t s64;51,1594
typedef u8 felem_bytearray[felem_bytearray59,1838
static const felem_bytearray nistp521_curve_params[nistp521_curve_params63,1983
#define NLIMBS 125,4786
typedef uint64_t limb;127,4804
typedef limb felem[felem128,4827
typedef uint128_t largefelem[largefelem129,4855
static const limb bottom57bits 131,4894
static const limb bottom58bits 132,4946
static void bin66_to_felem(136,5133
static void felem_to_bin66(151,5781
static void flip_endian(166,6250
static int BN_to_felem(174,6441
static BIGNUM *felem_to_BN(felem_to_BN200,7043
static void felem_one(212,7294
static void felem_assign(225,7451
static void felem_sum64(239,7702
static void felem_scalar(253,7964
static void felem_scalar64(267,8315
static void felem_scalar128(281,8590
static void felem_neg(300,8931
static void felem_diff64(323,9553
static void felem_diff_128_64(346,10201
static void felem_diff128(369,10861
static void felem_square(392,11591
static void felem_mul(484,14363
static const limb bottom52bits 590,17626
static void felem_reduce(598,17802
static void felem_square_reduce(666,19946
static void felem_mul_reduce(673,20078
static void felem_inv(687,20390
static const felem kPrime 765,23191
static limb felem_is_zero(777,23542
static int felem_is_zero_int(832,25073
static void felem_contract(841,25285
point_double(948,28946
copy_conditional(1035,31499
static void point_add(1055,32180
static const felem gmul[gmul1242,37117
static void select_point(1354,43631
static char get_bit(1376,44146
static void batch_mul(1388,44628
	felem g_pre_comp[g_pre_comp1478,47116
	int references;1479,47142
} NISTP521_PRE_COMP;1480,47159
const EC_METHOD *EC_GFp_nistp521_method(EC_GFp_nistp521_method1482,47181
static NISTP521_PRE_COMP *nistp521_pre_comp_new(nistp521_pre_comp_new1533,48635
static void *nistp521_pre_comp_dup(nistp521_pre_comp_dup1547,48976
static void nistp521_pre_comp_free(1557,49198
static void nistp521_pre_comp_clear_free(1572,49422
int ec_GFp_nistp521_group_init(1592,49811
int ec_GFp_nistp521_group_set_curve(1600,49954
int ec_GFp_nistp521_point_get_affine_coordinates(1634,51065
static void make_points_affine(1674,52125
int ec_GFp_nistp521_points_mul(1694,52922
int ec_GFp_nistp521_precompute_mult(1902,59185
int ec_GFp_nistp521_have_precompute_mult(2013,62964
static void *dummy=dummy2024,63206

crypto/ec/ec_err.c,214
#define ERR_FUNC(68,2972
#define ERR_REASON(69,3023
static ERR_STRING_DATA EC_str_functs[EC_str_functs71,3081
static ERR_STRING_DATA EC_str_reasons[EC_str_reasons212,12680
void ERR_load_EC_strings(266,15833

crypto/ec/ec_check.c,28
int EC_GROUP_check(59,2708

crypto/ec/ecp_nist.c,215
const EC_METHOD *EC_GFp_nist_method(EC_GFp_nist_method74,3117
int ec_GFp_nist_group_copy(122,4387
int ec_GFp_nist_group_set_curve(129,4549
int ec_GFp_nist_field_mul(168,5587
int ec_GFp_nist_field_sqr(194,6094

crypto/ec/ec_print.c,271
BIGNUM *EC_POINT_point2bn(EC_POINT_point2bn59,2711
EC_POINT *EC_POINT_bn2point(EC_POINT_bn2point89,3380
static const char *HEX_DIGITS HEX_DIGITS132,4157
char *EC_POINT_point2hex(EC_POINT_point2hex135,4270
EC_POINT *EC_POINT_hex2point(EC_POINT_hex2point179,5154

crypto/ec/ecp_nistp224.c,2291
  typedef __uint128_t uint128_t;43,1310
typedef uint8_t u8;48,1473
typedef uint64_t u64;49,1493
typedef int64_t s64;50,1515
typedef uint64_t limb;72,2517
typedef uint128_t widelimb;73,2540
typedef limb felem[felem75,2569
typedef widelimb widefelem[widefelem76,2592
typedef u8 felem_bytearray[felem_bytearray82,2815
static const felem_bytearray nistp224_curve_params[nistp224_curve_params84,2848
static const felem gmul[gmul132,4910
	felem g_pre_comp[g_pre_comp232,10277
	int references;233,10306
} NISTP224_PRE_COMP;234,10323
const EC_METHOD *EC_GFp_nistp224_method(EC_GFp_nistp224_method236,10345
static void bin28_to_felem(283,11747
static void felem_to_bin28(291,12055
static void flip_endian(304,12338
static int BN_to_felem(312,12523
static BIGNUM *felem_to_BN(felem_to_BN338,13119
static void felem_one(356,13700
static void felem_assign(364,13792
static void felem_sum(373,13959
static void felem_neg(383,14150
static void felem_diff(399,14674
static void widefelem_diff(420,15253
static void felem_diff_128_64(448,15974
static void felem_scalar(471,16662
static void widefelem_scalar(481,16948
static void felem_square(493,17196
static void felem_mul(508,17738
static void felem_reduce(525,18555
static void felem_square_reduce(587,20285
static void felem_mul_reduce(594,20416
static void felem_contract(603,20671
static limb felem_is_zero(655,22245
static limb felem_is_zero_int(670,22819
static void felem_inv(677,22995
copy_conditional(739,25495
point_double(768,26454
static void point_add(854,29146
static void select_point(1013,33404
static char get_bit(1034,33906
static void batch_mul(1046,34396
static NISTP224_PRE_COMP *nistp224_pre_comp_new(nistp224_pre_comp_new1148,37370
static void *nistp224_pre_comp_dup(nistp224_pre_comp_dup1162,37698
static void nistp224_pre_comp_free(1172,37920
static void nistp224_pre_comp_clear_free(1187,38144
int ec_GFp_nistp224_group_init(1207,38532
int ec_GFp_nistp224_group_set_curve(1215,38675
int ec_GFp_nistp224_point_get_affine_coordinates(1249,39786
static void make_points_affine(1289,40839
int ec_GFp_nistp224_points_mul(1309,41632
int ec_GFp_nistp224_precompute_mult(1517,47851
int ec_GFp_nistp224_have_precompute_mult(1646,52514
static void *dummy=dummy1657,52756

crypto/ec/ec2_oct.c,136
int ec_GF2m_simple_set_compressed_coordinates(91,3929
size_t ec_GF2m_simple_point2oct(165,5782
int ec_GF2m_simple_oct2point(297,8537

crypto/ec/ec_curve.c,10021
	int	field_type,78,3388
		seed_len,80,3485
		param_len;81,3497
	unsigned int cofactor;82,3510
} EC_CURVE_DATA;83,3561
static const struct { EC_CURVE_DATA h;86,3607
static const struct { EC_CURVE_DATA h; unsigned char data[data86,3607
	_EC_NIST_PRIME_192 87,3677
static const struct { EC_CURVE_DATA h;112,4707
static const struct { EC_CURVE_DATA h; unsigned char data[data112,4707
	_EC_NIST_PRIME_224 113,4777
static const struct { EC_CURVE_DATA h;138,5927
static const struct { EC_CURVE_DATA h; unsigned char data[data138,5927
	_EC_NIST_PRIME_384 139,5997
static const struct { EC_CURVE_DATA h;176,7795
static const struct { EC_CURVE_DATA h; unsigned char data[data176,7795
	_EC_NIST_PRIME_521 177,7865
static const struct { EC_CURVE_DATA h;227,10310
static const struct { EC_CURVE_DATA h; unsigned char data[data227,10310
	_EC_X9_62_PRIME_192V2 228,10380
static const struct { EC_CURVE_DATA h;253,11413
static const struct { EC_CURVE_DATA h; unsigned char data[data253,11413
	_EC_X9_62_PRIME_192V3 254,11483
static const struct { EC_CURVE_DATA h;279,12516
static const struct { EC_CURVE_DATA h; unsigned char data[data279,12516
	_EC_X9_62_PRIME_239V1 280,12586
static const struct { EC_CURVE_DATA h;310,13804
static const struct { EC_CURVE_DATA h; unsigned char data[data310,13804
	_EC_X9_62_PRIME_239V2 311,13874
static const struct { EC_CURVE_DATA h;341,15092
static const struct { EC_CURVE_DATA h; unsigned char data[data341,15092
	_EC_X9_62_PRIME_239V3 342,15162
static const struct { EC_CURVE_DATA h;373,16381
static const struct { EC_CURVE_DATA h; unsigned char data[data373,16381
	_EC_X9_62_PRIME_256V1 374,16451
static const struct { EC_CURVE_DATA h;406,17816
static const struct { EC_CURVE_DATA h; unsigned char data[data406,17816
	_EC_SECG_PRIME_112R1 407,17886
static const struct { EC_CURVE_DATA h;426,18594
static const struct { EC_CURVE_DATA h; unsigned char data[data426,18594
	_EC_SECG_PRIME_112R2 427,18664
static const struct { EC_CURVE_DATA h;446,19372
static const struct { EC_CURVE_DATA h; unsigned char data[data446,19372
	_EC_SECG_PRIME_128R1 447,19442
static const struct { EC_CURVE_DATA h;466,20210
static const struct { EC_CURVE_DATA h; unsigned char data[data466,20210
	_EC_SECG_PRIME_128R2 467,20280
static const struct { EC_CURVE_DATA h;486,21048
static const struct { EC_CURVE_DATA h; unsigned char data[data486,21048
	_EC_SECG_PRIME_160K1 487,21117
static const struct { EC_CURVE_DATA h;510,21961
static const struct { EC_CURVE_DATA h; unsigned char data[data510,21961
	_EC_SECG_PRIME_160R1 511,22031
static const struct { EC_CURVE_DATA h;536,22973
static const struct { EC_CURVE_DATA h; unsigned char data[data536,22973
	_EC_SECG_PRIME_160R2 537,23043
static const struct { EC_CURVE_DATA h;562,23985
static const struct { EC_CURVE_DATA h; unsigned char data[data562,23985
	_EC_SECG_PRIME_192K1 563,24054
static const struct { EC_CURVE_DATA h;586,24988
static const struct { EC_CURVE_DATA h; unsigned char data[data586,24988
	_EC_SECG_PRIME_224K1 587,25057
static const struct { EC_CURVE_DATA h;610,26141
static const struct { EC_CURVE_DATA h; unsigned char data[data610,26141
	_EC_SECG_PRIME_256K1 611,26210
static const struct { EC_CURVE_DATA h;641,27435
static const struct { EC_CURVE_DATA h; unsigned char data[data641,27435
	_EC_WTLS_8 642,27504
static const struct { EC_CURVE_DATA h;659,28134
static const struct { EC_CURVE_DATA h; unsigned char data[data659,28134
	_EC_WTLS_9 660,28203
static const struct { EC_CURVE_DATA h;683,29037
static const struct { EC_CURVE_DATA h; unsigned char data[data683,29037
	_EC_WTLS_12 684,29106
static const struct { EC_CURVE_DATA h;710,30208
static const struct { EC_CURVE_DATA h; unsigned char data[data710,30208
	_EC_SECG_CHAR2_113R1 711,30278
static const struct { EC_CURVE_DATA h;730,31029
static const struct { EC_CURVE_DATA h; unsigned char data[data730,31029
	_EC_SECG_CHAR2_113R2 731,31099
static const struct { EC_CURVE_DATA h;750,31850
static const struct { EC_CURVE_DATA h; unsigned char data[data750,31850
	_EC_SECG_CHAR2_131R1 751,31920
static const struct { EC_CURVE_DATA h;770,32731
static const struct { EC_CURVE_DATA h; unsigned char data[data770,32731
	_EC_SECG_CHAR2_131R2 771,32801
static const struct { EC_CURVE_DATA h;790,33612
static const struct { EC_CURVE_DATA h; unsigned char data[data790,33612
	_EC_NIST_CHAR2_163K 791,33681
static const struct { EC_CURVE_DATA h;814,34537
static const struct { EC_CURVE_DATA h; unsigned char data[data814,34537
	_EC_SECG_CHAR2_163R1 815,34606
static const struct { EC_CURVE_DATA h;845,35732
static const struct { EC_CURVE_DATA h; unsigned char data[data845,35732
	_EC_NIST_CHAR2_163B 846,35801
static const struct { EC_CURVE_DATA h;875,36923
static const struct { EC_CURVE_DATA h; unsigned char data[data875,36923
	_EC_SECG_CHAR2_193R1 876,36993
static const struct { EC_CURVE_DATA h;901,38068
static const struct { EC_CURVE_DATA h; unsigned char data[data901,38068
	_EC_SECG_CHAR2_193R2 902,38138
static const struct { EC_CURVE_DATA h;927,39213
static const struct { EC_CURVE_DATA h; unsigned char data[data927,39213
	_EC_NIST_CHAR2_233K 928,39282
static const struct { EC_CURVE_DATA h;956,40405
static const struct { EC_CURVE_DATA h; unsigned char data[data956,40405
	_EC_NIST_CHAR2_233B 957,40475
static const struct { EC_CURVE_DATA h;987,41704
static const struct { EC_CURVE_DATA h; unsigned char data[data987,41704
	_EC_SECG_CHAR2_239K1 988,41773
static const struct { EC_CURVE_DATA h;1016,42897
static const struct { EC_CURVE_DATA h; unsigned char data[data1016,42897
	_EC_NIST_CHAR2_283K 1017,42966
static const struct { EC_CURVE_DATA h;1046,44288
static const struct { EC_CURVE_DATA h; unsigned char data[data1046,44288
	_EC_NIST_CHAR2_283B 1047,44358
static const struct { EC_CURVE_DATA h;1078,45789
static const struct { EC_CURVE_DATA h; unsigned char data[data1078,45789
	_EC_NIST_CHAR2_409K 1079,45858
static const struct { EC_CURVE_DATA h;1120,47716
static const struct { EC_CURVE_DATA h; unsigned char data[data1120,47716
	_EC_NIST_CHAR2_409B 1121,47786
static const struct { EC_CURVE_DATA h;1164,49742
static const struct { EC_CURVE_DATA h; unsigned char data[data1164,49742
	_EC_NIST_CHAR2_571K 1165,49811
static const struct { EC_CURVE_DATA h;1218,52317
static const struct { EC_CURVE_DATA h; unsigned char data[data1218,52317
	_EC_NIST_CHAR2_571B 1219,52387
static const struct { EC_CURVE_DATA h;1274,54991
static const struct { EC_CURVE_DATA h; unsigned char data[data1274,54991
	_EC_X9_62_CHAR2_163V1 1275,55061
static const struct { EC_CURVE_DATA h;1300,56017
static const struct { EC_CURVE_DATA h; unsigned char data[data1300,56017
	_EC_X9_62_CHAR2_163V2 1301,56087
static const struct { EC_CURVE_DATA h;1326,57043
static const struct { EC_CURVE_DATA h; unsigned char data[data1326,57043
	_EC_X9_62_CHAR2_163V3 1327,57113
static const struct { EC_CURVE_DATA h;1352,58069
static const struct { EC_CURVE_DATA h; unsigned char data[data1352,58069
	_EC_X9_62_CHAR2_176V1 1353,58138
static const struct { EC_CURVE_DATA h;1376,59061
static const struct { EC_CURVE_DATA h; unsigned char data[data1376,59061
	_EC_X9_62_CHAR2_191V1 1377,59131
static const struct { EC_CURVE_DATA h;1402,60177
static const struct { EC_CURVE_DATA h; unsigned char data[data1402,60177
	_EC_X9_62_CHAR2_191V2 1403,60247
static const struct { EC_CURVE_DATA h;1428,61293
static const struct { EC_CURVE_DATA h; unsigned char data[data1428,61293
	_EC_X9_62_CHAR2_191V3 1429,61363
static const struct { EC_CURVE_DATA h;1454,62409
static const struct { EC_CURVE_DATA h; unsigned char data[data1454,62409
	_EC_X9_62_CHAR2_208W1 1455,62478
static const struct { EC_CURVE_DATA h;1478,63521
static const struct { EC_CURVE_DATA h; unsigned char data[data1478,63521
	_EC_X9_62_CHAR2_239V1 1479,63591
static const struct { EC_CURVE_DATA h;1509,64822
static const struct { EC_CURVE_DATA h; unsigned char data[data1509,64822
	_EC_X9_62_CHAR2_239V2 1510,64892
static const struct { EC_CURVE_DATA h;1540,66123
static const struct { EC_CURVE_DATA h; unsigned char data[data1540,66123
	_EC_X9_62_CHAR2_239V3 1541,66193
static const struct { EC_CURVE_DATA h;1571,67426
static const struct { EC_CURVE_DATA h; unsigned char data[data1571,67426
	_EC_X9_62_CHAR2_272W1 1572,67495
static const struct { EC_CURVE_DATA h;1601,68802
static const struct { EC_CURVE_DATA h; unsigned char data[data1601,68802
	_EC_X9_62_CHAR2_304W1 1602,68871
static const struct { EC_CURVE_DATA h;1631,70298
static const struct { EC_CURVE_DATA h; unsigned char data[data1631,70298
	_EC_X9_62_CHAR2_359V1 1632,70368
static const struct { EC_CURVE_DATA h;1669,72095
static const struct { EC_CURVE_DATA h; unsigned char data[data1669,72095
	_EC_X9_62_CHAR2_368W1 1670,72164
static const struct { EC_CURVE_DATA h;1705,73855
static const struct { EC_CURVE_DATA h; unsigned char data[data1705,73855
	_EC_X9_62_CHAR2_431R1 1706,73924
static const struct { EC_CURVE_DATA h;1747,75849
static const struct { EC_CURVE_DATA h; unsigned char data[data1747,75849
	_EC_WTLS_1 1748,75918
static const struct { EC_CURVE_DATA h;1771,76766
static const struct { EC_CURVE_DATA h; unsigned char data[data1771,76766
	_EC_IPSEC_155_ID3 1772,76835
static const struct { EC_CURVE_DATA h;1799,77826
static const struct { EC_CURVE_DATA h; unsigned char data[data1799,77826
	_EC_IPSEC_185_ID4 1800,77895
typedef struct _ec_list_element_st 1825,78847
	int	nid;1826,78884
	const EC_CURVE_DATA *data;data1827,78894
	const EC_METHOD *(*meth)meth1828,78922
	const char *comment;comment1829,78955
	} ec_list_element;1830,78977
static const ec_list_element curve_list[curve_list1832,78998
#define curve_list_length 1933,86658
static EC_GROUP *ec_group_new_from_data(ec_group_new_from_data1935,86730
EC_GROUP *EC_GROUP_new_by_curve_name(EC_GROUP_new_by_curve_name2058,89471
size_t EC_get_builtin_curves(2084,89882

crypto/ec/ecp_smpl.c,1271
const EC_METHOD *EC_GFp_simple_method(EC_GFp_simple_method74,3214
int ec_GFp_simple_group_init(137,5147
void ec_GFp_simple_group_finish(147,5304
void ec_GFp_simple_group_clear_finish(155,5428
int ec_GFp_simple_group_copy(163,5576
int ec_GFp_simple_group_set_curve(175,5842
int ec_GFp_simple_group_get_curve(230,7067
int ec_GFp_simple_group_get_degree(281,7906
int ec_GFp_simple_group_check_discriminant(287,8008
int ec_GFp_simple_point_init(354,9536
void ec_GFp_simple_point_finish(365,9687
void ec_GFp_simple_point_clear_finish(373,9807
int ec_GFp_simple_point_copy(382,9973
int ec_GFp_simple_point_set_to_infinity(393,10224
int ec_GFp_simple_set_Jprojective_coordinates_GFp(401,10366
int ec_GFp_simple_get_Jprojective_coordinates_GFp(461,11610
int ec_GFp_simple_point_set_affine_coordinates(514,12535
int ec_GFp_simple_point_get_affine_coordinates(528,12973
int ec_GFp_simple_add(643,15362
int ec_GFp_simple_dbl(807,19344
int ec_GFp_simple_invert(924,22459
int ec_GFp_simple_is_at_infinity(934,22715
int ec_GFp_simple_is_on_curve(940,22833
int ec_GFp_simple_cmp(1031,25283
int ec_GFp_simple_make_affine(1142,27638
int ec_GFp_simple_points_make_affine(1181,28401
int ec_GFp_simple_field_mul(1351,32829
int ec_GFp_simple_field_sqr(1357,32995

crypto/ec/ec_key.c,1146
EC_KEY *EC_KEY_new(EC_KEY_new71,3079
EC_KEY *EC_KEY_new_by_curve_name(EC_KEY_new_by_curve_name94,3497
void EC_KEY_free(108,3736
EC_KEY *EC_KEY_copy(EC_KEY_copy141,4309
EC_KEY *EC_KEY_dup(EC_KEY_dup208,5830
int EC_KEY_up_ref(221,6035
int EC_KEY_generate_key(237,6312
int EC_KEY_check_key(304,7573
int EC_KEY_set_public_key_affine_coordinates(383,9406
const EC_GROUP *EC_KEY_get0_group(EC_KEY_get0_group459,10941
int EC_KEY_set_group(464,11021
const BIGNUM *EC_KEY_get0_private_key(EC_KEY_get0_private_key472,11212
int EC_KEY_set_private_key(477,11299
const EC_POINT *EC_KEY_get0_public_key(EC_KEY_get0_public_key485,11498
int EC_KEY_set_public_key(490,11585
unsigned int EC_KEY_get_enc_flags(498,11805
void EC_KEY_set_enc_flags(503,11888
point_conversion_form_t EC_KEY_get_conv_form(508,11978
void EC_KEY_set_conv_form(513,12073
void *EC_KEY_get_key_method_data(EC_KEY_get_key_method_data520,12257
void EC_KEY_insert_key_method_data(526,12483
void EC_KEY_set_asn1_flag(537,12925
int EC_KEY_precompute_mult(543,13050
int EC_KEY_get_flags(550,13198
void EC_KEY_set_flags(555,13265
void EC_KEY_clear_flags(560,13340

crypto/ec/ecp_nistputil.c,221
void ec_GFp_nistp_points_make_affine_internal(44,1549
#define tmp_felem(56,2014
#define X(57,2077
#define Y(58,2135
#define Z(59,2199
void ec_GFp_nistp_recode_scalar_bits(183,7488
static void *dummy=dummy196,7805

crypto/ec/ec_lcl.h,3313
#define EC_FLAGS_DEFAULT_OCT	86,3598
struct ec_method_st 91,3743
	int flags;93,3793
	int field_type;95,3846
	int (*group_init)group_init98,3956
	void (*group_finish)group_finish99,3988
	void (*group_clear_finish)group_clear_finish100,4023
	int (*group_copy)group_copy101,4064
	int (*group_set_curve)group_set_curve105,4239
	int (*group_get_curve)group_get_curve106,4337
	int (*group_get_degree)group_get_degree109,4460
	int (*group_check_discriminant)group_check_discriminant112,4536
	int (*point_init)point_init115,4679
	void (*point_finish)point_finish116,4711
	void (*point_clear_finish)point_clear_finish117,4746
	int (*point_copy)point_copy118,4787
	int (*point_set_to_infinity)point_set_to_infinity127,5138
	int (*point_set_Jprojective_coordinates_GFp)point_set_Jprojective_coordinates_GFp128,5199
	int (*point_get_Jprojective_coordinates_GFp)point_get_Jprojective_coordinates_GFp130,5339
	int (*point_set_affine_coordinates)point_set_affine_coordinates132,5467
	int (*point_get_affine_coordinates)point_get_affine_coordinates134,5581
	int (*point_set_compressed_coordinates)point_set_compressed_coordinates136,5689
	size_t (*point2oct)point2oct140,5857
	int (*oct2point)oct2point142,5996
	int (*add)add146,6164
	int (*dbl)dbl147,6256
	int (*invert)invert148,6329
	int (*is_at_infinity)is_at_infinity151,6462
	int (*is_on_curve)is_on_curve152,6522
	int (*point_cmp)point_cmp153,6589
	int (*make_affine)make_affine156,6735
	int (*points_make_affine)points_make_affine157,6796
	int (*mul)mul161,7045
	int (*precompute_mult)precompute_mult163,7191
	int (*have_precompute_mult)have_precompute_mult164,7243
	int (*field_mul)field_mul172,7550
	int (*field_sqr)field_sqr173,7642
	int (*field_div)field_div174,7717
	int (*field_encode)field_encode176,7810
	int (*field_decode)field_decode177,7913
	int (*field_set_to_one)field_set_to_one178,8018
typedef struct ec_extra_data_st 181,8103
	struct ec_extra_data_st *next;next182,8137
	void *data;data183,8169
	void *(*dup_func)dup_func184,8182
	void (*free_func)free_func185,8210
	void (*clear_free_func)clear_free_func186,8238
} EC_EXTRA_DATA;187,8272
struct ec_group_st 189,8313
	const EC_METHOD *meth;meth190,8334
	EC_POINT *generator;generator192,8359
	BIGNUM order,193,8396
	BIGNUM order, cofactor;193,8396
	int curve_name;195,8422
	int asn1_flag;196,8473
	point_conversion_form_t asn1_form;197,8529
	unsigned char *seed;seed199,8566
	size_t seed_len;200,8641
	EC_EXTRA_DATA *extra_data;extra_data202,8660
	BIGNUM field;207,8807
	int poly[poly213,9045
	BIGNUM a,222,9469
	BIGNUM a, b;222,9469
	int a_is_minus3;233,9977
	void *field_data1;field_data1235,10054
	void *field_data2;field_data2236,10125
	int (*field_mod_func)field_mod_func237,10167
struct ec_key_st 240,10284
	int version;241,10303
	EC_GROUP *group;group243,10318
	EC_POINT *pub_key;pub_key245,10337
	BIGNUM	 *priv_key;priv_key246,10357
	unsigned int enc_flag;248,10378
	point_conversion_form_t conv_form;249,10402
	int 	references;251,10439
	int	flags;252,10457
	EC_EXTRA_DATA *method_data;method_data254,10470
struct ec_point_st 275,11425
	const EC_METHOD *meth;meth276,11446
	BIGNUM X;281,11574
	BIGNUM Y;282,11585
	BIGNUM Z;283,11596
	int Z_is_one;285,11710

crypto/ec/ec_pmeth.c,495
	EC_GROUP *gen_group;gen_group72,2992
	const EVP_MD *md;md74,3036
	} EC_PKEY_CTX;75,3055
static int pkey_ec_init(77,3072
static int pkey_ec_copy(91,3286
static void pkey_ec_cleanup(108,3615
static int pkey_ec_sign(119,3800
static int pkey_ec_verify(152,4406
static int pkey_ec_derive(170,4777
static int pkey_ec_ctrl(204,5504
static int pkey_ec_ctrl_str(249,6601
static int pkey_ec_paramgen(268,7005
static int pkey_ec_keygen(289,7419
const EVP_PKEY_METHOD ec_pkey_meth 307,7849

crypto/ec/ecp_nistp256.c,3637
  typedef __uint128_t uint128_t;44,1389
  typedef __int128_t int128_t;45,1480
typedef uint8_t u8;50,1583
typedef uint32_t u32;51,1603
typedef uint64_t u64;52,1625
typedef int64_t s64;53,1647
typedef u8 felem_bytearray[felem_bytearray60,1846
static const felem_bytearray nistp256_curve_params[nistp256_curve_params64,1983
#define NLIMBS 107,3940
typedef uint128_t limb;109,3958
typedef limb felem[felem110,3982
typedef limb longfelem[longfelem111,4010
typedef u64 smallfelem[smallfelem112,4046
static const u64 kPrime[kPrime115,4153
static const limb bottom32bits 116,4245
static const u64 bottom63bits 117,4290
static void bin32_to_felem(121,4479
static void smallfelem_to_bin32(131,4799
static void flip_endian(140,5049
static int BN_to_felem(148,5240
static BIGNUM *smallfelem_to_BN(smallfelem_to_BN174,5842
static void smallfelem_one(186,6108
static void smallfelem_assign(194,6210
static void felem_assign(202,6352
static void felem_sum(211,6516
static void felem_small_sum(220,6687
static void felem_scalar(229,6869
static void longfelem_scalar(238,7053
#define two105m41m9 250,7274
#define two105 251,7352
#define two105m41p9 252,7386
static const felem zero105 255,7490
static void smallfelem_neg(261,7657
static void felem_diff(276,8039
#define two107m43m11 290,8334
#define two107 291,8414
#define two107m43p11 292,8448
static const felem zero107 295,8554
static void felem_diff_zero107(304,8815
static void longfelem_diff(324,9246
#define two64m0 353,10098
#define two110p32m0 354,10136
#define two64m46 355,10199
#define two64m32 356,10254
static const felem zero110 359,10335
static void felem_shrink(369,10604
static void smallfelem_expand(448,12819
static void smallfelem_square(462,13080
static void felem_square(540,14386
static void smallfelem_mul(554,14676
static void felem_mul(669,16585
static void felem_small_mul(684,16935
#define two100m36m4 691,17113
#define two100 692,17191
#define two100m36p4 693,17225
static const felem zero100 695,17328
static void felem_reduce_(710,17920
static void felem_reduce(752,18969
static void felem_reduce_zero105(779,19765
static void subtract_u64(802,20508
static void felem_contract(814,20757
static void smallfelem_square_contract(870,22486
static void smallfelem_mul_contract(880,22691
static limb smallfelem_is_zero(895,23048
static int smallfelem_is_zero_int(930,23779
static void felem_inv(942,24061
static void smallfelem_inv_contract(1005,26865
point_double(1029,27581
point_double_small(1109,29743
copy_conditional(1127,30377
copy_small_conditional(1139,30631
static void point_add(1159,31347
static void point_add_small(1323,35536
static const smallfelem gmul[gmul1374,37495
static void select_point(1474,43382
static char get_bit(1495,43903
static void batch_mul(1507,44401
	smallfelem g_pre_comp[g_pre_comp1612,47548
	int references;1613,47582
} NISTP256_PRE_COMP;1614,47599
const EC_METHOD *EC_GFp_nistp256_method(EC_GFp_nistp256_method1616,47621
static NISTP256_PRE_COMP *nistp256_pre_comp_new(nistp256_pre_comp_new1666,49074
static void *nistp256_pre_comp_dup(nistp256_pre_comp_dup1680,49402
static void nistp256_pre_comp_free(1690,49624
static void nistp256_pre_comp_clear_free(1705,49848
int ec_GFp_nistp256_group_init(1725,50236
int ec_GFp_nistp256_group_set_curve(1733,50379
int ec_GFp_nistp256_point_get_affine_coordinates(1767,51490
static void make_points_affine(1809,52572
int ec_GFp_nistp256_points_mul(1829,53466
int ec_GFp_nistp256_precompute_mult(2037,59843
int ec_GFp_nistp256_have_precompute_mult(2160,64643
static void *dummy=dummy2170,64884

crypto/ec/ecp_mont.c,459
const EC_METHOD *EC_GFp_mont_method(EC_GFp_mont_method73,3081
int ec_GFp_mont_group_init(123,4359
void ec_GFp_mont_group_finish(134,4528
void ec_GFp_mont_group_clear_finish(150,4830
int ec_GFp_mont_group_copy(166,5150
int ec_GFp_mont_group_set_curve(205,5951
int ec_GFp_mont_field_mul(265,7148
int ec_GFp_mont_field_sqr(277,7441
int ec_GFp_mont_field_encode(289,7717
int ec_GFp_mont_field_decode(301,8006
int ec_GFp_mont_field_set_to_one(313,8282

crypto/ec/ec_cvt.c,133
EC_GROUP *EC_GROUP_new_curve_GFp(EC_GROUP_new_curve_GFp76,3319
EC_GROUP *EC_GROUP_new_curve_GF2m(EC_GROUP_new_curve_GF2m151,5469

crypto/ec/eck_prn.c,228
int ECPKParameters_print_fp(71,3102
int EC_KEY_print_fp(87,3410
int ECParameters_print_fp(103,3694
int EC_KEY_print(120,3989
int ECParameters_print(132,4242
int ECPKParameters_print(147,4587
static int print_bin(356,9271

crypto/ec/ec2_smpl.c,1210
const EC_METHOD *EC_GF2m_simple_method(EC_GF2m_simple_method81,3315
int ec_GF2m_simple_group_init(136,4826
void ec_GF2m_simple_group_finish(148,5068
void ec_GF2m_simple_group_clear_finish(159,5318
int ec_GF2m_simple_group_copy(176,5703
int ec_GF2m_simple_group_set_curve(197,6494
int ec_GF2m_simple_group_get_curve(230,7544
int ec_GF2m_simple_group_get_degree(257,7987
int ec_GF2m_simple_group_check_discriminant(266,8209
int ec_GF2m_simple_point_init(304,8938
void ec_GF2m_simple_point_finish(314,9092
void ec_GF2m_simple_point_clear_finish(323,9249
int ec_GF2m_simple_point_copy(333,9500
int ec_GF2m_simple_point_set_to_infinity(347,9856
int ec_GF2m_simple_point_set_affine_coordinates(358,10137
int ec_GF2m_simple_point_get_affine_coordinates(385,10834
int ec_GF2m_simple_add(420,11623
int ec_GF2m_simple_dbl(522,13973
int ec_GF2m_simple_invert(528,14121
int ec_GF2m_simple_is_at_infinity(540,14501
int ec_GF2m_simple_is_on_curve(550,14822
int ec_GF2m_simple_cmp(605,16323
int ec_GF2m_simple_make_affine(650,17375
int ec_GF2m_simple_points_make_affine(686,18154
int ec_GF2m_simple_field_mul(700,18472
int ec_GF2m_simple_field_sqr(707,18719
int ec_GF2m_simple_field_div(714,18946

crypto/ec/ec_ameth.c,914
static int eckey_param2type(68,2912
static int eckey_pub_encode(103,3740
static EC_KEY *eckey_type2param(eckey_type2param139,4492
static int eckey_pub_decode(190,5537
static int eckey_pub_cmp(226,6222
static int eckey_priv_decode(240,6575
static int eckey_priv_encode(312,8258
static int int_ec_size(366,9540
static int ec_bits(371,9627
static int ec_missing_parameters(394,9979
static int ec_copy_parameters(401,10111
static int ec_cmp_parameters(412,10377
static void int_ec_free(422,10640
static int do_EC_KEY_print(427,10716
static int eckey_param_decode(522,12671
static int eckey_param_encode(535,12956
static int eckey_param_print(540,13084
static int eckey_pub_print(546,13241
static int eckey_priv_print(553,13397
static int old_ec_priv_decode(559,13553
static int old_ec_priv_encode(572,13835
static int ec_pkey_ctrl(577,13963
const EVP_PKEY_ASN1_METHOD eckey_asn1_meth 628,15134

crypto/ec/ec.h,9839
#define HEADER_EC_H77,3433
# define OPENSSL_ECC_MAX_FIELD_BITS 101,3877
	POINT_CONVERSION_COMPRESSED 109,4182
	POINT_CONVERSION_UNCOMPRESSED 111,4284
	POINT_CONVERSION_HYBRID 114,4448
} point_conversion_form_t;115,4477
typedef struct ec_method_st EC_METHOD;118,4506
	EC_GROUP;129,4824
typedef struct ec_point_st EC_POINT;131,4836
	int nid;389,14973
	const char *comment;comment390,14983
	} EC_builtin_curve;391,15005
#define OPENSSL_EC_NAMED_CURVE	682,27209
typedef struct ecpk_parameters_st ECPKPARAMETERS;684,27247
#define d2i_ECPKParameters_bio(689,27441
#define i2d_ECPKParameters_bio(690,27533
#define d2i_ECPKParameters_fp(691,27626
#define i2d_ECPKParameters_fp(693,27770
typedef struct ec_key_st EC_KEY;708,28287
#define EC_PKEY_NO_PARAMETERS	711,28361
#define EC_PKEY_NO_PUBKEY	712,28397
#define EC_FLAG_NON_FIPS_ALLOW	715,28468
#define EC_FLAG_FIPS_CHECKED	716,28503
#define ECParameters_dup(944,37129
#define EVP_PKEY_CTX_set_ec_paramgen_curve_nid(954,37394
#define EVP_PKEY_CTRL_EC_PARAMGEN_CURVE_NID	959,37568
#define EC_F_BN_TO_FELEM	970,37913
#define EC_F_COMPUTE_WNAF	971,37946
#define EC_F_D2I_ECPARAMETERS	972,37980
#define EC_F_D2I_ECPKPARAMETERS	973,38018
#define EC_F_D2I_ECPRIVATEKEY	974,38058
#define EC_F_DO_EC_KEY_PRINT	975,38096
#define EC_F_ECKEY_PARAM2TYPE	976,38133
#define EC_F_ECKEY_PARAM_DECODE	977,38171
#define EC_F_ECKEY_PRIV_DECODE	978,38211
#define EC_F_ECKEY_PRIV_ENCODE	979,38250
#define EC_F_ECKEY_PUB_DECODE	980,38289
#define EC_F_ECKEY_PUB_ENCODE	981,38327
#define EC_F_ECKEY_TYPE2PARAM	982,38365
#define EC_F_ECPARAMETERS_PRINT	983,38403
#define EC_F_ECPARAMETERS_PRINT_FP	984,38443
#define EC_F_ECPKPARAMETERS_PRINT	985,38485
#define EC_F_ECPKPARAMETERS_PRINT_FP	986,38526
#define EC_F_ECP_NIST_MOD_192	987,38570
#define EC_F_ECP_NIST_MOD_224	988,38608
#define EC_F_ECP_NIST_MOD_256	989,38646
#define EC_F_ECP_NIST_MOD_521	990,38684
#define EC_F_EC_ASN1_GROUP2CURVE	991,38722
#define EC_F_EC_ASN1_GROUP2FIELDID	992,38762
#define EC_F_EC_ASN1_GROUP2PARAMETERS	993,38804
#define EC_F_EC_ASN1_GROUP2PKPARAMETERS	994,38849
#define EC_F_EC_ASN1_PARAMETERS2GROUP	995,38896
#define EC_F_EC_ASN1_PKPARAMETERS2GROUP	996,38941
#define EC_F_EC_EX_DATA_SET_DATA	997,38988
#define EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY	998,39028
#define EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT	999,39081
#define EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE	1000,39139
#define EC_F_EC_GF2M_SIMPLE_OCT2POINT	1001,39189
#define EC_F_EC_GF2M_SIMPLE_POINT2OCT	1002,39234
#define EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES 1003,39279
#define EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES 1004,39340
#define EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES	1005,39401
#define EC_F_EC_GFP_MONT_FIELD_DECODE	1006,39461
#define EC_F_EC_GFP_MONT_FIELD_ENCODE	1007,39506
#define EC_F_EC_GFP_MONT_FIELD_MUL	1008,39551
#define EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE	1009,39593
#define EC_F_EC_GFP_MONT_FIELD_SQR	1010,39641
#define EC_F_EC_GFP_MONT_GROUP_SET_CURVE	1011,39683
#define EC_F_EC_GFP_MONT_GROUP_SET_CURVE_GFP	1012,39730
#define EC_F_EC_GFP_NISTP224_GROUP_SET_CURVE	1013,39781
#define EC_F_EC_GFP_NISTP224_POINTS_MUL	1014,39832
#define EC_F_EC_GFP_NISTP224_POINT_GET_AFFINE_COORDINATES 1015,39879
#define EC_F_EC_GFP_NISTP256_GROUP_SET_CURVE	1016,39941
#define EC_F_EC_GFP_NISTP256_POINTS_MUL	1017,39992
#define EC_F_EC_GFP_NISTP256_POINT_GET_AFFINE_COORDINATES 1018,40039
#define EC_F_EC_GFP_NISTP521_GROUP_SET_CURVE	1019,40101
#define EC_F_EC_GFP_NISTP521_POINTS_MUL	1020,40152
#define EC_F_EC_GFP_NISTP521_POINT_GET_AFFINE_COORDINATES 1021,40199
#define EC_F_EC_GFP_NIST_FIELD_MUL	1022,40261
#define EC_F_EC_GFP_NIST_FIELD_SQR	1023,40303
#define EC_F_EC_GFP_NIST_GROUP_SET_CURVE	1024,40345
#define EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT	1025,40392
#define EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE	1026,40449
#define EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE_GFP	1027,40498
#define EC_F_EC_GFP_SIMPLE_GROUP_SET_GENERATOR	1028,40551
#define EC_F_EC_GFP_SIMPLE_MAKE_AFFINE	1029,40604
#define EC_F_EC_GFP_SIMPLE_OCT2POINT	1030,40650
#define EC_F_EC_GFP_SIMPLE_POINT2OCT	1031,40694
#define EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE	1032,40738
#define EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES	1033,40790
#define EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES_GFP 1034,40851
#define EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES	1035,40915
#define EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES_GFP 1036,40976
#define EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES	1037,41040
#define EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES_GFP 1038,41099
#define EC_F_EC_GROUP_CHECK	1039,41161
#define EC_F_EC_GROUP_CHECK_DISCRIMINANT	1040,41197
#define EC_F_EC_GROUP_COPY	1041,41244
#define EC_F_EC_GROUP_GET0_GENERATOR	1042,41279
#define EC_F_EC_GROUP_GET_COFACTOR	1043,41323
#define EC_F_EC_GROUP_GET_CURVE_GF2M	1044,41365
#define EC_F_EC_GROUP_GET_CURVE_GFP	1045,41409
#define EC_F_EC_GROUP_GET_DEGREE	1046,41452
#define EC_F_EC_GROUP_GET_ORDER	1047,41492
#define EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS	1048,41532
#define EC_F_EC_GROUP_GET_TRINOMIAL_BASIS	1049,41582
#define EC_F_EC_GROUP_NEW	1050,41630
#define EC_F_EC_GROUP_NEW_BY_CURVE_NAME	1051,41664
#define EC_F_EC_GROUP_NEW_FROM_DATA	1052,41711
#define EC_F_EC_GROUP_PRECOMPUTE_MULT	1053,41754
#define EC_F_EC_GROUP_SET_CURVE_GF2M	1054,41799
#define EC_F_EC_GROUP_SET_CURVE_GFP	1055,41843
#define EC_F_EC_GROUP_SET_EXTRA_DATA	1056,41886
#define EC_F_EC_GROUP_SET_GENERATOR	1057,41930
#define EC_F_EC_KEY_CHECK_KEY	1058,41973
#define EC_F_EC_KEY_COPY	1059,42011
#define EC_F_EC_KEY_GENERATE_KEY	1060,42044
#define EC_F_EC_KEY_NEW	1061,42084
#define EC_F_EC_KEY_PRINT	1062,42117
#define EC_F_EC_KEY_PRINT_FP	1063,42151
#define EC_F_EC_KEY_SET_PUBLIC_KEY_AFFINE_COORDINATES	1064,42188
#define EC_F_EC_POINTS_MAKE_AFFINE	1065,42247
#define EC_F_EC_POINT_ADD	1066,42289
#define EC_F_EC_POINT_CMP	1067,42323
#define EC_F_EC_POINT_COPY	1068,42357
#define EC_F_EC_POINT_DBL	1069,42392
#define EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M	1070,42426
#define EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP	1071,42481
#define EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP	1072,42535
#define EC_F_EC_POINT_INVERT	1073,42594
#define EC_F_EC_POINT_IS_AT_INFINITY	1074,42631
#define EC_F_EC_POINT_IS_ON_CURVE	1075,42675
#define EC_F_EC_POINT_MAKE_AFFINE	1076,42716
#define EC_F_EC_POINT_MUL	1077,42757
#define EC_F_EC_POINT_NEW	1078,42791
#define EC_F_EC_POINT_OCT2POINT	1079,42825
#define EC_F_EC_POINT_POINT2OCT	1080,42865
#define EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M	1081,42905
#define EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP	1082,42960
#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M	1083,43014
#define EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP	1084,43073
#define EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP	1085,43131
#define EC_F_EC_POINT_SET_TO_INFINITY	1086,43190
#define EC_F_EC_PRE_COMP_DUP	1087,43235
#define EC_F_EC_PRE_COMP_NEW	1088,43272
#define EC_F_EC_WNAF_MUL	1089,43309
#define EC_F_EC_WNAF_PRECOMPUTE_MULT	1090,43342
#define EC_F_I2D_ECPARAMETERS	1091,43386
#define EC_F_I2D_ECPKPARAMETERS	1092,43424
#define EC_F_I2D_ECPRIVATEKEY	1093,43464
#define EC_F_I2O_ECPUBLICKEY	1094,43502
#define EC_F_NISTP224_PRE_COMP_NEW	1095,43539
#define EC_F_NISTP256_PRE_COMP_NEW	1096,43581
#define EC_F_NISTP521_PRE_COMP_NEW	1097,43623
#define EC_F_O2I_ECPUBLICKEY	1098,43665
#define EC_F_OLD_EC_PRIV_DECODE	1099,43702
#define EC_F_PKEY_EC_CTRL	1100,43742
#define EC_F_PKEY_EC_CTRL_STR	1101,43776
#define EC_F_PKEY_EC_DERIVE	1102,43814
#define EC_F_PKEY_EC_KEYGEN	1103,43850
#define EC_F_PKEY_EC_PARAMGEN	1104,43886
#define EC_F_PKEY_EC_SIGN	1105,43924
#define EC_R_ASN1_ERROR	1108,43979
#define EC_R_ASN1_UNKNOWN_FIELD	1109,44012
#define EC_R_BIGNUM_OUT_OF_RANGE	1110,44052
#define EC_R_BUFFER_TOO_SMALL	1111,44092
#define EC_R_COORDINATES_OUT_OF_RANGE	1112,44130
#define EC_R_D2I_ECPKPARAMETERS_FAILURE	1113,44175
#define EC_R_DECODE_ERROR	1114,44222
#define EC_R_DISCRIMINANT_IS_ZERO	1115,44256
#define EC_R_EC_GROUP_NEW_BY_NAME_FAILURE	1116,44297
#define EC_R_FIELD_TOO_LARGE	1117,44345
#define EC_R_GF2M_NOT_SUPPORTED	1118,44382
#define EC_R_GROUP2PKPARAMETERS_FAILURE	1119,44422
#define EC_R_I2D_ECPKPARAMETERS_FAILURE	1120,44469
#define EC_R_INCOMPATIBLE_OBJECTS	1121,44516
#define EC_R_INVALID_ARGUMENT	1122,44557
#define EC_R_INVALID_COMPRESSED_POINT	1123,44595
#define EC_R_INVALID_COMPRESSION_BIT	1124,44640
#define EC_R_INVALID_CURVE	1125,44684
#define EC_R_INVALID_DIGEST_TYPE	1126,44719
#define EC_R_INVALID_ENCODING	1127,44759
#define EC_R_INVALID_FIELD	1128,44797
#define EC_R_INVALID_FORM	1129,44832
#define EC_R_INVALID_GROUP_ORDER	1130,44866
#define EC_R_INVALID_PENTANOMIAL_BASIS	1131,44906
#define EC_R_INVALID_PRIVATE_KEY	1132,44952
#define EC_R_INVALID_TRINOMIAL_BASIS	1133,44992
#define EC_R_KEYS_NOT_SET	1134,45036
#define EC_R_MISSING_PARAMETERS	1135,45070
#define EC_R_MISSING_PRIVATE_KEY	1136,45110
#define EC_R_NOT_A_NIST_PRIME	1137,45150
#define EC_R_NOT_A_SUPPORTED_NIST_PRIME	1138,45188
#define EC_R_NOT_IMPLEMENTED	1139,45235
#define EC_R_NOT_INITIALIZED	1140,45272
#define EC_R_NO_FIELD_MOD	1141,45309
#define EC_R_NO_PARAMETERS_SET	1142,45343
#define EC_R_PASSED_NULL_PARAMETER	1143,45382
#define EC_R_PKPARAMETERS2GROUP_FAILURE	1144,45424
#define EC_R_POINT_AT_INFINITY	1145,45471
#define EC_R_POINT_IS_NOT_ON_CURVE	1146,45510
#define EC_R_SLOT_FULL	1147,45552
#define EC_R_UNDEFINED_GENERATOR	1148,45584
#define EC_R_UNDEFINED_ORDER	1149,45624
#define EC_R_UNKNOWN_GROUP	1150,45661
#define EC_R_UNKNOWN_ORDER	1151,45696
#define EC_R_UNSUPPORTED_FIELD	1152,45731
#define EC_R_WRONG_CURVE_PARAMETERS	1153,45770
#define EC_R_WRONG_ORDER	1154,45813

crypto/ec/ec2_mult.c,266
static int gf2m_Mdouble(84,3603
static int gf2m_Madd(115,4603
static int gf2m_Mxy(152,5812
static int ec_GF2m_montgomery_point_multiply(217,7699
int ec_GF2m_simple_mul(317,10099
int ec_GF2m_precompute_mult(380,11868
int ec_GF2m_have_precompute_mult(385,11979

crypto/ec/ectest.c,1304
int main(84,3441
#define ABORT 104,3935
#define TIMING_BASE_PT 111,4090
#define TIMING_RAND_PT 112,4115
#define TIMING_SIMUL 113,4140
static void timings(116,4170
#	define UNIT 165,5465
#	define UNIT 169,5610
#	define CLOCKS_PER_SEC 170,5632
static void group_order_tests(196,6402
static void prime_field_tests(238,7801
#define CHAR2_CURVE_TEST_INTERNAL(735,25116
#define CHAR2_CURVE_TEST_INTERNAL(752,25892
#define CHAR2_CURVE_TEST(767,26509
static void char2_field_tests(782,27162
static void internal_curve_test(1217,41294
struct nistp_test_params1277,42586
	const EC_METHOD* (*meth)meth1279,42614
	int degree;1280,42644
	const char *p,p1284,42838
	const char *p, *a,a1284,42838
	const char *p, *a, *b,b1284,42838
	const char *p, *a, *b, *Qx,Qx1284,42838
	const char *p, *a, *b, *Qx, *Qy,Qy1284,42838
	const char *p, *a, *b, *Qx, *Qy, *Gx,Gx1284,42838
	const char *p, *a, *b, *Qx, *Qy, *Gx, *Gy,Gy1284,42838
	const char *p, *a, *b, *Qx, *Qy, *Gx, *Gy, *order,order1284,42838
	const char *p, *a, *b, *Qx, *Qy, *Gx, *Gy, *order, *d;d1284,42838
static const struct nistp_test_params nistp_tests_params[nistp_tests_params1287,42899
void nistp_single_test(1333,45799
void nistp_tests(1436,49172
static const char rnd_seed[rnd_seed1447,49357
int main(1449,49456

crypto/ec/ecp_oct.c,133
int ec_GFp_simple_set_compressed_coordinates(70,3159
size_t ec_GFp_simple_point2oct(199,6397
int ec_GFp_simple_oct2point(325,8922

crypto/ec/ec_mult.c,668
typedef struct ec_pre_comp_st 82,3450
	const EC_GROUP *group;group83,3482
	size_t blocksize;84,3535
	size_t numblocks;85,3595
	size_t w;86,3680
	EC_POINT **points;points87,3722
	size_t num;89,3883
	int references;90,3933
} EC_PRE_COMP;91,3950
static EC_PRE_COMP *ec_pre_comp_new(ec_pre_comp_new98,4167
static void *ec_pre_comp_dup(ec_pre_comp_dup121,4609
static void ec_pre_comp_free(132,4820
static void ec_pre_comp_clear_free(155,5167
static signed char *compute_wNAF(compute_wNAF193,6018
#define EC_window_bits_for_scalar_size(331,9029
int ec_wNAF_mul(346,9346
int ec_wNAF_precompute_mult(765,19617
int ec_wNAF_have_precompute_mult(934,23457

crypto/ec/ec_asn1.c,2886
int EC_GROUP_get_basis_type(66,2839
int EC_GROUP_get_trinomial_basis(87,3286
int EC_GROUP_get_pentanomial_basis(104,3707
typedef struct x9_62_pentanomial_st 130,4348
	long k1;131,4386
	long k2;132,4396
	long k3;133,4406
	} X9_62_PENTANOMIAL;134,4416
typedef struct x9_62_characteristic_two_st 136,4439
	long m;137,4484
	ASN1_OBJECT  *type;type138,4493
		char *ptr;ptr140,4523
		ASN1_NULL    *onBasis;onBasis142,4562
		ASN1_INTEGER *tpBasis;tpBasis144,4613
		X9_62_PENTANOMIAL *ppBasis;ppBasis146,4664
		ASN1_TYPE *other;other148,4716
		} p;149,4736
	} X9_62_CHARACTERISTIC_TWO;150,4743
typedef struct x9_62_fieldid_st 152,4773
        ASN1_OBJECT *fieldType;fieldType153,4807
		char *ptr;ptr155,4848
		ASN1_INTEGER *prime;prime157,4891
		X9_62_CHARACTERISTIC_TWO *char_two;char_two159,4957
		ASN1_TYPE *other;other161,5017
		} p;162,5037
	} X9_62_FIELDID;163,5044
typedef struct x9_62_curve_st 165,5063
        ASN1_OCTET_STRING *a;a166,5095
        ASN1_OCTET_STRING *b;b167,5125
        ASN1_BIT_STRING   *seed;seed168,5155
        } X9_62_CURVE;169,5188
typedef struct ec_parameters_st 171,5212
        long              version;172,5246
        X9_62_FIELDID     *fieldID;fieldID173,5281
        X9_62_CURVE       *curve;curve174,5317
        ASN1_OCTET_STRING *base;base175,5351
        ASN1_INTEGER      *order;order176,5384
        ASN1_INTEGER      *cofactor;cofactor177,5418
        } ECPARAMETERS;178,5455
struct ecpk_parameters_st 180,5480
	int	type;181,5508
		ASN1_OBJECT  *named_curve;named_curve183,5528
		ECPARAMETERS *parameters;parameters184,5557
		ASN1_NULL    *implicitlyCA;implicitlyCA185,5585
	} value;186,5615
typedef struct ec_privatekey_st 190,5674
	long              version;191,5708
	ASN1_OCTET_STRING *privateKey;privateKey192,5736
        ECPKPARAMETERS    *parameters;parameters193,5768
	ASN1_BIT_STRING   *publicKey;publicKey194,5807
	} EC_PRIVATEKEY;195,5838
} ASN1_SEQUENCE_END(202,6058
} ASN1_SEQUENCE_END(219,6889
} ASN1_SEQUENCE_END(234,7547
} ASN1_SEQUENCE_END(240,7758
} ASN1_SEQUENCE_END(249,8117
} ASN1_CHOICE_END(258,8457
} ASN1_SEQUENCE_END(269,8911
static int ec_asn1_group2curve(436,13246
static ECPARAMETERS *ec_asn1_group2parameters(ec_asn1_group2parameters570,16074
ECPKPARAMETERS *ec_asn1_group2pkparameters(ec_asn1_group2pkparameters691,18686
static EC_GROUP *ec_asn1_parameters2group(ec_asn1_parameters2group747,19840
EC_GROUP *ec_asn1_pkparameters2group(ec_asn1_pkparameters2group1017,26040
EC_GROUP *d2i_ECPKParameters(d2i_ECPKParameters1066,27131
int i2d_ECPKParameters(1095,27752
EC_KEY *d2i_ECPrivateKey(d2i_ECPrivateKey1116,28234
int	i2d_ECPrivateKey(1224,30418
int i2d_ECParameters(1334,32845
EC_KEY *d2i_ECParameters(d2i_ECParameters1344,33045
EC_KEY *o2i_ECPublicKey(o2i_ECPublicKey1376,33586
int i2o_ECPublicKey(1405,34338

crypto/ec/ec_lib.c,2465
static const char EC_version[EC_version71,3102
EC_GROUP *EC_GROUP_new(EC_GROUP_new76,3203
void EC_GROUP_free(123,3947
void EC_GROUP_clear_free(144,4326
int EC_GROUP_copy(171,4921
EC_GROUP *EC_GROUP_dup(EC_GROUP_dup250,6552
const EC_METHOD *EC_GROUP_method_of(EC_GROUP_method_of272,6855
int EC_METHOD_get_field_type(278,6943
int EC_GROUP_set_generator(284,7050
const EC_POINT *EC_GROUP_get0_generator(EC_GROUP_get0_generator313,7708
int EC_GROUP_get_order(319,7805
int EC_GROUP_get_cofactor(328,7965
void EC_GROUP_set_curve_name(337,8148
int EC_GROUP_get_curve_name(343,8237
void EC_GROUP_set_asn1_flag(349,8323
int EC_GROUP_get_asn1_flag(355,8412
void EC_GROUP_set_point_conversion_form(361,8496
point_conversion_form_t EC_GROUP_get_point_conversion_form(368,8658
size_t EC_GROUP_set_seed(374,8774
unsigned char *EC_GROUP_get0_seed(EC_GROUP_get0_seed395,9121
size_t EC_GROUP_get_seed_len(401,9207
int EC_GROUP_set_curve_GFp(407,9292
int EC_GROUP_get_curve_GFp(418,9600
int EC_GROUP_set_curve_GF2m(429,9919
int EC_GROUP_get_curve_GF2m(440,10229
int EC_GROUP_get_degree(451,10533
int EC_GROUP_check_discriminant(462,10765
int EC_GROUP_cmp(473,11047
int EC_EX_DATA_set_data(549,12781
void *EC_EX_DATA_get_data(EC_EX_DATA_get_data586,13540
void EC_EX_DATA_free_data(601,13940
void EC_EX_DATA_clear_free_data(625,14474
void EC_EX_DATA_free_all_data(649,15020
void EC_EX_DATA_clear_free_all_data(670,15318
EC_POINT *EC_POINT_new(EC_POINT_new693,15631
void EC_POINT_free(727,16173
void EC_POINT_clear_free(737,16335
int EC_POINT_copy(750,16632
EC_POINT *EC_POINT_dup(EC_POINT_dup768,16992
const EC_METHOD *EC_POINT_method_of(EC_POINT_method_of787,17268
int EC_POINT_set_to_infinity(793,17356
int EC_POINT_set_Jprojective_coordinates_GFp(809,17752
int EC_POINT_get_Jprojective_coordinates_GFp(826,18307
int EC_POINT_set_affine_coordinates_GFp(843,18850
int EC_POINT_set_affine_coordinates_GF2m(860,19375
int EC_POINT_get_affine_coordinates_GFp(877,19886
int EC_POINT_get_affine_coordinates_GF2m(894,20405
int EC_POINT_add(911,20910
int EC_POINT_dbl(927,21334
int EC_POINT_invert(943,21712
int EC_POINT_is_at_infinity(959,22054
int EC_POINT_is_on_curve(975,22439
int EC_POINT_cmp(991,22827
int EC_POINT_make_affine(1007,23223
int EC_POINTs_make_affine(1023,23605
int EC_POINTs_mul(1050,24251
int EC_POINT_mul(1060,24598
int EC_GROUP_precompute_mult(1074,25001
int EC_GROUP_have_precompute_mult(1086,25310

crypto/ex_data.c,1677
struct st_CRYPTO_EX_DATA_IMPL145,7663
	int (*cb_new_class)cb_new_class150,7778
	void (*cb_cleanup)cb_cleanup152,7858
	int (*cb_get_new_index)cb_get_new_index156,7986
	int (*cb_new_ex_data)cb_new_ex_data160,8191
	int (*cb_dup_ex_data)cb_dup_ex_data163,8329
	void (*cb_free_ex_data)cb_free_ex_data166,8464
static const CRYPTO_EX_DATA_IMPL *impl impl171,8590
#define EX_IMPL(175,8763
static CRYPTO_EX_DATA_IMPL impl_default 189,9311
static void impl_check(201,9562
#define IMPL_CHECK 210,9847
const CRYPTO_EX_DATA_IMPL *CRYPTO_get_ex_data_implementation(CRYPTO_get_ex_data_implementation213,9951
int CRYPTO_set_ex_data_implementation(218,10050
typedef struct st_ex_class_item 238,10690
	int class_index;239,10724
	STACK_OF(240,10742
} EX_CLASS_ITEM;242,10796
static int ex_class 245,10874
static LHASH_OF(249,11003
static IMPLEMENT_LHASH_HASH_FN(256,11203
static IMPLEMENT_LHASH_COMP_FN(262,11389
#define EX_DATA_CHECK(279,11903
static void def_cleanup_util_cb(282,12053
static void def_cleanup_cb(290,12320
static EX_CLASS_ITEM *def_get_class(def_get_class299,12621
static int def_add_index(333,13506
static int int_new_class(370,14515
static void int_cleanup(379,14677
static int int_get_new_index(388,14852
static int int_new_ex_data(402,15409
static int int_dup_ex_data(445,16413
static void int_free_ex_data(491,17557
int CRYPTO_ex_data_new_class(541,18836
void CRYPTO_cleanup_all_ex_data(551,19164
int CRYPTO_get_ex_new_index(558,19300
int CRYPTO_new_ex_data(572,19744
int CRYPTO_dup_ex_data(580,20017
void CRYPTO_free_ex_data(589,20307
int CRYPTO_set_ex_data(597,20576
void *CRYPTO_get_ex_data(CRYPTO_get_ex_data626,21169

crypto/threads/th-lock.c,978
#define THREAD_STACK_SIZE 106,4326
static HANDLE *lock_cs;lock_cs110,4389
void CRYPTO_thread_setup(112,4414
static void CRYPTO_thread_cleanup(127,4736
void win32_locking_callback(137,4917
#define USE_MUTEX153,5167
static mutex_t *lock_cs;lock_cs156,5203
static rwlock_t *lock_cs;lock_cs158,5234
static long *lock_count;lock_count160,5267
void CRYPTO_thread_setup(162,5293
void CRYPTO_thread_cleanup(186,5884
void solaris_locking_callback(203,6161
unsigned long solaris_thread_id(240,6860
static usptr_t *arena;arena252,7042
static usema_t **lock_cs;lock_cs253,7065
void CRYPTO_thread_setup(255,7092
void CRYPTO_thread_cleanup(280,7670
void irix_locking_callback(296,7936
unsigned long irix_thread_id(308,8111
static pthread_mutex_t *lock_cs;lock_cs320,8282
static long *lock_count;lock_count321,8315
void CRYPTO_thread_setup(323,8341
void thread_cleanup(339,8765
void pthreads_locking_callback(352,8980
unsigned long pthreads_thread_id(378,9516

crypto/threads/mttest.c,2345
#  define __int64 82,3588
#define APPS_WIN1696,3887
#define TEST_SERVER_CERT 101,3973
#define TEST_CLIENT_CERT 102,4025
#define TEST_SERVER_CERT 104,4083
#define TEST_CLIENT_CERT 105,4132
#define MAX_THREAD_NUMBER	108,4189
static MPKMutex *lock_cs;lock_cs129,5031
static MPKSema ThreadSem;130,5057
static long *lock_count;lock_count131,5083
BIO *bio_err=bio_err134,5116
BIO *bio_stdout=bio_stdout135,5135
static char *cipher=cipher137,5158
int verbose=138,5184
static int s_nbio=140,5214
int thread_number=143,5243
int number_of_loops=144,5265
int reconnect=145,5289
int cache_stats=146,5306
static const char rnd_seed[rnd_seed148,5326
static void print_stats(151,5449
static void sv_usage(168,6120
int main(186,6969
#define W_READ	365,11021
#define W_WRITE	366,11038
#define C_DONE	367,11056
#define S_DONE	368,11073
int ndoit(370,11091
int doit(419,11983
int MS_CALLBACK verify_callback(699,17504
#define THREAD_STACK_SIZE 720,17904
static HANDLE *lock_cs;lock_cs724,17967
void thread_setup(726,17992
void thread_cleanup(740,18295
void win32_locking_callback(750,18462
void do_threads(762,18664
static mutex_t *lock_cs;lock_cs817,19835
static long *lock_count;lock_count819,19891
void thread_setup(821,19917
void thread_cleanup(838,20383
void solaris_locking_callback(859,20767
void do_threads(891,21417
unsigned long solaris_thread_id(920,21954
static usptr_t *arena;arena932,22101
static usema_t **lock_cs;lock_cs933,22124
void thread_setup(935,22151
void thread_cleanup(960,22722
void irix_locking_callback(976,22981
void do_threads(990,23214
unsigned long irix_thread_id(1015,23653
static pthread_mutex_t *lock_cs;lock_cs1026,23795
static long *lock_count;lock_count1027,23828
void thread_setup(1029,23854
void thread_cleanup(1045,24271
void pthreads_locking_callback(1063,24625
void do_threads(1089,25161
unsigned long pthreads_thread_id(1117,25679
void thread_setup(1131,25849
void thread_cleanup(1149,26347
void netware_locking_callback(1170,26749
void do_threads(1181,26969
unsigned long netware_thread_id(1206,27539
static BLocker** lock_cs;1219,27721
static long* lock_count;1220,27747
void thread_setup(1222,27773
void thread_cleanup(1238,28192
void beos_locking_callback(1256,28527
void do_threads(1275,28893
unsigned long beos_thread_id(1302,29439

crypto/stack/safestack.h,96958
#define HEADER_SAFESTACK_H56,2657
#define CHECKED_PTR_OF(61,2736
#define CHECKED_STACK_OF(70,2980
#define CHECKED_SK_FREE_FUNC(73,3062
#define CHECKED_SK_FREE_FUNC2(76,3160
#define CHECKED_SK_CMP_FUNC(79,3257
#define STACK_OF(83,3411
#define PREDECLARE_STACK_OF(84,3457
#define DECLARE_STACK_OF(86,3508
#define DECLARE_SPECIAL_STACK_OF(91,3593
#define IMPLEMENT_STACK_OF(97,3694
typedef char *OPENSSL_STRING;OPENSSL_STRING113,4285
typedef const char *OPENSSL_CSTRING;OPENSSL_CSTRING115,4316
DECLARE_SPECIAL_STACK_OF(125,4703
typedef void *OPENSSL_BLOCK;OPENSSL_BLOCK131,4892
#define SKM_sk_new(136,5081
#define SKM_sk_new_null(138,5173
#define SKM_sk_free(140,5240
#define SKM_sk_num(142,5309
#define SKM_sk_value(144,5376
#define SKM_sk_set(146,5462
#define SKM_sk_zero(148,5565
#define SKM_sk_push(150,5634
#define SKM_sk_unshift(152,5735
#define SKM_sk_find(154,5842
#define SKM_sk_find_ex(156,5943
#define SKM_sk_delete(159,6057
#define SKM_sk_delete_ptr(161,6144
#define SKM_sk_insert(163,6265
#define SKM_sk_set_cmp_func(165,6375
#define SKM_sk_dup(168,6555
#define SKM_sk_pop_free(170,6640
#define SKM_sk_shift(172,6767
#define SKM_sk_pop(174,6846
#define SKM_sk_sort(176,6921
#define SKM_sk_is_sorted(178,6990
#define	SKM_ASN1_SET_OF_d2i(181,7070
#define	SKM_ASN1_SET_OF_i2d(189,7392
#define	SKM_ASN1_seq_pack(194,7617
#define	SKM_ASN1_seq_unpack(198,7774
#define SKM_PKCS12_decrypt_d2i(201,7958
#define sk_ACCESS_DESCRIPTION_new(208,8290
#define sk_ACCESS_DESCRIPTION_new_null(209,8367
#define sk_ACCESS_DESCRIPTION_free(210,8444
#define sk_ACCESS_DESCRIPTION_num(211,8521
#define sk_ACCESS_DESCRIPTION_value(212,8596
#define sk_ACCESS_DESCRIPTION_set(213,8683
#define sk_ACCESS_DESCRIPTION_zero(214,8778
#define sk_ACCESS_DESCRIPTION_push(215,8855
#define sk_ACCESS_DESCRIPTION_unshift(216,8944
#define sk_ACCESS_DESCRIPTION_find(217,9039
#define sk_ACCESS_DESCRIPTION_find_ex(218,9128
#define sk_ACCESS_DESCRIPTION_delete(219,9223
#define sk_ACCESS_DESCRIPTION_delete_ptr(220,9312
#define sk_ACCESS_DESCRIPTION_insert(221,9413
#define sk_ACCESS_DESCRIPTION_set_cmp_func(222,9514
#define sk_ACCESS_DESCRIPTION_dup(223,9619
#define sk_ACCESS_DESCRIPTION_pop_free(224,9692
#define sk_ACCESS_DESCRIPTION_shift(225,9801
#define sk_ACCESS_DESCRIPTION_pop(226,9880
#define sk_ACCESS_DESCRIPTION_sort(227,9955
#define sk_ACCESS_DESCRIPTION_is_sorted(228,10032
#define sk_ASIdOrRange_new(230,10120
#define sk_ASIdOrRange_new_null(231,10183
#define sk_ASIdOrRange_free(232,10246
#define sk_ASIdOrRange_num(233,10309
#define sk_ASIdOrRange_value(234,10370
#define sk_ASIdOrRange_set(235,10443
#define sk_ASIdOrRange_zero(236,10524
#define sk_ASIdOrRange_push(237,10587
#define sk_ASIdOrRange_unshift(238,10662
#define sk_ASIdOrRange_find(239,10743
#define sk_ASIdOrRange_find_ex(240,10818
#define sk_ASIdOrRange_delete(241,10899
#define sk_ASIdOrRange_delete_ptr(242,10974
#define sk_ASIdOrRange_insert(243,11061
#define sk_ASIdOrRange_set_cmp_func(244,11148
#define sk_ASIdOrRange_dup(245,11239
#define sk_ASIdOrRange_pop_free(246,11298
#define sk_ASIdOrRange_shift(247,11393
#define sk_ASIdOrRange_pop(248,11458
#define sk_ASIdOrRange_sort(249,11519
#define sk_ASIdOrRange_is_sorted(250,11582
#define sk_ASN1_GENERALSTRING_new(252,11656
#define sk_ASN1_GENERALSTRING_new_null(253,11733
#define sk_ASN1_GENERALSTRING_free(254,11810
#define sk_ASN1_GENERALSTRING_num(255,11887
#define sk_ASN1_GENERALSTRING_value(256,11962
#define sk_ASN1_GENERALSTRING_set(257,12049
#define sk_ASN1_GENERALSTRING_zero(258,12144
#define sk_ASN1_GENERALSTRING_push(259,12221
#define sk_ASN1_GENERALSTRING_unshift(260,12310
#define sk_ASN1_GENERALSTRING_find(261,12405
#define sk_ASN1_GENERALSTRING_find_ex(262,12494
#define sk_ASN1_GENERALSTRING_delete(263,12589
#define sk_ASN1_GENERALSTRING_delete_ptr(264,12678
#define sk_ASN1_GENERALSTRING_insert(265,12779
#define sk_ASN1_GENERALSTRING_set_cmp_func(266,12880
#define sk_ASN1_GENERALSTRING_dup(267,12985
#define sk_ASN1_GENERALSTRING_pop_free(268,13058
#define sk_ASN1_GENERALSTRING_shift(269,13167
#define sk_ASN1_GENERALSTRING_pop(270,13246
#define sk_ASN1_GENERALSTRING_sort(271,13321
#define sk_ASN1_GENERALSTRING_is_sorted(272,13398
#define sk_ASN1_INTEGER_new(274,13486
#define sk_ASN1_INTEGER_new_null(275,13551
#define sk_ASN1_INTEGER_free(276,13616
#define sk_ASN1_INTEGER_num(277,13681
#define sk_ASN1_INTEGER_value(278,13744
#define sk_ASN1_INTEGER_set(279,13819
#define sk_ASN1_INTEGER_zero(280,13902
#define sk_ASN1_INTEGER_push(281,13967
#define sk_ASN1_INTEGER_unshift(282,14044
#define sk_ASN1_INTEGER_find(283,14127
#define sk_ASN1_INTEGER_find_ex(284,14204
#define sk_ASN1_INTEGER_delete(285,14287
#define sk_ASN1_INTEGER_delete_ptr(286,14364
#define sk_ASN1_INTEGER_insert(287,14453
#define sk_ASN1_INTEGER_set_cmp_func(288,14542
#define sk_ASN1_INTEGER_dup(289,14635
#define sk_ASN1_INTEGER_pop_free(290,14696
#define sk_ASN1_INTEGER_shift(291,14793
#define sk_ASN1_INTEGER_pop(292,14860
#define sk_ASN1_INTEGER_sort(293,14923
#define sk_ASN1_INTEGER_is_sorted(294,14988
#define sk_ASN1_OBJECT_new(296,15064
#define sk_ASN1_OBJECT_new_null(297,15127
#define sk_ASN1_OBJECT_free(298,15190
#define sk_ASN1_OBJECT_num(299,15253
#define sk_ASN1_OBJECT_value(300,15314
#define sk_ASN1_OBJECT_set(301,15387
#define sk_ASN1_OBJECT_zero(302,15468
#define sk_ASN1_OBJECT_push(303,15531
#define sk_ASN1_OBJECT_unshift(304,15606
#define sk_ASN1_OBJECT_find(305,15687
#define sk_ASN1_OBJECT_find_ex(306,15762
#define sk_ASN1_OBJECT_delete(307,15843
#define sk_ASN1_OBJECT_delete_ptr(308,15918
#define sk_ASN1_OBJECT_insert(309,16005
#define sk_ASN1_OBJECT_set_cmp_func(310,16092
#define sk_ASN1_OBJECT_dup(311,16183
#define sk_ASN1_OBJECT_pop_free(312,16242
#define sk_ASN1_OBJECT_shift(313,16337
#define sk_ASN1_OBJECT_pop(314,16402
#define sk_ASN1_OBJECT_sort(315,16463
#define sk_ASN1_OBJECT_is_sorted(316,16526
#define sk_ASN1_STRING_TABLE_new(318,16600
#define sk_ASN1_STRING_TABLE_new_null(319,16675
#define sk_ASN1_STRING_TABLE_free(320,16750
#define sk_ASN1_STRING_TABLE_num(321,16825
#define sk_ASN1_STRING_TABLE_value(322,16898
#define sk_ASN1_STRING_TABLE_set(323,16983
#define sk_ASN1_STRING_TABLE_zero(324,17076
#define sk_ASN1_STRING_TABLE_push(325,17151
#define sk_ASN1_STRING_TABLE_unshift(326,17238
#define sk_ASN1_STRING_TABLE_find(327,17331
#define sk_ASN1_STRING_TABLE_find_ex(328,17418
#define sk_ASN1_STRING_TABLE_delete(329,17511
#define sk_ASN1_STRING_TABLE_delete_ptr(330,17598
#define sk_ASN1_STRING_TABLE_insert(331,17697
#define sk_ASN1_STRING_TABLE_set_cmp_func(332,17796
#define sk_ASN1_STRING_TABLE_dup(333,17899
#define sk_ASN1_STRING_TABLE_pop_free(334,17970
#define sk_ASN1_STRING_TABLE_shift(335,18077
#define sk_ASN1_STRING_TABLE_pop(336,18154
#define sk_ASN1_STRING_TABLE_sort(337,18227
#define sk_ASN1_STRING_TABLE_is_sorted(338,18302
#define sk_ASN1_TYPE_new(340,18388
#define sk_ASN1_TYPE_new_null(341,18447
#define sk_ASN1_TYPE_free(342,18506
#define sk_ASN1_TYPE_num(343,18565
#define sk_ASN1_TYPE_value(344,18622
#define sk_ASN1_TYPE_set(345,18691
#define sk_ASN1_TYPE_zero(346,18768
#define sk_ASN1_TYPE_push(347,18827
#define sk_ASN1_TYPE_unshift(348,18898
#define sk_ASN1_TYPE_find(349,18975
#define sk_ASN1_TYPE_find_ex(350,19046
#define sk_ASN1_TYPE_delete(351,19123
#define sk_ASN1_TYPE_delete_ptr(352,19194
#define sk_ASN1_TYPE_insert(353,19277
#define sk_ASN1_TYPE_set_cmp_func(354,19360
#define sk_ASN1_TYPE_dup(355,19447
#define sk_ASN1_TYPE_pop_free(356,19502
#define sk_ASN1_TYPE_shift(357,19593
#define sk_ASN1_TYPE_pop(358,19654
#define sk_ASN1_TYPE_sort(359,19711
#define sk_ASN1_TYPE_is_sorted(360,19770
#define sk_ASN1_UTF8STRING_new(362,19840
#define sk_ASN1_UTF8STRING_new_null(363,19911
#define sk_ASN1_UTF8STRING_free(364,19982
#define sk_ASN1_UTF8STRING_num(365,20053
#define sk_ASN1_UTF8STRING_value(366,20122
#define sk_ASN1_UTF8STRING_set(367,20203
#define sk_ASN1_UTF8STRING_zero(368,20292
#define sk_ASN1_UTF8STRING_push(369,20363
#define sk_ASN1_UTF8STRING_unshift(370,20446
#define sk_ASN1_UTF8STRING_find(371,20535
#define sk_ASN1_UTF8STRING_find_ex(372,20618
#define sk_ASN1_UTF8STRING_delete(373,20707
#define sk_ASN1_UTF8STRING_delete_ptr(374,20790
#define sk_ASN1_UTF8STRING_insert(375,20885
#define sk_ASN1_UTF8STRING_set_cmp_func(376,20980
#define sk_ASN1_UTF8STRING_dup(377,21079
#define sk_ASN1_UTF8STRING_pop_free(378,21146
#define sk_ASN1_UTF8STRING_shift(379,21249
#define sk_ASN1_UTF8STRING_pop(380,21322
#define sk_ASN1_UTF8STRING_sort(381,21391
#define sk_ASN1_UTF8STRING_is_sorted(382,21462
#define sk_ASN1_VALUE_new(384,21544
#define sk_ASN1_VALUE_new_null(385,21605
#define sk_ASN1_VALUE_free(386,21666
#define sk_ASN1_VALUE_num(387,21727
#define sk_ASN1_VALUE_value(388,21786
#define sk_ASN1_VALUE_set(389,21857
#define sk_ASN1_VALUE_zero(390,21936
#define sk_ASN1_VALUE_push(391,21997
#define sk_ASN1_VALUE_unshift(392,22070
#define sk_ASN1_VALUE_find(393,22149
#define sk_ASN1_VALUE_find_ex(394,22222
#define sk_ASN1_VALUE_delete(395,22301
#define sk_ASN1_VALUE_delete_ptr(396,22374
#define sk_ASN1_VALUE_insert(397,22459
#define sk_ASN1_VALUE_set_cmp_func(398,22544
#define sk_ASN1_VALUE_dup(399,22633
#define sk_ASN1_VALUE_pop_free(400,22690
#define sk_ASN1_VALUE_shift(401,22783
#define sk_ASN1_VALUE_pop(402,22846
#define sk_ASN1_VALUE_sort(403,22905
#define sk_ASN1_VALUE_is_sorted(404,22966
#define sk_BIO_new(406,23038
#define sk_BIO_new_null(407,23085
#define sk_BIO_free(408,23132
#define sk_BIO_num(409,23179
#define sk_BIO_value(410,23224
#define sk_BIO_set(411,23281
#define sk_BIO_zero(412,23346
#define sk_BIO_push(413,23393
#define sk_BIO_unshift(414,23452
#define sk_BIO_find(415,23517
#define sk_BIO_find_ex(416,23576
#define sk_BIO_delete(417,23641
#define sk_BIO_delete_ptr(418,23700
#define sk_BIO_insert(419,23771
#define sk_BIO_set_cmp_func(420,23842
#define sk_BIO_dup(421,23917
#define sk_BIO_pop_free(422,23960
#define sk_BIO_shift(423,24039
#define sk_BIO_pop(424,24088
#define sk_BIO_sort(425,24133
#define sk_BIO_is_sorted(426,24180
#define sk_BY_DIR_ENTRY_new(428,24238
#define sk_BY_DIR_ENTRY_new_null(429,24303
#define sk_BY_DIR_ENTRY_free(430,24368
#define sk_BY_DIR_ENTRY_num(431,24433
#define sk_BY_DIR_ENTRY_value(432,24496
#define sk_BY_DIR_ENTRY_set(433,24571
#define sk_BY_DIR_ENTRY_zero(434,24654
#define sk_BY_DIR_ENTRY_push(435,24719
#define sk_BY_DIR_ENTRY_unshift(436,24796
#define sk_BY_DIR_ENTRY_find(437,24879
#define sk_BY_DIR_ENTRY_find_ex(438,24956
#define sk_BY_DIR_ENTRY_delete(439,25039
#define sk_BY_DIR_ENTRY_delete_ptr(440,25116
#define sk_BY_DIR_ENTRY_insert(441,25205
#define sk_BY_DIR_ENTRY_set_cmp_func(442,25294
#define sk_BY_DIR_ENTRY_dup(443,25387
#define sk_BY_DIR_ENTRY_pop_free(444,25448
#define sk_BY_DIR_ENTRY_shift(445,25545
#define sk_BY_DIR_ENTRY_pop(446,25612
#define sk_BY_DIR_ENTRY_sort(447,25675
#define sk_BY_DIR_ENTRY_is_sorted(448,25740
#define sk_BY_DIR_HASH_new(450,25816
#define sk_BY_DIR_HASH_new_null(451,25879
#define sk_BY_DIR_HASH_free(452,25942
#define sk_BY_DIR_HASH_num(453,26005
#define sk_BY_DIR_HASH_value(454,26066
#define sk_BY_DIR_HASH_set(455,26139
#define sk_BY_DIR_HASH_zero(456,26220
#define sk_BY_DIR_HASH_push(457,26283
#define sk_BY_DIR_HASH_unshift(458,26358
#define sk_BY_DIR_HASH_find(459,26439
#define sk_BY_DIR_HASH_find_ex(460,26514
#define sk_BY_DIR_HASH_delete(461,26595
#define sk_BY_DIR_HASH_delete_ptr(462,26670
#define sk_BY_DIR_HASH_insert(463,26757
#define sk_BY_DIR_HASH_set_cmp_func(464,26844
#define sk_BY_DIR_HASH_dup(465,26935
#define sk_BY_DIR_HASH_pop_free(466,26994
#define sk_BY_DIR_HASH_shift(467,27089
#define sk_BY_DIR_HASH_pop(468,27154
#define sk_BY_DIR_HASH_sort(469,27215
#define sk_BY_DIR_HASH_is_sorted(470,27278
#define sk_CMS_CertificateChoices_new(472,27352
#define sk_CMS_CertificateChoices_new_null(473,27437
#define sk_CMS_CertificateChoices_free(474,27522
#define sk_CMS_CertificateChoices_num(475,27607
#define sk_CMS_CertificateChoices_value(476,27690
#define sk_CMS_CertificateChoices_set(477,27785
#define sk_CMS_CertificateChoices_zero(478,27888
#define sk_CMS_CertificateChoices_push(479,27973
#define sk_CMS_CertificateChoices_unshift(480,28070
#define sk_CMS_CertificateChoices_find(481,28173
#define sk_CMS_CertificateChoices_find_ex(482,28270
#define sk_CMS_CertificateChoices_delete(483,28373
#define sk_CMS_CertificateChoices_delete_ptr(484,28470
#define sk_CMS_CertificateChoices_insert(485,28579
#define sk_CMS_CertificateChoices_set_cmp_func(486,28688
#define sk_CMS_CertificateChoices_dup(487,28801
#define sk_CMS_CertificateChoices_pop_free(488,28882
#define sk_CMS_CertificateChoices_shift(489,28999
#define sk_CMS_CertificateChoices_pop(490,29086
#define sk_CMS_CertificateChoices_sort(491,29169
#define sk_CMS_CertificateChoices_is_sorted(492,29254
#define sk_CMS_RecipientInfo_new(494,29350
#define sk_CMS_RecipientInfo_new_null(495,29425
#define sk_CMS_RecipientInfo_free(496,29500
#define sk_CMS_RecipientInfo_num(497,29575
#define sk_CMS_RecipientInfo_value(498,29648
#define sk_CMS_RecipientInfo_set(499,29733
#define sk_CMS_RecipientInfo_zero(500,29826
#define sk_CMS_RecipientInfo_push(501,29901
#define sk_CMS_RecipientInfo_unshift(502,29988
#define sk_CMS_RecipientInfo_find(503,30081
#define sk_CMS_RecipientInfo_find_ex(504,30168
#define sk_CMS_RecipientInfo_delete(505,30261
#define sk_CMS_RecipientInfo_delete_ptr(506,30348
#define sk_CMS_RecipientInfo_insert(507,30447
#define sk_CMS_RecipientInfo_set_cmp_func(508,30546
#define sk_CMS_RecipientInfo_dup(509,30649
#define sk_CMS_RecipientInfo_pop_free(510,30720
#define sk_CMS_RecipientInfo_shift(511,30827
#define sk_CMS_RecipientInfo_pop(512,30904
#define sk_CMS_RecipientInfo_sort(513,30977
#define sk_CMS_RecipientInfo_is_sorted(514,31052
#define sk_CMS_RevocationInfoChoice_new(516,31138
#define sk_CMS_RevocationInfoChoice_new_null(517,31227
#define sk_CMS_RevocationInfoChoice_free(518,31316
#define sk_CMS_RevocationInfoChoice_num(519,31405
#define sk_CMS_RevocationInfoChoice_value(520,31492
#define sk_CMS_RevocationInfoChoice_set(521,31591
#define sk_CMS_RevocationInfoChoice_zero(522,31698
#define sk_CMS_RevocationInfoChoice_push(523,31787
#define sk_CMS_RevocationInfoChoice_unshift(524,31888
#define sk_CMS_RevocationInfoChoice_find(525,31995
#define sk_CMS_RevocationInfoChoice_find_ex(526,32096
#define sk_CMS_RevocationInfoChoice_delete(527,32203
#define sk_CMS_RevocationInfoChoice_delete_ptr(528,32304
#define sk_CMS_RevocationInfoChoice_insert(529,32417
#define sk_CMS_RevocationInfoChoice_set_cmp_func(530,32530
#define sk_CMS_RevocationInfoChoice_dup(531,32647
#define sk_CMS_RevocationInfoChoice_pop_free(532,32732
#define sk_CMS_RevocationInfoChoice_shift(533,32853
#define sk_CMS_RevocationInfoChoice_pop(534,32944
#define sk_CMS_RevocationInfoChoice_sort(535,33031
#define sk_CMS_RevocationInfoChoice_is_sorted(536,33120
#define sk_CMS_SignerInfo_new(538,33220
#define sk_CMS_SignerInfo_new_null(539,33289
#define sk_CMS_SignerInfo_free(540,33358
#define sk_CMS_SignerInfo_num(541,33427
#define sk_CMS_SignerInfo_value(542,33494
#define sk_CMS_SignerInfo_set(543,33573
#define sk_CMS_SignerInfo_zero(544,33660
#define sk_CMS_SignerInfo_push(545,33729
#define sk_CMS_SignerInfo_unshift(546,33810
#define sk_CMS_SignerInfo_find(547,33897
#define sk_CMS_SignerInfo_find_ex(548,33978
#define sk_CMS_SignerInfo_delete(549,34065
#define sk_CMS_SignerInfo_delete_ptr(550,34146
#define sk_CMS_SignerInfo_insert(551,34239
#define sk_CMS_SignerInfo_set_cmp_func(552,34332
#define sk_CMS_SignerInfo_dup(553,34429
#define sk_CMS_SignerInfo_pop_free(554,34494
#define sk_CMS_SignerInfo_shift(555,34595
#define sk_CMS_SignerInfo_pop(556,34666
#define sk_CMS_SignerInfo_sort(557,34733
#define sk_CMS_SignerInfo_is_sorted(558,34802
#define sk_CMS_TimeStampAndCRL_new(560,34882
#define sk_CMS_TimeStampAndCRL_new_null(561,34961
#define sk_CMS_TimeStampAndCRL_free(562,35040
#define sk_CMS_TimeStampAndCRL_num(563,35119
#define sk_CMS_TimeStampAndCRL_value(564,35196
#define sk_CMS_TimeStampAndCRL_set(565,35285
#define sk_CMS_TimeStampAndCRL_zero(566,35382
#define sk_CMS_TimeStampAndCRL_push(567,35461
#define sk_CMS_TimeStampAndCRL_unshift(568,35552
#define sk_CMS_TimeStampAndCRL_find(569,35649
#define sk_CMS_TimeStampAndCRL_find_ex(570,35740
#define sk_CMS_TimeStampAndCRL_delete(571,35837
#define sk_CMS_TimeStampAndCRL_delete_ptr(572,35928
#define sk_CMS_TimeStampAndCRL_insert(573,36031
#define sk_CMS_TimeStampAndCRL_set_cmp_func(574,36134
#define sk_CMS_TimeStampAndCRL_dup(575,36241
#define sk_CMS_TimeStampAndCRL_pop_free(576,36316
#define sk_CMS_TimeStampAndCRL_shift(577,36427
#define sk_CMS_TimeStampAndCRL_pop(578,36508
#define sk_CMS_TimeStampAndCRL_sort(579,36585
#define sk_CMS_TimeStampAndCRL_is_sorted(580,36664
#define sk_CONF_IMODULE_new(582,36754
#define sk_CONF_IMODULE_new_null(583,36819
#define sk_CONF_IMODULE_free(584,36884
#define sk_CONF_IMODULE_num(585,36949
#define sk_CONF_IMODULE_value(586,37012
#define sk_CONF_IMODULE_set(587,37087
#define sk_CONF_IMODULE_zero(588,37170
#define sk_CONF_IMODULE_push(589,37235
#define sk_CONF_IMODULE_unshift(590,37312
#define sk_CONF_IMODULE_find(591,37395
#define sk_CONF_IMODULE_find_ex(592,37472
#define sk_CONF_IMODULE_delete(593,37555
#define sk_CONF_IMODULE_delete_ptr(594,37632
#define sk_CONF_IMODULE_insert(595,37721
#define sk_CONF_IMODULE_set_cmp_func(596,37810
#define sk_CONF_IMODULE_dup(597,37903
#define sk_CONF_IMODULE_pop_free(598,37964
#define sk_CONF_IMODULE_shift(599,38061
#define sk_CONF_IMODULE_pop(600,38128
#define sk_CONF_IMODULE_sort(601,38191
#define sk_CONF_IMODULE_is_sorted(602,38256
#define sk_CONF_MODULE_new(604,38332
#define sk_CONF_MODULE_new_null(605,38395
#define sk_CONF_MODULE_free(606,38458
#define sk_CONF_MODULE_num(607,38521
#define sk_CONF_MODULE_value(608,38582
#define sk_CONF_MODULE_set(609,38655
#define sk_CONF_MODULE_zero(610,38736
#define sk_CONF_MODULE_push(611,38799
#define sk_CONF_MODULE_unshift(612,38874
#define sk_CONF_MODULE_find(613,38955
#define sk_CONF_MODULE_find_ex(614,39030
#define sk_CONF_MODULE_delete(615,39111
#define sk_CONF_MODULE_delete_ptr(616,39186
#define sk_CONF_MODULE_insert(617,39273
#define sk_CONF_MODULE_set_cmp_func(618,39360
#define sk_CONF_MODULE_dup(619,39451
#define sk_CONF_MODULE_pop_free(620,39510
#define sk_CONF_MODULE_shift(621,39605
#define sk_CONF_MODULE_pop(622,39670
#define sk_CONF_MODULE_sort(623,39731
#define sk_CONF_MODULE_is_sorted(624,39794
#define sk_CONF_VALUE_new(626,39868
#define sk_CONF_VALUE_new_null(627,39929
#define sk_CONF_VALUE_free(628,39990
#define sk_CONF_VALUE_num(629,40051
#define sk_CONF_VALUE_value(630,40110
#define sk_CONF_VALUE_set(631,40181
#define sk_CONF_VALUE_zero(632,40260
#define sk_CONF_VALUE_push(633,40321
#define sk_CONF_VALUE_unshift(634,40394
#define sk_CONF_VALUE_find(635,40473
#define sk_CONF_VALUE_find_ex(636,40546
#define sk_CONF_VALUE_delete(637,40625
#define sk_CONF_VALUE_delete_ptr(638,40698
#define sk_CONF_VALUE_insert(639,40783
#define sk_CONF_VALUE_set_cmp_func(640,40868
#define sk_CONF_VALUE_dup(641,40957
#define sk_CONF_VALUE_pop_free(642,41014
#define sk_CONF_VALUE_shift(643,41107
#define sk_CONF_VALUE_pop(644,41170
#define sk_CONF_VALUE_sort(645,41229
#define sk_CONF_VALUE_is_sorted(646,41290
#define sk_CRYPTO_EX_DATA_FUNCS_new(648,41362
#define sk_CRYPTO_EX_DATA_FUNCS_new_null(649,41443
#define sk_CRYPTO_EX_DATA_FUNCS_free(650,41524
#define sk_CRYPTO_EX_DATA_FUNCS_num(651,41605
#define sk_CRYPTO_EX_DATA_FUNCS_value(652,41684
#define sk_CRYPTO_EX_DATA_FUNCS_set(653,41775
#define sk_CRYPTO_EX_DATA_FUNCS_zero(654,41874
#define sk_CRYPTO_EX_DATA_FUNCS_push(655,41955
#define sk_CRYPTO_EX_DATA_FUNCS_unshift(656,42048
#define sk_CRYPTO_EX_DATA_FUNCS_find(657,42147
#define sk_CRYPTO_EX_DATA_FUNCS_find_ex(658,42240
#define sk_CRYPTO_EX_DATA_FUNCS_delete(659,42339
#define sk_CRYPTO_EX_DATA_FUNCS_delete_ptr(660,42432
#define sk_CRYPTO_EX_DATA_FUNCS_insert(661,42537
#define sk_CRYPTO_EX_DATA_FUNCS_set_cmp_func(662,42642
#define sk_CRYPTO_EX_DATA_FUNCS_dup(663,42751
#define sk_CRYPTO_EX_DATA_FUNCS_pop_free(664,42828
#define sk_CRYPTO_EX_DATA_FUNCS_shift(665,42941
#define sk_CRYPTO_EX_DATA_FUNCS_pop(666,43024
#define sk_CRYPTO_EX_DATA_FUNCS_sort(667,43103
#define sk_CRYPTO_EX_DATA_FUNCS_is_sorted(668,43184
#define sk_CRYPTO_dynlock_new(670,43276
#define sk_CRYPTO_dynlock_new_null(671,43345
#define sk_CRYPTO_dynlock_free(672,43414
#define sk_CRYPTO_dynlock_num(673,43483
#define sk_CRYPTO_dynlock_value(674,43550
#define sk_CRYPTO_dynlock_set(675,43629
#define sk_CRYPTO_dynlock_zero(676,43716
#define sk_CRYPTO_dynlock_push(677,43785
#define sk_CRYPTO_dynlock_unshift(678,43866
#define sk_CRYPTO_dynlock_find(679,43953
#define sk_CRYPTO_dynlock_find_ex(680,44034
#define sk_CRYPTO_dynlock_delete(681,44121
#define sk_CRYPTO_dynlock_delete_ptr(682,44202
#define sk_CRYPTO_dynlock_insert(683,44295
#define sk_CRYPTO_dynlock_set_cmp_func(684,44388
#define sk_CRYPTO_dynlock_dup(685,44485
#define sk_CRYPTO_dynlock_pop_free(686,44550
#define sk_CRYPTO_dynlock_shift(687,44651
#define sk_CRYPTO_dynlock_pop(688,44722
#define sk_CRYPTO_dynlock_sort(689,44789
#define sk_CRYPTO_dynlock_is_sorted(690,44858
#define sk_DIST_POINT_new(692,44938
#define sk_DIST_POINT_new_null(693,44999
#define sk_DIST_POINT_free(694,45060
#define sk_DIST_POINT_num(695,45121
#define sk_DIST_POINT_value(696,45180
#define sk_DIST_POINT_set(697,45251
#define sk_DIST_POINT_zero(698,45330
#define sk_DIST_POINT_push(699,45391
#define sk_DIST_POINT_unshift(700,45464
#define sk_DIST_POINT_find(701,45543
#define sk_DIST_POINT_find_ex(702,45616
#define sk_DIST_POINT_delete(703,45695
#define sk_DIST_POINT_delete_ptr(704,45768
#define sk_DIST_POINT_insert(705,45853
#define sk_DIST_POINT_set_cmp_func(706,45938
#define sk_DIST_POINT_dup(707,46027
#define sk_DIST_POINT_pop_free(708,46084
#define sk_DIST_POINT_shift(709,46177
#define sk_DIST_POINT_pop(710,46240
#define sk_DIST_POINT_sort(711,46299
#define sk_DIST_POINT_is_sorted(712,46360
#define sk_ENGINE_new(714,46432
#define sk_ENGINE_new_null(715,46485
#define sk_ENGINE_free(716,46538
#define sk_ENGINE_num(717,46591
#define sk_ENGINE_value(718,46642
#define sk_ENGINE_set(719,46705
#define sk_ENGINE_zero(720,46776
#define sk_ENGINE_push(721,46829
#define sk_ENGINE_unshift(722,46894
#define sk_ENGINE_find(723,46965
#define sk_ENGINE_find_ex(724,47030
#define sk_ENGINE_delete(725,47101
#define sk_ENGINE_delete_ptr(726,47166
#define sk_ENGINE_insert(727,47243
#define sk_ENGINE_set_cmp_func(728,47320
#define sk_ENGINE_dup(729,47401
#define sk_ENGINE_pop_free(730,47450
#define sk_ENGINE_shift(731,47535
#define sk_ENGINE_pop(732,47590
#define sk_ENGINE_sort(733,47641
#define sk_ENGINE_is_sorted(734,47694
#define sk_ENGINE_CLEANUP_ITEM_new(736,47758
#define sk_ENGINE_CLEANUP_ITEM_new_null(737,47837
#define sk_ENGINE_CLEANUP_ITEM_free(738,47916
#define sk_ENGINE_CLEANUP_ITEM_num(739,47995
#define sk_ENGINE_CLEANUP_ITEM_value(740,48072
#define sk_ENGINE_CLEANUP_ITEM_set(741,48161
#define sk_ENGINE_CLEANUP_ITEM_zero(742,48258
#define sk_ENGINE_CLEANUP_ITEM_push(743,48337
#define sk_ENGINE_CLEANUP_ITEM_unshift(744,48428
#define sk_ENGINE_CLEANUP_ITEM_find(745,48525
#define sk_ENGINE_CLEANUP_ITEM_find_ex(746,48616
#define sk_ENGINE_CLEANUP_ITEM_delete(747,48713
#define sk_ENGINE_CLEANUP_ITEM_delete_ptr(748,48804
#define sk_ENGINE_CLEANUP_ITEM_insert(749,48907
#define sk_ENGINE_CLEANUP_ITEM_set_cmp_func(750,49010
#define sk_ENGINE_CLEANUP_ITEM_dup(751,49117
#define sk_ENGINE_CLEANUP_ITEM_pop_free(752,49192
#define sk_ENGINE_CLEANUP_ITEM_shift(753,49303
#define sk_ENGINE_CLEANUP_ITEM_pop(754,49384
#define sk_ENGINE_CLEANUP_ITEM_sort(755,49461
#define sk_ENGINE_CLEANUP_ITEM_is_sorted(756,49540
#define sk_ESS_CERT_ID_new(758,49630
#define sk_ESS_CERT_ID_new_null(759,49693
#define sk_ESS_CERT_ID_free(760,49756
#define sk_ESS_CERT_ID_num(761,49819
#define sk_ESS_CERT_ID_value(762,49880
#define sk_ESS_CERT_ID_set(763,49953
#define sk_ESS_CERT_ID_zero(764,50034
#define sk_ESS_CERT_ID_push(765,50097
#define sk_ESS_CERT_ID_unshift(766,50172
#define sk_ESS_CERT_ID_find(767,50253
#define sk_ESS_CERT_ID_find_ex(768,50328
#define sk_ESS_CERT_ID_delete(769,50409
#define sk_ESS_CERT_ID_delete_ptr(770,50484
#define sk_ESS_CERT_ID_insert(771,50571
#define sk_ESS_CERT_ID_set_cmp_func(772,50658
#define sk_ESS_CERT_ID_dup(773,50749
#define sk_ESS_CERT_ID_pop_free(774,50808
#define sk_ESS_CERT_ID_shift(775,50903
#define sk_ESS_CERT_ID_pop(776,50968
#define sk_ESS_CERT_ID_sort(777,51029
#define sk_ESS_CERT_ID_is_sorted(778,51092
#define sk_EVP_MD_new(780,51166
#define sk_EVP_MD_new_null(781,51219
#define sk_EVP_MD_free(782,51272
#define sk_EVP_MD_num(783,51325
#define sk_EVP_MD_value(784,51376
#define sk_EVP_MD_set(785,51439
#define sk_EVP_MD_zero(786,51510
#define sk_EVP_MD_push(787,51563
#define sk_EVP_MD_unshift(788,51628
#define sk_EVP_MD_find(789,51699
#define sk_EVP_MD_find_ex(790,51764
#define sk_EVP_MD_delete(791,51835
#define sk_EVP_MD_delete_ptr(792,51900
#define sk_EVP_MD_insert(793,51977
#define sk_EVP_MD_set_cmp_func(794,52054
#define sk_EVP_MD_dup(795,52135
#define sk_EVP_MD_pop_free(796,52184
#define sk_EVP_MD_shift(797,52269
#define sk_EVP_MD_pop(798,52324
#define sk_EVP_MD_sort(799,52375
#define sk_EVP_MD_is_sorted(800,52428
#define sk_EVP_PBE_CTL_new(802,52492
#define sk_EVP_PBE_CTL_new_null(803,52555
#define sk_EVP_PBE_CTL_free(804,52618
#define sk_EVP_PBE_CTL_num(805,52681
#define sk_EVP_PBE_CTL_value(806,52742
#define sk_EVP_PBE_CTL_set(807,52815
#define sk_EVP_PBE_CTL_zero(808,52896
#define sk_EVP_PBE_CTL_push(809,52959
#define sk_EVP_PBE_CTL_unshift(810,53034
#define sk_EVP_PBE_CTL_find(811,53115
#define sk_EVP_PBE_CTL_find_ex(812,53190
#define sk_EVP_PBE_CTL_delete(813,53271
#define sk_EVP_PBE_CTL_delete_ptr(814,53346
#define sk_EVP_PBE_CTL_insert(815,53433
#define sk_EVP_PBE_CTL_set_cmp_func(816,53520
#define sk_EVP_PBE_CTL_dup(817,53611
#define sk_EVP_PBE_CTL_pop_free(818,53670
#define sk_EVP_PBE_CTL_shift(819,53765
#define sk_EVP_PBE_CTL_pop(820,53830
#define sk_EVP_PBE_CTL_sort(821,53891
#define sk_EVP_PBE_CTL_is_sorted(822,53954
#define sk_EVP_PKEY_ASN1_METHOD_new(824,54028
#define sk_EVP_PKEY_ASN1_METHOD_new_null(825,54109
#define sk_EVP_PKEY_ASN1_METHOD_free(826,54190
#define sk_EVP_PKEY_ASN1_METHOD_num(827,54271
#define sk_EVP_PKEY_ASN1_METHOD_value(828,54350
#define sk_EVP_PKEY_ASN1_METHOD_set(829,54441
#define sk_EVP_PKEY_ASN1_METHOD_zero(830,54540
#define sk_EVP_PKEY_ASN1_METHOD_push(831,54621
#define sk_EVP_PKEY_ASN1_METHOD_unshift(832,54714
#define sk_EVP_PKEY_ASN1_METHOD_find(833,54813
#define sk_EVP_PKEY_ASN1_METHOD_find_ex(834,54906
#define sk_EVP_PKEY_ASN1_METHOD_delete(835,55005
#define sk_EVP_PKEY_ASN1_METHOD_delete_ptr(836,55098
#define sk_EVP_PKEY_ASN1_METHOD_insert(837,55203
#define sk_EVP_PKEY_ASN1_METHOD_set_cmp_func(838,55308
#define sk_EVP_PKEY_ASN1_METHOD_dup(839,55417
#define sk_EVP_PKEY_ASN1_METHOD_pop_free(840,55494
#define sk_EVP_PKEY_ASN1_METHOD_shift(841,55607
#define sk_EVP_PKEY_ASN1_METHOD_pop(842,55690
#define sk_EVP_PKEY_ASN1_METHOD_sort(843,55769
#define sk_EVP_PKEY_ASN1_METHOD_is_sorted(844,55850
#define sk_EVP_PKEY_METHOD_new(846,55942
#define sk_EVP_PKEY_METHOD_new_null(847,56013
#define sk_EVP_PKEY_METHOD_free(848,56084
#define sk_EVP_PKEY_METHOD_num(849,56155
#define sk_EVP_PKEY_METHOD_value(850,56224
#define sk_EVP_PKEY_METHOD_set(851,56305
#define sk_EVP_PKEY_METHOD_zero(852,56394
#define sk_EVP_PKEY_METHOD_push(853,56465
#define sk_EVP_PKEY_METHOD_unshift(854,56548
#define sk_EVP_PKEY_METHOD_find(855,56637
#define sk_EVP_PKEY_METHOD_find_ex(856,56720
#define sk_EVP_PKEY_METHOD_delete(857,56809
#define sk_EVP_PKEY_METHOD_delete_ptr(858,56892
#define sk_EVP_PKEY_METHOD_insert(859,56987
#define sk_EVP_PKEY_METHOD_set_cmp_func(860,57082
#define sk_EVP_PKEY_METHOD_dup(861,57181
#define sk_EVP_PKEY_METHOD_pop_free(862,57248
#define sk_EVP_PKEY_METHOD_shift(863,57351
#define sk_EVP_PKEY_METHOD_pop(864,57424
#define sk_EVP_PKEY_METHOD_sort(865,57493
#define sk_EVP_PKEY_METHOD_is_sorted(866,57564
#define sk_GENERAL_NAME_new(868,57646
#define sk_GENERAL_NAME_new_null(869,57711
#define sk_GENERAL_NAME_free(870,57776
#define sk_GENERAL_NAME_num(871,57841
#define sk_GENERAL_NAME_value(872,57904
#define sk_GENERAL_NAME_set(873,57979
#define sk_GENERAL_NAME_zero(874,58062
#define sk_GENERAL_NAME_push(875,58127
#define sk_GENERAL_NAME_unshift(876,58204
#define sk_GENERAL_NAME_find(877,58287
#define sk_GENERAL_NAME_find_ex(878,58364
#define sk_GENERAL_NAME_delete(879,58447
#define sk_GENERAL_NAME_delete_ptr(880,58524
#define sk_GENERAL_NAME_insert(881,58613
#define sk_GENERAL_NAME_set_cmp_func(882,58702
#define sk_GENERAL_NAME_dup(883,58795
#define sk_GENERAL_NAME_pop_free(884,58856
#define sk_GENERAL_NAME_shift(885,58953
#define sk_GENERAL_NAME_pop(886,59020
#define sk_GENERAL_NAME_sort(887,59083
#define sk_GENERAL_NAME_is_sorted(888,59148
#define sk_GENERAL_NAMES_new(890,59224
#define sk_GENERAL_NAMES_new_null(891,59291
#define sk_GENERAL_NAMES_free(892,59358
#define sk_GENERAL_NAMES_num(893,59425
#define sk_GENERAL_NAMES_value(894,59490
#define sk_GENERAL_NAMES_set(895,59567
#define sk_GENERAL_NAMES_zero(896,59652
#define sk_GENERAL_NAMES_push(897,59719
#define sk_GENERAL_NAMES_unshift(898,59798
#define sk_GENERAL_NAMES_find(899,59883
#define sk_GENERAL_NAMES_find_ex(900,59962
#define sk_GENERAL_NAMES_delete(901,60047
#define sk_GENERAL_NAMES_delete_ptr(902,60126
#define sk_GENERAL_NAMES_insert(903,60217
#define sk_GENERAL_NAMES_set_cmp_func(904,60308
#define sk_GENERAL_NAMES_dup(905,60403
#define sk_GENERAL_NAMES_pop_free(906,60466
#define sk_GENERAL_NAMES_shift(907,60565
#define sk_GENERAL_NAMES_pop(908,60634
#define sk_GENERAL_NAMES_sort(909,60699
#define sk_GENERAL_NAMES_is_sorted(910,60766
#define sk_GENERAL_SUBTREE_new(912,60844
#define sk_GENERAL_SUBTREE_new_null(913,60915
#define sk_GENERAL_SUBTREE_free(914,60986
#define sk_GENERAL_SUBTREE_num(915,61057
#define sk_GENERAL_SUBTREE_value(916,61126
#define sk_GENERAL_SUBTREE_set(917,61207
#define sk_GENERAL_SUBTREE_zero(918,61296
#define sk_GENERAL_SUBTREE_push(919,61367
#define sk_GENERAL_SUBTREE_unshift(920,61450
#define sk_GENERAL_SUBTREE_find(921,61539
#define sk_GENERAL_SUBTREE_find_ex(922,61622
#define sk_GENERAL_SUBTREE_delete(923,61711
#define sk_GENERAL_SUBTREE_delete_ptr(924,61794
#define sk_GENERAL_SUBTREE_insert(925,61889
#define sk_GENERAL_SUBTREE_set_cmp_func(926,61984
#define sk_GENERAL_SUBTREE_dup(927,62083
#define sk_GENERAL_SUBTREE_pop_free(928,62150
#define sk_GENERAL_SUBTREE_shift(929,62253
#define sk_GENERAL_SUBTREE_pop(930,62326
#define sk_GENERAL_SUBTREE_sort(931,62395
#define sk_GENERAL_SUBTREE_is_sorted(932,62466
#define sk_IPAddressFamily_new(934,62548
#define sk_IPAddressFamily_new_null(935,62619
#define sk_IPAddressFamily_free(936,62690
#define sk_IPAddressFamily_num(937,62761
#define sk_IPAddressFamily_value(938,62830
#define sk_IPAddressFamily_set(939,62911
#define sk_IPAddressFamily_zero(940,63000
#define sk_IPAddressFamily_push(941,63071
#define sk_IPAddressFamily_unshift(942,63154
#define sk_IPAddressFamily_find(943,63243
#define sk_IPAddressFamily_find_ex(944,63326
#define sk_IPAddressFamily_delete(945,63415
#define sk_IPAddressFamily_delete_ptr(946,63498
#define sk_IPAddressFamily_insert(947,63593
#define sk_IPAddressFamily_set_cmp_func(948,63688
#define sk_IPAddressFamily_dup(949,63787
#define sk_IPAddressFamily_pop_free(950,63854
#define sk_IPAddressFamily_shift(951,63957
#define sk_IPAddressFamily_pop(952,64030
#define sk_IPAddressFamily_sort(953,64099
#define sk_IPAddressFamily_is_sorted(954,64170
#define sk_IPAddressOrRange_new(956,64252
#define sk_IPAddressOrRange_new_null(957,64325
#define sk_IPAddressOrRange_free(958,64398
#define sk_IPAddressOrRange_num(959,64471
#define sk_IPAddressOrRange_value(960,64542
#define sk_IPAddressOrRange_set(961,64625
#define sk_IPAddressOrRange_zero(962,64716
#define sk_IPAddressOrRange_push(963,64789
#define sk_IPAddressOrRange_unshift(964,64874
#define sk_IPAddressOrRange_find(965,64965
#define sk_IPAddressOrRange_find_ex(966,65050
#define sk_IPAddressOrRange_delete(967,65141
#define sk_IPAddressOrRange_delete_ptr(968,65226
#define sk_IPAddressOrRange_insert(969,65323
#define sk_IPAddressOrRange_set_cmp_func(970,65420
#define sk_IPAddressOrRange_dup(971,65521
#define sk_IPAddressOrRange_pop_free(972,65590
#define sk_IPAddressOrRange_shift(973,65695
#define sk_IPAddressOrRange_pop(974,65770
#define sk_IPAddressOrRange_sort(975,65841
#define sk_IPAddressOrRange_is_sorted(976,65914
#define sk_KRB5_APREQBODY_new(978,65998
#define sk_KRB5_APREQBODY_new_null(979,66067
#define sk_KRB5_APREQBODY_free(980,66136
#define sk_KRB5_APREQBODY_num(981,66205
#define sk_KRB5_APREQBODY_value(982,66272
#define sk_KRB5_APREQBODY_set(983,66351
#define sk_KRB5_APREQBODY_zero(984,66438
#define sk_KRB5_APREQBODY_push(985,66507
#define sk_KRB5_APREQBODY_unshift(986,66588
#define sk_KRB5_APREQBODY_find(987,66675
#define sk_KRB5_APREQBODY_find_ex(988,66756
#define sk_KRB5_APREQBODY_delete(989,66843
#define sk_KRB5_APREQBODY_delete_ptr(990,66924
#define sk_KRB5_APREQBODY_insert(991,67017
#define sk_KRB5_APREQBODY_set_cmp_func(992,67110
#define sk_KRB5_APREQBODY_dup(993,67207
#define sk_KRB5_APREQBODY_pop_free(994,67272
#define sk_KRB5_APREQBODY_shift(995,67373
#define sk_KRB5_APREQBODY_pop(996,67444
#define sk_KRB5_APREQBODY_sort(997,67511
#define sk_KRB5_APREQBODY_is_sorted(998,67580
#define sk_KRB5_AUTHDATA_new(1000,67660
#define sk_KRB5_AUTHDATA_new_null(1001,67727
#define sk_KRB5_AUTHDATA_free(1002,67794
#define sk_KRB5_AUTHDATA_num(1003,67861
#define sk_KRB5_AUTHDATA_value(1004,67926
#define sk_KRB5_AUTHDATA_set(1005,68003
#define sk_KRB5_AUTHDATA_zero(1006,68088
#define sk_KRB5_AUTHDATA_push(1007,68155
#define sk_KRB5_AUTHDATA_unshift(1008,68234
#define sk_KRB5_AUTHDATA_find(1009,68319
#define sk_KRB5_AUTHDATA_find_ex(1010,68398
#define sk_KRB5_AUTHDATA_delete(1011,68483
#define sk_KRB5_AUTHDATA_delete_ptr(1012,68562
#define sk_KRB5_AUTHDATA_insert(1013,68653
#define sk_KRB5_AUTHDATA_set_cmp_func(1014,68744
#define sk_KRB5_AUTHDATA_dup(1015,68839
#define sk_KRB5_AUTHDATA_pop_free(1016,68902
#define sk_KRB5_AUTHDATA_shift(1017,69001
#define sk_KRB5_AUTHDATA_pop(1018,69070
#define sk_KRB5_AUTHDATA_sort(1019,69135
#define sk_KRB5_AUTHDATA_is_sorted(1020,69202
#define sk_KRB5_AUTHENTBODY_new(1022,69280
#define sk_KRB5_AUTHENTBODY_new_null(1023,69353
#define sk_KRB5_AUTHENTBODY_free(1024,69426
#define sk_KRB5_AUTHENTBODY_num(1025,69499
#define sk_KRB5_AUTHENTBODY_value(1026,69570
#define sk_KRB5_AUTHENTBODY_set(1027,69653
#define sk_KRB5_AUTHENTBODY_zero(1028,69744
#define sk_KRB5_AUTHENTBODY_push(1029,69817
#define sk_KRB5_AUTHENTBODY_unshift(1030,69902
#define sk_KRB5_AUTHENTBODY_find(1031,69993
#define sk_KRB5_AUTHENTBODY_find_ex(1032,70078
#define sk_KRB5_AUTHENTBODY_delete(1033,70169
#define sk_KRB5_AUTHENTBODY_delete_ptr(1034,70254
#define sk_KRB5_AUTHENTBODY_insert(1035,70351
#define sk_KRB5_AUTHENTBODY_set_cmp_func(1036,70448
#define sk_KRB5_AUTHENTBODY_dup(1037,70549
#define sk_KRB5_AUTHENTBODY_pop_free(1038,70618
#define sk_KRB5_AUTHENTBODY_shift(1039,70723
#define sk_KRB5_AUTHENTBODY_pop(1040,70798
#define sk_KRB5_AUTHENTBODY_sort(1041,70869
#define sk_KRB5_AUTHENTBODY_is_sorted(1042,70942
#define sk_KRB5_CHECKSUM_new(1044,71026
#define sk_KRB5_CHECKSUM_new_null(1045,71093
#define sk_KRB5_CHECKSUM_free(1046,71160
#define sk_KRB5_CHECKSUM_num(1047,71227
#define sk_KRB5_CHECKSUM_value(1048,71292
#define sk_KRB5_CHECKSUM_set(1049,71369
#define sk_KRB5_CHECKSUM_zero(1050,71454
#define sk_KRB5_CHECKSUM_push(1051,71521
#define sk_KRB5_CHECKSUM_unshift(1052,71600
#define sk_KRB5_CHECKSUM_find(1053,71685
#define sk_KRB5_CHECKSUM_find_ex(1054,71764
#define sk_KRB5_CHECKSUM_delete(1055,71849
#define sk_KRB5_CHECKSUM_delete_ptr(1056,71928
#define sk_KRB5_CHECKSUM_insert(1057,72019
#define sk_KRB5_CHECKSUM_set_cmp_func(1058,72110
#define sk_KRB5_CHECKSUM_dup(1059,72205
#define sk_KRB5_CHECKSUM_pop_free(1060,72268
#define sk_KRB5_CHECKSUM_shift(1061,72367
#define sk_KRB5_CHECKSUM_pop(1062,72436
#define sk_KRB5_CHECKSUM_sort(1063,72501
#define sk_KRB5_CHECKSUM_is_sorted(1064,72568
#define sk_KRB5_ENCDATA_new(1066,72646
#define sk_KRB5_ENCDATA_new_null(1067,72711
#define sk_KRB5_ENCDATA_free(1068,72776
#define sk_KRB5_ENCDATA_num(1069,72841
#define sk_KRB5_ENCDATA_value(1070,72904
#define sk_KRB5_ENCDATA_set(1071,72979
#define sk_KRB5_ENCDATA_zero(1072,73062
#define sk_KRB5_ENCDATA_push(1073,73127
#define sk_KRB5_ENCDATA_unshift(1074,73204
#define sk_KRB5_ENCDATA_find(1075,73287
#define sk_KRB5_ENCDATA_find_ex(1076,73364
#define sk_KRB5_ENCDATA_delete(1077,73447
#define sk_KRB5_ENCDATA_delete_ptr(1078,73524
#define sk_KRB5_ENCDATA_insert(1079,73613
#define sk_KRB5_ENCDATA_set_cmp_func(1080,73702
#define sk_KRB5_ENCDATA_dup(1081,73795
#define sk_KRB5_ENCDATA_pop_free(1082,73856
#define sk_KRB5_ENCDATA_shift(1083,73953
#define sk_KRB5_ENCDATA_pop(1084,74020
#define sk_KRB5_ENCDATA_sort(1085,74083
#define sk_KRB5_ENCDATA_is_sorted(1086,74148
#define sk_KRB5_ENCKEY_new(1088,74224
#define sk_KRB5_ENCKEY_new_null(1089,74287
#define sk_KRB5_ENCKEY_free(1090,74350
#define sk_KRB5_ENCKEY_num(1091,74413
#define sk_KRB5_ENCKEY_value(1092,74474
#define sk_KRB5_ENCKEY_set(1093,74547
#define sk_KRB5_ENCKEY_zero(1094,74628
#define sk_KRB5_ENCKEY_push(1095,74691
#define sk_KRB5_ENCKEY_unshift(1096,74766
#define sk_KRB5_ENCKEY_find(1097,74847
#define sk_KRB5_ENCKEY_find_ex(1098,74922
#define sk_KRB5_ENCKEY_delete(1099,75003
#define sk_KRB5_ENCKEY_delete_ptr(1100,75078
#define sk_KRB5_ENCKEY_insert(1101,75165
#define sk_KRB5_ENCKEY_set_cmp_func(1102,75252
#define sk_KRB5_ENCKEY_dup(1103,75343
#define sk_KRB5_ENCKEY_pop_free(1104,75402
#define sk_KRB5_ENCKEY_shift(1105,75497
#define sk_KRB5_ENCKEY_pop(1106,75562
#define sk_KRB5_ENCKEY_sort(1107,75623
#define sk_KRB5_ENCKEY_is_sorted(1108,75686
#define sk_KRB5_PRINCNAME_new(1110,75760
#define sk_KRB5_PRINCNAME_new_null(1111,75829
#define sk_KRB5_PRINCNAME_free(1112,75898
#define sk_KRB5_PRINCNAME_num(1113,75967
#define sk_KRB5_PRINCNAME_value(1114,76034
#define sk_KRB5_PRINCNAME_set(1115,76113
#define sk_KRB5_PRINCNAME_zero(1116,76200
#define sk_KRB5_PRINCNAME_push(1117,76269
#define sk_KRB5_PRINCNAME_unshift(1118,76350
#define sk_KRB5_PRINCNAME_find(1119,76437
#define sk_KRB5_PRINCNAME_find_ex(1120,76518
#define sk_KRB5_PRINCNAME_delete(1121,76605
#define sk_KRB5_PRINCNAME_delete_ptr(1122,76686
#define sk_KRB5_PRINCNAME_insert(1123,76779
#define sk_KRB5_PRINCNAME_set_cmp_func(1124,76872
#define sk_KRB5_PRINCNAME_dup(1125,76969
#define sk_KRB5_PRINCNAME_pop_free(1126,77034
#define sk_KRB5_PRINCNAME_shift(1127,77135
#define sk_KRB5_PRINCNAME_pop(1128,77206
#define sk_KRB5_PRINCNAME_sort(1129,77273
#define sk_KRB5_PRINCNAME_is_sorted(1130,77342
#define sk_KRB5_TKTBODY_new(1132,77422
#define sk_KRB5_TKTBODY_new_null(1133,77487
#define sk_KRB5_TKTBODY_free(1134,77552
#define sk_KRB5_TKTBODY_num(1135,77617
#define sk_KRB5_TKTBODY_value(1136,77680
#define sk_KRB5_TKTBODY_set(1137,77755
#define sk_KRB5_TKTBODY_zero(1138,77838
#define sk_KRB5_TKTBODY_push(1139,77903
#define sk_KRB5_TKTBODY_unshift(1140,77980
#define sk_KRB5_TKTBODY_find(1141,78063
#define sk_KRB5_TKTBODY_find_ex(1142,78140
#define sk_KRB5_TKTBODY_delete(1143,78223
#define sk_KRB5_TKTBODY_delete_ptr(1144,78300
#define sk_KRB5_TKTBODY_insert(1145,78389
#define sk_KRB5_TKTBODY_set_cmp_func(1146,78478
#define sk_KRB5_TKTBODY_dup(1147,78571
#define sk_KRB5_TKTBODY_pop_free(1148,78632
#define sk_KRB5_TKTBODY_shift(1149,78729
#define sk_KRB5_TKTBODY_pop(1150,78796
#define sk_KRB5_TKTBODY_sort(1151,78859
#define sk_KRB5_TKTBODY_is_sorted(1152,78924
#define sk_MEM_OBJECT_DATA_new(1154,79000
#define sk_MEM_OBJECT_DATA_new_null(1155,79071
#define sk_MEM_OBJECT_DATA_free(1156,79142
#define sk_MEM_OBJECT_DATA_num(1157,79213
#define sk_MEM_OBJECT_DATA_value(1158,79282
#define sk_MEM_OBJECT_DATA_set(1159,79363
#define sk_MEM_OBJECT_DATA_zero(1160,79452
#define sk_MEM_OBJECT_DATA_push(1161,79523
#define sk_MEM_OBJECT_DATA_unshift(1162,79606
#define sk_MEM_OBJECT_DATA_find(1163,79695
#define sk_MEM_OBJECT_DATA_find_ex(1164,79778
#define sk_MEM_OBJECT_DATA_delete(1165,79867
#define sk_MEM_OBJECT_DATA_delete_ptr(1166,79950
#define sk_MEM_OBJECT_DATA_insert(1167,80045
#define sk_MEM_OBJECT_DATA_set_cmp_func(1168,80140
#define sk_MEM_OBJECT_DATA_dup(1169,80239
#define sk_MEM_OBJECT_DATA_pop_free(1170,80306
#define sk_MEM_OBJECT_DATA_shift(1171,80409
#define sk_MEM_OBJECT_DATA_pop(1172,80482
#define sk_MEM_OBJECT_DATA_sort(1173,80551
#define sk_MEM_OBJECT_DATA_is_sorted(1174,80622
#define sk_MIME_HEADER_new(1176,80704
#define sk_MIME_HEADER_new_null(1177,80767
#define sk_MIME_HEADER_free(1178,80830
#define sk_MIME_HEADER_num(1179,80893
#define sk_MIME_HEADER_value(1180,80954
#define sk_MIME_HEADER_set(1181,81027
#define sk_MIME_HEADER_zero(1182,81108
#define sk_MIME_HEADER_push(1183,81171
#define sk_MIME_HEADER_unshift(1184,81246
#define sk_MIME_HEADER_find(1185,81327
#define sk_MIME_HEADER_find_ex(1186,81402
#define sk_MIME_HEADER_delete(1187,81483
#define sk_MIME_HEADER_delete_ptr(1188,81558
#define sk_MIME_HEADER_insert(1189,81645
#define sk_MIME_HEADER_set_cmp_func(1190,81732
#define sk_MIME_HEADER_dup(1191,81823
#define sk_MIME_HEADER_pop_free(1192,81882
#define sk_MIME_HEADER_shift(1193,81977
#define sk_MIME_HEADER_pop(1194,82042
#define sk_MIME_HEADER_sort(1195,82103
#define sk_MIME_HEADER_is_sorted(1196,82166
#define sk_MIME_PARAM_new(1198,82240
#define sk_MIME_PARAM_new_null(1199,82301
#define sk_MIME_PARAM_free(1200,82362
#define sk_MIME_PARAM_num(1201,82423
#define sk_MIME_PARAM_value(1202,82482
#define sk_MIME_PARAM_set(1203,82553
#define sk_MIME_PARAM_zero(1204,82632
#define sk_MIME_PARAM_push(1205,82693
#define sk_MIME_PARAM_unshift(1206,82766
#define sk_MIME_PARAM_find(1207,82845
#define sk_MIME_PARAM_find_ex(1208,82918
#define sk_MIME_PARAM_delete(1209,82997
#define sk_MIME_PARAM_delete_ptr(1210,83070
#define sk_MIME_PARAM_insert(1211,83155
#define sk_MIME_PARAM_set_cmp_func(1212,83240
#define sk_MIME_PARAM_dup(1213,83329
#define sk_MIME_PARAM_pop_free(1214,83386
#define sk_MIME_PARAM_shift(1215,83479
#define sk_MIME_PARAM_pop(1216,83542
#define sk_MIME_PARAM_sort(1217,83601
#define sk_MIME_PARAM_is_sorted(1218,83662
#define sk_NAME_FUNCS_new(1220,83734
#define sk_NAME_FUNCS_new_null(1221,83795
#define sk_NAME_FUNCS_free(1222,83856
#define sk_NAME_FUNCS_num(1223,83917
#define sk_NAME_FUNCS_value(1224,83976
#define sk_NAME_FUNCS_set(1225,84047
#define sk_NAME_FUNCS_zero(1226,84126
#define sk_NAME_FUNCS_push(1227,84187
#define sk_NAME_FUNCS_unshift(1228,84260
#define sk_NAME_FUNCS_find(1229,84339
#define sk_NAME_FUNCS_find_ex(1230,84412
#define sk_NAME_FUNCS_delete(1231,84491
#define sk_NAME_FUNCS_delete_ptr(1232,84564
#define sk_NAME_FUNCS_insert(1233,84649
#define sk_NAME_FUNCS_set_cmp_func(1234,84734
#define sk_NAME_FUNCS_dup(1235,84823
#define sk_NAME_FUNCS_pop_free(1236,84880
#define sk_NAME_FUNCS_shift(1237,84973
#define sk_NAME_FUNCS_pop(1238,85036
#define sk_NAME_FUNCS_sort(1239,85095
#define sk_NAME_FUNCS_is_sorted(1240,85156
#define sk_OCSP_CERTID_new(1242,85228
#define sk_OCSP_CERTID_new_null(1243,85291
#define sk_OCSP_CERTID_free(1244,85354
#define sk_OCSP_CERTID_num(1245,85417
#define sk_OCSP_CERTID_value(1246,85478
#define sk_OCSP_CERTID_set(1247,85551
#define sk_OCSP_CERTID_zero(1248,85632
#define sk_OCSP_CERTID_push(1249,85695
#define sk_OCSP_CERTID_unshift(1250,85770
#define sk_OCSP_CERTID_find(1251,85851
#define sk_OCSP_CERTID_find_ex(1252,85926
#define sk_OCSP_CERTID_delete(1253,86007
#define sk_OCSP_CERTID_delete_ptr(1254,86082
#define sk_OCSP_CERTID_insert(1255,86169
#define sk_OCSP_CERTID_set_cmp_func(1256,86256
#define sk_OCSP_CERTID_dup(1257,86347
#define sk_OCSP_CERTID_pop_free(1258,86406
#define sk_OCSP_CERTID_shift(1259,86501
#define sk_OCSP_CERTID_pop(1260,86566
#define sk_OCSP_CERTID_sort(1261,86627
#define sk_OCSP_CERTID_is_sorted(1262,86690
#define sk_OCSP_ONEREQ_new(1264,86764
#define sk_OCSP_ONEREQ_new_null(1265,86827
#define sk_OCSP_ONEREQ_free(1266,86890
#define sk_OCSP_ONEREQ_num(1267,86953
#define sk_OCSP_ONEREQ_value(1268,87014
#define sk_OCSP_ONEREQ_set(1269,87087
#define sk_OCSP_ONEREQ_zero(1270,87168
#define sk_OCSP_ONEREQ_push(1271,87231
#define sk_OCSP_ONEREQ_unshift(1272,87306
#define sk_OCSP_ONEREQ_find(1273,87387
#define sk_OCSP_ONEREQ_find_ex(1274,87462
#define sk_OCSP_ONEREQ_delete(1275,87543
#define sk_OCSP_ONEREQ_delete_ptr(1276,87618
#define sk_OCSP_ONEREQ_insert(1277,87705
#define sk_OCSP_ONEREQ_set_cmp_func(1278,87792
#define sk_OCSP_ONEREQ_dup(1279,87883
#define sk_OCSP_ONEREQ_pop_free(1280,87942
#define sk_OCSP_ONEREQ_shift(1281,88037
#define sk_OCSP_ONEREQ_pop(1282,88102
#define sk_OCSP_ONEREQ_sort(1283,88163
#define sk_OCSP_ONEREQ_is_sorted(1284,88226
#define sk_OCSP_RESPID_new(1286,88300
#define sk_OCSP_RESPID_new_null(1287,88363
#define sk_OCSP_RESPID_free(1288,88426
#define sk_OCSP_RESPID_num(1289,88489
#define sk_OCSP_RESPID_value(1290,88550
#define sk_OCSP_RESPID_set(1291,88623
#define sk_OCSP_RESPID_zero(1292,88704
#define sk_OCSP_RESPID_push(1293,88767
#define sk_OCSP_RESPID_unshift(1294,88842
#define sk_OCSP_RESPID_find(1295,88923
#define sk_OCSP_RESPID_find_ex(1296,88998
#define sk_OCSP_RESPID_delete(1297,89079
#define sk_OCSP_RESPID_delete_ptr(1298,89154
#define sk_OCSP_RESPID_insert(1299,89241
#define sk_OCSP_RESPID_set_cmp_func(1300,89328
#define sk_OCSP_RESPID_dup(1301,89419
#define sk_OCSP_RESPID_pop_free(1302,89478
#define sk_OCSP_RESPID_shift(1303,89573
#define sk_OCSP_RESPID_pop(1304,89638
#define sk_OCSP_RESPID_sort(1305,89699
#define sk_OCSP_RESPID_is_sorted(1306,89762
#define sk_OCSP_SINGLERESP_new(1308,89836
#define sk_OCSP_SINGLERESP_new_null(1309,89907
#define sk_OCSP_SINGLERESP_free(1310,89978
#define sk_OCSP_SINGLERESP_num(1311,90049
#define sk_OCSP_SINGLERESP_value(1312,90118
#define sk_OCSP_SINGLERESP_set(1313,90199
#define sk_OCSP_SINGLERESP_zero(1314,90288
#define sk_OCSP_SINGLERESP_push(1315,90359
#define sk_OCSP_SINGLERESP_unshift(1316,90442
#define sk_OCSP_SINGLERESP_find(1317,90531
#define sk_OCSP_SINGLERESP_find_ex(1318,90614
#define sk_OCSP_SINGLERESP_delete(1319,90703
#define sk_OCSP_SINGLERESP_delete_ptr(1320,90786
#define sk_OCSP_SINGLERESP_insert(1321,90881
#define sk_OCSP_SINGLERESP_set_cmp_func(1322,90976
#define sk_OCSP_SINGLERESP_dup(1323,91075
#define sk_OCSP_SINGLERESP_pop_free(1324,91142
#define sk_OCSP_SINGLERESP_shift(1325,91245
#define sk_OCSP_SINGLERESP_pop(1326,91318
#define sk_OCSP_SINGLERESP_sort(1327,91387
#define sk_OCSP_SINGLERESP_is_sorted(1328,91458
#define sk_PKCS12_SAFEBAG_new(1330,91540
#define sk_PKCS12_SAFEBAG_new_null(1331,91609
#define sk_PKCS12_SAFEBAG_free(1332,91678
#define sk_PKCS12_SAFEBAG_num(1333,91747
#define sk_PKCS12_SAFEBAG_value(1334,91814
#define sk_PKCS12_SAFEBAG_set(1335,91893
#define sk_PKCS12_SAFEBAG_zero(1336,91980
#define sk_PKCS12_SAFEBAG_push(1337,92049
#define sk_PKCS12_SAFEBAG_unshift(1338,92130
#define sk_PKCS12_SAFEBAG_find(1339,92217
#define sk_PKCS12_SAFEBAG_find_ex(1340,92298
#define sk_PKCS12_SAFEBAG_delete(1341,92385
#define sk_PKCS12_SAFEBAG_delete_ptr(1342,92466
#define sk_PKCS12_SAFEBAG_insert(1343,92559
#define sk_PKCS12_SAFEBAG_set_cmp_func(1344,92652
#define sk_PKCS12_SAFEBAG_dup(1345,92749
#define sk_PKCS12_SAFEBAG_pop_free(1346,92814
#define sk_PKCS12_SAFEBAG_shift(1347,92915
#define sk_PKCS12_SAFEBAG_pop(1348,92986
#define sk_PKCS12_SAFEBAG_sort(1349,93053
#define sk_PKCS12_SAFEBAG_is_sorted(1350,93122
#define sk_PKCS7_new(1352,93202
#define sk_PKCS7_new_null(1353,93253
#define sk_PKCS7_free(1354,93304
#define sk_PKCS7_num(1355,93355
#define sk_PKCS7_value(1356,93404
#define sk_PKCS7_set(1357,93465
#define sk_PKCS7_zero(1358,93534
#define sk_PKCS7_push(1359,93585
#define sk_PKCS7_unshift(1360,93648
#define sk_PKCS7_find(1361,93717
#define sk_PKCS7_find_ex(1362,93780
#define sk_PKCS7_delete(1363,93849
#define sk_PKCS7_delete_ptr(1364,93912
#define sk_PKCS7_insert(1365,93987
#define sk_PKCS7_set_cmp_func(1366,94062
#define sk_PKCS7_dup(1367,94141
#define sk_PKCS7_pop_free(1368,94188
#define sk_PKCS7_shift(1369,94271
#define sk_PKCS7_pop(1370,94324
#define sk_PKCS7_sort(1371,94373
#define sk_PKCS7_is_sorted(1372,94424
#define sk_PKCS7_RECIP_INFO_new(1374,94486
#define sk_PKCS7_RECIP_INFO_new_null(1375,94559
#define sk_PKCS7_RECIP_INFO_free(1376,94632
#define sk_PKCS7_RECIP_INFO_num(1377,94705
#define sk_PKCS7_RECIP_INFO_value(1378,94776
#define sk_PKCS7_RECIP_INFO_set(1379,94859
#define sk_PKCS7_RECIP_INFO_zero(1380,94950
#define sk_PKCS7_RECIP_INFO_push(1381,95023
#define sk_PKCS7_RECIP_INFO_unshift(1382,95108
#define sk_PKCS7_RECIP_INFO_find(1383,95199
#define sk_PKCS7_RECIP_INFO_find_ex(1384,95284
#define sk_PKCS7_RECIP_INFO_delete(1385,95375
#define sk_PKCS7_RECIP_INFO_delete_ptr(1386,95460
#define sk_PKCS7_RECIP_INFO_insert(1387,95557
#define sk_PKCS7_RECIP_INFO_set_cmp_func(1388,95654
#define sk_PKCS7_RECIP_INFO_dup(1389,95755
#define sk_PKCS7_RECIP_INFO_pop_free(1390,95824
#define sk_PKCS7_RECIP_INFO_shift(1391,95929
#define sk_PKCS7_RECIP_INFO_pop(1392,96004
#define sk_PKCS7_RECIP_INFO_sort(1393,96075
#define sk_PKCS7_RECIP_INFO_is_sorted(1394,96148
#define sk_PKCS7_SIGNER_INFO_new(1396,96232
#define sk_PKCS7_SIGNER_INFO_new_null(1397,96307
#define sk_PKCS7_SIGNER_INFO_free(1398,96382
#define sk_PKCS7_SIGNER_INFO_num(1399,96457
#define sk_PKCS7_SIGNER_INFO_value(1400,96530
#define sk_PKCS7_SIGNER_INFO_set(1401,96615
#define sk_PKCS7_SIGNER_INFO_zero(1402,96708
#define sk_PKCS7_SIGNER_INFO_push(1403,96783
#define sk_PKCS7_SIGNER_INFO_unshift(1404,96870
#define sk_PKCS7_SIGNER_INFO_find(1405,96963
#define sk_PKCS7_SIGNER_INFO_find_ex(1406,97050
#define sk_PKCS7_SIGNER_INFO_delete(1407,97143
#define sk_PKCS7_SIGNER_INFO_delete_ptr(1408,97230
#define sk_PKCS7_SIGNER_INFO_insert(1409,97329
#define sk_PKCS7_SIGNER_INFO_set_cmp_func(1410,97428
#define sk_PKCS7_SIGNER_INFO_dup(1411,97531
#define sk_PKCS7_SIGNER_INFO_pop_free(1412,97602
#define sk_PKCS7_SIGNER_INFO_shift(1413,97709
#define sk_PKCS7_SIGNER_INFO_pop(1414,97786
#define sk_PKCS7_SIGNER_INFO_sort(1415,97859
#define sk_PKCS7_SIGNER_INFO_is_sorted(1416,97934
#define sk_POLICYINFO_new(1418,98020
#define sk_POLICYINFO_new_null(1419,98081
#define sk_POLICYINFO_free(1420,98142
#define sk_POLICYINFO_num(1421,98203
#define sk_POLICYINFO_value(1422,98262
#define sk_POLICYINFO_set(1423,98333
#define sk_POLICYINFO_zero(1424,98412
#define sk_POLICYINFO_push(1425,98473
#define sk_POLICYINFO_unshift(1426,98546
#define sk_POLICYINFO_find(1427,98625
#define sk_POLICYINFO_find_ex(1428,98698
#define sk_POLICYINFO_delete(1429,98777
#define sk_POLICYINFO_delete_ptr(1430,98850
#define sk_POLICYINFO_insert(1431,98935
#define sk_POLICYINFO_set_cmp_func(1432,99020
#define sk_POLICYINFO_dup(1433,99109
#define sk_POLICYINFO_pop_free(1434,99166
#define sk_POLICYINFO_shift(1435,99259
#define sk_POLICYINFO_pop(1436,99322
#define sk_POLICYINFO_sort(1437,99381
#define sk_POLICYINFO_is_sorted(1438,99442
#define sk_POLICYQUALINFO_new(1440,99514
#define sk_POLICYQUALINFO_new_null(1441,99583
#define sk_POLICYQUALINFO_free(1442,99652
#define sk_POLICYQUALINFO_num(1443,99721
#define sk_POLICYQUALINFO_value(1444,99788
#define sk_POLICYQUALINFO_set(1445,99867
#define sk_POLICYQUALINFO_zero(1446,99954
#define sk_POLICYQUALINFO_push(1447,100023
#define sk_POLICYQUALINFO_unshift(1448,100104
#define sk_POLICYQUALINFO_find(1449,100191
#define sk_POLICYQUALINFO_find_ex(1450,100272
#define sk_POLICYQUALINFO_delete(1451,100359
#define sk_POLICYQUALINFO_delete_ptr(1452,100440
#define sk_POLICYQUALINFO_insert(1453,100533
#define sk_POLICYQUALINFO_set_cmp_func(1454,100626
#define sk_POLICYQUALINFO_dup(1455,100723
#define sk_POLICYQUALINFO_pop_free(1456,100788
#define sk_POLICYQUALINFO_shift(1457,100889
#define sk_POLICYQUALINFO_pop(1458,100960
#define sk_POLICYQUALINFO_sort(1459,101027
#define sk_POLICYQUALINFO_is_sorted(1460,101096
#define sk_POLICY_MAPPING_new(1462,101176
#define sk_POLICY_MAPPING_new_null(1463,101245
#define sk_POLICY_MAPPING_free(1464,101314
#define sk_POLICY_MAPPING_num(1465,101383
#define sk_POLICY_MAPPING_value(1466,101450
#define sk_POLICY_MAPPING_set(1467,101529
#define sk_POLICY_MAPPING_zero(1468,101616
#define sk_POLICY_MAPPING_push(1469,101685
#define sk_POLICY_MAPPING_unshift(1470,101766
#define sk_POLICY_MAPPING_find(1471,101853
#define sk_POLICY_MAPPING_find_ex(1472,101934
#define sk_POLICY_MAPPING_delete(1473,102021
#define sk_POLICY_MAPPING_delete_ptr(1474,102102
#define sk_POLICY_MAPPING_insert(1475,102195
#define sk_POLICY_MAPPING_set_cmp_func(1476,102288
#define sk_POLICY_MAPPING_dup(1477,102385
#define sk_POLICY_MAPPING_pop_free(1478,102450
#define sk_POLICY_MAPPING_shift(1479,102551
#define sk_POLICY_MAPPING_pop(1480,102622
#define sk_POLICY_MAPPING_sort(1481,102689
#define sk_POLICY_MAPPING_is_sorted(1482,102758
#define sk_SRP_gN_new(1484,102838
#define sk_SRP_gN_new_null(1485,102891
#define sk_SRP_gN_free(1486,102944
#define sk_SRP_gN_num(1487,102997
#define sk_SRP_gN_value(1488,103048
#define sk_SRP_gN_set(1489,103111
#define sk_SRP_gN_zero(1490,103182
#define sk_SRP_gN_push(1491,103235
#define sk_SRP_gN_unshift(1492,103300
#define sk_SRP_gN_find(1493,103371
#define sk_SRP_gN_find_ex(1494,103436
#define sk_SRP_gN_delete(1495,103507
#define sk_SRP_gN_delete_ptr(1496,103572
#define sk_SRP_gN_insert(1497,103649
#define sk_SRP_gN_set_cmp_func(1498,103726
#define sk_SRP_gN_dup(1499,103807
#define sk_SRP_gN_pop_free(1500,103856
#define sk_SRP_gN_shift(1501,103941
#define sk_SRP_gN_pop(1502,103996
#define sk_SRP_gN_sort(1503,104047
#define sk_SRP_gN_is_sorted(1504,104100
#define sk_SRP_gN_cache_new(1506,104164
#define sk_SRP_gN_cache_new_null(1507,104229
#define sk_SRP_gN_cache_free(1508,104294
#define sk_SRP_gN_cache_num(1509,104359
#define sk_SRP_gN_cache_value(1510,104422
#define sk_SRP_gN_cache_set(1511,104497
#define sk_SRP_gN_cache_zero(1512,104580
#define sk_SRP_gN_cache_push(1513,104645
#define sk_SRP_gN_cache_unshift(1514,104722
#define sk_SRP_gN_cache_find(1515,104805
#define sk_SRP_gN_cache_find_ex(1516,104882
#define sk_SRP_gN_cache_delete(1517,104965
#define sk_SRP_gN_cache_delete_ptr(1518,105042
#define sk_SRP_gN_cache_insert(1519,105131
#define sk_SRP_gN_cache_set_cmp_func(1520,105220
#define sk_SRP_gN_cache_dup(1521,105313
#define sk_SRP_gN_cache_pop_free(1522,105374
#define sk_SRP_gN_cache_shift(1523,105471
#define sk_SRP_gN_cache_pop(1524,105538
#define sk_SRP_gN_cache_sort(1525,105601
#define sk_SRP_gN_cache_is_sorted(1526,105666
#define sk_SRP_user_pwd_new(1528,105742
#define sk_SRP_user_pwd_new_null(1529,105807
#define sk_SRP_user_pwd_free(1530,105872
#define sk_SRP_user_pwd_num(1531,105937
#define sk_SRP_user_pwd_value(1532,106000
#define sk_SRP_user_pwd_set(1533,106075
#define sk_SRP_user_pwd_zero(1534,106158
#define sk_SRP_user_pwd_push(1535,106223
#define sk_SRP_user_pwd_unshift(1536,106300
#define sk_SRP_user_pwd_find(1537,106383
#define sk_SRP_user_pwd_find_ex(1538,106460
#define sk_SRP_user_pwd_delete(1539,106543
#define sk_SRP_user_pwd_delete_ptr(1540,106620
#define sk_SRP_user_pwd_insert(1541,106709
#define sk_SRP_user_pwd_set_cmp_func(1542,106798
#define sk_SRP_user_pwd_dup(1543,106891
#define sk_SRP_user_pwd_pop_free(1544,106952
#define sk_SRP_user_pwd_shift(1545,107049
#define sk_SRP_user_pwd_pop(1546,107116
#define sk_SRP_user_pwd_sort(1547,107179
#define sk_SRP_user_pwd_is_sorted(1548,107244
#define sk_SRTP_PROTECTION_PROFILE_new(1550,107320
#define sk_SRTP_PROTECTION_PROFILE_new_null(1551,107407
#define sk_SRTP_PROTECTION_PROFILE_free(1552,107494
#define sk_SRTP_PROTECTION_PROFILE_num(1553,107581
#define sk_SRTP_PROTECTION_PROFILE_value(1554,107666
#define sk_SRTP_PROTECTION_PROFILE_set(1555,107763
#define sk_SRTP_PROTECTION_PROFILE_zero(1556,107868
#define sk_SRTP_PROTECTION_PROFILE_push(1557,107955
#define sk_SRTP_PROTECTION_PROFILE_unshift(1558,108054
#define sk_SRTP_PROTECTION_PROFILE_find(1559,108159
#define sk_SRTP_PROTECTION_PROFILE_find_ex(1560,108258
#define sk_SRTP_PROTECTION_PROFILE_delete(1561,108363
#define sk_SRTP_PROTECTION_PROFILE_delete_ptr(1562,108462
#define sk_SRTP_PROTECTION_PROFILE_insert(1563,108573
#define sk_SRTP_PROTECTION_PROFILE_set_cmp_func(1564,108684
#define sk_SRTP_PROTECTION_PROFILE_dup(1565,108799
#define sk_SRTP_PROTECTION_PROFILE_pop_free(1566,108882
#define sk_SRTP_PROTECTION_PROFILE_shift(1567,109001
#define sk_SRTP_PROTECTION_PROFILE_pop(1568,109090
#define sk_SRTP_PROTECTION_PROFILE_sort(1569,109175
#define sk_SRTP_PROTECTION_PROFILE_is_sorted(1570,109262
#define sk_SSL_CIPHER_new(1572,109360
#define sk_SSL_CIPHER_new_null(1573,109421
#define sk_SSL_CIPHER_free(1574,109482
#define sk_SSL_CIPHER_num(1575,109543
#define sk_SSL_CIPHER_value(1576,109602
#define sk_SSL_CIPHER_set(1577,109673
#define sk_SSL_CIPHER_zero(1578,109752
#define sk_SSL_CIPHER_push(1579,109813
#define sk_SSL_CIPHER_unshift(1580,109886
#define sk_SSL_CIPHER_find(1581,109965
#define sk_SSL_CIPHER_find_ex(1582,110038
#define sk_SSL_CIPHER_delete(1583,110117
#define sk_SSL_CIPHER_delete_ptr(1584,110190
#define sk_SSL_CIPHER_insert(1585,110275
#define sk_SSL_CIPHER_set_cmp_func(1586,110360
#define sk_SSL_CIPHER_dup(1587,110449
#define sk_SSL_CIPHER_pop_free(1588,110506
#define sk_SSL_CIPHER_shift(1589,110599
#define sk_SSL_CIPHER_pop(1590,110662
#define sk_SSL_CIPHER_sort(1591,110721
#define sk_SSL_CIPHER_is_sorted(1592,110782
#define sk_SSL_COMP_new(1594,110854
#define sk_SSL_COMP_new_null(1595,110911
#define sk_SSL_COMP_free(1596,110968
#define sk_SSL_COMP_num(1597,111025
#define sk_SSL_COMP_value(1598,111080
#define sk_SSL_COMP_set(1599,111147
#define sk_SSL_COMP_zero(1600,111222
#define sk_SSL_COMP_push(1601,111279
#define sk_SSL_COMP_unshift(1602,111348
#define sk_SSL_COMP_find(1603,111423
#define sk_SSL_COMP_find_ex(1604,111492
#define sk_SSL_COMP_delete(1605,111567
#define sk_SSL_COMP_delete_ptr(1606,111636
#define sk_SSL_COMP_insert(1607,111717
#define sk_SSL_COMP_set_cmp_func(1608,111798
#define sk_SSL_COMP_dup(1609,111883
#define sk_SSL_COMP_pop_free(1610,111936
#define sk_SSL_COMP_shift(1611,112025
#define sk_SSL_COMP_pop(1612,112084
#define sk_SSL_COMP_sort(1613,112139
#define sk_SSL_COMP_is_sorted(1614,112196
#define sk_STACK_OF_X509_NAME_ENTRY_new(1616,112264
#define sk_STACK_OF_X509_NAME_ENTRY_new_null(1617,112353
#define sk_STACK_OF_X509_NAME_ENTRY_free(1618,112442
#define sk_STACK_OF_X509_NAME_ENTRY_num(1619,112531
#define sk_STACK_OF_X509_NAME_ENTRY_value(1620,112618
#define sk_STACK_OF_X509_NAME_ENTRY_set(1621,112717
#define sk_STACK_OF_X509_NAME_ENTRY_zero(1622,112824
#define sk_STACK_OF_X509_NAME_ENTRY_push(1623,112913
#define sk_STACK_OF_X509_NAME_ENTRY_unshift(1624,113014
#define sk_STACK_OF_X509_NAME_ENTRY_find(1625,113121
#define sk_STACK_OF_X509_NAME_ENTRY_find_ex(1626,113222
#define sk_STACK_OF_X509_NAME_ENTRY_delete(1627,113329
#define sk_STACK_OF_X509_NAME_ENTRY_delete_ptr(1628,113430
#define sk_STACK_OF_X509_NAME_ENTRY_insert(1629,113543
#define sk_STACK_OF_X509_NAME_ENTRY_set_cmp_func(1630,113656
#define sk_STACK_OF_X509_NAME_ENTRY_dup(1631,113773
#define sk_STACK_OF_X509_NAME_ENTRY_pop_free(1632,113858
#define sk_STACK_OF_X509_NAME_ENTRY_shift(1633,113979
#define sk_STACK_OF_X509_NAME_ENTRY_pop(1634,114070
#define sk_STACK_OF_X509_NAME_ENTRY_sort(1635,114157
#define sk_STACK_OF_X509_NAME_ENTRY_is_sorted(1636,114246
#define sk_STORE_ATTR_INFO_new(1638,114346
#define sk_STORE_ATTR_INFO_new_null(1639,114417
#define sk_STORE_ATTR_INFO_free(1640,114488
#define sk_STORE_ATTR_INFO_num(1641,114559
#define sk_STORE_ATTR_INFO_value(1642,114628
#define sk_STORE_ATTR_INFO_set(1643,114709
#define sk_STORE_ATTR_INFO_zero(1644,114798
#define sk_STORE_ATTR_INFO_push(1645,114869
#define sk_STORE_ATTR_INFO_unshift(1646,114952
#define sk_STORE_ATTR_INFO_find(1647,115041
#define sk_STORE_ATTR_INFO_find_ex(1648,115124
#define sk_STORE_ATTR_INFO_delete(1649,115213
#define sk_STORE_ATTR_INFO_delete_ptr(1650,115296
#define sk_STORE_ATTR_INFO_insert(1651,115391
#define sk_STORE_ATTR_INFO_set_cmp_func(1652,115486
#define sk_STORE_ATTR_INFO_dup(1653,115585
#define sk_STORE_ATTR_INFO_pop_free(1654,115652
#define sk_STORE_ATTR_INFO_shift(1655,115755
#define sk_STORE_ATTR_INFO_pop(1656,115828
#define sk_STORE_ATTR_INFO_sort(1657,115897
#define sk_STORE_ATTR_INFO_is_sorted(1658,115968
#define sk_STORE_OBJECT_new(1660,116050
#define sk_STORE_OBJECT_new_null(1661,116115
#define sk_STORE_OBJECT_free(1662,116180
#define sk_STORE_OBJECT_num(1663,116245
#define sk_STORE_OBJECT_value(1664,116308
#define sk_STORE_OBJECT_set(1665,116383
#define sk_STORE_OBJECT_zero(1666,116466
#define sk_STORE_OBJECT_push(1667,116531
#define sk_STORE_OBJECT_unshift(1668,116608
#define sk_STORE_OBJECT_find(1669,116691
#define sk_STORE_OBJECT_find_ex(1670,116768
#define sk_STORE_OBJECT_delete(1671,116851
#define sk_STORE_OBJECT_delete_ptr(1672,116928
#define sk_STORE_OBJECT_insert(1673,117017
#define sk_STORE_OBJECT_set_cmp_func(1674,117106
#define sk_STORE_OBJECT_dup(1675,117199
#define sk_STORE_OBJECT_pop_free(1676,117260
#define sk_STORE_OBJECT_shift(1677,117357
#define sk_STORE_OBJECT_pop(1678,117424
#define sk_STORE_OBJECT_sort(1679,117487
#define sk_STORE_OBJECT_is_sorted(1680,117552
#define sk_SXNETID_new(1682,117628
#define sk_SXNETID_new_null(1683,117683
#define sk_SXNETID_free(1684,117738
#define sk_SXNETID_num(1685,117793
#define sk_SXNETID_value(1686,117846
#define sk_SXNETID_set(1687,117911
#define sk_SXNETID_zero(1688,117984
#define sk_SXNETID_push(1689,118039
#define sk_SXNETID_unshift(1690,118106
#define sk_SXNETID_find(1691,118179
#define sk_SXNETID_find_ex(1692,118246
#define sk_SXNETID_delete(1693,118319
#define sk_SXNETID_delete_ptr(1694,118386
#define sk_SXNETID_insert(1695,118465
#define sk_SXNETID_set_cmp_func(1696,118544
#define sk_SXNETID_dup(1697,118627
#define sk_SXNETID_pop_free(1698,118678
#define sk_SXNETID_shift(1699,118765
#define sk_SXNETID_pop(1700,118822
#define sk_SXNETID_sort(1701,118875
#define sk_SXNETID_is_sorted(1702,118930
#define sk_UI_STRING_new(1704,118996
#define sk_UI_STRING_new_null(1705,119055
#define sk_UI_STRING_free(1706,119114
#define sk_UI_STRING_num(1707,119173
#define sk_UI_STRING_value(1708,119230
#define sk_UI_STRING_set(1709,119299
#define sk_UI_STRING_zero(1710,119376
#define sk_UI_STRING_push(1711,119435
#define sk_UI_STRING_unshift(1712,119506
#define sk_UI_STRING_find(1713,119583
#define sk_UI_STRING_find_ex(1714,119654
#define sk_UI_STRING_delete(1715,119731
#define sk_UI_STRING_delete_ptr(1716,119802
#define sk_UI_STRING_insert(1717,119885
#define sk_UI_STRING_set_cmp_func(1718,119968
#define sk_UI_STRING_dup(1719,120055
#define sk_UI_STRING_pop_free(1720,120110
#define sk_UI_STRING_shift(1721,120201
#define sk_UI_STRING_pop(1722,120262
#define sk_UI_STRING_sort(1723,120319
#define sk_UI_STRING_is_sorted(1724,120378
#define sk_X509_new(1726,120448
#define sk_X509_new_null(1727,120497
#define sk_X509_free(1728,120546
#define sk_X509_num(1729,120595
#define sk_X509_value(1730,120642
#define sk_X509_set(1731,120701
#define sk_X509_zero(1732,120768
#define sk_X509_push(1733,120817
#define sk_X509_unshift(1734,120878
#define sk_X509_find(1735,120945
#define sk_X509_find_ex(1736,121006
#define sk_X509_delete(1737,121073
#define sk_X509_delete_ptr(1738,121134
#define sk_X509_insert(1739,121207
#define sk_X509_set_cmp_func(1740,121280
#define sk_X509_dup(1741,121357
#define sk_X509_pop_free(1742,121402
#define sk_X509_shift(1743,121483
#define sk_X509_pop(1744,121534
#define sk_X509_sort(1745,121581
#define sk_X509_is_sorted(1746,121630
#define sk_X509V3_EXT_METHOD_new(1748,121690
#define sk_X509V3_EXT_METHOD_new_null(1749,121765
#define sk_X509V3_EXT_METHOD_free(1750,121840
#define sk_X509V3_EXT_METHOD_num(1751,121915
#define sk_X509V3_EXT_METHOD_value(1752,121988
#define sk_X509V3_EXT_METHOD_set(1753,122073
#define sk_X509V3_EXT_METHOD_zero(1754,122166
#define sk_X509V3_EXT_METHOD_push(1755,122241
#define sk_X509V3_EXT_METHOD_unshift(1756,122328
#define sk_X509V3_EXT_METHOD_find(1757,122421
#define sk_X509V3_EXT_METHOD_find_ex(1758,122508
#define sk_X509V3_EXT_METHOD_delete(1759,122601
#define sk_X509V3_EXT_METHOD_delete_ptr(1760,122688
#define sk_X509V3_EXT_METHOD_insert(1761,122787
#define sk_X509V3_EXT_METHOD_set_cmp_func(1762,122886
#define sk_X509V3_EXT_METHOD_dup(1763,122989
#define sk_X509V3_EXT_METHOD_pop_free(1764,123060
#define sk_X509V3_EXT_METHOD_shift(1765,123167
#define sk_X509V3_EXT_METHOD_pop(1766,123244
#define sk_X509V3_EXT_METHOD_sort(1767,123317
#define sk_X509V3_EXT_METHOD_is_sorted(1768,123392
#define sk_X509_ALGOR_new(1770,123478
#define sk_X509_ALGOR_new_null(1771,123539
#define sk_X509_ALGOR_free(1772,123600
#define sk_X509_ALGOR_num(1773,123661
#define sk_X509_ALGOR_value(1774,123720
#define sk_X509_ALGOR_set(1775,123791
#define sk_X509_ALGOR_zero(1776,123870
#define sk_X509_ALGOR_push(1777,123931
#define sk_X509_ALGOR_unshift(1778,124004
#define sk_X509_ALGOR_find(1779,124083
#define sk_X509_ALGOR_find_ex(1780,124156
#define sk_X509_ALGOR_delete(1781,124235
#define sk_X509_ALGOR_delete_ptr(1782,124308
#define sk_X509_ALGOR_insert(1783,124393
#define sk_X509_ALGOR_set_cmp_func(1784,124478
#define sk_X509_ALGOR_dup(1785,124567
#define sk_X509_ALGOR_pop_free(1786,124624
#define sk_X509_ALGOR_shift(1787,124717
#define sk_X509_ALGOR_pop(1788,124780
#define sk_X509_ALGOR_sort(1789,124839
#define sk_X509_ALGOR_is_sorted(1790,124900
#define sk_X509_ATTRIBUTE_new(1792,124972
#define sk_X509_ATTRIBUTE_new_null(1793,125041
#define sk_X509_ATTRIBUTE_free(1794,125110
#define sk_X509_ATTRIBUTE_num(1795,125179
#define sk_X509_ATTRIBUTE_value(1796,125246
#define sk_X509_ATTRIBUTE_set(1797,125325
#define sk_X509_ATTRIBUTE_zero(1798,125412
#define sk_X509_ATTRIBUTE_push(1799,125481
#define sk_X509_ATTRIBUTE_unshift(1800,125562
#define sk_X509_ATTRIBUTE_find(1801,125649
#define sk_X509_ATTRIBUTE_find_ex(1802,125730
#define sk_X509_ATTRIBUTE_delete(1803,125817
#define sk_X509_ATTRIBUTE_delete_ptr(1804,125898
#define sk_X509_ATTRIBUTE_insert(1805,125991
#define sk_X509_ATTRIBUTE_set_cmp_func(1806,126084
#define sk_X509_ATTRIBUTE_dup(1807,126181
#define sk_X509_ATTRIBUTE_pop_free(1808,126246
#define sk_X509_ATTRIBUTE_shift(1809,126347
#define sk_X509_ATTRIBUTE_pop(1810,126418
#define sk_X509_ATTRIBUTE_sort(1811,126485
#define sk_X509_ATTRIBUTE_is_sorted(1812,126554
#define sk_X509_CRL_new(1814,126634
#define sk_X509_CRL_new_null(1815,126691
#define sk_X509_CRL_free(1816,126748
#define sk_X509_CRL_num(1817,126805
#define sk_X509_CRL_value(1818,126860
#define sk_X509_CRL_set(1819,126927
#define sk_X509_CRL_zero(1820,127002
#define sk_X509_CRL_push(1821,127059
#define sk_X509_CRL_unshift(1822,127128
#define sk_X509_CRL_find(1823,127203
#define sk_X509_CRL_find_ex(1824,127272
#define sk_X509_CRL_delete(1825,127347
#define sk_X509_CRL_delete_ptr(1826,127416
#define sk_X509_CRL_insert(1827,127497
#define sk_X509_CRL_set_cmp_func(1828,127578
#define sk_X509_CRL_dup(1829,127663
#define sk_X509_CRL_pop_free(1830,127716
#define sk_X509_CRL_shift(1831,127805
#define sk_X509_CRL_pop(1832,127864
#define sk_X509_CRL_sort(1833,127919
#define sk_X509_CRL_is_sorted(1834,127976
#define sk_X509_EXTENSION_new(1836,128044
#define sk_X509_EXTENSION_new_null(1837,128113
#define sk_X509_EXTENSION_free(1838,128182
#define sk_X509_EXTENSION_num(1839,128251
#define sk_X509_EXTENSION_value(1840,128318
#define sk_X509_EXTENSION_set(1841,128397
#define sk_X509_EXTENSION_zero(1842,128484
#define sk_X509_EXTENSION_push(1843,128553
#define sk_X509_EXTENSION_unshift(1844,128634
#define sk_X509_EXTENSION_find(1845,128721
#define sk_X509_EXTENSION_find_ex(1846,128802
#define sk_X509_EXTENSION_delete(1847,128889
#define sk_X509_EXTENSION_delete_ptr(1848,128970
#define sk_X509_EXTENSION_insert(1849,129063
#define sk_X509_EXTENSION_set_cmp_func(1850,129156
#define sk_X509_EXTENSION_dup(1851,129253
#define sk_X509_EXTENSION_pop_free(1852,129318
#define sk_X509_EXTENSION_shift(1853,129419
#define sk_X509_EXTENSION_pop(1854,129490
#define sk_X509_EXTENSION_sort(1855,129557
#define sk_X509_EXTENSION_is_sorted(1856,129626
#define sk_X509_INFO_new(1858,129706
#define sk_X509_INFO_new_null(1859,129765
#define sk_X509_INFO_free(1860,129824
#define sk_X509_INFO_num(1861,129883
#define sk_X509_INFO_value(1862,129940
#define sk_X509_INFO_set(1863,130009
#define sk_X509_INFO_zero(1864,130086
#define sk_X509_INFO_push(1865,130145
#define sk_X509_INFO_unshift(1866,130216
#define sk_X509_INFO_find(1867,130293
#define sk_X509_INFO_find_ex(1868,130364
#define sk_X509_INFO_delete(1869,130441
#define sk_X509_INFO_delete_ptr(1870,130512
#define sk_X509_INFO_insert(1871,130595
#define sk_X509_INFO_set_cmp_func(1872,130678
#define sk_X509_INFO_dup(1873,130765
#define sk_X509_INFO_pop_free(1874,130820
#define sk_X509_INFO_shift(1875,130911
#define sk_X509_INFO_pop(1876,130972
#define sk_X509_INFO_sort(1877,131029
#define sk_X509_INFO_is_sorted(1878,131088
#define sk_X509_LOOKUP_new(1880,131158
#define sk_X509_LOOKUP_new_null(1881,131221
#define sk_X509_LOOKUP_free(1882,131284
#define sk_X509_LOOKUP_num(1883,131347
#define sk_X509_LOOKUP_value(1884,131408
#define sk_X509_LOOKUP_set(1885,131481
#define sk_X509_LOOKUP_zero(1886,131562
#define sk_X509_LOOKUP_push(1887,131625
#define sk_X509_LOOKUP_unshift(1888,131700
#define sk_X509_LOOKUP_find(1889,131781
#define sk_X509_LOOKUP_find_ex(1890,131856
#define sk_X509_LOOKUP_delete(1891,131937
#define sk_X509_LOOKUP_delete_ptr(1892,132012
#define sk_X509_LOOKUP_insert(1893,132099
#define sk_X509_LOOKUP_set_cmp_func(1894,132186
#define sk_X509_LOOKUP_dup(1895,132277
#define sk_X509_LOOKUP_pop_free(1896,132336
#define sk_X509_LOOKUP_shift(1897,132431
#define sk_X509_LOOKUP_pop(1898,132496
#define sk_X509_LOOKUP_sort(1899,132557
#define sk_X509_LOOKUP_is_sorted(1900,132620
#define sk_X509_NAME_new(1902,132694
#define sk_X509_NAME_new_null(1903,132753
#define sk_X509_NAME_free(1904,132812
#define sk_X509_NAME_num(1905,132871
#define sk_X509_NAME_value(1906,132928
#define sk_X509_NAME_set(1907,132997
#define sk_X509_NAME_zero(1908,133074
#define sk_X509_NAME_push(1909,133133
#define sk_X509_NAME_unshift(1910,133204
#define sk_X509_NAME_find(1911,133281
#define sk_X509_NAME_find_ex(1912,133352
#define sk_X509_NAME_delete(1913,133429
#define sk_X509_NAME_delete_ptr(1914,133500
#define sk_X509_NAME_insert(1915,133583
#define sk_X509_NAME_set_cmp_func(1916,133666
#define sk_X509_NAME_dup(1917,133753
#define sk_X509_NAME_pop_free(1918,133808
#define sk_X509_NAME_shift(1919,133899
#define sk_X509_NAME_pop(1920,133960
#define sk_X509_NAME_sort(1921,134017
#define sk_X509_NAME_is_sorted(1922,134076
#define sk_X509_NAME_ENTRY_new(1924,134146
#define sk_X509_NAME_ENTRY_new_null(1925,134217
#define sk_X509_NAME_ENTRY_free(1926,134288
#define sk_X509_NAME_ENTRY_num(1927,134359
#define sk_X509_NAME_ENTRY_value(1928,134428
#define sk_X509_NAME_ENTRY_set(1929,134509
#define sk_X509_NAME_ENTRY_zero(1930,134598
#define sk_X509_NAME_ENTRY_push(1931,134669
#define sk_X509_NAME_ENTRY_unshift(1932,134752
#define sk_X509_NAME_ENTRY_find(1933,134841
#define sk_X509_NAME_ENTRY_find_ex(1934,134924
#define sk_X509_NAME_ENTRY_delete(1935,135013
#define sk_X509_NAME_ENTRY_delete_ptr(1936,135096
#define sk_X509_NAME_ENTRY_insert(1937,135191
#define sk_X509_NAME_ENTRY_set_cmp_func(1938,135286
#define sk_X509_NAME_ENTRY_dup(1939,135385
#define sk_X509_NAME_ENTRY_pop_free(1940,135452
#define sk_X509_NAME_ENTRY_shift(1941,135555
#define sk_X509_NAME_ENTRY_pop(1942,135628
#define sk_X509_NAME_ENTRY_sort(1943,135697
#define sk_X509_NAME_ENTRY_is_sorted(1944,135768
#define sk_X509_OBJECT_new(1946,135850
#define sk_X509_OBJECT_new_null(1947,135913
#define sk_X509_OBJECT_free(1948,135976
#define sk_X509_OBJECT_num(1949,136039
#define sk_X509_OBJECT_value(1950,136100
#define sk_X509_OBJECT_set(1951,136173
#define sk_X509_OBJECT_zero(1952,136254
#define sk_X509_OBJECT_push(1953,136317
#define sk_X509_OBJECT_unshift(1954,136392
#define sk_X509_OBJECT_find(1955,136473
#define sk_X509_OBJECT_find_ex(1956,136548
#define sk_X509_OBJECT_delete(1957,136629
#define sk_X509_OBJECT_delete_ptr(1958,136704
#define sk_X509_OBJECT_insert(1959,136791
#define sk_X509_OBJECT_set_cmp_func(1960,136878
#define sk_X509_OBJECT_dup(1961,136969
#define sk_X509_OBJECT_pop_free(1962,137028
#define sk_X509_OBJECT_shift(1963,137123
#define sk_X509_OBJECT_pop(1964,137188
#define sk_X509_OBJECT_sort(1965,137249
#define sk_X509_OBJECT_is_sorted(1966,137312
#define sk_X509_POLICY_DATA_new(1968,137386
#define sk_X509_POLICY_DATA_new_null(1969,137459
#define sk_X509_POLICY_DATA_free(1970,137532
#define sk_X509_POLICY_DATA_num(1971,137605
#define sk_X509_POLICY_DATA_value(1972,137676
#define sk_X509_POLICY_DATA_set(1973,137759
#define sk_X509_POLICY_DATA_zero(1974,137850
#define sk_X509_POLICY_DATA_push(1975,137923
#define sk_X509_POLICY_DATA_unshift(1976,138008
#define sk_X509_POLICY_DATA_find(1977,138099
#define sk_X509_POLICY_DATA_find_ex(1978,138184
#define sk_X509_POLICY_DATA_delete(1979,138275
#define sk_X509_POLICY_DATA_delete_ptr(1980,138360
#define sk_X509_POLICY_DATA_insert(1981,138457
#define sk_X509_POLICY_DATA_set_cmp_func(1982,138554
#define sk_X509_POLICY_DATA_dup(1983,138655
#define sk_X509_POLICY_DATA_pop_free(1984,138724
#define sk_X509_POLICY_DATA_shift(1985,138829
#define sk_X509_POLICY_DATA_pop(1986,138904
#define sk_X509_POLICY_DATA_sort(1987,138975
#define sk_X509_POLICY_DATA_is_sorted(1988,139048
#define sk_X509_POLICY_NODE_new(1990,139132
#define sk_X509_POLICY_NODE_new_null(1991,139205
#define sk_X509_POLICY_NODE_free(1992,139278
#define sk_X509_POLICY_NODE_num(1993,139351
#define sk_X509_POLICY_NODE_value(1994,139422
#define sk_X509_POLICY_NODE_set(1995,139505
#define sk_X509_POLICY_NODE_zero(1996,139596
#define sk_X509_POLICY_NODE_push(1997,139669
#define sk_X509_POLICY_NODE_unshift(1998,139754
#define sk_X509_POLICY_NODE_find(1999,139845
#define sk_X509_POLICY_NODE_find_ex(2000,139930
#define sk_X509_POLICY_NODE_delete(2001,140021
#define sk_X509_POLICY_NODE_delete_ptr(2002,140106
#define sk_X509_POLICY_NODE_insert(2003,140203
#define sk_X509_POLICY_NODE_set_cmp_func(2004,140300
#define sk_X509_POLICY_NODE_dup(2005,140401
#define sk_X509_POLICY_NODE_pop_free(2006,140470
#define sk_X509_POLICY_NODE_shift(2007,140575
#define sk_X509_POLICY_NODE_pop(2008,140650
#define sk_X509_POLICY_NODE_sort(2009,140721
#define sk_X509_POLICY_NODE_is_sorted(2010,140794
#define sk_X509_PURPOSE_new(2012,140878
#define sk_X509_PURPOSE_new_null(2013,140943
#define sk_X509_PURPOSE_free(2014,141008
#define sk_X509_PURPOSE_num(2015,141073
#define sk_X509_PURPOSE_value(2016,141136
#define sk_X509_PURPOSE_set(2017,141211
#define sk_X509_PURPOSE_zero(2018,141294
#define sk_X509_PURPOSE_push(2019,141359
#define sk_X509_PURPOSE_unshift(2020,141436
#define sk_X509_PURPOSE_find(2021,141519
#define sk_X509_PURPOSE_find_ex(2022,141596
#define sk_X509_PURPOSE_delete(2023,141679
#define sk_X509_PURPOSE_delete_ptr(2024,141756
#define sk_X509_PURPOSE_insert(2025,141845
#define sk_X509_PURPOSE_set_cmp_func(2026,141934
#define sk_X509_PURPOSE_dup(2027,142027
#define sk_X509_PURPOSE_pop_free(2028,142088
#define sk_X509_PURPOSE_shift(2029,142185
#define sk_X509_PURPOSE_pop(2030,142252
#define sk_X509_PURPOSE_sort(2031,142315
#define sk_X509_PURPOSE_is_sorted(2032,142380
#define sk_X509_REVOKED_new(2034,142456
#define sk_X509_REVOKED_new_null(2035,142521
#define sk_X509_REVOKED_free(2036,142586
#define sk_X509_REVOKED_num(2037,142651
#define sk_X509_REVOKED_value(2038,142714
#define sk_X509_REVOKED_set(2039,142789
#define sk_X509_REVOKED_zero(2040,142872
#define sk_X509_REVOKED_push(2041,142937
#define sk_X509_REVOKED_unshift(2042,143014
#define sk_X509_REVOKED_find(2043,143097
#define sk_X509_REVOKED_find_ex(2044,143174
#define sk_X509_REVOKED_delete(2045,143257
#define sk_X509_REVOKED_delete_ptr(2046,143334
#define sk_X509_REVOKED_insert(2047,143423
#define sk_X509_REVOKED_set_cmp_func(2048,143512
#define sk_X509_REVOKED_dup(2049,143605
#define sk_X509_REVOKED_pop_free(2050,143666
#define sk_X509_REVOKED_shift(2051,143763
#define sk_X509_REVOKED_pop(2052,143830
#define sk_X509_REVOKED_sort(2053,143893
#define sk_X509_REVOKED_is_sorted(2054,143958
#define sk_X509_TRUST_new(2056,144034
#define sk_X509_TRUST_new_null(2057,144095
#define sk_X509_TRUST_free(2058,144156
#define sk_X509_TRUST_num(2059,144217
#define sk_X509_TRUST_value(2060,144276
#define sk_X509_TRUST_set(2061,144347
#define sk_X509_TRUST_zero(2062,144426
#define sk_X509_TRUST_push(2063,144487
#define sk_X509_TRUST_unshift(2064,144560
#define sk_X509_TRUST_find(2065,144639
#define sk_X509_TRUST_find_ex(2066,144712
#define sk_X509_TRUST_delete(2067,144791
#define sk_X509_TRUST_delete_ptr(2068,144864
#define sk_X509_TRUST_insert(2069,144949
#define sk_X509_TRUST_set_cmp_func(2070,145034
#define sk_X509_TRUST_dup(2071,145123
#define sk_X509_TRUST_pop_free(2072,145180
#define sk_X509_TRUST_shift(2073,145273
#define sk_X509_TRUST_pop(2074,145336
#define sk_X509_TRUST_sort(2075,145395
#define sk_X509_TRUST_is_sorted(2076,145456
#define sk_X509_VERIFY_PARAM_new(2078,145528
#define sk_X509_VERIFY_PARAM_new_null(2079,145603
#define sk_X509_VERIFY_PARAM_free(2080,145678
#define sk_X509_VERIFY_PARAM_num(2081,145753
#define sk_X509_VERIFY_PARAM_value(2082,145826
#define sk_X509_VERIFY_PARAM_set(2083,145911
#define sk_X509_VERIFY_PARAM_zero(2084,146004
#define sk_X509_VERIFY_PARAM_push(2085,146079
#define sk_X509_VERIFY_PARAM_unshift(2086,146166
#define sk_X509_VERIFY_PARAM_find(2087,146259
#define sk_X509_VERIFY_PARAM_find_ex(2088,146346
#define sk_X509_VERIFY_PARAM_delete(2089,146439
#define sk_X509_VERIFY_PARAM_delete_ptr(2090,146526
#define sk_X509_VERIFY_PARAM_insert(2091,146625
#define sk_X509_VERIFY_PARAM_set_cmp_func(2092,146724
#define sk_X509_VERIFY_PARAM_dup(2093,146827
#define sk_X509_VERIFY_PARAM_pop_free(2094,146898
#define sk_X509_VERIFY_PARAM_shift(2095,147005
#define sk_X509_VERIFY_PARAM_pop(2096,147082
#define sk_X509_VERIFY_PARAM_sort(2097,147155
#define sk_X509_VERIFY_PARAM_is_sorted(2098,147230
#define sk_nid_triple_new(2100,147316
#define sk_nid_triple_new_null(2101,147377
#define sk_nid_triple_free(2102,147438
#define sk_nid_triple_num(2103,147499
#define sk_nid_triple_value(2104,147558
#define sk_nid_triple_set(2105,147629
#define sk_nid_triple_zero(2106,147708
#define sk_nid_triple_push(2107,147769
#define sk_nid_triple_unshift(2108,147842
#define sk_nid_triple_find(2109,147921
#define sk_nid_triple_find_ex(2110,147994
#define sk_nid_triple_delete(2111,148073
#define sk_nid_triple_delete_ptr(2112,148146
#define sk_nid_triple_insert(2113,148231
#define sk_nid_triple_set_cmp_func(2114,148316
#define sk_nid_triple_dup(2115,148405
#define sk_nid_triple_pop_free(2116,148462
#define sk_nid_triple_shift(2117,148555
#define sk_nid_triple_pop(2118,148618
#define sk_nid_triple_sort(2119,148677
#define sk_nid_triple_is_sorted(2120,148738
#define sk_void_new(2122,148810
#define sk_void_new_null(2123,148859
#define sk_void_free(2124,148908
#define sk_void_num(2125,148957
#define sk_void_value(2126,149004
#define sk_void_set(2127,149063
#define sk_void_zero(2128,149130
#define sk_void_push(2129,149179
#define sk_void_unshift(2130,149240
#define sk_void_find(2131,149307
#define sk_void_find_ex(2132,149368
#define sk_void_delete(2133,149435
#define sk_void_delete_ptr(2134,149496
#define sk_void_insert(2135,149569
#define sk_void_set_cmp_func(2136,149642
#define sk_void_dup(2137,149719
#define sk_void_pop_free(2138,149764
#define sk_void_shift(2139,149845
#define sk_void_pop(2140,149896
#define sk_void_sort(2141,149943
#define sk_void_is_sorted(2142,149992
#define sk_OPENSSL_STRING_new(2144,150052
#define sk_OPENSSL_STRING_new_null(2145,150156
#define sk_OPENSSL_STRING_push(2146,150237
#define sk_OPENSSL_STRING_find(2147,150350
#define sk_OPENSSL_STRING_value(2148,150463
#define sk_OPENSSL_STRING_num(2149,150570
#define sk_OPENSSL_STRING_pop_free(2150,150635
#define sk_OPENSSL_STRING_insert(2151,150785
#define sk_OPENSSL_STRING_free(2152,150908
#define sk_OPENSSL_STRING_set(2153,150975
#define sk_OPENSSL_STRING_zero(2154,151092
#define sk_OPENSSL_STRING_unshift(2155,151161
#define sk_OPENSSL_STRING_find_ex(2156,151280
#define sk_OPENSSL_STRING_delete(2157,151429
#define sk_OPENSSL_STRING_delete_ptr(2158,151510
#define sk_OPENSSL_STRING_set_cmp_func(2159,151653
#define sk_OPENSSL_STRING_dup(2162,151849
#define sk_OPENSSL_STRING_shift(2163,151914
#define sk_OPENSSL_STRING_pop(2164,151985
#define sk_OPENSSL_STRING_sort(2165,152072
#define sk_OPENSSL_STRING_is_sorted(2166,152141
#define sk_OPENSSL_BLOCK_new(2169,152222
#define sk_OPENSSL_BLOCK_new_null(2170,152324
#define sk_OPENSSL_BLOCK_push(2171,152403
#define sk_OPENSSL_BLOCK_find(2172,152514
#define sk_OPENSSL_BLOCK_value(2173,152625
#define sk_OPENSSL_BLOCK_num(2174,152729
#define sk_OPENSSL_BLOCK_pop_free(2175,152792
#define sk_OPENSSL_BLOCK_insert(2176,152939
#define sk_OPENSSL_BLOCK_free(2177,153060
#define sk_OPENSSL_BLOCK_set(2178,153125
#define sk_OPENSSL_BLOCK_zero(2179,153240
#define sk_OPENSSL_BLOCK_unshift(2180,153307
#define sk_OPENSSL_BLOCK_find_ex(2181,153424
#define sk_OPENSSL_BLOCK_delete(2182,153571
#define sk_OPENSSL_BLOCK_delete_ptr(2183,153650
#define sk_OPENSSL_BLOCK_set_cmp_func(2184,153790
#define sk_OPENSSL_BLOCK_dup(2187,153984
#define sk_OPENSSL_BLOCK_shift(2188,154047
#define sk_OPENSSL_BLOCK_pop(2189,154116
#define sk_OPENSSL_BLOCK_sort(2190,154201
#define sk_OPENSSL_BLOCK_is_sorted(2191,154268
#define sk_OPENSSL_PSTRING_new(2194,154347
#define sk_OPENSSL_PSTRING_new_null(2195,154463
#define sk_OPENSSL_PSTRING_push(2196,154546
#define sk_OPENSSL_PSTRING_find(2197,154671
#define sk_OPENSSL_PSTRING_value(2198,154796
#define sk_OPENSSL_PSTRING_num(2199,154906
#define sk_OPENSSL_PSTRING_pop_free(2200,154973
#define sk_OPENSSL_PSTRING_insert(2201,155126
#define sk_OPENSSL_PSTRING_free(2202,155261
#define sk_OPENSSL_PSTRING_set(2203,155330
#define sk_OPENSSL_PSTRING_zero(2204,155459
#define sk_OPENSSL_PSTRING_unshift(2205,155530
#define sk_OPENSSL_PSTRING_find_ex(2206,155661
#define sk_OPENSSL_PSTRING_delete(2207,155822
#define sk_OPENSSL_PSTRING_delete_ptr(2208,155905
#define sk_OPENSSL_PSTRING_set_cmp_func(2209,156061
#define sk_OPENSSL_PSTRING_dup(2212,156289
#define sk_OPENSSL_PSTRING_shift(2213,156356
#define sk_OPENSSL_PSTRING_pop(2214,156429
#define sk_OPENSSL_PSTRING_sort(2215,156528
#define sk_OPENSSL_PSTRING_is_sorted(2216,156599
#define d2i_ASN1_SET_OF_ACCESS_DESCRIPTION(2219,156682
#define i2d_ASN1_SET_OF_ACCESS_DESCRIPTION(2221,156893
#define ASN1_seq_pack_ACCESS_DESCRIPTION(2223,157079
#define ASN1_seq_unpack_ACCESS_DESCRIPTION(2225,157217
#define d2i_ASN1_SET_OF_ASN1_INTEGER(2228,157374
#define i2d_ASN1_SET_OF_ASN1_INTEGER(2230,157573
#define ASN1_seq_pack_ASN1_INTEGER(2232,157747
#define ASN1_seq_unpack_ASN1_INTEGER(2234,157873
#define d2i_ASN1_SET_OF_ASN1_OBJECT(2237,158018
#define i2d_ASN1_SET_OF_ASN1_OBJECT(2239,158215
#define ASN1_seq_pack_ASN1_OBJECT(2241,158387
#define ASN1_seq_unpack_ASN1_OBJECT(2243,158511
#define d2i_ASN1_SET_OF_ASN1_TYPE(2246,158654
#define i2d_ASN1_SET_OF_ASN1_TYPE(2248,158847
#define ASN1_seq_pack_ASN1_TYPE(2250,159015
#define ASN1_seq_unpack_ASN1_TYPE(2252,159135
#define d2i_ASN1_SET_OF_ASN1_UTF8STRING(2255,159274
#define i2d_ASN1_SET_OF_ASN1_UTF8STRING(2257,159479
#define ASN1_seq_pack_ASN1_UTF8STRING(2259,159659
#define ASN1_seq_unpack_ASN1_UTF8STRING(2261,159791
#define d2i_ASN1_SET_OF_DIST_POINT(2264,159942
#define i2d_ASN1_SET_OF_DIST_POINT(2266,160137
#define ASN1_seq_pack_DIST_POINT(2268,160307
#define ASN1_seq_unpack_DIST_POINT(2270,160429
#define d2i_ASN1_SET_OF_ESS_CERT_ID(2273,160570
#define i2d_ASN1_SET_OF_ESS_CERT_ID(2275,160767
#define ASN1_seq_pack_ESS_CERT_ID(2277,160939
#define ASN1_seq_unpack_ESS_CERT_ID(2279,161063
#define d2i_ASN1_SET_OF_EVP_MD(2282,161206
#define i2d_ASN1_SET_OF_EVP_MD(2284,161393
#define ASN1_seq_pack_EVP_MD(2286,161555
#define ASN1_seq_unpack_EVP_MD(2288,161669
#define d2i_ASN1_SET_OF_GENERAL_NAME(2291,161802
#define i2d_ASN1_SET_OF_GENERAL_NAME(2293,162001
#define ASN1_seq_pack_GENERAL_NAME(2295,162175
#define ASN1_seq_unpack_GENERAL_NAME(2297,162301
#define d2i_ASN1_SET_OF_OCSP_ONEREQ(2300,162446
#define i2d_ASN1_SET_OF_OCSP_ONEREQ(2302,162643
#define ASN1_seq_pack_OCSP_ONEREQ(2304,162815
#define ASN1_seq_unpack_OCSP_ONEREQ(2306,162939
#define d2i_ASN1_SET_OF_OCSP_SINGLERESP(2309,163082
#define i2d_ASN1_SET_OF_OCSP_SINGLERESP(2311,163287
#define ASN1_seq_pack_OCSP_SINGLERESP(2313,163467
#define ASN1_seq_unpack_OCSP_SINGLERESP(2315,163599
#define d2i_ASN1_SET_OF_PKCS12_SAFEBAG(2318,163750
#define i2d_ASN1_SET_OF_PKCS12_SAFEBAG(2320,163953
#define ASN1_seq_pack_PKCS12_SAFEBAG(2322,164131
#define ASN1_seq_unpack_PKCS12_SAFEBAG(2324,164261
#define d2i_ASN1_SET_OF_PKCS7(2327,164410
#define i2d_ASN1_SET_OF_PKCS7(2329,164595
#define ASN1_seq_pack_PKCS7(2331,164755
#define ASN1_seq_unpack_PKCS7(2333,164867
#define d2i_ASN1_SET_OF_PKCS7_RECIP_INFO(2336,164998
#define i2d_ASN1_SET_OF_PKCS7_RECIP_INFO(2338,165205
#define ASN1_seq_pack_PKCS7_RECIP_INFO(2340,165387
#define ASN1_seq_unpack_PKCS7_RECIP_INFO(2342,165521
#define d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO(2345,165674
#define i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO(2347,165883
#define ASN1_seq_pack_PKCS7_SIGNER_INFO(2349,166067
#define ASN1_seq_unpack_PKCS7_SIGNER_INFO(2351,166203
#define d2i_ASN1_SET_OF_POLICYINFO(2354,166358
#define i2d_ASN1_SET_OF_POLICYINFO(2356,166553
#define ASN1_seq_pack_POLICYINFO(2358,166723
#define ASN1_seq_unpack_POLICYINFO(2360,166845
#define d2i_ASN1_SET_OF_POLICYQUALINFO(2363,166986
#define i2d_ASN1_SET_OF_POLICYQUALINFO(2365,167189
#define ASN1_seq_pack_POLICYQUALINFO(2367,167367
#define ASN1_seq_unpack_POLICYQUALINFO(2369,167497
#define d2i_ASN1_SET_OF_SXNETID(2372,167646
#define i2d_ASN1_SET_OF_SXNETID(2374,167835
#define ASN1_seq_pack_SXNETID(2376,167999
#define ASN1_seq_unpack_SXNETID(2378,168115
#define d2i_ASN1_SET_OF_X509(2381,168250
#define i2d_ASN1_SET_OF_X509(2383,168433
#define ASN1_seq_pack_X509(2385,168591
#define ASN1_seq_unpack_X509(2387,168701
#define d2i_ASN1_SET_OF_X509_ALGOR(2390,168830
#define i2d_ASN1_SET_OF_X509_ALGOR(2392,169025
#define ASN1_seq_pack_X509_ALGOR(2394,169195
#define ASN1_seq_unpack_X509_ALGOR(2396,169317
#define d2i_ASN1_SET_OF_X509_ATTRIBUTE(2399,169458
#define i2d_ASN1_SET_OF_X509_ATTRIBUTE(2401,169661
#define ASN1_seq_pack_X509_ATTRIBUTE(2403,169839
#define ASN1_seq_unpack_X509_ATTRIBUTE(2405,169969
#define d2i_ASN1_SET_OF_X509_CRL(2408,170118
#define i2d_ASN1_SET_OF_X509_CRL(2410,170309
#define ASN1_seq_pack_X509_CRL(2412,170475
#define ASN1_seq_unpack_X509_CRL(2414,170593
#define d2i_ASN1_SET_OF_X509_EXTENSION(2417,170730
#define i2d_ASN1_SET_OF_X509_EXTENSION(2419,170933
#define ASN1_seq_pack_X509_EXTENSION(2421,171111
#define ASN1_seq_unpack_X509_EXTENSION(2423,171241
#define d2i_ASN1_SET_OF_X509_NAME_ENTRY(2426,171390
#define i2d_ASN1_SET_OF_X509_NAME_ENTRY(2428,171595
#define ASN1_seq_pack_X509_NAME_ENTRY(2430,171775
#define ASN1_seq_unpack_X509_NAME_ENTRY(2432,171907
#define d2i_ASN1_SET_OF_X509_REVOKED(2435,172058
#define i2d_ASN1_SET_OF_X509_REVOKED(2437,172257
#define ASN1_seq_pack_X509_REVOKED(2439,172431
#define ASN1_seq_unpack_X509_REVOKED(2441,172557
#define PKCS12_decrypt_d2i_PKCS12_SAFEBAG(2444,172702
#define PKCS12_decrypt_d2i_PKCS7(2447,172907
#define lh_ADDED_OBJ_new(2450,173094
#define lh_ADDED_OBJ_insert(2451,173153
#define lh_ADDED_OBJ_retrieve(2452,173223
#define lh_ADDED_OBJ_delete(2453,173297
#define lh_ADDED_OBJ_doall(2454,173367
#define lh_ADDED_OBJ_doall_arg(2455,173431
#define lh_ADDED_OBJ_error(2457,173533
#define lh_ADDED_OBJ_num_items(2458,173591
#define lh_ADDED_OBJ_down_load(2459,173657
#define lh_ADDED_OBJ_node_stats_bio(2460,173723
#define lh_ADDED_OBJ_node_usage_stats_bio(2462,173811
#define lh_ADDED_OBJ_stats_bio(2464,173911
#define lh_ADDED_OBJ_free(2466,173989
#define lh_APP_INFO_new(2468,174046
#define lh_APP_INFO_insert(2469,174102
#define lh_APP_INFO_retrieve(2470,174170
#define lh_APP_INFO_delete(2471,174242
#define lh_APP_INFO_doall(2472,174310
#define lh_APP_INFO_doall_arg(2473,174372
#define lh_APP_INFO_error(2475,174472
#define lh_APP_INFO_num_items(2476,174528
#define lh_APP_INFO_down_load(2477,174592
#define lh_APP_INFO_node_stats_bio(2478,174656
#define lh_APP_INFO_node_usage_stats_bio(2480,174742
#define lh_APP_INFO_stats_bio(2482,174840
#define lh_APP_INFO_free(2484,174916
#define lh_CONF_VALUE_new(2486,174971
#define lh_CONF_VALUE_insert(2487,175033
#define lh_CONF_VALUE_retrieve(2488,175105
#define lh_CONF_VALUE_delete(2489,175181
#define lh_CONF_VALUE_doall(2490,175253
#define lh_CONF_VALUE_doall_arg(2491,175319
#define lh_CONF_VALUE_error(2493,175423
#define lh_CONF_VALUE_num_items(2494,175483
#define lh_CONF_VALUE_down_load(2495,175551
#define lh_CONF_VALUE_node_stats_bio(2496,175619
#define lh_CONF_VALUE_node_usage_stats_bio(2498,175709
#define lh_CONF_VALUE_stats_bio(2500,175811
#define lh_CONF_VALUE_free(2502,175891
#define lh_ENGINE_PILE_new(2504,175950
#define lh_ENGINE_PILE_insert(2505,176015
#define lh_ENGINE_PILE_retrieve(2506,176089
#define lh_ENGINE_PILE_delete(2507,176167
#define lh_ENGINE_PILE_doall(2508,176241
#define lh_ENGINE_PILE_doall_arg(2509,176309
#define lh_ENGINE_PILE_error(2511,176415
#define lh_ENGINE_PILE_num_items(2512,176477
#define lh_ENGINE_PILE_down_load(2513,176547
#define lh_ENGINE_PILE_node_stats_bio(2514,176617
#define lh_ENGINE_PILE_node_usage_stats_bio(2516,176709
#define lh_ENGINE_PILE_stats_bio(2518,176813
#define lh_ENGINE_PILE_free(2520,176895
#define lh_ERR_STATE_new(2522,176956
#define lh_ERR_STATE_insert(2523,177015
#define lh_ERR_STATE_retrieve(2524,177085
#define lh_ERR_STATE_delete(2525,177159
#define lh_ERR_STATE_doall(2526,177229
#define lh_ERR_STATE_doall_arg(2527,177293
#define lh_ERR_STATE_error(2529,177395
#define lh_ERR_STATE_num_items(2530,177453
#define lh_ERR_STATE_down_load(2531,177519
#define lh_ERR_STATE_node_stats_bio(2532,177585
#define lh_ERR_STATE_node_usage_stats_bio(2534,177673
#define lh_ERR_STATE_stats_bio(2536,177773
#define lh_ERR_STATE_free(2538,177851
#define lh_ERR_STRING_DATA_new(2540,177908
#define lh_ERR_STRING_DATA_insert(2541,177985
#define lh_ERR_STRING_DATA_retrieve(2542,178067
#define lh_ERR_STRING_DATA_delete(2543,178153
#define lh_ERR_STRING_DATA_doall(2544,178235
#define lh_ERR_STRING_DATA_doall_arg(2545,178311
#define lh_ERR_STRING_DATA_error(2547,178425
#define lh_ERR_STRING_DATA_num_items(2548,178495
#define lh_ERR_STRING_DATA_down_load(2549,178573
#define lh_ERR_STRING_DATA_node_stats_bio(2550,178651
#define lh_ERR_STRING_DATA_node_usage_stats_bio(2552,178751
#define lh_ERR_STRING_DATA_stats_bio(2554,178863
#define lh_ERR_STRING_DATA_free(2556,178953
#define lh_EX_CLASS_ITEM_new(2558,179022
#define lh_EX_CLASS_ITEM_insert(2559,179093
#define lh_EX_CLASS_ITEM_retrieve(2560,179171
#define lh_EX_CLASS_ITEM_delete(2561,179253
#define lh_EX_CLASS_ITEM_doall(2562,179331
#define lh_EX_CLASS_ITEM_doall_arg(2563,179403
#define lh_EX_CLASS_ITEM_error(2565,179513
#define lh_EX_CLASS_ITEM_num_items(2566,179579
#define lh_EX_CLASS_ITEM_down_load(2567,179653
#define lh_EX_CLASS_ITEM_node_stats_bio(2568,179727
#define lh_EX_CLASS_ITEM_node_usage_stats_bio(2570,179823
#define lh_EX_CLASS_ITEM_stats_bio(2572,179931
#define lh_EX_CLASS_ITEM_free(2574,180017
#define lh_FUNCTION_new(2576,180082
#define lh_FUNCTION_insert(2577,180138
#define lh_FUNCTION_retrieve(2578,180206
#define lh_FUNCTION_delete(2579,180278
#define lh_FUNCTION_doall(2580,180346
#define lh_FUNCTION_doall_arg(2581,180408
#define lh_FUNCTION_error(2583,180508
#define lh_FUNCTION_num_items(2584,180564
#define lh_FUNCTION_down_load(2585,180628
#define lh_FUNCTION_node_stats_bio(2586,180692
#define lh_FUNCTION_node_usage_stats_bio(2588,180778
#define lh_FUNCTION_stats_bio(2590,180876
#define lh_FUNCTION_free(2592,180952
#define lh_MEM_new(2594,181007
#define lh_MEM_insert(2595,181048
#define lh_MEM_retrieve(2596,181106
#define lh_MEM_delete(2597,181168
#define lh_MEM_doall(2598,181226
#define lh_MEM_doall_arg(2599,181278
#define lh_MEM_error(2601,181368
#define lh_MEM_num_items(2602,181414
#define lh_MEM_down_load(2603,181468
#define lh_MEM_node_stats_bio(2604,181522
#define lh_MEM_node_usage_stats_bio(2606,181598
#define lh_MEM_stats_bio(2608,181686
#define lh_MEM_free(2610,181752
#define lh_OBJ_NAME_new(2612,181797
#define lh_OBJ_NAME_insert(2613,181853
#define lh_OBJ_NAME_retrieve(2614,181921
#define lh_OBJ_NAME_delete(2615,181993
#define lh_OBJ_NAME_doall(2616,182061
#define lh_OBJ_NAME_doall_arg(2617,182123
#define lh_OBJ_NAME_error(2619,182223
#define lh_OBJ_NAME_num_items(2620,182279
#define lh_OBJ_NAME_down_load(2621,182343
#define lh_OBJ_NAME_node_stats_bio(2622,182407
#define lh_OBJ_NAME_node_usage_stats_bio(2624,182493
#define lh_OBJ_NAME_stats_bio(2626,182591
#define lh_OBJ_NAME_free(2628,182667
#define lh_OPENSSL_CSTRING_new(2630,182722
#define lh_OPENSSL_CSTRING_insert(2631,182799
#define lh_OPENSSL_CSTRING_retrieve(2632,182881
#define lh_OPENSSL_CSTRING_delete(2633,182967
#define lh_OPENSSL_CSTRING_doall(2634,183049
#define lh_OPENSSL_CSTRING_doall_arg(2635,183125
#define lh_OPENSSL_CSTRING_error(2637,183239
#define lh_OPENSSL_CSTRING_num_items(2638,183309
#define lh_OPENSSL_CSTRING_down_load(2639,183387
#define lh_OPENSSL_CSTRING_node_stats_bio(2640,183465
#define lh_OPENSSL_CSTRING_node_usage_stats_bio(2642,183565
#define lh_OPENSSL_CSTRING_stats_bio(2644,183677
#define lh_OPENSSL_CSTRING_free(2646,183767
#define lh_OPENSSL_STRING_new(2648,183836
#define lh_OPENSSL_STRING_insert(2649,183910
#define lh_OPENSSL_STRING_retrieve(2650,183990
#define lh_OPENSSL_STRING_delete(2651,184074
#define lh_OPENSSL_STRING_doall(2652,184154
#define lh_OPENSSL_STRING_doall_arg(2653,184228
#define lh_OPENSSL_STRING_error(2655,184340
#define lh_OPENSSL_STRING_num_items(2656,184408
#define lh_OPENSSL_STRING_down_load(2657,184484
#define lh_OPENSSL_STRING_node_stats_bio(2658,184560
#define lh_OPENSSL_STRING_node_usage_stats_bio(2660,184658
#define lh_OPENSSL_STRING_stats_bio(2662,184768
#define lh_OPENSSL_STRING_free(2664,184856
#define lh_SSL_SESSION_new(2666,184923
#define lh_SSL_SESSION_insert(2667,184988
#define lh_SSL_SESSION_retrieve(2668,185062
#define lh_SSL_SESSION_delete(2669,185140
#define lh_SSL_SESSION_doall(2670,185214
#define lh_SSL_SESSION_doall_arg(2671,185282
#define lh_SSL_SESSION_error(2673,185388
#define lh_SSL_SESSION_num_items(2674,185450
#define lh_SSL_SESSION_down_load(2675,185520
#define lh_SSL_SESSION_node_stats_bio(2676,185590
#define lh_SSL_SESSION_node_usage_stats_bio(2678,185682
#define lh_SSL_SESSION_stats_bio(2680,185786
#define lh_SSL_SESSION_free(2682,185868

crypto/stack/stack.h,252
#define HEADER_STACK_H60,3220
typedef struct stack_st66,3285
	int num;68,3312
	char **data;data69,3322
	int sorted;70,3336
	int num_alloc;72,3350
	int (*comp)comp73,3366
	} _STACK;74,3408
#define M_sk_num(76,3453
#define M_sk_value(77,3497

crypto/stack/stack.c,757
#undef MIN_NODES73,3548
#define MIN_NODES	74,3565
const char STACK_version[STACK_version76,3586
int (*sk_set_cmp_func(sk_set_cmp_func80,3665
_STACK *sk_dup(sk_dup92,3889
_STACK *sk_new_null(sk_new_null115,4338
_STACK *sk_new(sk_new120,4427
int sk_insert(142,4836
void *sk_delete_ptr(sk_delete_ptr180,5514
void *sk_delete(sk_delete190,5665
static int internal_find(213,6077
int sk_find(235,6530
int sk_find_ex(239,6639
int sk_push(244,6748
int sk_unshift(249,6828
void *sk_shift(sk_shift254,6905
void *sk_pop(sk_pop261,7029
void sk_zero(268,7159
void sk_pop_free(276,7309
void sk_free(287,7491
int sk_num(294,7614
void *sk_value(sk_value300,7692
void *sk_set(sk_set306,7809
void sk_sort(312,7941
int sk_is_sorted(329,8479

crypto/ebcdic.c,290
static void *dummy=dummy7,146
const unsigned char os_toascii[os_toascii32,1002
const unsigned char os_toebcdic[os_toebcdic69,3176
const unsigned char os_toascii[os_toascii113,5547
const unsigned char os_toebcdic[os_toebcdic153,8116
ebcdic2ascii(196,10838
ascii2ebcdic(209,11072

crypto/fips_ers.c,31
static void *dummy=dummy6,83

crypto/ripemd/rmd_one.c,44
unsigned char *RIPEMD160(RIPEMD16064,3296

crypto/ripemd/rmdconst.h,7540
#define KL0 58,3200
#define KL1 59,3224
#define KL2 60,3248
#define KL3 61,3272
#define KL4 62,3296
#define KR0 64,3321
#define KR1 65,3345
#define KR2 66,3369
#define KR3 67,3393
#define KR4 68,3417
#define WL00 70,3442
#define SL00 71,3458
#define WL01 72,3474
#define SL01 73,3490
#define WL02 74,3506
#define SL02 75,3522
#define WL03 76,3538
#define SL03 77,3554
#define WL04 78,3570
#define SL04 79,3586
#define WL05 80,3602
#define SL05 81,3618
#define WL06 82,3634
#define SL06 83,3650
#define WL07 84,3666
#define SL07 85,3682
#define WL08 86,3698
#define SL08 87,3714
#define WL09 88,3730
#define SL09 89,3746
#define WL10 90,3762
#define SL10 91,3778
#define WL11 92,3794
#define SL11 93,3810
#define WL12 94,3826
#define SL12 95,3842
#define WL13 96,3858
#define SL13 97,3874
#define WL14 98,3890
#define SL14 99,3906
#define WL15 100,3922
#define SL15 101,3938
#define WL16 103,3955
#define SL16 104,3971
#define WL17 105,3987
#define SL17 106,4003
#define WL18 107,4019
#define SL18 108,4035
#define WL19 109,4051
#define SL19 110,4067
#define WL20 111,4083
#define SL20 112,4099
#define WL21 113,4115
#define SL21 114,4131
#define WL22 115,4147
#define SL22 116,4163
#define WL23 117,4179
#define SL23 118,4195
#define WL24 119,4211
#define SL24 120,4227
#define WL25 121,4243
#define SL25 122,4259
#define WL26 123,4275
#define SL26 124,4291
#define WL27 125,4307
#define SL27 126,4323
#define WL28 127,4339
#define SL28 128,4355
#define WL29 129,4371
#define SL29 130,4387
#define WL30 131,4403
#define SL30 132,4419
#define WL31 133,4435
#define SL31 134,4451
#define WL32 136,4468
#define SL32 137,4484
#define WL33 138,4500
#define SL33 139,4516
#define WL34 140,4532
#define SL34 141,4548
#define WL35 142,4564
#define SL35 143,4580
#define WL36 144,4596
#define SL36 145,4612
#define WL37 146,4628
#define SL37 147,4644
#define WL38 148,4660
#define SL38 149,4676
#define WL39 150,4692
#define SL39 151,4708
#define WL40 152,4724
#define SL40 153,4740
#define WL41 154,4756
#define SL41 155,4772
#define WL42 156,4788
#define SL42 157,4804
#define WL43 158,4820
#define SL43 159,4836
#define WL44 160,4852
#define SL44 161,4868
#define WL45 162,4884
#define SL45 163,4900
#define WL46 164,4916
#define SL46 165,4932
#define WL47 166,4948
#define SL47 167,4964
#define WL48 169,4981
#define SL48 170,4997
#define WL49 171,5013
#define SL49 172,5029
#define WL50 173,5045
#define SL50 174,5061
#define WL51 175,5077
#define SL51 176,5093
#define WL52 177,5109
#define SL52 178,5125
#define WL53 179,5141
#define SL53 180,5157
#define WL54 181,5173
#define SL54 182,5189
#define WL55 183,5205
#define SL55 184,5221
#define WL56 185,5237
#define SL56 186,5253
#define WL57 187,5269
#define SL57 188,5285
#define WL58 189,5301
#define SL58 190,5317
#define WL59 191,5333
#define SL59 192,5349
#define WL60 193,5365
#define SL60 194,5381
#define WL61 195,5397
#define SL61 196,5413
#define WL62 197,5429
#define SL62 198,5445
#define WL63 199,5461
#define SL63 200,5477
#define WL64 202,5494
#define SL64 203,5510
#define WL65 204,5526
#define SL65 205,5542
#define WL66 206,5558
#define SL66 207,5574
#define WL67 208,5590
#define SL67 209,5606
#define WL68 210,5622
#define SL68 211,5638
#define WL69 212,5654
#define SL69 213,5670
#define WL70 214,5686
#define SL70 215,5702
#define WL71 216,5718
#define SL71 217,5734
#define WL72 218,5750
#define SL72 219,5766
#define WL73 220,5782
#define SL73 221,5798
#define WL74 222,5814
#define SL74 223,5830
#define WL75 224,5846
#define SL75 225,5862
#define WL76 226,5878
#define SL76 227,5894
#define WL77 228,5910
#define SL77 229,5926
#define WL78 230,5942
#define SL78 231,5958
#define WL79 232,5974
#define SL79 233,5990
#define WR00 235,6007
#define SR00 236,6023
#define WR01 237,6039
#define SR01 238,6055
#define WR02 239,6071
#define SR02 240,6087
#define WR03 241,6103
#define SR03 242,6119
#define WR04 243,6135
#define SR04 244,6151
#define WR05 245,6167
#define SR05 246,6183
#define WR06 247,6199
#define SR06 248,6215
#define WR07 249,6231
#define SR07 250,6247
#define WR08 251,6263
#define SR08 252,6279
#define WR09 253,6295
#define SR09 254,6311
#define WR10 255,6327
#define SR10 256,6343
#define WR11 257,6359
#define SR11 258,6375
#define WR12 259,6391
#define SR12 260,6407
#define WR13 261,6423
#define SR13 262,6439
#define WR14 263,6455
#define SR14 264,6471
#define WR15 265,6487
#define SR15 266,6503
#define WR16 268,6520
#define SR16 269,6536
#define WR17 270,6552
#define SR17 271,6568
#define WR18 272,6584
#define SR18 273,6600
#define WR19 274,6616
#define SR19 275,6632
#define WR20 276,6648
#define SR20 277,6664
#define WR21 278,6680
#define SR21 279,6696
#define WR22 280,6712
#define SR22 281,6728
#define WR23 282,6744
#define SR23 283,6760
#define WR24 284,6776
#define SR24 285,6792
#define WR25 286,6808
#define SR25 287,6824
#define WR26 288,6840
#define SR26 289,6856
#define WR27 290,6872
#define SR27 291,6888
#define WR28 292,6904
#define SR28 293,6920
#define WR29 294,6936
#define SR29 295,6952
#define WR30 296,6968
#define SR30 297,6984
#define WR31 298,7000
#define SR31 299,7016
#define WR32 301,7033
#define SR32 302,7049
#define WR33 303,7065
#define SR33 304,7081
#define WR34 305,7097
#define SR34 306,7113
#define WR35 307,7129
#define SR35 308,7145
#define WR36 309,7161
#define SR36 310,7177
#define WR37 311,7193
#define SR37 312,7209
#define WR38 313,7225
#define SR38 314,7241
#define WR39 315,7257
#define SR39 316,7273
#define WR40 317,7289
#define SR40 318,7305
#define WR41 319,7321
#define SR41 320,7337
#define WR42 321,7353
#define SR42 322,7369
#define WR43 323,7385
#define SR43 324,7401
#define WR44 325,7417
#define SR44 326,7433
#define WR45 327,7449
#define SR45 328,7465
#define WR46 329,7481
#define SR46 330,7497
#define WR47 331,7513
#define SR47 332,7529
#define WR48 334,7546
#define SR48 335,7562
#define WR49 336,7578
#define SR49 337,7594
#define WR50 338,7610
#define SR50 339,7626
#define WR51 340,7642
#define SR51 341,7658
#define WR52 342,7674
#define SR52 343,7690
#define WR53 344,7706
#define SR53 345,7722
#define WR54 346,7738
#define SR54 347,7754
#define WR55 348,7770
#define SR55 349,7786
#define WR56 350,7802
#define SR56 351,7818
#define WR57 352,7834
#define SR57 353,7850
#define WR58 354,7866
#define SR58 355,7882
#define WR59 356,7898
#define SR59 357,7914
#define WR60 358,7930
#define SR60 359,7946
#define WR61 360,7962
#define SR61 361,7978
#define WR62 362,7994
#define SR62 363,8010
#define WR63 364,8026
#define SR63 365,8042
#define WR64 367,8059
#define SR64 368,8075
#define WR65 369,8091
#define SR65 370,8107
#define WR66 371,8123
#define SR66 372,8139
#define WR67 373,8155
#define SR67 374,8171
#define WR68 375,8187
#define SR68 376,8203
#define WR69 377,8219
#define SR69 378,8235
#define WR70 379,8251
#define SR70 380,8267
#define WR71 381,8283
#define SR71 382,8299
#define WR72 383,8315
#define SR72 384,8331
#define WR73 385,8347
#define SR73 386,8363
#define WR74 387,8379
#define SR74 388,8395
#define WR75 389,8411
#define SR75 390,8427
#define WR76 391,8443
#define SR76 392,8459
#define WR77 393,8475
#define SR77 394,8491
#define WR78 395,8507
#define SR78 396,8523
#define WR79 397,8539
#define SR79 398,8555

crypto/ripemd/rmd_dgst.c,208
const char RMD160_version[RMD160_version64,3301
#    define ripemd160_block 68,3464
fips_md_init(73,3604
#undef X86,3811
void ripemd160_block_data_order 88,3827
# define X(97,4197
# define X(100,4247

crypto/ripemd/rmd160.c,81
#define BUFSIZE	63,3267
int main(71,3434
void do_fp(99,3770
void pt(119,4099

crypto/ripemd/rmdtest.c,128
int main(66,3307
static char *test[test79,3512
static char *ret[ret91,3828
int main(103,4250
static char *pt(pt136,4832

crypto/ripemd/ripemd.h,619
#define HEADER_RIPEMD_H60,3223
#define RIPEMD160_LONG 74,3419
#define RIPEMD160_LONG 76,3510
#define RIPEMD160_LONG_LOG2 77,3547
#define RIPEMD160_LONG 79,3583
#define RIPEMD160_CBLOCK	82,3627
#define RIPEMD160_LBLOCK	83,3655
#define RIPEMD160_DIGEST_LENGTH	84,3701
typedef struct RIPEMD160state_st86,3737
	RIPEMD160_LONG A,88,3773
	RIPEMD160_LONG A,B,88,3773
	RIPEMD160_LONG A,B,C,88,3773
	RIPEMD160_LONG A,B,C,D,88,3773
	RIPEMD160_LONG A,B,C,D,E;88,3773
	RIPEMD160_LONG Nl,89,3800
	RIPEMD160_LONG Nl,Nh;89,3800
	RIPEMD160_LONG data[data90,3823
	unsigned int   num;91,3863
	} RIPEMD160_CTX;92,3884

crypto/ripemd/rmd_locl.h,846
#define RIPEMD160_LONG_LOG2 65,3331
#  define ripemd160_block_data_order 75,3646
#define DATA_ORDER_IS_LITTLE_ENDIAN81,3809
#define HASH_LONG 83,3846
#define HASH_CTX 84,3893
#define HASH_CBLOCK 85,3939
#define HASH_UPDATE 86,3988
#define HASH_TRANSFORM 87,4037
#define HASH_FINAL 88,4089
#define	HASH_MAKE_STRING(89,4137
#define HASH_BLOCK_DATA_ORDER 97,4369
#define F1(102,4461
#define F2(103,4494
#define F3(104,4533
#define F4(105,4568
#define F5(106,4611
#define F1(111,4731
#define F2(112,4767
#define F3(113,4813
#define F4(114,4854
#define F5(115,4900
#define RIPEMD160_A	118,4949
#define RIPEMD160_B	119,4981
#define RIPEMD160_C	120,5013
#define RIPEMD160_D	121,5045
#define RIPEMD160_E	122,5077
#define RIP1(126,5133
#define RIP2(131,5241
#define RIP3(136,5353
#define RIP4(141,5465
#define RIP5(146,5577

crypto/armv4cpuid.S,1130
.code	4,29
.align	6,39
.global	7,48
.type	8,74
_armv7_neon_probe:_armv7_neon_probe9,108
.size	12,190
.global	14,235
.type	15,255
_armv7_tick:_armv7_tick16,283
.size	19,345
.global	21,378
.type	22,405
OPENSSL_atomic_add:OPENSSL_atomic_add23,440
.Ladd:.Ladd25,480
.Lspin:.Lspin40,713
.size	55,940
.global	57,987
.type	58,1011
OPENSSL_cleanse:OPENSSL_cleanse59,1043
.Little:.Little66,1142
.Lot:.Lot72,1215
.Laligned:.Laligned77,1285
.Lcleanse_done:.Lcleanse_done83,1370
.size	87,1436
.global	89,1477
.type	90,1502
OPENSSL_wipe_cpu:OPENSSL_wipe_cpu91,1535
.Lwipe_done:.Lwipe_done112,2175
.size	117,2249
.global	119,2292
.type	120,2323
OPENSSL_instrument_bus:OPENSSL_instrument_bus121,2362
.size	126,2450
.global	128,2505
.type	129,2537
OPENSSL_instrument_bus2:OPENSSL_instrument_bus2130,2577
.size	135,2666
.align	137,2723
.LOPENSSL_armcap:.LOPENSSL_armcap138,2732
.word	139,2750
.align	141,2810
.Lspinlock:.Lspinlock143,2825
.word	144,2837
.align	145,2874
.align	148,2890
atomic_add_spinlock:atomic_add_spinlock149,2899
.word	150,2920
.comm	153,2936
.hidden	154,2963

crypto/store/store.h,10424
#define HEADER_STORE_H60,2805
#define STORE_CTRL_SET_DIRECTORY	101,3970
#define STORE_CTRL_SET_FILE	103,4090
#define STORE_CTRL_SET_CONF_FILE	106,4251
#define STORE_CTRL_SET_CONF_SECTION	109,4434
#define STORE_set_app_data(113,4517
#define STORE_get_app_data(114,4578
typedef enum STORE_object_types141,5881
	STORE_OBJECT_TYPE_X509_CERTIFICATE=143,5916
	STORE_OBJECT_TYPE_X509_CERTIFICATE=	0x01,x01143,5916
	STORE_OBJECT_TYPE_X509_CRL=144,5972
	STORE_OBJECT_TYPE_X509_CRL=		0x02,x02144,5972
	STORE_OBJECT_TYPE_PRIVATE_KEY=145,6025
	STORE_OBJECT_TYPE_PRIVATE_KEY=		0x03,x03145,6025
	STORE_OBJECT_TYPE_PUBLIC_KEY=146,6081
	STORE_OBJECT_TYPE_PUBLIC_KEY=		0x04,x04146,6081
	STORE_OBJECT_TYPE_NUMBER=147,6136
	STORE_OBJECT_TYPE_NUMBER=		0x05,x05147,6136
	STORE_OBJECT_TYPE_ARBITRARY=148,6185
	STORE_OBJECT_TYPE_ARBITRARY=		0x06,x06148,6185
	STORE_OBJECT_TYPE_NUM=149,6238
	STORE_OBJECT_TYPE_NUM=			0x06 x06149,6238
	} STORE_OBJECT_TYPES;151,6317
typedef enum STORE_params158,6684
	STORE_PARAM_EVP_TYPE=160,6713
	STORE_PARAM_EVP_TYPE=			0x01,x01160,6713
	STORE_PARAM_BITS=161,6754
	STORE_PARAM_BITS=			0x02,x02161,6754
	STORE_PARAM_KEY_PARAMETERS=162,6794
	STORE_PARAM_KEY_PARAMETERS=		0x03,x03162,6794
	STORE_PARAM_KEY_NO_PARAMETERS=163,6840
	STORE_PARAM_KEY_NO_PARAMETERS=		0x04,x04163,6840
	STORE_PARAM_AUTH_PASSPHRASE=164,6889
	STORE_PARAM_AUTH_PASSPHRASE=		0x05,x05164,6889
	STORE_PARAM_AUTH_KRB5_TICKET=165,6939
	STORE_PARAM_AUTH_KRB5_TICKET=		0x06,x06165,6939
	STORE_PARAM_TYPE_NUM=166,6990
	STORE_PARAM_TYPE_NUM=			0x06 x06166,6990
	} STORE_PARAM_TYPES;168,7071
typedef enum STORE_attribs175,7415
	STORE_ATTR_END=177,7445
	STORE_ATTR_END=				0x00,x00177,7445
	STORE_ATTR_FRIENDLYNAME=178,7471
	STORE_ATTR_FRIENDLYNAME=		0x01,x01178,7471
	STORE_ATTR_KEYID=179,7519
	STORE_ATTR_KEYID=			0x02,x02179,7519
	STORE_ATTR_ISSUERKEYID=180,7574
	STORE_ATTR_ISSUERKEYID=			0x03,x03180,7574
	STORE_ATTR_SUBJECTKEYID=181,7635
	STORE_ATTR_SUBJECTKEYID=		0x04,x04181,7635
	STORE_ATTR_ISSUERSERIALHASH=182,7696
	STORE_ATTR_ISSUERSERIALHASH=		0x05,x05182,7696
	STORE_ATTR_ISSUER=183,7761
	STORE_ATTR_ISSUER=			0x06,x06183,7761
	STORE_ATTR_SERIAL=184,7807
	STORE_ATTR_SERIAL=			0x07,x07184,7807
	STORE_ATTR_SUBJECT=185,7850
	STORE_ATTR_SUBJECT=			0x08,x08185,7850
	STORE_ATTR_CERTHASH=186,7897
	STORE_ATTR_CERTHASH=			0x09,x09186,7897
	STORE_ATTR_EMAIL=187,7955
	STORE_ATTR_EMAIL=			0x0a,x0a187,7955
	STORE_ATTR_FILENAME=188,7997
	STORE_ATTR_FILENAME=			0x0b,x0b188,7997
	STORE_ATTR_TYPE_NUM=189,8042
	STORE_ATTR_TYPE_NUM=			0x0b,x0b189,8042
	STORE_ATTR_OR=191,8122
	STORE_ATTR_OR=				0xff xff191,8122
	} STORE_ATTR_TYPES;195,8241
typedef enum STORE_certificate_status199,8405
	STORE_X509_VALID=201,8446
	STORE_X509_VALID=			0x00,x00201,8446
	STORE_X509_EXPIRED=202,8473
	STORE_X509_EXPIRED=			0x01,x01202,8473
	STORE_X509_SUSPENDED=203,8502
	STORE_X509_SUSPENDED=			0x02,x02203,8502
	STORE_X509_REVOKED=204,8533
	STORE_X509_REVOKED=			0x03x03204,8533
	} STORE_CERTIFICATE_STATUS;205,8561
typedef struct STORE_OBJECT_st212,8969
	STORE_OBJECT_TYPES type;214,9003
			STORE_CERTIFICATE_STATUS status;219,9054
			X509 *certificate;certificate220,9090
			} x509;221,9112
		X509_CRL *crl;crl222,9123
		EVP_PKEY *key;key223,9140
		BIGNUM *number;number224,9157
		BUF_MEM *arbitrary;arbitrary225,9175
		} data;226,9197
	} STORE_OBJECT;227,9207
DECLARE_STACK_OF(228,9224
typedef int (*STORE_INITIALISE_FUNC_PTR)STORE_INITIALISE_FUNC_PTR327,14159
typedef void (*STORE_CLEANUP_FUNC_PTR)STORE_CLEANUP_FUNC_PTR328,14210
typedef STORE_OBJECT *(*STORE_GENERATE_OBJECT_FUNC_PTR)STORE_GENERATE_OBJECT_FUNC_PTR329,14259
typedef STORE_OBJECT *(*STORE_GET_OBJECT_FUNC_PTR)STORE_GET_OBJECT_FUNC_PTR330,14404
typedef void *(*STORE_START_OBJECT_FUNC_PTR)STORE_START_OBJECT_FUNC_PTR331,14544
typedef STORE_OBJECT *(*STORE_NEXT_OBJECT_FUNC_PTR)STORE_NEXT_OBJECT_FUNC_PTR332,14678
typedef int (*STORE_END_OBJECT_FUNC_PTR)STORE_END_OBJECT_FUNC_PTR333,14754
typedef int (*STORE_HANDLE_OBJECT_FUNC_PTR)STORE_HANDLE_OBJECT_FUNC_PTR334,14819
typedef int (*STORE_STORE_OBJECT_FUNC_PTR)STORE_STORE_OBJECT_FUNC_PTR335,14952
typedef int (*STORE_MODIFY_OBJECT_FUNC_PTR)STORE_MODIFY_OBJECT_FUNC_PTR336,15104
typedef int (*STORE_GENERIC_FUNC_PTR)STORE_GENERIC_FUNC_PTR337,15343
typedef int (*STORE_CTRL_FUNC_PTR)STORE_CTRL_FUNC_PTR338,15445
typedef struct STORE_attr_info_st STORE_ATTR_INFO;377,18326
#define STORE_F_MEM_DELETE	437,21143
#define STORE_F_MEM_GENERATE	438,21178
#define STORE_F_MEM_LIST_END	439,21215
#define STORE_F_MEM_LIST_NEXT	440,21252
#define STORE_F_MEM_LIST_START	441,21290
#define STORE_F_MEM_MODIFY	442,21329
#define STORE_F_MEM_STORE	443,21364
#define STORE_F_STORE_ATTR_INFO_GET0_CSTR	444,21398
#define STORE_F_STORE_ATTR_INFO_GET0_DN	445,21446
#define STORE_F_STORE_ATTR_INFO_GET0_NUMBER	446,21493
#define STORE_F_STORE_ATTR_INFO_GET0_SHA1STR	447,21543
#define STORE_F_STORE_ATTR_INFO_MODIFY_CSTR	448,21594
#define STORE_F_STORE_ATTR_INFO_MODIFY_DN	449,21644
#define STORE_F_STORE_ATTR_INFO_MODIFY_NUMBER	450,21692
#define STORE_F_STORE_ATTR_INFO_MODIFY_SHA1STR	451,21744
#define STORE_F_STORE_ATTR_INFO_SET_CSTR	452,21797
#define STORE_F_STORE_ATTR_INFO_SET_DN	453,21844
#define STORE_F_STORE_ATTR_INFO_SET_NUMBER	454,21890
#define STORE_F_STORE_ATTR_INFO_SET_SHA1STR	455,21939
#define STORE_F_STORE_CERTIFICATE	456,21989
#define STORE_F_STORE_CTRL	457,22030
#define STORE_F_STORE_DELETE_ARBITRARY	458,22065
#define STORE_F_STORE_DELETE_CERTIFICATE	459,22111
#define STORE_F_STORE_DELETE_CRL	460,22158
#define STORE_F_STORE_DELETE_NUMBER	461,22198
#define STORE_F_STORE_DELETE_PRIVATE_KEY	462,22241
#define STORE_F_STORE_DELETE_PUBLIC_KEY	463,22288
#define STORE_F_STORE_GENERATE_CRL	464,22335
#define STORE_F_STORE_GENERATE_KEY	465,22377
#define STORE_F_STORE_GET_ARBITRARY	466,22419
#define STORE_F_STORE_GET_CERTIFICATE	467,22462
#define STORE_F_STORE_GET_CRL	468,22507
#define STORE_F_STORE_GET_NUMBER	469,22545
#define STORE_F_STORE_GET_PRIVATE_KEY	470,22585
#define STORE_F_STORE_GET_PUBLIC_KEY	471,22630
#define STORE_F_STORE_LIST_CERTIFICATE_END	472,22674
#define STORE_F_STORE_LIST_CERTIFICATE_ENDP	473,22723
#define STORE_F_STORE_LIST_CERTIFICATE_NEXT	474,22773
#define STORE_F_STORE_LIST_CERTIFICATE_START	475,22823
#define STORE_F_STORE_LIST_CRL_END	476,22874
#define STORE_F_STORE_LIST_CRL_ENDP	477,22916
#define STORE_F_STORE_LIST_CRL_NEXT	478,22959
#define STORE_F_STORE_LIST_CRL_START	479,23002
#define STORE_F_STORE_LIST_PRIVATE_KEY_END	480,23046
#define STORE_F_STORE_LIST_PRIVATE_KEY_ENDP	481,23095
#define STORE_F_STORE_LIST_PRIVATE_KEY_NEXT	482,23145
#define STORE_F_STORE_LIST_PRIVATE_KEY_START	483,23195
#define STORE_F_STORE_LIST_PUBLIC_KEY_END	484,23246
#define STORE_F_STORE_LIST_PUBLIC_KEY_ENDP	485,23294
#define STORE_F_STORE_LIST_PUBLIC_KEY_NEXT	486,23343
#define STORE_F_STORE_LIST_PUBLIC_KEY_START	487,23392
#define STORE_F_STORE_MODIFY_ARBITRARY	488,23442
#define STORE_F_STORE_MODIFY_CERTIFICATE	489,23488
#define STORE_F_STORE_MODIFY_CRL	490,23535
#define STORE_F_STORE_MODIFY_NUMBER	491,23575
#define STORE_F_STORE_MODIFY_PRIVATE_KEY	492,23618
#define STORE_F_STORE_MODIFY_PUBLIC_KEY	493,23665
#define STORE_F_STORE_NEW_ENGINE	494,23712
#define STORE_F_STORE_NEW_METHOD	495,23752
#define STORE_F_STORE_PARSE_ATTRS_END	496,23792
#define STORE_F_STORE_PARSE_ATTRS_ENDP	497,23837
#define STORE_F_STORE_PARSE_ATTRS_NEXT	498,23883
#define STORE_F_STORE_PARSE_ATTRS_START	499,23929
#define STORE_F_STORE_REVOKE_CERTIFICATE	500,23976
#define STORE_F_STORE_REVOKE_PRIVATE_KEY	501,24023
#define STORE_F_STORE_REVOKE_PUBLIC_KEY	502,24070
#define STORE_F_STORE_STORE_ARBITRARY	503,24117
#define STORE_F_STORE_STORE_CERTIFICATE	504,24162
#define STORE_F_STORE_STORE_CRL	505,24209
#define STORE_F_STORE_STORE_NUMBER	506,24249
#define STORE_F_STORE_STORE_PRIVATE_KEY	507,24291
#define STORE_F_STORE_STORE_PUBLIC_KEY	508,24338
#define STORE_R_ALREADY_HAS_A_VALUE	511,24405
#define STORE_R_FAILED_DELETING_ARBITRARY	512,24448
#define STORE_R_FAILED_DELETING_CERTIFICATE	513,24496
#define STORE_R_FAILED_DELETING_KEY	514,24546
#define STORE_R_FAILED_DELETING_NUMBER	515,24589
#define STORE_R_FAILED_GENERATING_CRL	516,24635
#define STORE_R_FAILED_GENERATING_KEY	517,24680
#define STORE_R_FAILED_GETTING_ARBITRARY	518,24725
#define STORE_R_FAILED_GETTING_CERTIFICATE	519,24772
#define STORE_R_FAILED_GETTING_KEY	520,24821
#define STORE_R_FAILED_GETTING_NUMBER	521,24863
#define STORE_R_FAILED_LISTING_CERTIFICATES	522,24908
#define STORE_R_FAILED_LISTING_KEYS	523,24958
#define STORE_R_FAILED_MODIFYING_ARBITRARY	524,25001
#define STORE_R_FAILED_MODIFYING_CERTIFICATE	525,25050
#define STORE_R_FAILED_MODIFYING_CRL	526,25101
#define STORE_R_FAILED_MODIFYING_NUMBER	527,25145
#define STORE_R_FAILED_MODIFYING_PRIVATE_KEY	528,25192
#define STORE_R_FAILED_MODIFYING_PUBLIC_KEY	529,25243
#define STORE_R_FAILED_REVOKING_CERTIFICATE	530,25293
#define STORE_R_FAILED_REVOKING_KEY	531,25343
#define STORE_R_FAILED_STORING_ARBITRARY	532,25386
#define STORE_R_FAILED_STORING_CERTIFICATE	533,25433
#define STORE_R_FAILED_STORING_KEY	534,25482
#define STORE_R_FAILED_STORING_NUMBER	535,25524
#define STORE_R_NOT_IMPLEMENTED	536,25569
#define STORE_R_NO_CONTROL_FUNCTION	537,25609
#define STORE_R_NO_DELETE_ARBITRARY_FUNCTION	538,25652
#define STORE_R_NO_DELETE_NUMBER_FUNCTION	539,25703
#define STORE_R_NO_DELETE_OBJECT_FUNCTION	540,25751
#define STORE_R_NO_GENERATE_CRL_FUNCTION	541,25799
#define STORE_R_NO_GENERATE_OBJECT_FUNCTION	542,25846
#define STORE_R_NO_GET_OBJECT_ARBITRARY_FUNCTION	543,25896
#define STORE_R_NO_GET_OBJECT_FUNCTION	544,25950
#define STORE_R_NO_GET_OBJECT_NUMBER_FUNCTION	545,25996
#define STORE_R_NO_LIST_OBJECT_ENDP_FUNCTION	546,26048
#define STORE_R_NO_LIST_OBJECT_END_FUNCTION	547,26099
#define STORE_R_NO_LIST_OBJECT_NEXT_FUNCTION	548,26149
#define STORE_R_NO_LIST_OBJECT_START_FUNCTION	549,26200
#define STORE_R_NO_MODIFY_OBJECT_FUNCTION	550,26252
#define STORE_R_NO_REVOKE_OBJECT_FUNCTION	551,26300
#define STORE_R_NO_STORE	552,26348
#define STORE_R_NO_STORE_OBJECT_ARBITRARY_FUNCTION	553,26381
#define STORE_R_NO_STORE_OBJECT_FUNCTION	554,26437
#define STORE_R_NO_STORE_OBJECT_NUMBER_FUNCTION	555,26484
#define STORE_R_NO_VALUE	556,26538

crypto/store/str_locl.h,1036
#define HEADER_STORE_LOCL_H60,2813
struct store_method_st69,2939
	char *name;name71,2965
	STORE_INITIALISE_FUNC_PTR init;77,3151
	STORE_CLEANUP_FUNC_PTR clean;79,3230
	STORE_GENERATE_OBJECT_FUNC_PTR generate_object;81,3303
	STORE_GET_OBJECT_FUNC_PTR get_object;85,3534
	STORE_STORE_OBJECT_FUNC_PTR store_object;87,3613
	STORE_MODIFY_OBJECT_FUNC_PTR modify_object;89,3721
	STORE_HANDLE_OBJECT_FUNC_PTR revoke_object;91,3807
	STORE_HANDLE_OBJECT_FUNC_PTR delete_object;93,3893
	STORE_START_OBJECT_FUNC_PTR list_object_start;96,4025
	STORE_NEXT_OBJECT_FUNC_PTR list_object_next;97,4073
	STORE_END_OBJECT_FUNC_PTR list_object_end;98,4119
	STORE_END_OBJECT_FUNC_PTR list_object_endp;99,4163
	STORE_GENERIC_FUNC_PTR update_store;101,4277
	STORE_GENERIC_FUNC_PTR lock_store;103,4381
	STORE_GENERIC_FUNC_PTR unlock_store;105,4487
	STORE_CTRL_FUNC_PTR ctrl;108,4558
struct store_st111,4590
	const STORE_METHOD *meth;meth113,4609
	ENGINE *engine;engine115,4693
	CRYPTO_EX_DATA ex_data;117,4711
	int references;118,4736

crypto/store/str_meth.c,1888
STORE_METHOD *STORE_create_method(STORE_create_method63,2856
void STORE_destroy_method(78,3362
int STORE_method_set_initialise_function(86,3543
int STORE_method_set_cleanup_function(92,3674
int STORE_method_set_generate_function(98,3802
int STORE_method_set_get_function(104,3955
int STORE_method_set_store_function(110,4083
int STORE_method_set_modify_function(116,4221
int STORE_method_set_revoke_function(122,4364
int STORE_method_set_delete_function(128,4507
int STORE_method_set_list_start_function(134,4650
int STORE_method_set_list_next_function(140,4808
int STORE_method_set_list_end_function(146,4961
int STORE_method_set_update_store_function(152,5109
int STORE_method_set_lock_store_function(158,5251
int STORE_method_set_unlock_store_function(164,5385
int STORE_method_set_ctrl_function(170,5527
STORE_INITIALISE_FUNC_PTR STORE_method_get_initialise_function(176,5646
STORE_CLEANUP_FUNC_PTR STORE_method_get_cleanup_function(181,5752
STORE_GENERATE_OBJECT_FUNC_PTR STORE_method_get_generate_function(186,5853
STORE_GET_OBJECT_FUNC_PTR STORE_method_get_get_function(191,5973
STORE_STORE_OBJECT_FUNC_PTR STORE_method_get_store_function(196,6078
STORE_MODIFY_OBJECT_FUNC_PTR STORE_method_get_modify_function(201,6189
STORE_HANDLE_OBJECT_FUNC_PTR STORE_method_get_revoke_function(206,6303
STORE_HANDLE_OBJECT_FUNC_PTR STORE_method_get_delete_function(211,6417
STORE_START_OBJECT_FUNC_PTR STORE_method_get_list_start_function(216,6531
STORE_NEXT_OBJECT_FUNC_PTR STORE_method_get_list_next_function(221,6652
STORE_END_OBJECT_FUNC_PTR STORE_method_get_list_end_function(226,6770
STORE_GENERIC_FUNC_PTR STORE_method_get_update_store_function(231,6885
STORE_GENERIC_FUNC_PTR STORE_method_get_lock_store_function(236,6998
STORE_GENERIC_FUNC_PTR STORE_method_get_unlock_store_function(241,7107
STORE_CTRL_FUNC_PTR STORE_method_get_ctrl_function(246,7220

crypto/store/str_mem.c,912
typedef struct mem_object_data_st79,3711
	STORE_OBJECT *object;object81,3748
	STORE_ATTR_INFO *attr_info;attr_info82,3771
	int references;83,3800
	} MEM_OBJECT_DATA;84,3817
DECLARE_STACK_OF(86,3838
struct mem_data_st87,3872
	STACK_OF(89,3894
struct mem_ctx_st97,4153
	int type;99,4174
	STACK_OF(100,4221
const STORE_METHOD *STORE_Memory(STORE_Memory157,6198
static int mem_init(162,6267
static void mem_clean(167,6315
static STORE_OBJECT *mem_generate(mem_generate172,6363
static STORE_OBJECT *mem_get(mem_get178,6562
static int mem_store(192,6894
static int mem_modify(199,7098
static int mem_delete(207,7391
static void *mem_list_start(mem_list_start221,8010
static STORE_OBJECT *mem_list_next(mem_list_next269,9273
static int mem_list_end(328,10716
static int mem_list_endp(342,11075
static int mem_lock(352,11320
static int mem_unlock(357,11422
static int mem_ctrl(362,11526

crypto/store/str_lib.c,4598
const char * const STORE_object_type_string[STORE_object_type_string69,2988
const int STORE_param_sizes[STORE_param_sizes80,3167
const int STORE_attr_sizes[STORE_attr_sizes89,3350
STORE *STORE_new_method(STORE_new_method105,3961
STORE *STORE_new_engine(STORE_new_engine133,4476
void STORE_free(181,5212
int STORE_ctrl(191,5424
int STORE_get_ex_new_index(205,5747
int STORE_set_ex_data(212,6004
void *STORE_get_ex_data(STORE_get_ex_data217,6113
const STORE_METHOD *STORE_get_method(STORE_get_method222,6209
const STORE_METHOD *STORE_set_method(STORE_set_method227,6288
#define check_store(236,6432
X509 *STORE_get_certificate(STORE_get_certificate254,6758
int STORE_store_certificate(280,7431
int STORE_modify_certificate(317,8199
int STORE_revoke_certificate(335,8793
int STORE_delete_certificate(351,9212
void *STORE_list_certificate_start(STORE_list_certificate_start367,9631
X509 *STORE_list_certificate_next(STORE_list_certificate_next386,10111
int STORE_list_certificate_end(410,10726
int STORE_list_certificate_endp(424,11058
EVP_PKEY *STORE_generate_key(STORE_generate_key438,11396
EVP_PKEY *STORE_get_private_key(STORE_get_private_key464,12051
int STORE_store_private_key(490,12718
int STORE_modify_private_key(534,13628
int STORE_revoke_private_key(552,14217
int STORE_delete_private_key(572,14637
void *STORE_list_private_key_start(STORE_list_private_key_start588,15044
EVP_PKEY *STORE_list_private_key_next(STORE_list_private_key_next607,15511
int STORE_list_private_key_end(631,16125
int STORE_list_private_key_endp(645,16449
EVP_PKEY *STORE_get_public_key(STORE_get_public_key659,16779
int STORE_store_public_key(685,17442
int STORE_modify_public_key(729,18346
int STORE_revoke_public_key(747,18930
int STORE_delete_public_key(767,19346
void *STORE_list_public_key_start(STORE_list_public_key_start783,19749
EVP_PKEY *STORE_list_public_key_next(STORE_list_public_key_next802,20212
int STORE_list_public_key_end(826,20823
int STORE_list_public_key_endp(840,21144
X509_CRL *STORE_generate_crl(STORE_generate_crl854,21471
X509_CRL *STORE_get_crl(STORE_get_crl880,22117
int STORE_store_crl(906,22733
int STORE_modify_crl(943,23458
int STORE_delete_crl(961,24012
void *STORE_list_crl_start(STORE_list_crl_start977,24392
X509_CRL *STORE_list_crl_next(STORE_list_crl_next996,24832
int STORE_list_crl_end(1020,25398
int STORE_list_crl_endp(1034,25698
int STORE_store_number(1048,26004
int STORE_modify_number(1081,26642
BIGNUM *STORE_get_number(STORE_get_number1099,27206
int STORE_delete_number(1122,27744
int STORE_store_arbitrary(1138,28133
int STORE_modify_arbitrary(1171,28796
BUF_MEM *STORE_get_arbitrary(STORE_get_arbitrary1189,29375
int STORE_delete_arbitrary(1212,29942
STORE_OBJECT *STORE_OBJECT_new(STORE_OBJECT_new1228,30349
void STORE_OBJECT_free(1234,30524
IMPLEMENT_STACK_OF(1259,31081
struct STORE_attr_info_st1262,31117
		char *cstring;cstring1267,31208
		unsigned char *sha1string;sha1string1268,31225
		X509_NAME *dn;dn1269,31254
		BIGNUM *number;number1270,31271
		void *any;any1271,31289
		} values[values1272,31302
	size_t value_sizes[value_sizes1273,31337
#define ATTR_IS_SET(1276,31386
#define SET_ATTRBIT(1278,31498
#define CLEAR_ATTRBIT(1279,31563
STORE_ATTR_INFO *STORE_ATTR_INFO_new(STORE_ATTR_INFO_new1281,31632
static void STORE_ATTR_INFO_attr_free(1285,31749
int STORE_ATTR_INFO_free(1316,32494
char *STORE_ATTR_INFO_get0_cstr(STORE_ATTR_INFO_get0_cstr1327,32706
unsigned char *STORE_ATTR_INFO_get0_sha1str(STORE_ATTR_INFO_get0_sha1str1341,33054
X509_NAME *STORE_ATTR_INFO_get0_dn(STORE_ATTR_INFO_get0_dn1356,33424
BIGNUM *STORE_ATTR_INFO_get0_number(STORE_ATTR_INFO_get0_number1370,33766
int STORE_ATTR_INFO_set_cstr(1384,34121
int STORE_ATTR_INFO_set_sha1str(1404,34633
int STORE_ATTR_INFO_set_dn(1426,35212
int STORE_ATTR_INFO_set_number(1446,35685
int STORE_ATTR_INFO_modify_cstr(1466,36176
int STORE_ATTR_INFO_modify_sha1str(1483,36621
int STORE_ATTR_INFO_modify_dn(1500,37102
int STORE_ATTR_INFO_modify_number(1517,37503
struct attr_list_ctx_st1535,37930
	OPENSSL_ITEM *attributes;attributes1537,37957
void *STORE_parse_attrs_start(STORE_parse_attrs_start1539,37988
STORE_ATTR_INFO *STORE_parse_attrs_next(STORE_parse_attrs_next1555,38424
int STORE_parse_attrs_end(1644,40837
int STORE_parse_attrs_endp(1660,41183
static int attr_info_compare_compute_range(1672,41485
int STORE_ATTR_INFO_compare(1742,43355
int STORE_ATTR_INFO_in_range(1751,43602
int STORE_ATTR_INFO_in(1765,43922
int STORE_ATTR_INFO_in_ex(1783,44275

crypto/store/str_err.c,228
#define ERR_FUNC(68,2979
#define ERR_REASON(69,3033
static ERR_STRING_DATA STORE_str_functs[STORE_str_functs71,3094
static ERR_STRING_DATA STORE_str_reasons[STORE_str_reasons148,8088
void ERR_load_STORE_strings(201,11615

crypto/objects/obj_dat.c,1534
#define NUM_NID 73,3578
#define NUM_SN 74,3596
#define NUM_LN 75,3613
#define NUM_OBJ 76,3630
static const unsigned char lvalues[lvalues77,3648
static const ASN1_OBJECT nid_objs[nid_objs78,3687
static const unsigned int sn_objs[sn_objs79,3725
static const unsigned int ln_objs[ln_objs80,3763
static const unsigned int obj_objs[obj_objs81,3801
#define ADDED_DATA	88,4051
#define ADDED_SNAME	89,4072
#define ADDED_LNAME	90,4094
#define ADDED_NID	91,4116
typedef struct added_obj_st93,4137
	int type;95,4168
	ASN1_OBJECT *obj;obj96,4179
	} ADDED_OBJ;97,4198
static int new_nid=100,4242
static LHASH_OF(101,4270
static int ln_cmp(108,4500
static unsigned long added_obj_hash(113,4689
static IMPLEMENT_LHASH_HASH_FN(146,5238
static IMPLEMENT_LHASH_COMP_FN(178,5937
static void cleanup1_doall(187,6108
static void cleanup2_doall(195,6299
static void cleanup3_doall(198,6361
static IMPLEMENT_LHASH_DOALL_FN(205,6480
void OBJ_cleanup(222,6932
int OBJ_new_nid(238,7351
int OBJ_add_object(247,7431
ASN1_OBJECT *OBJ_nid2obj(OBJ_nid2obj289,8639
const char *OBJ_nid2sn(OBJ_nid2sn321,9195
const char *OBJ_nid2ln(OBJ_nid2ln353,9736
static int obj_cmp(385,10277
int OBJ_obj2nid(398,10603
ASN1_OBJECT *OBJ_txt2obj(OBJ_txt2obj427,11324
int OBJ_obj2txt(466,12168
int OBJ_txt2nid(628,14410
int OBJ_ln2nid(638,14563
int OBJ_sn2nid(658,14953
const void *OBJ_bsearch_(OBJ_bsearch_678,15343
const void *OBJ_bsearch_ex_(OBJ_bsearch_ex_684,15528
int OBJ_create_objects(735,16579
int OBJ_create(783,17408

crypto/objects/obj_err.c,215
#define ERR_FUNC(68,2983
#define ERR_REASON(69,3035
static ERR_STRING_DATA OBJ_str_functs[OBJ_str_functs71,3094
static ERR_STRING_DATA OBJ_str_reasons[OBJ_str_reasons83,3480
void ERR_load_OBJ_strings(92,3666

crypto/objects/objects.h,24951
#define HEADER_OBJECTS_H60,3226
#define USE_OBJ_MAC62,3252
#define SN_undef	67,3327
#define LN_undef	68,3354
#define NID_undef	69,3385
#define OBJ_undef	70,3407
#define SN_Algorithm	72,3431
#define LN_algorithm	73,3466
#define NID_algorithm	74,3501
#define OBJ_algorithm	75,3528
#define LN_rsadsi	77,3569
#define NID_rsadsi	78,3598
#define OBJ_rsadsi	79,3621
#define LN_pkcs	81,3662
#define NID_pkcs	82,3688
#define OBJ_pkcs	83,3709
#define SN_md2	85,3743
#define LN_md2	86,3767
#define NID_md2	87,3791
#define OBJ_md2	88,3812
#define SN_md5	90,3849
#define LN_md5	91,3873
#define NID_md5	92,3897
#define OBJ_md5	93,3918
#define SN_rc4	95,3955
#define LN_rc4	96,3979
#define NID_rc4	97,4003
#define OBJ_rc4	98,4024
#define LN_rsaEncryption	100,4061
#define NID_rsaEncryption	101,4103
#define OBJ_rsaEncryption	102,4132
#define SN_md2WithRSAEncryption	104,4175
#define LN_md2WithRSAEncryption	105,4218
#define NID_md2WithRSAEncryption	106,4274
#define OBJ_md2WithRSAEncryption	107,4309
#define SN_md5WithRSAEncryption	109,4358
#define LN_md5WithRSAEncryption	110,4401
#define NID_md5WithRSAEncryption	111,4457
#define OBJ_md5WithRSAEncryption	112,4492
#define SN_pbeWithMD2AndDES_CBC	114,4541
#define LN_pbeWithMD2AndDES_CBC	115,4588
#define NID_pbeWithMD2AndDES_CBC	116,4644
#define OBJ_pbeWithMD2AndDES_CBC	117,4679
#define SN_pbeWithMD5AndDES_CBC	119,4728
#define LN_pbeWithMD5AndDES_CBC	120,4775
#define NID_pbeWithMD5AndDES_CBC	121,4831
#define OBJ_pbeWithMD5AndDES_CBC	122,4867
#define LN_X500	124,4916
#define NID_X500	125,4942
#define OBJ_X500	126,4964
#define LN_X509	128,4990
#define NID_X509	129,5016
#define OBJ_X509	130,5038
#define SN_commonName	132,5070
#define LN_commonName	133,5099
#define NID_commonName	134,5136
#define OBJ_commonName	135,5164
#define SN_countryName	137,5202
#define LN_countryName	138,5231
#define NID_countryName	139,5270
#define OBJ_countryName	140,5299
#define SN_localityName	142,5338
#define LN_localityName	143,5368
#define NID_localityName	144,5409
#define OBJ_localityName	145,5438
#define SN_stateOrProvinceName	150,5550
#define LN_stateOrProvinceName	151,5587
#define NID_stateOrProvinceName	152,5641
#define OBJ_stateOrProvinceName	153,5677
#define SN_organizationName	155,5723
#define LN_organizationName	156,5756
#define NID_organizationName	157,5804
#define OBJ_organizationName	158,5837
#define SN_organizationalUnitName	160,5881
#define LN_organizationalUnitName	161,5920
#define NID_organizationalUnitName	162,5979
#define OBJ_organizationalUnitName	163,6017
#define SN_rsa	165,6066
#define LN_rsa	166,6090
#define NID_rsa	167,6114
#define OBJ_rsa	168,6136
#define LN_pkcs7	170,6174
#define NID_pkcs7	171,6201
#define OBJ_pkcs7	172,6224
#define LN_pkcs7_data	174,6257
#define NID_pkcs7_data	175,6294
#define OBJ_pkcs7_data	176,6322
#define LN_pkcs7_signed	178,6361
#define NID_pkcs7_signed	179,6406
#define OBJ_pkcs7_signed	180,6435
#define LN_pkcs7_enveloped	182,6475
#define NID_pkcs7_enveloped	183,6525
#define OBJ_pkcs7_enveloped	184,6557
#define LN_pkcs7_signedAndEnveloped	186,6600
#define NID_pkcs7_signedAndEnveloped	187,6667
#define OBJ_pkcs7_signedAndEnveloped	188,6707
#define LN_pkcs7_digest	190,6758
#define NID_pkcs7_digest	191,6803
#define OBJ_pkcs7_digest	192,6832
#define LN_pkcs7_encrypted	194,6872
#define NID_pkcs7_encrypted	195,6922
#define OBJ_pkcs7_encrypted	196,6954
#define LN_pkcs3	198,6997
#define NID_pkcs3	199,7024
#define OBJ_pkcs3	200,7047
#define LN_dhKeyAgreement	202,7080
#define NID_dhKeyAgreement	203,7124
#define OBJ_dhKeyAgreement	204,7155
#define SN_des_ecb	206,7197
#define LN_des_ecb	207,7228
#define NID_des_ecb	208,7259
#define OBJ_des_ecb	209,7284
#define SN_des_cfb64	211,7324
#define LN_des_cfb64	212,7357
#define NID_des_cfb64	213,7390
#define OBJ_des_cfb64	215,7432
#define SN_des_cbc	217,7474
#define LN_des_cbc	218,7505
#define NID_des_cbc	219,7536
#define OBJ_des_cbc	221,7570
#define SN_des_ede	223,7610
#define LN_des_ede	224,7641
#define NID_des_ede	225,7672
#define OBJ_des_ede	227,7706
#define SN_des_ede3	229,7747
#define LN_des_ede3	230,7780
#define NID_des_ede3	231,7813
#define SN_idea_cbc	233,7840
#define LN_idea_cbc	234,7873
#define NID_idea_cbc	235,7906
#define OBJ_idea_cbc	236,7932
#define SN_idea_cfb64	238,7991
#define LN_idea_cfb64	239,8026
#define NID_idea_cfb64	240,8061
#define SN_idea_ecb	242,8090
#define LN_idea_ecb	243,8123
#define NID_idea_ecb	244,8156
#define SN_rc2_cbc	246,8183
#define LN_rc2_cbc	247,8214
#define NID_rc2_cbc	248,8245
#define OBJ_rc2_cbc	249,8270
#define SN_rc2_ecb	251,8310
#define LN_rc2_ecb	252,8341
#define NID_rc2_ecb	253,8372
#define SN_rc2_cfb64	255,8398
#define LN_rc2_cfb64	256,8431
#define NID_rc2_cfb64	257,8464
#define SN_rc2_ofb64	259,8492
#define LN_rc2_ofb64	260,8525
#define NID_rc2_ofb64	261,8558
#define SN_sha	263,8586
#define LN_sha	264,8610
#define NID_sha	265,8634
#define OBJ_sha	266,8656
#define SN_shaWithRSAEncryption	268,8694
#define LN_shaWithRSAEncryption	269,8737
#define NID_shaWithRSAEncryption	270,8793
#define OBJ_shaWithRSAEncryption	271,8829
#define SN_des_ede_cbc	273,8881
#define LN_des_ede_cbc	274,8920
#define NID_des_ede_cbc	275,8959
#define SN_des_ede3_cbc	277,8989
#define LN_des_ede3_cbc	278,9030
#define NID_des_ede3_cbc	279,9071
#define OBJ_des_ede3_cbc	280,9100
#define SN_des_ofb64	282,9144
#define LN_des_ofb64	283,9177
#define NID_des_ofb64	284,9210
#define OBJ_des_ofb64	285,9237
#define SN_idea_ofb64	287,9279
#define LN_idea_ofb64	288,9314
#define NID_idea_ofb64	289,9349
#define LN_pkcs9	291,9378
#define NID_pkcs9	292,9405
#define OBJ_pkcs9	293,9428
#define SN_pkcs9_emailAddress	295,9461
#define LN_pkcs9_emailAddress	296,9500
#define NID_pkcs9_emailAddress	297,9546
#define OBJ_pkcs9_emailAddress	298,9581
#define LN_pkcs9_unstructuredName	300,9627
#define NID_pkcs9_unstructuredName	301,9680
#define OBJ_pkcs9_unstructuredName	302,9718
#define LN_pkcs9_contentType	304,9767
#define NID_pkcs9_contentType	305,9811
#define OBJ_pkcs9_contentType	306,9845
#define LN_pkcs9_messageDigest	308,9890
#define NID_pkcs9_messageDigest	309,9938
#define OBJ_pkcs9_messageDigest	310,9974
#define LN_pkcs9_signingTime	312,10021
#define NID_pkcs9_signingTime	313,10065
#define OBJ_pkcs9_signingTime	314,10099
#define LN_pkcs9_countersignature	316,10144
#define NID_pkcs9_countersignature	317,10197
#define OBJ_pkcs9_countersignature	318,10235
#define LN_pkcs9_challengePassword	320,10284
#define NID_pkcs9_challengePassword	321,10339
#define OBJ_pkcs9_challengePassword	322,10378
#define LN_pkcs9_unstructuredAddress	324,10428
#define NID_pkcs9_unstructuredAddress	325,10487
#define OBJ_pkcs9_unstructuredAddress	326,10528
#define LN_pkcs9_extCertAttributes	328,10580
#define NID_pkcs9_extCertAttributes	329,10647
#define OBJ_pkcs9_extCertAttributes	330,10686
#define SN_netscape	332,10736
#define LN_netscape	333,10769
#define NID_netscape	334,10823
#define OBJ_netscape	335,10849
#define SN_netscape_cert_extension	337,10896
#define LN_netscape_cert_extension	338,10943
#define NID_netscape_cert_extension	339,11011
#define OBJ_netscape_cert_extension	340,11050
#define SN_netscape_data_type	342,11103
#define LN_netscape_data_type	343,11147
#define NID_netscape_data_type	344,11199
#define OBJ_netscape_data_type	345,11234
#define SN_des_ede_cfb64	347,11283
#define LN_des_ede_cfb64	348,11323
#define NID_des_ede_cfb64	349,11363
#define SN_des_ede3_cfb64	351,11394
#define LN_des_ede3_cfb64	352,11436
#define NID_des_ede3_cfb64	353,11478
#define SN_des_ede_ofb64	355,11510
#define LN_des_ede_ofb64	356,11550
#define NID_des_ede_ofb64	357,11590
#define SN_des_ede3_ofb64	359,11621
#define LN_des_ede3_ofb64	360,11663
#define NID_des_ede3_ofb64	361,11705
#define SN_sha1	364,11776
#define LN_sha1	365,11802
#define NID_sha1	366,11828
#define OBJ_sha1	367,11850
#define SN_sha1WithRSAEncryption	371,11967
#define LN_sha1WithRSAEncryption	372,12011
#define NID_sha1WithRSAEncryption	373,12068
#define OBJ_sha1WithRSAEncryption	374,12105
#define SN_dsaWithSHA	376,12155
#define LN_dsaWithSHA	377,12189
#define NID_dsaWithSHA	378,12226
#define OBJ_dsaWithSHA	379,12254
#define SN_dsa_2	381,12298
#define LN_dsa_2	382,12327
#define NID_dsa_2	383,12366
#define OBJ_dsa_2	384,12389
#define SN_pbeWithSHA1AndRC2_CBC	387,12463
#define LN_pbeWithSHA1AndRC2_CBC	388,12514
#define NID_pbeWithSHA1AndRC2_CBC	389,12571
#define OBJ_pbeWithSHA1AndRC2_CBC	390,12608
#define LN_id_pbkdf2	396,12822
#define NID_id_pbkdf2	397,12854
#define OBJ_id_pbkdf2	398,12881
#define SN_dsaWithSHA1_2	400,12923
#define LN_dsaWithSHA1_2	401,12964
#define NID_dsaWithSHA1_2	402,13008
#define OBJ_dsaWithSHA1_2	404,13116
#define SN_netscape_cert_type	406,13162
#define LN_netscape_cert_type	407,13206
#define NID_netscape_cert_type	408,13258
#define OBJ_netscape_cert_type	409,13293
#define SN_netscape_base_url	411,13357
#define LN_netscape_base_url	412,13399
#define NID_netscape_base_url	413,13449
#define OBJ_netscape_base_url	414,13483
#define SN_netscape_revocation_url	416,13546
#define LN_netscape_revocation_url	417,13599
#define NID_netscape_revocation_url	418,13660
#define OBJ_netscape_revocation_url	419,13699
#define SN_netscape_ca_revocation_url	421,13767
#define LN_netscape_ca_revocation_url	422,13825
#define NID_netscape_ca_revocation_url	423,13892
#define OBJ_netscape_ca_revocation_url	424,13934
#define SN_netscape_renewal_url	426,14005
#define LN_netscape_renewal_url	427,14053
#define NID_netscape_renewal_url	428,14109
#define OBJ_netscape_renewal_url	429,14145
#define SN_netscape_ca_policy_url	431,14210
#define LN_netscape_ca_policy_url	432,14260
#define NID_netscape_ca_policy_url	433,14319
#define OBJ_netscape_ca_policy_url	434,14357
#define SN_netscape_ssl_server_name	436,14424
#define LN_netscape_ssl_server_name	437,14478
#define NID_netscape_ssl_server_name	438,14541
#define OBJ_netscape_ssl_server_name	439,14581
#define SN_netscape_comment	441,14651
#define LN_netscape_comment	442,14692
#define NID_netscape_comment	443,14740
#define OBJ_netscape_comment	444,14773
#define SN_netscape_cert_sequence	446,14836
#define LN_netscape_cert_sequence	447,14887
#define NID_netscape_cert_sequence	448,14953
#define OBJ_netscape_cert_sequence	449,14991
#define SN_desx_cbc	451,15053
#define LN_desx_cbc	452,15086
#define NID_desx_cbc	453,15119
#define SN_id_ce	455,15146
#define NID_id_ce	456,15173
#define OBJ_id_ce	457,15196
#define SN_subject_key_identifier	459,15227
#define LN_subject_key_identifier	460,15284
#define NID_subject_key_identifier	461,15350
#define OBJ_subject_key_identifier	462,15388
#define SN_key_usage	464,15438
#define LN_key_usage	465,15472
#define NID_key_usage	466,15514
#define OBJ_key_usage	467,15541
#define SN_private_key_usage_period	469,15580
#define LN_private_key_usage_period	470,15640
#define NID_private_key_usage_period	471,15710
#define OBJ_private_key_usage_period	472,15750
#define SN_subject_alt_name	474,15802
#define LN_subject_alt_name	475,15848
#define NID_subject_alt_name	476,15911
#define OBJ_subject_alt_name	477,15944
#define SN_issuer_alt_name	479,15989
#define LN_issuer_alt_name	480,16033
#define NID_issuer_alt_name	481,16094
#define OBJ_issuer_alt_name	482,16126
#define SN_basic_constraints	484,16170
#define LN_basic_constraints	485,16219
#define NID_basic_constraints	486,16276
#define OBJ_basic_constraints	487,16310
#define SN_crl_number	489,16356
#define LN_crl_number	490,16392
#define NID_crl_number	491,16436
#define OBJ_crl_number	492,16464
#define SN_certificate_policies	494,16504
#define LN_certificate_policies	495,16559
#define NID_certificate_policies	496,16622
#define OBJ_certificate_policies	497,16658
#define SN_authority_key_identifier	499,16706
#define LN_authority_key_identifier	500,16767
#define NID_authority_key_identifier	501,16837
#define OBJ_authority_key_identifier	502,16877
#define SN_bf_cbc	504,16929
#define LN_bf_cbc	505,16958
#define NID_bf_cbc	506,16987
#define OBJ_bf_cbc	507,17011
#define SN_bf_ecb	509,17063
#define LN_bf_ecb	510,17092
#define NID_bf_ecb	511,17121
#define SN_bf_cfb64	513,17146
#define LN_bf_cfb64	514,17177
#define NID_bf_cfb64	515,17208
#define SN_bf_ofb64	517,17235
#define LN_bf_ofb64	518,17266
#define NID_bf_ofb64	519,17297
#define SN_mdc2	521,17324
#define LN_mdc2	522,17350
#define NID_mdc2	523,17376
#define OBJ_mdc2	524,17398
#define SN_mdc2WithRSA	527,17479
#define LN_mdc2WithRSA	528,17515
#define NID_mdc2WithRSA	529,17554
#define OBJ_mdc2WithRSA	530,17583
#define SN_rc4_40	532,17627
#define LN_rc4_40	533,17656
#define NID_rc4_40	534,17685
#define SN_rc2_40_cbc	536,17710
#define LN_rc2_40_cbc	537,17747
#define NID_rc2_40_cbc	538,17784
#define SN_givenName	540,17813
#define LN_givenName	541,17840
#define NID_givenName	542,17875
#define OBJ_givenName	543,17902
#define SN_surname	545,17940
#define LN_surname	546,17965
#define NID_surname	547,17996
#define OBJ_surname	548,18022
#define SN_initials	550,18057
#define LN_initials	551,18083
#define NID_initials	552,18116
#define OBJ_initials	553,18143
#define SN_uniqueIdentifier	555,18180
#define LN_uniqueIdentifier	556,18215
#define NID_uniqueIdentifier	557,18263
#define OBJ_uniqueIdentifier	558,18297
#define SN_crl_distribution_points	560,18341
#define LN_crl_distribution_points	561,18400
#define NID_crl_distribution_points	562,18468
#define OBJ_crl_distribution_points	563,18508
#define SN_md5WithRSA	565,18559
#define LN_md5WithRSA	566,18596
#define NID_md5WithRSA	567,18633
#define OBJ_md5WithRSA	568,18662
#define SN_serialNumber	570,18705
#define LN_serialNumber	571,18736
#define NID_serialNumber	572,18777
#define OBJ_serialNumber	573,18807
#define SN_title	575,18846
#define LN_title	576,18869
#define NID_title	577,18896
#define OBJ_title	578,18920
#define SN_description	580,18954
#define LN_description	581,18983
#define NID_description	582,19022
#define OBJ_description	583,19052
#define SN_cast5_cbc	586,19158
#define LN_cast5_cbc	587,19193
#define NID_cast5_cbc	588,19228
#define OBJ_cast5_cbc	589,19256
#define SN_cast5_ecb	591,19311
#define LN_cast5_ecb	592,19346
#define NID_cast5_ecb	593,19381
#define SN_cast5_cfb64	595,19410
#define LN_cast5_cfb64	596,19447
#define NID_cast5_cfb64	597,19484
#define SN_cast5_ofb64	599,19515
#define LN_cast5_ofb64	600,19552
#define NID_cast5_ofb64	601,19589
#define LN_pbeWithMD5AndCast5_CBC	603,19620
#define NID_pbeWithMD5AndCast5_CBC	604,19678
#define OBJ_pbeWithMD5AndCast5_CBC	605,19717
#define SN_dsaWithSHA1	611,19920
#define LN_dsaWithSHA1	612,19956
#define NID_dsaWithSHA1	613,19995
#define OBJ_dsaWithSHA1	614,20025
#define NID_md5_sha1	616,20076
#define SN_md5_sha1	617,20103
#define LN_md5_sha1	618,20136
#define SN_sha1WithRSA	620,20170
#define LN_sha1WithRSA	621,20208
#define NID_sha1WithRSA	622,20247
#define OBJ_sha1WithRSA	623,20277
#define SN_dsa	625,20322
#define LN_dsa	626,20346
#define NID_dsa	627,20380
#define OBJ_dsa	628,20403
#define SN_ripemd160	630,20447
#define LN_ripemd160	631,20482
#define NID_ripemd160	632,20517
#define OBJ_ripemd160	633,20545
#define SN_ripemd160WithRSA	637,20733
#define LN_ripemd160WithRSA	638,20778
#define NID_ripemd160WithRSA	639,20826
#define OBJ_ripemd160WithRSA	640,20860
#define SN_rc5_cbc	650,21145
#define LN_rc5_cbc	651,21176
#define NID_rc5_cbc	652,21207
#define OBJ_rc5_cbc	653,21233
#define SN_rc5_ecb	655,21273
#define LN_rc5_ecb	656,21304
#define NID_rc5_ecb	657,21335
#define SN_rc5_cfb64	659,21362
#define LN_rc5_cfb64	660,21395
#define NID_rc5_cfb64	661,21428
#define SN_rc5_ofb64	663,21457
#define LN_rc5_ofb64	664,21490
#define NID_rc5_ofb64	665,21523
#define SN_rle_compression	667,21552
#define LN_rle_compression	668,21586
#define NID_rle_compression	669,21639
#define OBJ_rle_compression	670,21672
#define SN_zlib_compression	672,21722
#define LN_zlib_compression	673,21758
#define NID_zlib_compression	674,21806
#define OBJ_zlib_compression	675,21840
#define SN_ext_key_usage	677,21891
#define LN_ext_key_usage	678,21936
#define NID_ext_key_usage	679,21990
#define OBJ_ext_key_usage	680,22021
#define SN_id_pkix	682,22062
#define NID_id_pkix	683,22090
#define OBJ_id_pkix	684,22116
#define SN_id_kp	686,22160
#define NID_id_kp	687,22187
#define OBJ_id_kp	688,22211
#define SN_server_auth	692,22283
#define LN_server_auth	693,22321
#define NID_server_auth	694,22378
#define OBJ_server_auth	695,22408
#define SN_client_auth	697,22448
#define LN_client_auth	698,22486
#define NID_client_auth	699,22543
#define OBJ_client_auth	700,22573
#define SN_code_sign	702,22613
#define LN_code_sign	703,22650
#define NID_code_sign	704,22688
#define OBJ_code_sign	705,22716
#define SN_email_protect	707,22754
#define LN_email_protect	708,22798
#define NID_email_protect	709,22844
#define OBJ_email_protect	710,22875
#define SN_time_stamp	712,22916
#define LN_time_stamp	713,22955
#define NID_time_stamp	714,22995
#define OBJ_time_stamp	715,23024
#define SN_ms_code_ind	719,23116
#define LN_ms_code_ind	720,23153
#define NID_ms_code_ind	721,23214
#define OBJ_ms_code_ind	722,23244
#define SN_ms_code_com	724,23304
#define LN_ms_code_com	725,23341
#define NID_ms_code_com	726,23402
#define OBJ_ms_code_com	727,23432
#define SN_ms_ctl_sign	729,23492
#define LN_ms_ctl_sign	730,23529
#define NID_ms_ctl_sign	731,23585
#define OBJ_ms_ctl_sign	732,23615
#define SN_ms_sgc	734,23675
#define LN_ms_sgc	735,23703
#define NID_ms_sgc	736,23755
#define OBJ_ms_sgc	737,23780
#define SN_ms_efs	739,23835
#define LN_ms_efs	740,23863
#define NID_ms_efs	741,23917
#define OBJ_ms_efs	742,23942
#define SN_ns_sgc	746,24031
#define LN_ns_sgc	747,24059
#define NID_ns_sgc	748,24110
#define OBJ_ns_sgc	749,24135
#define SN_delta_crl	751,24176
#define LN_delta_crl	752,24210
#define NID_delta_crl	753,24262
#define OBJ_delta_crl	754,24290
#define SN_crl_reason	756,24329
#define LN_crl_reason	757,24365
#define NID_crl_reason	758,24407
#define OBJ_crl_reason	759,24436
#define SN_invalidity_date	761,24476
#define LN_invalidity_date	762,24521
#define NID_invalidity_date	763,24567
#define OBJ_invalidity_date	764,24600
#define SN_sxnet	766,24644
#define LN_sxnet	767,24673
#define NID_sxnet	768,24713
#define OBJ_sxnet	769,24737
#define OBJ_pkcs12	773,24823
#define OBJ_pkcs12_pbeids	774,24857
#define SN_pbe_WithSHA1And128BitRC4	776,24899
#define LN_pbe_WithSHA1And128BitRC4	777,24954
#define NID_pbe_WithSHA1And128BitRC4	778,25016
#define OBJ_pbe_WithSHA1And128BitRC4	779,25057
#define SN_pbe_WithSHA1And40BitRC4	781,25117
#define LN_pbe_WithSHA1And40BitRC4	782,25170
#define NID_pbe_WithSHA1And40BitRC4	783,25230
#define OBJ_pbe_WithSHA1And40BitRC4	784,25270
#define SN_pbe_WithSHA1And3_Key_TripleDES_CBC	786,25329
#define LN_pbe_WithSHA1And3_Key_TripleDES_CBC	787,25391
#define NID_pbe_WithSHA1And3_Key_TripleDES_CBC	788,25472
#define OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC	789,25523
#define SN_pbe_WithSHA1And2_Key_TripleDES_CBC	791,25593
#define LN_pbe_WithSHA1And2_Key_TripleDES_CBC	792,25655
#define NID_pbe_WithSHA1And2_Key_TripleDES_CBC	793,25736
#define OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC	794,25787
#define SN_pbe_WithSHA1And128BitRC2_CBC	796,25857
#define LN_pbe_WithSHA1And128BitRC2_CBC	797,25917
#define NID_pbe_WithSHA1And128BitRC2_CBC	798,25988
#define OBJ_pbe_WithSHA1And128BitRC2_CBC	799,26033
#define SN_pbe_WithSHA1And40BitRC2_CBC	801,26097
#define LN_pbe_WithSHA1And40BitRC2_CBC	802,26154
#define NID_pbe_WithSHA1And40BitRC2_CBC	803,26222
#define OBJ_pbe_WithSHA1And40BitRC2_CBC	804,26266
#define OBJ_pkcs12_Version1	806,26329
#define OBJ_pkcs12_BagIds	808,26374
#define LN_keyBag	810,26425
#define NID_keyBag	811,26453
#define OBJ_keyBag	812,26477
#define LN_pkcs8ShroudedKeyBag	814,26520
#define NID_pkcs8ShroudedKeyBag	815,26573
#define OBJ_pkcs8ShroudedKeyBag	816,26609
#define LN_certBag	818,26664
#define NID_certBag	819,26694
#define OBJ_certBag	820,26719
#define LN_crlBag	822,26763
#define NID_crlBag	823,26791
#define OBJ_crlBag	824,26815
#define LN_secretBag	826,26858
#define NID_secretBag	827,26892
#define OBJ_secretBag	828,26919
#define LN_safeContentsBag	830,26965
#define NID_safeContentsBag	831,27010
#define OBJ_safeContentsBag	832,27042
#define LN_friendlyName	834,27093
#define	NID_friendlyName	835,27133
#define OBJ_friendlyName	836,27162
#define LN_localKeyID	838,27203
#define	NID_localKeyID	839,27239
#define OBJ_localKeyID	840,27267
#define OBJ_certTypes	842,27307
#define LN_x509Certificate	844,27346
#define	NID_x509Certificate	845,27391
#define OBJ_x509Certificate	846,27423
#define LN_sdsiCertificate	848,27470
#define	NID_sdsiCertificate	849,27515
#define OBJ_sdsiCertificate	850,27547
#define OBJ_crlTypes	852,27594
#define LN_x509Crl	854,27632
#define	NID_x509Crl	855,27662
#define OBJ_x509Crl	856,27687
#define LN_pbes2	860,27748
#define NID_pbes2	861,27774
#define OBJ_pbes2	862,27797
#define LN_pbmac1	864,27833
#define NID_pbmac1	865,27861
#define OBJ_pbmac1	866,27885
#define LN_hmacWithSHA1	868,27922
#define NID_hmacWithSHA1	869,27962
#define OBJ_hmacWithSHA1	870,27991
#define LN_id_qt_cps	874,28062
#define SN_id_qt_cps	875,28107
#define NID_id_qt_cps	876,28141
#define OBJ_id_qt_cps	877,28168
#define LN_id_qt_unotice	879,28210
#define SN_id_qt_unotice	880,28266
#define NID_id_qt_unotice	881,28307
#define OBJ_id_qt_unotice	882,28337
#define SN_rc2_64_cbc	884,28382
#define LN_rc2_64_cbc	885,28419
#define NID_rc2_64_cbc	886,28456
#define SN_SMIMECapabilities	888,28486
#define LN_SMIMECapabilities	889,28529
#define NID_SMIMECapabilities	890,28581
#define OBJ_SMIMECapabilities	891,28616
#define SN_pbeWithMD2AndRC2_CBC	893,28662
#define LN_pbeWithMD2AndRC2_CBC	894,28712
#define NID_pbeWithMD2AndRC2_CBC	895,28768
#define OBJ_pbeWithMD2AndRC2_CBC	896,28805
#define SN_pbeWithMD5AndRC2_CBC	898,28854
#define LN_pbeWithMD5AndRC2_CBC	899,28904
#define NID_pbeWithMD5AndRC2_CBC	900,28960
#define OBJ_pbeWithMD5AndRC2_CBC	901,28997
#define SN_pbeWithSHA1AndDES_CBC	903,29046
#define LN_pbeWithSHA1AndDES_CBC	904,29094
#define NID_pbeWithSHA1AndDES_CBC	905,29151
#define OBJ_pbeWithSHA1AndDES_CBC	906,29189
#define LN_ms_ext_req	910,29270
#define SN_ms_ext_req	911,29324
#define NID_ms_ext_req	912,29359
#define OBJ_ms_ext_req	913,29388
#define LN_ext_req	915,29447
#define SN_ext_req	916,29488
#define NID_ext_req	917,29518
#define OBJ_ext_req	918,29544
#define SN_name	920,29581
#define LN_name	921,29607
#define NID_name	922,29633
#define OBJ_name	923,29656
#define SN_dnQualifier	925,29689
#define LN_dnQualifier	926,29728
#define NID_dnQualifier	927,29767
#define OBJ_dnQualifier	928,29797
#define SN_id_pe	930,29837
#define NID_id_pe	931,29864
#define OBJ_id_pe	932,29888
#define SN_id_ad	934,29924
#define NID_id_ad	935,29951
#define OBJ_id_ad	936,29975
#define SN_info_access	938,30012
#define LN_info_access	939,30059
#define NID_info_access	940,30115
#define OBJ_info_access	941,30145
#define SN_ad_OCSP	943,30185
#define LN_ad_OCSP	944,30213
#define NID_ad_OCSP	945,30241
#define OBJ_ad_OCSP	946,30267
#define SN_ad_ca_issuers	948,30303
#define LN_ad_ca_issuers	949,30341
#define NID_ad_ca_issuers	950,30380
#define OBJ_ad_ca_issuers	951,30411
#define SN_OCSP_sign	953,30452
#define LN_OCSP_sign	954,30489
#define NID_OCSP_sign	955,30527
#define OBJ_OCSP_sign	956,30555
#define	OBJ_NAME_TYPE_UNDEF	962,30670
#define	OBJ_NAME_TYPE_MD_METH	963,30704
#define	OBJ_NAME_TYPE_CIPHER_METH	964,30740
#define	OBJ_NAME_TYPE_PKEY_METH	965,30779
#define	OBJ_NAME_TYPE_COMP_METH	966,30817
#define	OBJ_NAME_TYPE_NUM	967,30855
#define	OBJ_NAME_ALIAS	969,30888
#define OBJ_BSEARCH_VALUE_ON_NOMATCH	971,30921
#define OBJ_BSEARCH_FIRST_VALUE_ON_MATCH	972,30964
typedef struct obj_name_st979,31053
	int type;981,31083
	int alias;982,31094
	const char *name;name983,31106
	const char *data;data984,31125
	} OBJ_NAME;985,31144
#define		OBJ_create_and_add_object(987,31158
#define _DECLARE_OBJ_BSEARCH_CMP_FN(1021,32572
#define DECLARE_OBJ_BSEARCH_CMP_FN(1026,32832
#define DECLARE_OBJ_BSEARCH_GLOBAL_CMP_FN(1028,32945
#define IMPLEMENT_OBJ_BSEARCH_CMP_FN(1058,33958
#define IMPLEMENT_OBJ_BSEARCH_GLOBAL_CMP_FN(1072,34431
#define OBJ_bsearch(1086,34904
#define OBJ_bsearch_ex(1093,35202
#define OBJ_F_OBJ_ADD_OBJECT	1123,36271
#define OBJ_F_OBJ_CREATE	1124,36308
#define OBJ_F_OBJ_DUP	1125,36341
#define OBJ_F_OBJ_NAME_NEW_INDEX	1126,36372
#define OBJ_F_OBJ_NID2LN	1127,36412
#define OBJ_F_OBJ_NID2OBJ	1128,36445
#define OBJ_F_OBJ_NID2SN	1129,36479
#define OBJ_R_MALLOC_FAILURE	1132,36533
#define OBJ_R_UNKNOWN_NID	1133,36570

crypto/objects/obj_mac.h,122595
#define SN_undef	65,3347
#define LN_undef	66,3374
#define NID_undef	67,3405
#define OBJ_undef	68,3427
#define SN_itu_t	70,3451
#define LN_itu_t	71,3477
#define NID_itu_t	72,3503
#define OBJ_itu_t	73,3526
#define NID_ccitt	75,3549
#define OBJ_ccitt	76,3572
#define SN_iso	78,3602
#define LN_iso	79,3624
#define NID_iso	80,3646
#define OBJ_iso	81,3667
#define SN_joint_iso_itu_t	83,3688
#define LN_joint_iso_itu_t	84,3734
#define NID_joint_iso_itu_t	85,3780
#define OBJ_joint_iso_itu_t	86,3813
#define NID_joint_iso_ccitt	88,3846
#define OBJ_joint_iso_ccitt	89,3879
#define SN_member_body	91,3929
#define LN_member_body	92,3967
#define NID_member_body	93,4009
#define OBJ_member_body	94,4038
#define SN_identified_organization	96,4075
#define NID_identified_organization	97,4137
#define OBJ_identified_organization	98,4178
#define SN_hmac_md5	100,4227
#define LN_hmac_md5	101,4259
#define NID_hmac_md5	102,4291
#define OBJ_hmac_md5	103,4317
#define SN_hmac_sha1	105,4389
#define LN_hmac_sha1	106,4423
#define NID_hmac_sha1	107,4457
#define OBJ_hmac_sha1	108,4484
#define SN_certicom_arc	110,4557
#define NID_certicom_arc	111,4597
#define OBJ_certicom_arc	112,4627
#define SN_international_organizations	114,4687
#define LN_international_organizations	115,4757
#define NID_international_organizations	116,4827
#define OBJ_international_organizations	117,4872
#define SN_wap	119,4938
#define NID_wap	120,4960
#define OBJ_wap	121,4981
#define SN_wap_wsg	123,5035
#define NID_wap_wsg	124,5065
#define OBJ_wap_wsg	125,5090
#define SN_selected_attribute_types	127,5123
#define LN_selected_attribute_types	128,5187
#define NID_selected_attribute_types	129,5251
#define OBJ_selected_attribute_types	130,5293
#define SN_clearance	132,5361
#define NID_clearance	133,5395
#define OBJ_clearance	134,5422
#define SN_ISO_US	136,5479
#define LN_ISO_US	137,5507
#define NID_ISO_US	138,5547
#define OBJ_ISO_US	139,5571
#define SN_X9_57	141,5613
#define LN_X9_57	142,5639
#define NID_X9_57	143,5665
#define OBJ_X9_57	144,5688
#define SN_X9cm	146,5726
#define LN_X9cm	147,5750
#define NID_X9cm	148,5780
#define OBJ_X9cm	149,5802
#define SN_dsa	151,5834
#define LN_dsa	152,5856
#define NID_dsa	153,5888
#define OBJ_dsa	154,5909
#define SN_dsaWithSHA1	156,5939
#define LN_dsaWithSHA1	157,5974
#define NID_dsaWithSHA1	158,6012
#define OBJ_dsaWithSHA1	159,6041
#define SN_ansi_X9_62	161,6079
#define LN_ansi_X9_62	162,6115
#define NID_ansi_X9_62	163,6151
#define OBJ_ansi_X9_62	164,6179
#define OBJ_X9_62_id_fieldType	166,6222
#define SN_X9_62_prime_field	168,6273
#define NID_X9_62_prime_field	169,6317
#define OBJ_X9_62_prime_field	170,6352
#define SN_X9_62_characteristic_two_field	172,6410
#define NID_X9_62_characteristic_two_field	173,6480
#define OBJ_X9_62_characteristic_two_field	174,6528
#define SN_X9_62_id_characteristic_two_basis	176,6599
#define NID_X9_62_id_characteristic_two_basis	177,6675
#define OBJ_X9_62_id_characteristic_two_basis	178,6726
#define SN_X9_62_onBasis	180,6812
#define NID_X9_62_onBasis	181,6848
#define OBJ_X9_62_onBasis	182,6879
#define SN_X9_62_tpBasis	184,6948
#define NID_X9_62_tpBasis	185,6984
#define OBJ_X9_62_tpBasis	186,7015
#define SN_X9_62_ppBasis	188,7084
#define NID_X9_62_ppBasis	189,7120
#define OBJ_X9_62_ppBasis	190,7151
#define OBJ_X9_62_id_publicKeyType	192,7220
#define SN_X9_62_id_ecPublicKey	194,7275
#define NID_X9_62_id_ecPublicKey	195,7325
#define OBJ_X9_62_id_ecPublicKey	196,7363
#define OBJ_X9_62_ellipticCurve	198,7428
#define OBJ_X9_62_c_TwoCurve	200,7480
#define SN_X9_62_c2pnb163v1	202,7538
#define NID_X9_62_c2pnb163v1	203,7580
#define OBJ_X9_62_c2pnb163v1	204,7614
#define SN_X9_62_c2pnb163v2	206,7669
#define NID_X9_62_c2pnb163v2	207,7711
#define OBJ_X9_62_c2pnb163v2	208,7745
#define SN_X9_62_c2pnb163v3	210,7800
#define NID_X9_62_c2pnb163v3	211,7842
#define OBJ_X9_62_c2pnb163v3	212,7876
#define SN_X9_62_c2pnb176v1	214,7931
#define NID_X9_62_c2pnb176v1	215,7973
#define OBJ_X9_62_c2pnb176v1	216,8007
#define SN_X9_62_c2tnb191v1	218,8062
#define NID_X9_62_c2tnb191v1	219,8104
#define OBJ_X9_62_c2tnb191v1	220,8138
#define SN_X9_62_c2tnb191v2	222,8193
#define NID_X9_62_c2tnb191v2	223,8235
#define OBJ_X9_62_c2tnb191v2	224,8269
#define SN_X9_62_c2tnb191v3	226,8324
#define NID_X9_62_c2tnb191v3	227,8366
#define OBJ_X9_62_c2tnb191v3	228,8400
#define SN_X9_62_c2onb191v4	230,8455
#define NID_X9_62_c2onb191v4	231,8497
#define OBJ_X9_62_c2onb191v4	232,8531
#define SN_X9_62_c2onb191v5	234,8586
#define NID_X9_62_c2onb191v5	235,8628
#define OBJ_X9_62_c2onb191v5	236,8662
#define SN_X9_62_c2pnb208w1	238,8717
#define NID_X9_62_c2pnb208w1	239,8759
#define OBJ_X9_62_c2pnb208w1	240,8793
#define SN_X9_62_c2tnb239v1	242,8849
#define NID_X9_62_c2tnb239v1	243,8891
#define OBJ_X9_62_c2tnb239v1	244,8925
#define SN_X9_62_c2tnb239v2	246,8981
#define NID_X9_62_c2tnb239v2	247,9023
#define OBJ_X9_62_c2tnb239v2	248,9057
#define SN_X9_62_c2tnb239v3	250,9113
#define NID_X9_62_c2tnb239v3	251,9155
#define OBJ_X9_62_c2tnb239v3	252,9189
#define SN_X9_62_c2onb239v4	254,9245
#define NID_X9_62_c2onb239v4	255,9287
#define OBJ_X9_62_c2onb239v4	256,9321
#define SN_X9_62_c2onb239v5	258,9377
#define NID_X9_62_c2onb239v5	259,9419
#define OBJ_X9_62_c2onb239v5	260,9453
#define SN_X9_62_c2pnb272w1	262,9509
#define NID_X9_62_c2pnb272w1	263,9551
#define OBJ_X9_62_c2pnb272w1	264,9585
#define SN_X9_62_c2pnb304w1	266,9641
#define NID_X9_62_c2pnb304w1	267,9683
#define OBJ_X9_62_c2pnb304w1	268,9717
#define SN_X9_62_c2tnb359v1	270,9773
#define NID_X9_62_c2tnb359v1	271,9815
#define OBJ_X9_62_c2tnb359v1	272,9849
#define SN_X9_62_c2pnb368w1	274,9905
#define NID_X9_62_c2pnb368w1	275,9947
#define OBJ_X9_62_c2pnb368w1	276,9981
#define SN_X9_62_c2tnb431r1	278,10037
#define NID_X9_62_c2tnb431r1	279,10079
#define OBJ_X9_62_c2tnb431r1	280,10113
#define OBJ_X9_62_primeCurve	282,10169
#define SN_X9_62_prime192v1	284,10227
#define NID_X9_62_prime192v1	285,10269
#define OBJ_X9_62_prime192v1	286,10303
#define SN_X9_62_prime192v2	288,10358
#define NID_X9_62_prime192v2	289,10400
#define OBJ_X9_62_prime192v2	290,10434
#define SN_X9_62_prime192v3	292,10489
#define NID_X9_62_prime192v3	293,10531
#define OBJ_X9_62_prime192v3	294,10565
#define SN_X9_62_prime239v1	296,10620
#define NID_X9_62_prime239v1	297,10662
#define OBJ_X9_62_prime239v1	298,10696
#define SN_X9_62_prime239v2	300,10751
#define NID_X9_62_prime239v2	301,10793
#define OBJ_X9_62_prime239v2	302,10827
#define SN_X9_62_prime239v3	304,10882
#define NID_X9_62_prime239v3	305,10924
#define OBJ_X9_62_prime239v3	306,10958
#define SN_X9_62_prime256v1	308,11013
#define NID_X9_62_prime256v1	309,11055
#define OBJ_X9_62_prime256v1	310,11089
#define OBJ_X9_62_id_ecSigType	312,11144
#define SN_ecdsa_with_SHA1	314,11195
#define NID_ecdsa_with_SHA1	315,11241
#define OBJ_ecdsa_with_SHA1	316,11274
#define SN_ecdsa_with_Recommended	318,11330
#define NID_ecdsa_with_Recommended	319,11390
#define OBJ_ecdsa_with_Recommended	320,11430
#define SN_ecdsa_with_Specified	322,11493
#define NID_ecdsa_with_Specified	323,11549
#define OBJ_ecdsa_with_Specified	324,11587
#define SN_ecdsa_with_SHA224	326,11648
#define NID_ecdsa_with_SHA224	327,11698
#define OBJ_ecdsa_with_SHA224	328,11733
#define SN_ecdsa_with_SHA256	330,11793
#define NID_ecdsa_with_SHA256	331,11843
#define OBJ_ecdsa_with_SHA256	332,11878
#define SN_ecdsa_with_SHA384	334,11938
#define NID_ecdsa_with_SHA384	335,11988
#define OBJ_ecdsa_with_SHA384	336,12023
#define SN_ecdsa_with_SHA512	338,12083
#define NID_ecdsa_with_SHA512	339,12133
#define OBJ_ecdsa_with_SHA512	340,12168
#define OBJ_secg_ellipticCurve	342,12228
#define SN_secp112r1	344,12281
#define NID_secp112r1	345,12315
#define OBJ_secp112r1	346,12342
#define SN_secp112r2	348,12392
#define NID_secp112r2	349,12426
#define OBJ_secp112r2	350,12453
#define SN_secp128r1	352,12503
#define NID_secp128r1	353,12537
#define OBJ_secp128r1	354,12564
#define SN_secp128r2	356,12615
#define NID_secp128r2	357,12649
#define OBJ_secp128r2	358,12676
#define SN_secp160k1	360,12727
#define NID_secp160k1	361,12761
#define OBJ_secp160k1	362,12788
#define SN_secp160r1	364,12838
#define NID_secp160r1	365,12872
#define OBJ_secp160r1	366,12899
#define SN_secp160r2	368,12949
#define NID_secp160r2	369,12983
#define OBJ_secp160r2	370,13010
#define SN_secp192k1	372,13061
#define NID_secp192k1	373,13095
#define OBJ_secp192k1	374,13122
#define SN_secp224k1	376,13173
#define NID_secp224k1	377,13207
#define OBJ_secp224k1	378,13234
#define SN_secp224r1	380,13285
#define NID_secp224r1	381,13319
#define OBJ_secp224r1	382,13346
#define SN_secp256k1	384,13397
#define NID_secp256k1	385,13431
#define OBJ_secp256k1	386,13458
#define SN_secp384r1	388,13509
#define NID_secp384r1	389,13543
#define OBJ_secp384r1	390,13570
#define SN_secp521r1	392,13621
#define NID_secp521r1	393,13655
#define OBJ_secp521r1	394,13682
#define SN_sect113r1	396,13733
#define NID_sect113r1	397,13767
#define OBJ_sect113r1	398,13794
#define SN_sect113r2	400,13844
#define NID_sect113r2	401,13878
#define OBJ_sect113r2	402,13905
#define SN_sect131r1	404,13955
#define NID_sect131r1	405,13989
#define OBJ_sect131r1	406,14016
#define SN_sect131r2	408,14067
#define NID_sect131r2	409,14101
#define OBJ_sect131r2	410,14128
#define SN_sect163k1	412,14179
#define NID_sect163k1	413,14213
#define OBJ_sect163k1	414,14240
#define SN_sect163r1	416,14290
#define NID_sect163r1	417,14324
#define OBJ_sect163r1	418,14351
#define SN_sect163r2	420,14401
#define NID_sect163r2	421,14435
#define OBJ_sect163r2	422,14462
#define SN_sect193r1	424,14513
#define NID_sect193r1	425,14547
#define OBJ_sect193r1	426,14574
#define SN_sect193r2	428,14625
#define NID_sect193r2	429,14659
#define OBJ_sect193r2	430,14686
#define SN_sect233k1	432,14737
#define NID_sect233k1	433,14771
#define OBJ_sect233k1	434,14798
#define SN_sect233r1	436,14849
#define NID_sect233r1	437,14883
#define OBJ_sect233r1	438,14910
#define SN_sect239k1	440,14961
#define NID_sect239k1	441,14995
#define OBJ_sect239k1	442,15022
#define SN_sect283k1	444,15072
#define NID_sect283k1	445,15106
#define OBJ_sect283k1	446,15133
#define SN_sect283r1	448,15184
#define NID_sect283r1	449,15218
#define OBJ_sect283r1	450,15245
#define SN_sect409k1	452,15296
#define NID_sect409k1	453,15330
#define OBJ_sect409k1	454,15357
#define SN_sect409r1	456,15408
#define NID_sect409r1	457,15442
#define OBJ_sect409r1	458,15469
#define SN_sect571k1	460,15520
#define NID_sect571k1	461,15554
#define OBJ_sect571k1	462,15581
#define SN_sect571r1	464,15632
#define NID_sect571r1	465,15666
#define OBJ_sect571r1	466,15693
#define OBJ_wap_wsg_idm_ecid	468,15744
#define SN_wap_wsg_idm_ecid_wtls1	470,15790
#define NID_wap_wsg_idm_ecid_wtls1	471,15850
#define OBJ_wap_wsg_idm_ecid_wtls1	472,15890
#define SN_wap_wsg_idm_ecid_wtls3	474,15951
#define NID_wap_wsg_idm_ecid_wtls3	475,16011
#define OBJ_wap_wsg_idm_ecid_wtls3	476,16051
#define SN_wap_wsg_idm_ecid_wtls4	478,16112
#define NID_wap_wsg_idm_ecid_wtls4	479,16172
#define OBJ_wap_wsg_idm_ecid_wtls4	480,16212
#define SN_wap_wsg_idm_ecid_wtls5	482,16273
#define NID_wap_wsg_idm_ecid_wtls5	483,16333
#define OBJ_wap_wsg_idm_ecid_wtls5	484,16373
#define SN_wap_wsg_idm_ecid_wtls6	486,16434
#define NID_wap_wsg_idm_ecid_wtls6	487,16494
#define OBJ_wap_wsg_idm_ecid_wtls6	488,16534
#define SN_wap_wsg_idm_ecid_wtls7	490,16595
#define NID_wap_wsg_idm_ecid_wtls7	491,16655
#define OBJ_wap_wsg_idm_ecid_wtls7	492,16695
#define SN_wap_wsg_idm_ecid_wtls8	494,16756
#define NID_wap_wsg_idm_ecid_wtls8	495,16816
#define OBJ_wap_wsg_idm_ecid_wtls8	496,16856
#define SN_wap_wsg_idm_ecid_wtls9	498,16917
#define NID_wap_wsg_idm_ecid_wtls9	499,16977
#define OBJ_wap_wsg_idm_ecid_wtls9	500,17017
#define SN_wap_wsg_idm_ecid_wtls10	502,17078
#define NID_wap_wsg_idm_ecid_wtls10	503,17140
#define OBJ_wap_wsg_idm_ecid_wtls10	504,17181
#define SN_wap_wsg_idm_ecid_wtls11	506,17244
#define NID_wap_wsg_idm_ecid_wtls11	507,17306
#define OBJ_wap_wsg_idm_ecid_wtls11	508,17347
#define SN_wap_wsg_idm_ecid_wtls12	510,17410
#define NID_wap_wsg_idm_ecid_wtls12	511,17472
#define OBJ_wap_wsg_idm_ecid_wtls12	512,17513
#define SN_cast5_cbc	514,17576
#define LN_cast5_cbc	515,17610
#define NID_cast5_cbc	516,17644
#define OBJ_cast5_cbc	517,17671
#define SN_cast5_ecb	519,17725
#define LN_cast5_ecb	520,17759
#define NID_cast5_ecb	521,17793
#define SN_cast5_cfb64	523,17821
#define LN_cast5_cfb64	524,17857
#define NID_cast5_cfb64	525,17893
#define SN_cast5_ofb64	527,17923
#define LN_cast5_ofb64	528,17959
#define NID_cast5_ofb64	529,17995
#define LN_pbeWithMD5AndCast5_CBC	531,18025
#define NID_pbeWithMD5AndCast5_CBC	532,18084
#define OBJ_pbeWithMD5AndCast5_CBC	533,18124
#define SN_id_PasswordBasedMAC	535,18191
#define LN_id_PasswordBasedMAC	536,18245
#define NID_id_PasswordBasedMAC	537,18298
#define OBJ_id_PasswordBasedMAC	538,18335
#define SN_id_DHBasedMac	540,18399
#define LN_id_DHBasedMac	541,18441
#define NID_id_DHBasedMac	542,18494
#define OBJ_id_DHBasedMac	543,18525
#define SN_rsadsi	545,18583
#define LN_rsadsi	546,18611
#define NID_rsadsi	547,18656
#define OBJ_rsadsi	548,18678
#define SN_pkcs	550,18718
#define LN_pkcs	551,18742
#define NID_pkcs	552,18790
#define OBJ_pkcs	553,18810
#define SN_pkcs1	555,18843
#define NID_pkcs1	556,18869
#define OBJ_pkcs1	557,18892
#define LN_rsaEncryption	559,18924
#define NID_rsaEncryption	560,18966
#define OBJ_rsaEncryption	561,18995
#define SN_md2WithRSAEncryption	563,19036
#define LN_md2WithRSAEncryption	564,19079
#define NID_md2WithRSAEncryption	565,19135
#define OBJ_md2WithRSAEncryption	566,19171
#define SN_md4WithRSAEncryption	568,19219
#define LN_md4WithRSAEncryption	569,19262
#define NID_md4WithRSAEncryption	570,19318
#define OBJ_md4WithRSAEncryption	571,19356
#define SN_md5WithRSAEncryption	573,19404
#define LN_md5WithRSAEncryption	574,19447
#define NID_md5WithRSAEncryption	575,19503
#define OBJ_md5WithRSAEncryption	576,19539
#define SN_sha1WithRSAEncryption	578,19587
#define LN_sha1WithRSAEncryption	579,19632
#define NID_sha1WithRSAEncryption	580,19690
#define OBJ_sha1WithRSAEncryption	581,19728
#define SN_rsaesOaep	583,19777
#define LN_rsaesOaep	584,19812
#define NID_rsaesOaep	585,19846
#define OBJ_rsaesOaep	586,19873
#define SN_mgf1	588,19910
#define LN_mgf1	589,19934
#define NID_mgf1	590,19958
#define OBJ_mgf1	591,19980
#define SN_rsassaPss	593,20012
#define LN_rsassaPss	594,20047
#define NID_rsassaPss	595,20081
#define OBJ_rsassaPss	596,20108
#define SN_sha256WithRSAEncryption	598,20146
#define LN_sha256WithRSAEncryption	599,20195
#define NID_sha256WithRSAEncryption	600,20257
#define OBJ_sha256WithRSAEncryption	601,20298
#define SN_sha384WithRSAEncryption	603,20350
#define LN_sha384WithRSAEncryption	604,20399
#define NID_sha384WithRSAEncryption	605,20461
#define OBJ_sha384WithRSAEncryption	606,20502
#define SN_sha512WithRSAEncryption	608,20554
#define LN_sha512WithRSAEncryption	609,20603
#define NID_sha512WithRSAEncryption	610,20665
#define OBJ_sha512WithRSAEncryption	611,20706
#define SN_sha224WithRSAEncryption	613,20758
#define LN_sha224WithRSAEncryption	614,20807
#define NID_sha224WithRSAEncryption	615,20869
#define OBJ_sha224WithRSAEncryption	616,20910
#define SN_pkcs3	618,20962
#define NID_pkcs3	619,20988
#define OBJ_pkcs3	620,21010
#define LN_dhKeyAgreement	622,21042
#define NID_dhKeyAgreement	623,21086
#define OBJ_dhKeyAgreement	624,21117
#define SN_pkcs5	626,21159
#define NID_pkcs5	627,21185
#define OBJ_pkcs5	628,21208
#define SN_pbeWithMD2AndDES_CBC	630,21240
#define LN_pbeWithMD2AndDES_CBC	631,21287
#define NID_pbeWithMD2AndDES_CBC	632,21343
#define OBJ_pbeWithMD2AndDES_CBC	633,21379
#define SN_pbeWithMD5AndDES_CBC	635,21427
#define LN_pbeWithMD5AndDES_CBC	636,21474
#define NID_pbeWithMD5AndDES_CBC	637,21530
#define OBJ_pbeWithMD5AndDES_CBC	638,21567
#define SN_pbeWithMD2AndRC2_CBC	640,21615
#define LN_pbeWithMD2AndRC2_CBC	641,21665
#define NID_pbeWithMD2AndRC2_CBC	642,21721
#define OBJ_pbeWithMD2AndRC2_CBC	643,21759
#define SN_pbeWithMD5AndRC2_CBC	645,21807
#define LN_pbeWithMD5AndRC2_CBC	646,21857
#define NID_pbeWithMD5AndRC2_CBC	647,21913
#define OBJ_pbeWithMD5AndRC2_CBC	648,21951
#define SN_pbeWithSHA1AndDES_CBC	650,21999
#define LN_pbeWithSHA1AndDES_CBC	651,22048
#define NID_pbeWithSHA1AndDES_CBC	652,22106
#define OBJ_pbeWithSHA1AndDES_CBC	653,22145
#define SN_pbeWithSHA1AndRC2_CBC	655,22195
#define LN_pbeWithSHA1AndRC2_CBC	656,22247
#define NID_pbeWithSHA1AndRC2_CBC	657,22305
#define OBJ_pbeWithSHA1AndRC2_CBC	658,22343
#define LN_id_pbkdf2	660,22393
#define NID_id_pbkdf2	661,22424
#define OBJ_id_pbkdf2	662,22450
#define LN_pbes2	664,22488
#define NID_pbes2	665,22514
#define OBJ_pbes2	666,22537
#define LN_pbmac1	668,22571
#define NID_pbmac1	669,22599
#define OBJ_pbmac1	670,22623
#define SN_pkcs7	672,22658
#define NID_pkcs7	673,22684
#define OBJ_pkcs7	674,22706
#define LN_pkcs7_data	676,22738
#define NID_pkcs7_data	677,22774
#define OBJ_pkcs7_data	678,22801
#define LN_pkcs7_signed	680,22839
#define NID_pkcs7_signed	681,22883
#define OBJ_pkcs7_signed	682,22912
#define LN_pkcs7_enveloped	684,22952
#define NID_pkcs7_enveloped	685,23002
#define OBJ_pkcs7_enveloped	686,23034
#define LN_pkcs7_signedAndEnveloped	688,23077
#define NID_pkcs7_signedAndEnveloped	689,23145
#define OBJ_pkcs7_signedAndEnveloped	690,23186
#define LN_pkcs7_digest	692,23238
#define NID_pkcs7_digest	693,23282
#define OBJ_pkcs7_digest	694,23311
#define LN_pkcs7_encrypted	696,23351
#define NID_pkcs7_encrypted	697,23401
#define OBJ_pkcs7_encrypted	698,23433
#define SN_pkcs9	700,23476
#define NID_pkcs9	701,23502
#define OBJ_pkcs9	702,23524
#define LN_pkcs9_emailAddress	704,23556
#define NID_pkcs9_emailAddress	705,23602
#define OBJ_pkcs9_emailAddress	706,23637
#define LN_pkcs9_unstructuredName	708,23683
#define NID_pkcs9_unstructuredName	709,23737
#define OBJ_pkcs9_unstructuredName	710,23776
#define LN_pkcs9_contentType	712,23826
#define NID_pkcs9_contentType	713,23870
#define OBJ_pkcs9_contentType	714,23904
#define LN_pkcs9_messageDigest	716,23949
#define NID_pkcs9_messageDigest	717,23997
#define OBJ_pkcs9_messageDigest	718,24033
#define LN_pkcs9_signingTime	720,24080
#define NID_pkcs9_signingTime	721,24124
#define OBJ_pkcs9_signingTime	722,24158
#define LN_pkcs9_countersignature	724,24203
#define NID_pkcs9_countersignature	725,24257
#define OBJ_pkcs9_countersignature	726,24296
#define LN_pkcs9_challengePassword	728,24346
#define NID_pkcs9_challengePassword	729,24402
#define OBJ_pkcs9_challengePassword	730,24442
#define LN_pkcs9_unstructuredAddress	732,24493
#define NID_pkcs9_unstructuredAddress	733,24553
#define OBJ_pkcs9_unstructuredAddress	734,24595
#define LN_pkcs9_extCertAttributes	736,24648
#define NID_pkcs9_extCertAttributes	737,24716
#define OBJ_pkcs9_extCertAttributes	738,24756
#define SN_ext_req	740,24807
#define LN_ext_req	741,24836
#define NID_ext_req	742,24876
#define OBJ_ext_req	743,24901
#define SN_SMIMECapabilities	745,24937
#define LN_SMIMECapabilities	746,24980
#define NID_SMIMECapabilities	747,25032
#define OBJ_SMIMECapabilities	748,25067
#define SN_SMIME	750,25113
#define LN_SMIME	751,25139
#define NID_SMIME	752,25166
#define OBJ_SMIME	753,25189
#define SN_id_smime_mod	755,25223
#define NID_id_smime_mod	756,25263
#define OBJ_id_smime_mod	757,25293
#define SN_id_smime_ct	759,25333
#define NID_id_smime_ct	760,25371
#define OBJ_id_smime_ct	761,25400
#define SN_id_smime_aa	763,25439
#define NID_id_smime_aa	764,25477
#define OBJ_id_smime_aa	765,25506
#define SN_id_smime_alg	767,25545
#define NID_id_smime_alg	768,25585
#define OBJ_id_smime_alg	769,25615
#define SN_id_smime_cd	771,25655
#define NID_id_smime_cd	772,25693
#define OBJ_id_smime_cd	773,25722
#define SN_id_smime_spq	775,25761
#define NID_id_smime_spq	776,25801
#define OBJ_id_smime_spq	777,25831
#define SN_id_smime_cti	779,25871
#define NID_id_smime_cti	780,25911
#define OBJ_id_smime_cti	781,25941
#define SN_id_smime_mod_cms	783,25981
#define NID_id_smime_mod_cms	784,26029
#define OBJ_id_smime_mod_cms	785,26063
#define SN_id_smime_mod_ess	787,26114
#define NID_id_smime_mod_ess	788,26162
#define OBJ_id_smime_mod_ess	789,26196
#define SN_id_smime_mod_oid	791,26247
#define NID_id_smime_mod_oid	792,26295
#define OBJ_id_smime_mod_oid	793,26329
#define SN_id_smime_mod_msg_v3	795,26380
#define NID_id_smime_mod_msg_v3	796,26434
#define OBJ_id_smime_mod_msg_v3	797,26471
#define SN_id_smime_mod_ets_eSignature_88	799,26525
#define NID_id_smime_mod_ets_eSignature_88	800,26601
#define OBJ_id_smime_mod_ets_eSignature_88	801,26649
#define SN_id_smime_mod_ets_eSignature_97	803,26714
#define NID_id_smime_mod_ets_eSignature_97	804,26790
#define OBJ_id_smime_mod_ets_eSignature_97	805,26838
#define SN_id_smime_mod_ets_eSigPolicy_88	807,26903
#define NID_id_smime_mod_ets_eSigPolicy_88	808,26979
#define OBJ_id_smime_mod_ets_eSigPolicy_88	809,27027
#define SN_id_smime_mod_ets_eSigPolicy_97	811,27092
#define NID_id_smime_mod_ets_eSigPolicy_97	812,27168
#define OBJ_id_smime_mod_ets_eSigPolicy_97	813,27216
#define SN_id_smime_ct_receipt	815,27281
#define NID_id_smime_ct_receipt	816,27335
#define OBJ_id_smime_ct_receipt	817,27372
#define SN_id_smime_ct_authData	819,27425
#define NID_id_smime_ct_authData	820,27481
#define OBJ_id_smime_ct_authData	821,27519
#define SN_id_smime_ct_publishCert	823,27573
#define NID_id_smime_ct_publishCert	824,27635
#define OBJ_id_smime_ct_publishCert	825,27676
#define SN_id_smime_ct_TSTInfo	827,27733
#define NID_id_smime_ct_TSTInfo	828,27787
#define OBJ_id_smime_ct_TSTInfo	829,27824
#define SN_id_smime_ct_TDTInfo	831,27877
#define NID_id_smime_ct_TDTInfo	832,27931
#define OBJ_id_smime_ct_TDTInfo	833,27968
#define SN_id_smime_ct_contentInfo	835,28021
#define NID_id_smime_ct_contentInfo	836,28083
#define OBJ_id_smime_ct_contentInfo	837,28124
#define SN_id_smime_ct_DVCSRequestData	839,28181
#define NID_id_smime_ct_DVCSRequestData	840,28251
#define OBJ_id_smime_ct_DVCSRequestData	841,28296
#define SN_id_smime_ct_DVCSResponseData	843,28357
#define NID_id_smime_ct_DVCSResponseData	844,28429
#define OBJ_id_smime_ct_DVCSResponseData	845,28475
#define SN_id_smime_ct_compressedData	847,28537
#define NID_id_smime_ct_compressedData	848,28605
#define OBJ_id_smime_ct_compressedData	849,28649
#define SN_id_smime_ct_timestampedData	851,28709
#define NID_id_smime_ct_timestampedData	852,28779
#define OBJ_id_smime_ct_timestampedData	853,28824
#define SN_id_ct_asciiTextWithCRLF	855,28886
#define NID_id_ct_asciiTextWithCRLF	856,28948
#define OBJ_id_ct_asciiTextWithCRLF	857,28989
#define SN_id_smime_aa_receiptRequest	859,29047
#define NID_id_smime_aa_receiptRequest	860,29115
#define OBJ_id_smime_aa_receiptRequest	861,29159
#define SN_id_smime_aa_securityLabel	863,29219
#define NID_id_smime_aa_securityLabel	864,29285
#define OBJ_id_smime_aa_securityLabel	865,29328
#define SN_id_smime_aa_mlExpandHistory	867,29387
#define NID_id_smime_aa_mlExpandHistory	868,29457
#define OBJ_id_smime_aa_mlExpandHistory	869,29502
#define SN_id_smime_aa_contentHint	871,29563
#define NID_id_smime_aa_contentHint	872,29625
#define OBJ_id_smime_aa_contentHint	873,29666
#define SN_id_smime_aa_msgSigDigest	875,29723
#define NID_id_smime_aa_msgSigDigest	876,29787
#define OBJ_id_smime_aa_msgSigDigest	877,29829
#define SN_id_smime_aa_encapContentType	879,29887
#define NID_id_smime_aa_encapContentType	880,29959
#define OBJ_id_smime_aa_encapContentType	881,30005
#define SN_id_smime_aa_contentIdentifier	883,30067
#define NID_id_smime_aa_contentIdentifier	884,30141
#define OBJ_id_smime_aa_contentIdentifier	885,30188
#define SN_id_smime_aa_macValue	887,30251
#define NID_id_smime_aa_macValue	888,30307
#define OBJ_id_smime_aa_macValue	889,30345
#define SN_id_smime_aa_equivalentLabels	891,30399
#define NID_id_smime_aa_equivalentLabels	892,30471
#define OBJ_id_smime_aa_equivalentLabels	893,30517
#define SN_id_smime_aa_contentReference	895,30579
#define NID_id_smime_aa_contentReference	896,30651
#define OBJ_id_smime_aa_contentReference	897,30697
#define SN_id_smime_aa_encrypKeyPref	899,30760
#define NID_id_smime_aa_encrypKeyPref	900,30826
#define OBJ_id_smime_aa_encrypKeyPref	901,30869
#define SN_id_smime_aa_signingCertificate	903,30929
#define NID_id_smime_aa_signingCertificate	904,31005
#define OBJ_id_smime_aa_signingCertificate	905,31053
#define SN_id_smime_aa_smimeEncryptCerts	907,31118
#define NID_id_smime_aa_smimeEncryptCerts	908,31192
#define OBJ_id_smime_aa_smimeEncryptCerts	909,31239
#define SN_id_smime_aa_timeStampToken	911,31303
#define NID_id_smime_aa_timeStampToken	912,31371
#define OBJ_id_smime_aa_timeStampToken	913,31415
#define SN_id_smime_aa_ets_sigPolicyId	915,31476
#define NID_id_smime_aa_ets_sigPolicyId	916,31546
#define OBJ_id_smime_aa_ets_sigPolicyId	917,31591
#define SN_id_smime_aa_ets_commitmentType	919,31653
#define NID_id_smime_aa_ets_commitmentType	920,31729
#define OBJ_id_smime_aa_ets_commitmentType	921,31777
#define SN_id_smime_aa_ets_signerLocation	923,31842
#define NID_id_smime_aa_ets_signerLocation	924,31918
#define OBJ_id_smime_aa_ets_signerLocation	925,31966
#define SN_id_smime_aa_ets_signerAttr	927,32031
#define NID_id_smime_aa_ets_signerAttr	928,32099
#define OBJ_id_smime_aa_ets_signerAttr	929,32143
#define SN_id_smime_aa_ets_otherSigCert	931,32204
#define NID_id_smime_aa_ets_otherSigCert	932,32276
#define OBJ_id_smime_aa_ets_otherSigCert	933,32322
#define SN_id_smime_aa_ets_contentTimestamp	935,32385
#define NID_id_smime_aa_ets_contentTimestamp	936,32465
#define OBJ_id_smime_aa_ets_contentTimestamp	937,32515
#define SN_id_smime_aa_ets_CertificateRefs	939,32582
#define NID_id_smime_aa_ets_CertificateRefs	940,32660
#define OBJ_id_smime_aa_ets_CertificateRefs	941,32709
#define SN_id_smime_aa_ets_RevocationRefs	943,32775
#define NID_id_smime_aa_ets_RevocationRefs	944,32851
#define OBJ_id_smime_aa_ets_RevocationRefs	945,32899
#define SN_id_smime_aa_ets_certValues	947,32964
#define NID_id_smime_aa_ets_certValues	948,33032
#define OBJ_id_smime_aa_ets_certValues	949,33076
#define SN_id_smime_aa_ets_revocationValues	951,33137
#define NID_id_smime_aa_ets_revocationValues	952,33217
#define OBJ_id_smime_aa_ets_revocationValues	953,33267
#define SN_id_smime_aa_ets_escTimeStamp	955,33334
#define NID_id_smime_aa_ets_escTimeStamp	956,33406
#define OBJ_id_smime_aa_ets_escTimeStamp	957,33452
#define SN_id_smime_aa_ets_certCRLTimestamp	959,33515
#define NID_id_smime_aa_ets_certCRLTimestamp	960,33595
#define OBJ_id_smime_aa_ets_certCRLTimestamp	961,33645
#define SN_id_smime_aa_ets_archiveTimeStamp	963,33712
#define NID_id_smime_aa_ets_archiveTimeStamp	964,33792
#define OBJ_id_smime_aa_ets_archiveTimeStamp	965,33842
#define SN_id_smime_aa_signatureType	967,33909
#define NID_id_smime_aa_signatureType	968,33975
#define OBJ_id_smime_aa_signatureType	969,34018
#define SN_id_smime_aa_dvcs_dvc	971,34078
#define NID_id_smime_aa_dvcs_dvc	972,34134
#define OBJ_id_smime_aa_dvcs_dvc	973,34172
#define SN_id_smime_alg_ESDHwith3DES	975,34227
#define NID_id_smime_alg_ESDHwith3DES	976,34293
#define OBJ_id_smime_alg_ESDHwith3DES	977,34336
#define SN_id_smime_alg_ESDHwithRC2	979,34396
#define NID_id_smime_alg_ESDHwithRC2	980,34460
#define OBJ_id_smime_alg_ESDHwithRC2	981,34502
#define SN_id_smime_alg_3DESwrap	983,34561
#define NID_id_smime_alg_3DESwrap	984,34619
#define OBJ_id_smime_alg_3DESwrap	985,34658
#define SN_id_smime_alg_RC2wrap	987,34714
#define NID_id_smime_alg_RC2wrap	988,34770
#define OBJ_id_smime_alg_RC2wrap	989,34808
#define SN_id_smime_alg_ESDH	991,34863
#define NID_id_smime_alg_ESDH	992,34913
#define OBJ_id_smime_alg_ESDH	993,34948
#define SN_id_smime_alg_CMS3DESwrap	995,35000
#define NID_id_smime_alg_CMS3DESwrap	996,35064
#define OBJ_id_smime_alg_CMS3DESwrap	997,35106
#define SN_id_smime_alg_CMSRC2wrap	999,35165
#define NID_id_smime_alg_CMSRC2wrap	1000,35227
#define OBJ_id_smime_alg_CMSRC2wrap	1001,35268
#define SN_id_alg_PWRI_KEK	1003,35326
#define NID_id_alg_PWRI_KEK	1004,35372
#define OBJ_id_alg_PWRI_KEK	1005,35405
#define SN_id_smime_cd_ldap	1007,35455
#define NID_id_smime_cd_ldap	1008,35503
#define OBJ_id_smime_cd_ldap	1009,35537
#define SN_id_smime_spq_ets_sqt_uri	1011,35587
#define NID_id_smime_spq_ets_sqt_uri	1012,35651
#define OBJ_id_smime_spq_ets_sqt_uri	1013,35693
#define SN_id_smime_spq_ets_sqt_unotice	1015,35752
#define NID_id_smime_spq_ets_sqt_unotice	1016,35824
#define OBJ_id_smime_spq_ets_sqt_unotice	1017,35870
#define SN_id_smime_cti_ets_proofOfOrigin	1019,35933
#define NID_id_smime_cti_ets_proofOfOrigin	1020,36009
#define OBJ_id_smime_cti_ets_proofOfOrigin	1021,36057
#define SN_id_smime_cti_ets_proofOfReceipt	1023,36122
#define NID_id_smime_cti_ets_proofOfReceipt	1024,36200
#define OBJ_id_smime_cti_ets_proofOfReceipt	1025,36249
#define SN_id_smime_cti_ets_proofOfDelivery	1027,36315
#define NID_id_smime_cti_ets_proofOfDelivery	1028,36395
#define OBJ_id_smime_cti_ets_proofOfDelivery	1029,36445
#define SN_id_smime_cti_ets_proofOfSender	1031,36512
#define NID_id_smime_cti_ets_proofOfSender	1032,36588
#define OBJ_id_smime_cti_ets_proofOfSender	1033,36636
#define SN_id_smime_cti_ets_proofOfApproval	1035,36701
#define NID_id_smime_cti_ets_proofOfApproval	1036,36781
#define OBJ_id_smime_cti_ets_proofOfApproval	1037,36831
#define SN_id_smime_cti_ets_proofOfCreation	1039,36898
#define NID_id_smime_cti_ets_proofOfCreation	1040,36978
#define OBJ_id_smime_cti_ets_proofOfCreation	1041,37028
#define LN_friendlyName	1043,37095
#define NID_friendlyName	1044,37135
#define OBJ_friendlyName	1045,37165
#define LN_localKeyID	1047,37206
#define NID_localKeyID	1048,37242
#define OBJ_localKeyID	1049,37270
#define SN_ms_csp_name	1051,37309
#define LN_ms_csp_name	1052,37343
#define NID_ms_csp_name	1053,37388
#define OBJ_ms_csp_name	1054,37417
#define SN_LocalKeySet	1056,37473
#define LN_LocalKeySet	1057,37511
#define NID_LocalKeySet	1058,37561
#define OBJ_LocalKeySet	1059,37590
#define OBJ_certTypes	1061,37646
#define LN_x509Certificate	1063,37684
#define NID_x509Certificate	1064,37730
#define OBJ_x509Certificate	1065,37763
#define LN_sdsiCertificate	1067,37810
#define NID_sdsiCertificate	1068,37856
#define OBJ_sdsiCertificate	1069,37889
#define OBJ_crlTypes	1071,37936
#define LN_x509Crl	1073,37973
#define NID_x509Crl	1074,38003
#define OBJ_x509Crl	1075,38028
#define OBJ_pkcs12	1077,38066
#define OBJ_pkcs12_pbeids	1079,38100
#define SN_pbe_WithSHA1And128BitRC4	1081,38142
#define LN_pbe_WithSHA1And128BitRC4	1082,38198
#define NID_pbe_WithSHA1And128BitRC4	1083,38261
#define OBJ_pbe_WithSHA1And128BitRC4	1084,38303
#define SN_pbe_WithSHA1And40BitRC4	1086,38363
#define LN_pbe_WithSHA1And40BitRC4	1087,38417
#define NID_pbe_WithSHA1And40BitRC4	1088,38478
#define OBJ_pbe_WithSHA1And40BitRC4	1089,38519
#define SN_pbe_WithSHA1And3_Key_TripleDES_CBC	1091,38578
#define LN_pbe_WithSHA1And3_Key_TripleDES_CBC	1092,38641
#define NID_pbe_WithSHA1And3_Key_TripleDES_CBC	1093,38723
#define OBJ_pbe_WithSHA1And3_Key_TripleDES_CBC	1094,38775
#define SN_pbe_WithSHA1And2_Key_TripleDES_CBC	1096,38845
#define LN_pbe_WithSHA1And2_Key_TripleDES_CBC	1097,38908
#define NID_pbe_WithSHA1And2_Key_TripleDES_CBC	1098,38990
#define OBJ_pbe_WithSHA1And2_Key_TripleDES_CBC	1099,39042
#define SN_pbe_WithSHA1And128BitRC2_CBC	1101,39112
#define LN_pbe_WithSHA1And128BitRC2_CBC	1102,39172
#define NID_pbe_WithSHA1And128BitRC2_CBC	1103,39243
#define OBJ_pbe_WithSHA1And128BitRC2_CBC	1104,39289
#define SN_pbe_WithSHA1And40BitRC2_CBC	1106,39353
#define LN_pbe_WithSHA1And40BitRC2_CBC	1107,39411
#define NID_pbe_WithSHA1And40BitRC2_CBC	1108,39480
#define OBJ_pbe_WithSHA1And40BitRC2_CBC	1109,39525
#define OBJ_pkcs12_Version1	1111,39588
#define OBJ_pkcs12_BagIds	1113,39633
#define LN_keyBag	1115,39684
#define NID_keyBag	1116,39712
#define OBJ_keyBag	1117,39736
#define LN_pkcs8ShroudedKeyBag	1119,39778
#define NID_pkcs8ShroudedKeyBag	1120,39832
#define OBJ_pkcs8ShroudedKeyBag	1121,39869
#define LN_certBag	1123,39924
#define NID_certBag	1124,39954
#define OBJ_certBag	1125,39979
#define LN_crlBag	1127,40022
#define NID_crlBag	1128,40050
#define OBJ_crlBag	1129,40074
#define LN_secretBag	1131,40116
#define NID_secretBag	1132,40150
#define OBJ_secretBag	1133,40177
#define LN_safeContentsBag	1135,40222
#define NID_safeContentsBag	1136,40268
#define OBJ_safeContentsBag	1137,40301
#define SN_md2	1139,40352
#define LN_md2	1140,40374
#define NID_md2	1141,40396
#define OBJ_md2	1142,40415
#define SN_md4	1144,40450
#define LN_md4	1145,40472
#define NID_md4	1146,40494
#define OBJ_md4	1147,40515
#define SN_md5	1149,40550
#define LN_md5	1150,40572
#define NID_md5	1151,40594
#define OBJ_md5	1152,40613
#define SN_md5_sha1	1154,40648
#define LN_md5_sha1	1155,40680
#define NID_md5_sha1	1156,40712
#define LN_hmacWithMD5	1158,40739
#define NID_hmacWithMD5	1159,40777
#define OBJ_hmacWithMD5	1160,40806
#define LN_hmacWithSHA1	1162,40849
#define NID_hmacWithSHA1	1163,40889
#define OBJ_hmacWithSHA1	1164,40919
#define LN_hmacWithSHA224	1166,40963
#define NID_hmacWithSHA224	1167,41007
#define OBJ_hmacWithSHA224	1168,41039
#define LN_hmacWithSHA256	1170,41085
#define NID_hmacWithSHA256	1171,41129
#define OBJ_hmacWithSHA256	1172,41161
#define LN_hmacWithSHA384	1174,41207
#define NID_hmacWithSHA384	1175,41251
#define OBJ_hmacWithSHA384	1176,41283
#define LN_hmacWithSHA512	1178,41330
#define NID_hmacWithSHA512	1179,41374
#define OBJ_hmacWithSHA512	1180,41406
#define SN_rc2_cbc	1182,41453
#define LN_rc2_cbc	1183,41483
#define NID_rc2_cbc	1184,41513
#define OBJ_rc2_cbc	1185,41537
#define SN_rc2_ecb	1187,41576
#define LN_rc2_ecb	1188,41606
#define NID_rc2_ecb	1189,41636
#define SN_rc2_cfb64	1191,41661
#define LN_rc2_cfb64	1192,41693
#define NID_rc2_cfb64	1193,41725
#define SN_rc2_ofb64	1195,41752
#define LN_rc2_ofb64	1196,41784
#define NID_rc2_ofb64	1197,41816
#define SN_rc2_40_cbc	1199,41843
#define LN_rc2_40_cbc	1200,41879
#define NID_rc2_40_cbc	1201,41915
#define SN_rc2_64_cbc	1203,41943
#define LN_rc2_64_cbc	1204,41979
#define NID_rc2_64_cbc	1205,42015
#define SN_rc4	1207,42044
#define LN_rc4	1208,42066
#define NID_rc4	1209,42088
#define OBJ_rc4	1210,42107
#define SN_rc4_40	1212,42142
#define LN_rc4_40	1213,42170
#define NID_rc4_40	1214,42198
#define SN_des_ede3_cbc	1216,42222
#define LN_des_ede3_cbc	1217,42262
#define NID_des_ede3_cbc	1218,42302
#define OBJ_des_ede3_cbc	1219,42331
#define SN_rc5_cbc	1221,42375
#define LN_rc5_cbc	1222,42405
#define NID_rc5_cbc	1223,42435
#define OBJ_rc5_cbc	1224,42460
#define SN_rc5_ecb	1226,42499
#define LN_rc5_ecb	1227,42529
#define NID_rc5_ecb	1228,42559
#define SN_rc5_cfb64	1230,42585
#define LN_rc5_cfb64	1231,42617
#define NID_rc5_cfb64	1232,42649
#define SN_rc5_ofb64	1234,42677
#define LN_rc5_ofb64	1235,42709
#define NID_rc5_ofb64	1236,42741
#define SN_ms_ext_req	1238,42769
#define LN_ms_ext_req	1239,42803
#define NID_ms_ext_req	1240,42856
#define OBJ_ms_ext_req	1241,42884
#define SN_ms_code_ind	1243,42942
#define LN_ms_code_ind	1244,42978
#define NID_ms_code_ind	1245,43038
#define OBJ_ms_code_ind	1246,43067
#define SN_ms_code_com	1248,43126
#define LN_ms_code_com	1249,43162
#define NID_ms_code_com	1250,43222
#define OBJ_ms_code_com	1251,43251
#define SN_ms_ctl_sign	1253,43310
#define LN_ms_ctl_sign	1254,43346
#define NID_ms_ctl_sign	1255,43401
#define OBJ_ms_ctl_sign	1256,43430
#define SN_ms_sgc	1258,43489
#define LN_ms_sgc	1259,43516
#define NID_ms_sgc	1260,43567
#define OBJ_ms_sgc	1261,43591
#define SN_ms_efs	1263,43645
#define LN_ms_efs	1264,43672
#define NID_ms_efs	1265,43725
#define OBJ_ms_efs	1266,43749
#define SN_ms_smartcard_login	1268,43803
#define LN_ms_smartcard_login	1269,43853
#define NID_ms_smartcard_login	1270,43911
#define OBJ_ms_smartcard_login	1271,43947
#define SN_ms_upn	1273,44013
#define LN_ms_upn	1274,44040
#define NID_ms_upn	1275,44096
#define OBJ_ms_upn	1276,44120
#define SN_idea_cbc	1278,44174
#define LN_idea_cbc	1279,44206
#define NID_idea_cbc	1280,44238
#define OBJ_idea_cbc	1281,44263
#define SN_idea_ecb	1283,44321
#define LN_idea_ecb	1284,44353
#define NID_idea_ecb	1285,44385
#define SN_idea_cfb64	1287,44411
#define LN_idea_cfb64	1288,44445
#define NID_idea_cfb64	1289,44479
#define SN_idea_ofb64	1291,44507
#define LN_idea_ofb64	1292,44541
#define NID_idea_ofb64	1293,44575
#define SN_bf_cbc	1295,44603
#define LN_bf_cbc	1296,44631
#define NID_bf_cbc	1297,44659
#define OBJ_bf_cbc	1298,44682
#define SN_bf_ecb	1300,44733
#define LN_bf_ecb	1301,44761
#define NID_bf_ecb	1302,44789
#define SN_bf_cfb64	1304,44813
#define LN_bf_cfb64	1305,44843
#define NID_bf_cfb64	1306,44873
#define SN_bf_ofb64	1308,44899
#define LN_bf_ofb64	1309,44929
#define NID_bf_ofb64	1310,44959
#define SN_id_pkix	1312,44985
#define NID_id_pkix	1313,45012
#define OBJ_id_pkix	1314,45037
#define SN_id_pkix_mod	1316,45080
#define NID_id_pkix_mod	1317,45118
#define OBJ_id_pkix_mod	1318,45147
#define SN_id_pe	1320,45188
#define NID_id_pe	1321,45214
#define OBJ_id_pe	1322,45237
#define SN_id_qt	1324,45272
#define NID_id_qt	1325,45298
#define OBJ_id_qt	1326,45321
#define SN_id_kp	1328,45356
#define NID_id_kp	1329,45382
#define OBJ_id_kp	1330,45405
#define SN_id_it	1332,45440
#define NID_id_it	1333,45466
#define OBJ_id_it	1334,45489
#define SN_id_pkip	1336,45524
#define NID_id_pkip	1337,45554
#define OBJ_id_pkip	1338,45579
#define SN_id_alg	1340,45616
#define NID_id_alg	1341,45644
#define OBJ_id_alg	1342,45668
#define SN_id_cmc	1344,45704
#define NID_id_cmc	1345,45732
#define OBJ_id_cmc	1346,45756
#define SN_id_on	1348,45792
#define NID_id_on	1349,45818
#define OBJ_id_on	1350,45841
#define SN_id_pda	1352,45876
#define NID_id_pda	1353,45904
#define OBJ_id_pda	1354,45928
#define SN_id_aca	1356,45964
#define NID_id_aca	1357,45992
#define OBJ_id_aca	1358,46016
#define SN_id_qcs	1360,46053
#define NID_id_qcs	1361,46081
#define OBJ_id_qcs	1362,46105
#define SN_id_cct	1364,46142
#define NID_id_cct	1365,46170
#define OBJ_id_cct	1366,46194
#define SN_id_ppl	1368,46231
#define NID_id_ppl	1369,46259
#define OBJ_id_ppl	1370,46283
#define SN_id_ad	1372,46320
#define NID_id_ad	1373,46346
#define OBJ_id_ad	1374,46369
#define SN_id_pkix1_explicit_88	1376,46405
#define NID_id_pkix1_explicit_88	1377,46461
#define OBJ_id_pkix1_explicit_88	1378,46499
#define SN_id_pkix1_implicit_88	1380,46553
#define NID_id_pkix1_implicit_88	1381,46609
#define OBJ_id_pkix1_implicit_88	1382,46647
#define SN_id_pkix1_explicit_93	1384,46701
#define NID_id_pkix1_explicit_93	1385,46757
#define OBJ_id_pkix1_explicit_93	1386,46795
#define SN_id_pkix1_implicit_93	1388,46849
#define NID_id_pkix1_implicit_93	1389,46905
#define OBJ_id_pkix1_implicit_93	1390,46943
#define SN_id_mod_crmf	1392,46997
#define NID_id_mod_crmf	1393,47035
#define OBJ_id_mod_crmf	1394,47064
#define SN_id_mod_cmc	1396,47109
#define NID_id_mod_cmc	1397,47145
#define OBJ_id_mod_cmc	1398,47173
#define SN_id_mod_kea_profile_88	1400,47217
#define NID_id_mod_kea_profile_88	1401,47275
#define OBJ_id_mod_kea_profile_88	1402,47314
#define SN_id_mod_kea_profile_93	1404,47369
#define NID_id_mod_kea_profile_93	1405,47427
#define OBJ_id_mod_kea_profile_93	1406,47466
#define SN_id_mod_cmp	1408,47521
#define NID_id_mod_cmp	1409,47557
#define OBJ_id_mod_cmp	1410,47585
#define SN_id_mod_qualified_cert_88	1412,47629
#define NID_id_mod_qualified_cert_88	1413,47693
#define OBJ_id_mod_qualified_cert_88	1414,47735
#define SN_id_mod_qualified_cert_93	1416,47794
#define NID_id_mod_qualified_cert_93	1417,47858
#define OBJ_id_mod_qualified_cert_93	1418,47900
#define SN_id_mod_attribute_cert	1420,47959
#define NID_id_mod_attribute_cert	1421,48017
#define OBJ_id_mod_attribute_cert	1422,48056
#define SN_id_mod_timestamp_protocol	1424,48112
#define NID_id_mod_timestamp_protocol	1425,48178
#define OBJ_id_mod_timestamp_protocol	1426,48221
#define SN_id_mod_ocsp	1428,48281
#define NID_id_mod_ocsp	1429,48319
#define OBJ_id_mod_ocsp	1430,48348
#define SN_id_mod_dvcs	1432,48394
#define NID_id_mod_dvcs	1433,48432
#define OBJ_id_mod_dvcs	1434,48461
#define SN_id_mod_cmp2000	1436,48507
#define NID_id_mod_cmp2000	1437,48551
#define OBJ_id_mod_cmp2000	1438,48583
#define SN_info_access	1440,48632
#define LN_info_access	1441,48678
#define NID_info_access	1442,48733
#define OBJ_info_access	1443,48762
#define SN_biometricInfo	1445,48801
#define LN_biometricInfo	1446,48843
#define NID_biometricInfo	1447,48886
#define OBJ_biometricInfo	1448,48917
#define SN_qcStatements	1450,48958
#define NID_qcStatements	1451,48998
#define OBJ_qcStatements	1452,49028
#define SN_ac_auditEntity	1454,49068
#define NID_ac_auditEntity	1455,49112
#define OBJ_ac_auditEntity	1456,49144
#define SN_ac_targeting	1458,49186
#define NID_ac_targeting	1459,49226
#define OBJ_ac_targeting	1460,49256
#define SN_aaControls	1462,49296
#define NID_aaControls	1463,49332
#define OBJ_aaControls	1464,49360
#define SN_sbgp_ipAddrBlock	1466,49398
#define NID_sbgp_ipAddrBlock	1467,49446
#define OBJ_sbgp_ipAddrBlock	1468,49480
#define SN_sbgp_autonomousSysNum	1470,49524
#define NID_sbgp_autonomousSysNum	1471,49582
#define OBJ_sbgp_autonomousSysNum	1472,49621
#define SN_sbgp_routerIdentifier	1474,49670
#define NID_sbgp_routerIdentifier	1475,49728
#define OBJ_sbgp_routerIdentifier	1476,49767
#define SN_ac_proxying	1478,49816
#define NID_ac_proxying	1479,49854
#define OBJ_ac_proxying	1480,49883
#define SN_sinfo_access	1482,49923
#define LN_sinfo_access	1483,49968
#define NID_sinfo_access	1484,50022
#define OBJ_sinfo_access	1485,50052
#define SN_proxyCertInfo	1487,50093
#define LN_proxyCertInfo	1488,50135
#define NID_proxyCertInfo	1489,50193
#define OBJ_proxyCertInfo	1490,50224
#define SN_id_qt_cps	1492,50266
#define LN_id_qt_cps	1493,50300
#define NID_id_qt_cps	1494,50345
#define OBJ_id_qt_cps	1495,50372
#define SN_id_qt_unotice	1497,50409
#define LN_id_qt_unotice	1498,50451
#define NID_id_qt_unotice	1499,50508
#define OBJ_id_qt_unotice	1500,50539
#define SN_textNotice	1502,50580
#define NID_textNotice	1503,50616
#define OBJ_textNotice	1504,50644
#define SN_server_auth	1506,50682
#define LN_server_auth	1507,50719
#define NID_server_auth	1508,50775
#define OBJ_server_auth	1509,50804
#define SN_client_auth	1511,50843
#define LN_client_auth	1512,50880
#define NID_client_auth	1513,50936
#define OBJ_client_auth	1514,50965
#define SN_code_sign	1516,51004
#define LN_code_sign	1517,51040
#define NID_code_sign	1518,51077
#define OBJ_code_sign	1519,51104
#define SN_email_protect	1521,51141
#define LN_email_protect	1522,51185
#define NID_email_protect	1523,51231
#define OBJ_email_protect	1524,51262
#define SN_ipsecEndSystem	1526,51303
#define LN_ipsecEndSystem	1527,51347
#define NID_ipsecEndSystem	1528,51393
#define OBJ_ipsecEndSystem	1529,51425
#define SN_ipsecTunnel	1531,51467
#define LN_ipsecTunnel	1532,51505
#define NID_ipsecTunnel	1533,51544
#define OBJ_ipsecTunnel	1534,51573
#define SN_ipsecUser	1536,51612
#define LN_ipsecUser	1537,51646
#define NID_ipsecUser	1538,51681
#define OBJ_ipsecUser	1539,51708
#define SN_time_stamp	1541,51745
#define LN_time_stamp	1542,51783
#define NID_time_stamp	1543,51822
#define OBJ_time_stamp	1544,51850
#define SN_OCSP_sign	1546,51888
#define LN_OCSP_sign	1547,51924
#define NID_OCSP_sign	1548,51961
#define OBJ_OCSP_sign	1549,51988
#define SN_dvcs	1551,52025
#define LN_dvcs	1552,52049
#define NID_dvcs	1553,52073
#define OBJ_dvcs	1554,52095
#define SN_id_it_caProtEncCert	1556,52128
#define NID_id_it_caProtEncCert	1557,52182
#define OBJ_id_it_caProtEncCert	1558,52219
#define SN_id_it_signKeyPairTypes	1560,52266
#define NID_id_it_signKeyPairTypes	1561,52326
#define OBJ_id_it_signKeyPairTypes	1562,52366
#define SN_id_it_encKeyPairTypes	1564,52416
#define NID_id_it_encKeyPairTypes	1565,52474
#define OBJ_id_it_encKeyPairTypes	1566,52513
#define SN_id_it_preferredSymmAlg	1568,52562
#define NID_id_it_preferredSymmAlg	1569,52622
#define OBJ_id_it_preferredSymmAlg	1570,52662
#define SN_id_it_caKeyUpdateInfo	1572,52712
#define NID_id_it_caKeyUpdateInfo	1573,52770
#define OBJ_id_it_caKeyUpdateInfo	1574,52809
#define SN_id_it_currentCRL	1576,52858
#define NID_id_it_currentCRL	1577,52906
#define OBJ_id_it_currentCRL	1578,52940
#define SN_id_it_unsupportedOIDs	1580,52984
#define NID_id_it_unsupportedOIDs	1581,53042
#define OBJ_id_it_unsupportedOIDs	1582,53081
#define SN_id_it_subscriptionRequest	1584,53130
#define NID_id_it_subscriptionRequest	1585,53196
#define OBJ_id_it_subscriptionRequest	1586,53239
#define SN_id_it_subscriptionResponse	1588,53292
#define NID_id_it_subscriptionResponse	1589,53360
#define OBJ_id_it_subscriptionResponse	1590,53404
#define SN_id_it_keyPairParamReq	1592,53458
#define NID_id_it_keyPairParamReq	1593,53516
#define OBJ_id_it_keyPairParamReq	1594,53555
#define SN_id_it_keyPairParamRep	1596,53605
#define NID_id_it_keyPairParamRep	1597,53663
#define OBJ_id_it_keyPairParamRep	1598,53702
#define SN_id_it_revPassphrase	1600,53752
#define NID_id_it_revPassphrase	1601,53806
#define OBJ_id_it_revPassphrase	1602,53843
#define SN_id_it_implicitConfirm	1604,53891
#define NID_id_it_implicitConfirm	1605,53949
#define OBJ_id_it_implicitConfirm	1606,53988
#define SN_id_it_confirmWaitTime	1608,54038
#define NID_id_it_confirmWaitTime	1609,54096
#define OBJ_id_it_confirmWaitTime	1610,54135
#define SN_id_it_origPKIMessage	1612,54185
#define NID_id_it_origPKIMessage	1613,54241
#define OBJ_id_it_origPKIMessage	1614,54279
#define SN_id_it_suppLangTags	1616,54328
#define NID_id_it_suppLangTags	1617,54380
#define OBJ_id_it_suppLangTags	1618,54416
#define SN_id_regCtrl	1620,54463
#define NID_id_regCtrl	1621,54499
#define OBJ_id_regCtrl	1622,54527
#define SN_id_regInfo	1624,54567
#define NID_id_regInfo	1625,54603
#define OBJ_id_regInfo	1626,54631
#define SN_id_regCtrl_regToken	1628,54671
#define NID_id_regCtrl_regToken	1629,54725
#define OBJ_id_regCtrl_regToken	1630,54762
#define SN_id_regCtrl_authenticator	1632,54814
#define NID_id_regCtrl_authenticator	1633,54878
#define OBJ_id_regCtrl_authenticator	1634,54920
#define SN_id_regCtrl_pkiPublicationInfo	1636,54977
#define NID_id_regCtrl_pkiPublicationInfo	1637,55051
#define OBJ_id_regCtrl_pkiPublicationInfo	1638,55098
#define SN_id_regCtrl_pkiArchiveOptions	1640,55160
#define NID_id_regCtrl_pkiArchiveOptions	1641,55232
#define OBJ_id_regCtrl_pkiArchiveOptions	1642,55278
#define SN_id_regCtrl_oldCertID	1644,55339
#define NID_id_regCtrl_oldCertID	1645,55395
#define OBJ_id_regCtrl_oldCertID	1646,55433
#define SN_id_regCtrl_protocolEncrKey	1648,55486
#define NID_id_regCtrl_protocolEncrKey	1649,55554
#define OBJ_id_regCtrl_protocolEncrKey	1650,55598
#define SN_id_regInfo_utf8Pairs	1652,55657
#define NID_id_regInfo_utf8Pairs	1653,55713
#define OBJ_id_regInfo_utf8Pairs	1654,55751
#define SN_id_regInfo_certReq	1656,55804
#define NID_id_regInfo_certReq	1657,55856
#define OBJ_id_regInfo_certReq	1658,55892
#define SN_id_alg_des40	1660,55943
#define NID_id_alg_des40	1661,55983
#define OBJ_id_alg_des40	1662,56013
#define SN_id_alg_noSignature	1664,56054
#define NID_id_alg_noSignature	1665,56106
#define OBJ_id_alg_noSignature	1666,56142
#define SN_id_alg_dh_sig_hmac_sha1	1668,56189
#define NID_id_alg_dh_sig_hmac_sha1	1669,56251
#define OBJ_id_alg_dh_sig_hmac_sha1	1670,56292
#define SN_id_alg_dh_pop	1672,56344
#define NID_id_alg_dh_pop	1673,56386
#define OBJ_id_alg_dh_pop	1674,56417
#define SN_id_cmc_statusInfo	1676,56459
#define NID_id_cmc_statusInfo	1677,56509
#define OBJ_id_cmc_statusInfo	1678,56544
#define SN_id_cmc_identification	1680,56590
#define NID_id_cmc_identification	1681,56648
#define OBJ_id_cmc_identification	1682,56687
#define SN_id_cmc_identityProof	1684,56737
#define NID_id_cmc_identityProof	1685,56793
#define OBJ_id_cmc_identityProof	1686,56831
#define SN_id_cmc_dataReturn	1688,56880
#define NID_id_cmc_dataReturn	1689,56930
#define OBJ_id_cmc_dataReturn	1690,56965
#define SN_id_cmc_transactionId	1692,57011
#define NID_id_cmc_transactionId	1693,57067
#define OBJ_id_cmc_transactionId	1694,57105
#define SN_id_cmc_senderNonce	1696,57154
#define NID_id_cmc_senderNonce	1697,57206
#define OBJ_id_cmc_senderNonce	1698,57242
#define SN_id_cmc_recipientNonce	1700,57289
#define NID_id_cmc_recipientNonce	1701,57347
#define OBJ_id_cmc_recipientNonce	1702,57386
#define SN_id_cmc_addExtensions	1704,57436
#define NID_id_cmc_addExtensions	1705,57492
#define OBJ_id_cmc_addExtensions	1706,57530
#define SN_id_cmc_encryptedPOP	1708,57579
#define NID_id_cmc_encryptedPOP	1709,57633
#define OBJ_id_cmc_encryptedPOP	1710,57670
#define SN_id_cmc_decryptedPOP	1712,57718
#define NID_id_cmc_decryptedPOP	1713,57772
#define OBJ_id_cmc_decryptedPOP	1714,57809
#define SN_id_cmc_lraPOPWitness	1716,57858
#define NID_id_cmc_lraPOPWitness	1717,57914
#define OBJ_id_cmc_lraPOPWitness	1718,57952
#define SN_id_cmc_getCert	1720,58002
#define NID_id_cmc_getCert	1721,58046
#define OBJ_id_cmc_getCert	1722,58078
#define SN_id_cmc_getCRL	1724,58122
#define NID_id_cmc_getCRL	1725,58164
#define OBJ_id_cmc_getCRL	1726,58195
#define SN_id_cmc_revokeRequest	1728,58238
#define NID_id_cmc_revokeRequest	1729,58294
#define OBJ_id_cmc_revokeRequest	1730,58332
#define SN_id_cmc_regInfo	1732,58382
#define NID_id_cmc_regInfo	1733,58426
#define OBJ_id_cmc_regInfo	1734,58458
#define SN_id_cmc_responseInfo	1736,58502
#define NID_id_cmc_responseInfo	1737,58556
#define OBJ_id_cmc_responseInfo	1738,58593
#define SN_id_cmc_queryPending	1740,58642
#define NID_id_cmc_queryPending	1741,58696
#define OBJ_id_cmc_queryPending	1742,58733
#define SN_id_cmc_popLinkRandom	1744,58782
#define NID_id_cmc_popLinkRandom	1745,58838
#define OBJ_id_cmc_popLinkRandom	1746,58876
#define SN_id_cmc_popLinkWitness	1748,58926
#define NID_id_cmc_popLinkWitness	1749,58984
#define OBJ_id_cmc_popLinkWitness	1750,59023
#define SN_id_cmc_confirmCertAcceptance	1752,59074
#define NID_id_cmc_confirmCertAcceptance	1753,59146
#define OBJ_id_cmc_confirmCertAcceptance	1754,59192
#define SN_id_on_personalData	1756,59250
#define NID_id_on_personalData	1757,59302
#define OBJ_id_on_personalData	1758,59338
#define SN_id_on_permanentIdentifier	1760,59384
#define LN_id_on_permanentIdentifier	1761,59450
#define NID_id_on_permanentIdentifier	1762,59511
#define OBJ_id_on_permanentIdentifier	1763,59554
#define SN_id_pda_dateOfBirth	1765,59607
#define NID_id_pda_dateOfBirth	1766,59659
#define OBJ_id_pda_dateOfBirth	1767,59695
#define SN_id_pda_placeOfBirth	1769,59742
#define NID_id_pda_placeOfBirth	1770,59796
#define OBJ_id_pda_placeOfBirth	1771,59833
#define SN_id_pda_gender	1773,59881
#define NID_id_pda_gender	1774,59923
#define OBJ_id_pda_gender	1775,59954
#define SN_id_pda_countryOfCitizenship	1777,59996
#define NID_id_pda_countryOfCitizenship	1778,60066
#define OBJ_id_pda_countryOfCitizenship	1779,60111
#define SN_id_pda_countryOfResidence	1781,60167
#define NID_id_pda_countryOfResidence	1782,60233
#define OBJ_id_pda_countryOfResidence	1783,60276
#define SN_id_aca_authenticationInfo	1785,60330
#define NID_id_aca_authenticationInfo	1786,60396
#define OBJ_id_aca_authenticationInfo	1787,60439
#define SN_id_aca_accessIdentity	1789,60493
#define NID_id_aca_accessIdentity	1790,60551
#define OBJ_id_aca_accessIdentity	1791,60590
#define SN_id_aca_chargingIdentity	1793,60640
#define NID_id_aca_chargingIdentity	1794,60702
#define OBJ_id_aca_chargingIdentity	1795,60743
#define SN_id_aca_group	1797,60795
#define NID_id_aca_group	1798,60835
#define OBJ_id_aca_group	1799,60865
#define SN_id_aca_role	1801,60906
#define NID_id_aca_role	1802,60944
#define OBJ_id_aca_role	1803,60973
#define SN_id_aca_encAttrs	1805,61013
#define NID_id_aca_encAttrs	1806,61059
#define OBJ_id_aca_encAttrs	1807,61092
#define SN_id_qcs_pkixQCSyntax_v1	1809,61136
#define NID_id_qcs_pkixQCSyntax_v1	1810,61196
#define OBJ_id_qcs_pkixQCSyntax_v1	1811,61236
#define SN_id_cct_crs	1813,61287
#define NID_id_cct_crs	1814,61323
#define OBJ_id_cct_crs	1815,61351
#define SN_id_cct_PKIData	1817,61390
#define NID_id_cct_PKIData	1818,61434
#define OBJ_id_cct_PKIData	1819,61466
#define SN_id_cct_PKIResponse	1821,61509
#define NID_id_cct_PKIResponse	1822,61561
#define OBJ_id_cct_PKIResponse	1823,61597
#define SN_id_ppl_anyLanguage	1825,61644
#define LN_id_ppl_anyLanguage	1826,61696
#define NID_id_ppl_anyLanguage	1827,61742
#define OBJ_id_ppl_anyLanguage	1828,61778
#define SN_id_ppl_inheritAll	1830,61825
#define LN_id_ppl_inheritAll	1831,61875
#define NID_id_ppl_inheritAll	1832,61919
#define OBJ_id_ppl_inheritAll	1833,61954
#define SN_Independent	1835,62000
#define LN_Independent	1836,62045
#define NID_Independent	1837,62083
#define OBJ_Independent	1838,62112
#define SN_ad_OCSP	1840,62152
#define LN_ad_OCSP	1841,62179
#define NID_ad_OCSP	1842,62206
#define OBJ_ad_OCSP	1843,62231
#define SN_ad_ca_issuers	1845,62266
#define LN_ad_ca_issuers	1846,62304
#define NID_ad_ca_issuers	1847,62343
#define OBJ_ad_ca_issuers	1848,62374
#define SN_ad_timeStamping	1850,62415
#define LN_ad_timeStamping	1851,62461
#define NID_ad_timeStamping	1852,62508
#define OBJ_ad_timeStamping	1853,62541
#define SN_ad_dvcs	1855,62584
#define LN_ad_dvcs	1856,62614
#define NID_ad_dvcs	1857,62644
#define OBJ_ad_dvcs	1858,62669
#define SN_caRepository	1860,62704
#define LN_caRepository	1861,62744
#define NID_caRepository	1862,62785
#define OBJ_caRepository	1863,62815
#define OBJ_id_pkix_OCSP	1865,62855
#define SN_id_pkix_OCSP_basic	1867,62894
#define LN_id_pkix_OCSP_basic	1868,62945
#define NID_id_pkix_OCSP_basic	1869,62998
#define OBJ_id_pkix_OCSP_basic	1870,63034
#define SN_id_pkix_OCSP_Nonce	1872,63087
#define LN_id_pkix_OCSP_Nonce	1873,63126
#define NID_id_pkix_OCSP_Nonce	1874,63170
#define OBJ_id_pkix_OCSP_Nonce	1875,63206
#define SN_id_pkix_OCSP_CrlID	1877,63259
#define LN_id_pkix_OCSP_CrlID	1878,63298
#define NID_id_pkix_OCSP_CrlID	1879,63343
#define OBJ_id_pkix_OCSP_CrlID	1880,63379
#define SN_id_pkix_OCSP_acceptableResponses	1882,63432
#define LN_id_pkix_OCSP_acceptableResponses	1883,63499
#define NID_id_pkix_OCSP_acceptableResponses	1884,63572
#define OBJ_id_pkix_OCSP_acceptableResponses	1885,63622
#define SN_id_pkix_OCSP_noCheck	1887,63689
#define LN_id_pkix_OCSP_noCheck	1888,63732
#define NID_id_pkix_OCSP_noCheck	1889,63781
#define OBJ_id_pkix_OCSP_noCheck	1890,63819
#define SN_id_pkix_OCSP_archiveCutoff	1892,63874
#define LN_id_pkix_OCSP_archiveCutoff	1893,63929
#define NID_id_pkix_OCSP_archiveCutoff	1894,63990
#define OBJ_id_pkix_OCSP_archiveCutoff	1895,64034
#define SN_id_pkix_OCSP_serviceLocator	1897,64095
#define LN_id_pkix_OCSP_serviceLocator	1898,64152
#define NID_id_pkix_OCSP_serviceLocator	1899,64215
#define OBJ_id_pkix_OCSP_serviceLocator	1900,64260
#define SN_id_pkix_OCSP_extendedStatus	1902,64322
#define LN_id_pkix_OCSP_extendedStatus	1903,64379
#define NID_id_pkix_OCSP_extendedStatus	1904,64442
#define OBJ_id_pkix_OCSP_extendedStatus	1905,64487
#define SN_id_pkix_OCSP_valid	1907,64549
#define NID_id_pkix_OCSP_valid	1908,64588
#define OBJ_id_pkix_OCSP_valid	1909,64624
#define SN_id_pkix_OCSP_path	1911,64677
#define NID_id_pkix_OCSP_path	1912,64714
#define OBJ_id_pkix_OCSP_path	1913,64749
#define SN_id_pkix_OCSP_trustRoot	1915,64802
#define LN_id_pkix_OCSP_trustRoot	1916,64849
#define NID_id_pkix_OCSP_trustRoot	1917,64897
#define OBJ_id_pkix_OCSP_trustRoot	1918,64937
#define SN_algorithm	1920,64995
#define LN_algorithm	1921,65029
#define NID_algorithm	1922,65063
#define OBJ_algorithm	1923,65090
#define SN_md5WithRSA	1925,65130
#define LN_md5WithRSA	1926,65166
#define NID_md5WithRSA	1927,65202
#define OBJ_md5WithRSA	1928,65230
#define SN_des_ecb	1930,65272
#define LN_des_ecb	1931,65302
#define NID_des_ecb	1932,65332
#define OBJ_des_ecb	1933,65356
#define SN_des_cbc	1935,65395
#define LN_des_cbc	1936,65425
#define NID_des_cbc	1937,65455
#define OBJ_des_cbc	1938,65479
#define SN_des_ofb64	1940,65518
#define LN_des_ofb64	1941,65550
#define NID_des_ofb64	1942,65582
#define OBJ_des_ofb64	1943,65608
#define SN_des_cfb64	1945,65649
#define LN_des_cfb64	1946,65681
#define NID_des_cfb64	1947,65713
#define OBJ_des_cfb64	1948,65739
#define SN_rsaSignature	1950,65780
#define NID_rsaSignature	1951,65820
#define OBJ_rsaSignature	1952,65850
#define SN_dsa_2	1954,65895
#define LN_dsa_2	1955,65923
#define NID_dsa_2	1956,65961
#define OBJ_dsa_2	1957,65983
#define SN_dsaWithSHA	1959,66021
#define LN_dsaWithSHA	1960,66054
#define NID_dsaWithSHA	1961,66090
#define OBJ_dsaWithSHA	1962,66117
#define SN_shaWithRSAEncryption	1964,66160
#define LN_shaWithRSAEncryption	1965,66203
#define NID_shaWithRSAEncryption	1966,66259
#define OBJ_shaWithRSAEncryption	1967,66296
#define SN_des_ede_ecb	1969,66349
#define LN_des_ede_ecb	1970,66383
#define NID_des_ede_ecb	1971,66417
#define OBJ_des_ede_ecb	1972,66445
#define SN_des_ede3_ecb	1974,66489
#define LN_des_ede3_ecb	1975,66525
#define NID_des_ede3_ecb	1976,66561
#define SN_des_ede_cbc	1978,66591
#define LN_des_ede_cbc	1979,66629
#define NID_des_ede_cbc	1980,66667
#define SN_des_ede_cfb64	1982,66696
#define LN_des_ede_cfb64	1983,66736
#define NID_des_ede_cfb64	1984,66776
#define SN_des_ede3_cfb64	1986,66807
#define LN_des_ede3_cfb64	1987,66849
#define NID_des_ede3_cfb64	1988,66891
#define SN_des_ede_ofb64	1990,66923
#define LN_des_ede_ofb64	1991,66963
#define NID_des_ede_ofb64	1992,67003
#define SN_des_ede3_ofb64	1994,67034
#define LN_des_ede3_ofb64	1995,67076
#define NID_des_ede3_ofb64	1996,67118
#define SN_desx_cbc	1998,67150
#define LN_desx_cbc	1999,67182
#define NID_desx_cbc	2000,67214
#define SN_sha	2002,67240
#define LN_sha	2003,67262
#define NID_sha	2004,67284
#define OBJ_sha	2005,67304
#define SN_sha1	2007,67340
#define LN_sha1	2008,67364
#define NID_sha1	2009,67388
#define OBJ_sha1	2010,67409
#define SN_dsaWithSHA1_2	2012,67446
#define LN_dsaWithSHA1_2	2013,67487
#define NID_dsaWithSHA1_2	2014,67531
#define OBJ_dsaWithSHA1_2	2015,67561
#define SN_sha1WithRSA	2017,67607
#define LN_sha1WithRSA	2018,67644
#define NID_sha1WithRSA	2019,67682
#define OBJ_sha1WithRSA	2020,67711
#define SN_ripemd160	2022,67755
#define LN_ripemd160	2023,67789
#define NID_ripemd160	2024,67823
#define OBJ_ripemd160	2025,67850
#define SN_ripemd160WithRSA	2027,67893
#define LN_ripemd160WithRSA	2028,67938
#define NID_ripemd160WithRSA	2029,67986
#define OBJ_ripemd160WithRSA	2030,68020
#define SN_sxnet	2032,68073
#define LN_sxnet	2033,68101
#define NID_sxnet	2034,68140
#define OBJ_sxnet	2035,68163
#define SN_X500	2037,68203
#define LN_X500	2038,68227
#define NID_X500	2039,68273
#define OBJ_X500	2040,68294
#define SN_X509	2042,68319
#define NID_X509	2043,68343
#define OBJ_X509	2044,68364
#define SN_commonName	2046,68395
#define LN_commonName	2047,68423
#define NID_commonName	2048,68459
#define OBJ_commonName	2049,68486
#define SN_surname	2051,68523
#define LN_surname	2052,68548
#define NID_surname	2053,68578
#define OBJ_surname	2054,68603
#define LN_serialNumber	2056,68637
#define NID_serialNumber	2057,68677
#define OBJ_serialNumber	2058,68707
#define SN_countryName	2060,68746
#define LN_countryName	2061,68774
#define NID_countryName	2062,68812
#define OBJ_countryName	2063,68840
#define SN_localityName	2065,68878
#define LN_localityName	2066,68907
#define NID_localityName	2067,68947
#define OBJ_localityName	2068,68976
#define SN_stateOrProvinceName	2070,69015
#define LN_stateOrProvinceName	2071,69052
#define NID_stateOrProvinceName	2072,69106
#define OBJ_stateOrProvinceName	2073,69142
#define SN_streetAddress	2075,69188
#define LN_streetAddress	2076,69223
#define NID_streetAddress	2077,69265
#define OBJ_streetAddress	2078,69296
#define SN_organizationName	2080,69336
#define LN_organizationName	2081,69369
#define NID_organizationName	2082,69417
#define OBJ_organizationName	2083,69450
#define SN_organizationalUnitName	2085,69494
#define LN_organizationalUnitName	2086,69534
#define NID_organizationalUnitName	2087,69594
#define OBJ_organizationalUnitName	2088,69633
#define SN_title	2090,69683
#define LN_title	2091,69709
#define NID_title	2092,69735
#define OBJ_title	2093,69758
#define LN_description	2095,69791
#define NID_description	2096,69829
#define OBJ_description	2097,69858
#define LN_searchGuide	2099,69897
#define NID_searchGuide	2100,69935
#define OBJ_searchGuide	2101,69964
#define LN_businessCategory	2103,70003
#define NID_businessCategory	2104,70051
#define OBJ_businessCategory	2105,70085
#define LN_postalAddress	2107,70129
#define NID_postalAddress	2108,70171
#define OBJ_postalAddress	2109,70202
#define LN_postalCode	2111,70243
#define NID_postalCode	2112,70279
#define OBJ_postalCode	2113,70307
#define LN_postOfficeBox	2115,70345
#define NID_postOfficeBox	2116,70387
#define OBJ_postOfficeBox	2117,70418
#define LN_physicalDeliveryOfficeName	2119,70459
#define NID_physicalDeliveryOfficeName	2120,70527
#define OBJ_physicalDeliveryOfficeName	2121,70571
#define LN_telephoneNumber	2123,70625
#define NID_telephoneNumber	2124,70671
#define OBJ_telephoneNumber	2125,70704
#define LN_telexNumber	2127,70747
#define NID_telexNumber	2128,70785
#define OBJ_telexNumber	2129,70814
#define LN_teletexTerminalIdentifier	2131,70853
#define NID_teletexTerminalIdentifier	2132,70919
#define OBJ_teletexTerminalIdentifier	2133,70962
#define LN_facsimileTelephoneNumber	2135,71015
#define NID_facsimileTelephoneNumber	2136,71079
#define OBJ_facsimileTelephoneNumber	2137,71121
#define LN_x121Address	2139,71173
#define NID_x121Address	2140,71211
#define OBJ_x121Address	2141,71240
#define LN_internationaliSDNNumber	2143,71279
#define NID_internationaliSDNNumber	2144,71341
#define OBJ_internationaliSDNNumber	2145,71382
#define LN_registeredAddress	2147,71433
#define NID_registeredAddress	2148,71483
#define OBJ_registeredAddress	2149,71518
#define LN_destinationIndicator	2151,71563
#define NID_destinationIndicator	2152,71619
#define OBJ_destinationIndicator	2153,71657
#define LN_preferredDeliveryMethod	2155,71705
#define NID_preferredDeliveryMethod	2156,71767
#define OBJ_preferredDeliveryMethod	2157,71808
#define LN_presentationAddress	2159,71859
#define NID_presentationAddress	2160,71913
#define OBJ_presentationAddress	2161,71950
#define LN_supportedApplicationContext	2163,71997
#define NID_supportedApplicationContext	2164,72067
#define OBJ_supportedApplicationContext	2165,72112
#define SN_member	2167,72167
#define NID_member	2168,72195
#define OBJ_member	2169,72219
#define SN_owner	2171,72253
#define NID_owner	2172,72279
#define OBJ_owner	2173,72302
#define LN_roleOccupant	2175,72335
#define NID_roleOccupant	2176,72375
#define OBJ_roleOccupant	2177,72405
#define SN_seeAlso	2179,72445
#define NID_seeAlso	2180,72475
#define OBJ_seeAlso	2181,72500
#define LN_userPassword	2183,72535
#define NID_userPassword	2184,72575
#define OBJ_userPassword	2185,72605
#define LN_userCertificate	2187,72645
#define NID_userCertificate	2188,72691
#define OBJ_userCertificate	2189,72724
#define LN_cACertificate	2191,72767
#define NID_cACertificate	2192,72809
#define OBJ_cACertificate	2193,72840
#define LN_authorityRevocationList	2195,72881
#define NID_authorityRevocationList	2196,72943
#define OBJ_authorityRevocationList	2197,72984
#define LN_certificateRevocationList	2199,73035
#define NID_certificateRevocationList	2200,73101
#define OBJ_certificateRevocationList	2201,73144
#define LN_crossCertificatePair	2203,73197
#define NID_crossCertificatePair	2204,73253
#define OBJ_crossCertificatePair	2205,73291
#define SN_name	2207,73339
#define LN_name	2208,73363
#define NID_name	2209,73387
#define OBJ_name	2210,73409
#define SN_givenName	2212,73441
#define LN_givenName	2213,73468
#define NID_givenName	2214,73502
#define OBJ_givenName	2215,73528
#define SN_initials	2217,73565
#define LN_initials	2218,73597
#define NID_initials	2219,73629
#define OBJ_initials	2220,73655
#define LN_generationQualifier	2222,73691
#define NID_generationQualifier	2223,73745
#define OBJ_generationQualifier	2224,73782
#define LN_x500UniqueIdentifier	2226,73829
#define NID_x500UniqueIdentifier	2227,73885
#define OBJ_x500UniqueIdentifier	2228,73923
#define SN_dnQualifier	2230,73971
#define LN_dnQualifier	2231,74009
#define NID_dnQualifier	2232,74047
#define OBJ_dnQualifier	2233,74076
#define LN_enhancedSearchGuide	2235,74115
#define NID_enhancedSearchGuide	2236,74169
#define OBJ_enhancedSearchGuide	2237,74206
#define LN_protocolInformation	2239,74253
#define NID_protocolInformation	2240,74307
#define OBJ_protocolInformation	2241,74344
#define LN_distinguishedName	2243,74391
#define NID_distinguishedName	2244,74441
#define OBJ_distinguishedName	2245,74476
#define LN_uniqueMember	2247,74521
#define NID_uniqueMember	2248,74561
#define OBJ_uniqueMember	2249,74591
#define LN_houseIdentifier	2251,74631
#define NID_houseIdentifier	2252,74677
#define OBJ_houseIdentifier	2253,74710
#define LN_supportedAlgorithms	2255,74753
#define NID_supportedAlgorithms	2256,74807
#define OBJ_supportedAlgorithms	2257,74844
#define LN_deltaRevocationList	2259,74891
#define NID_deltaRevocationList	2260,74945
#define OBJ_deltaRevocationList	2261,74982
#define SN_dmdName	2263,75029
#define NID_dmdName	2264,75059
#define OBJ_dmdName	2265,75084
#define LN_pseudonym	2267,75119
#define NID_pseudonym	2268,75153
#define OBJ_pseudonym	2269,75180
#define SN_role	2271,75217
#define LN_role	2272,75241
#define NID_role	2273,75265
#define OBJ_role	2274,75287
#define SN_X500algorithms	2276,75319
#define LN_X500algorithms	2277,75363
#define NID_X500algorithms	2278,75424
#define OBJ_X500algorithms	2279,75456
#define SN_rsa	2281,75497
#define LN_rsa	2282,75519
#define NID_rsa	2283,75541
#define OBJ_rsa	2284,75561
#define SN_mdc2WithRSA	2286,75604
#define LN_mdc2WithRSA	2287,75639
#define NID_mdc2WithRSA	2288,75677
#define OBJ_mdc2WithRSA	2289,75705
#define SN_mdc2	2291,75758
#define LN_mdc2	2292,75782
#define NID_mdc2	2293,75806
#define OBJ_mdc2	2294,75827
#define SN_id_ce	2296,75873
#define NID_id_ce	2297,75899
#define OBJ_id_ce	2298,75921
#define SN_subject_directory_attributes	2300,75954
#define LN_subject_directory_attributes	2301,76024
#define NID_subject_directory_attributes	2302,76103
#define OBJ_subject_directory_attributes	2303,76149
#define SN_subject_key_identifier	2305,76205
#define LN_subject_key_identifier	2306,76263
#define NID_subject_key_identifier	2307,76330
#define OBJ_subject_key_identifier	2308,76369
#define SN_key_usage	2310,76420
#define LN_key_usage	2311,76453
#define NID_key_usage	2312,76494
#define OBJ_key_usage	2313,76520
#define SN_private_key_usage_period	2315,76558
#define LN_private_key_usage_period	2316,76619
#define NID_private_key_usage_period	2317,76690
#define OBJ_private_key_usage_period	2318,76731
#define SN_subject_alt_name	2320,76784
#define LN_subject_alt_name	2321,76830
#define NID_subject_alt_name	2322,76893
#define OBJ_subject_alt_name	2323,76926
#define SN_issuer_alt_name	2325,76971
#define LN_issuer_alt_name	2326,77015
#define NID_issuer_alt_name	2327,77076
#define OBJ_issuer_alt_name	2328,77108
#define SN_basic_constraints	2330,77152
#define LN_basic_constraints	2331,77201
#define NID_basic_constraints	2332,77258
#define OBJ_basic_constraints	2333,77292
#define SN_crl_number	2335,77338
#define LN_crl_number	2336,77373
#define NID_crl_number	2337,77416
#define OBJ_crl_number	2338,77443
#define SN_crl_reason	2340,77482
#define LN_crl_reason	2341,77517
#define NID_crl_reason	2342,77565
#define OBJ_crl_reason	2343,77593
#define SN_invalidity_date	2345,77632
#define LN_invalidity_date	2346,77677
#define NID_invalidity_date	2347,77723
#define OBJ_invalidity_date	2348,77756
#define SN_delta_crl	2350,77800
#define LN_delta_crl	2351,77833
#define NID_delta_crl	2352,77884
#define OBJ_delta_crl	2353,77911
#define SN_issuing_distribution_point	2355,77949
#define LN_issuing_distribution_point	2356,78015
#define NID_issuing_distribution_point	2357,78090
#define OBJ_issuing_distribution_point	2358,78134
#define SN_certificate_issuer	2360,78189
#define LN_certificate_issuer	2361,78240
#define NID_certificate_issuer	2362,78299
#define OBJ_certificate_issuer	2363,78335
#define SN_name_constraints	2365,78382
#define LN_name_constraints	2366,78429
#define NID_name_constraints	2367,78484
#define OBJ_name_constraints	2368,78518
#define SN_crl_distribution_points	2370,78563
#define LN_crl_distribution_points	2371,78623
#define NID_crl_distribution_points	2372,78692
#define OBJ_crl_distribution_points	2373,78733
#define SN_certificate_policies	2375,78785
#define LN_certificate_policies	2376,78840
#define NID_certificate_policies	2377,78903
#define OBJ_certificate_policies	2378,78940
#define SN_any_policy	2380,78989
#define LN_any_policy	2381,79024
#define NID_any_policy	2382,79067
#define OBJ_any_policy	2383,79095
#define SN_policy_mappings	2385,79148
#define LN_policy_mappings	2386,79193
#define NID_policy_mappings	2387,79246
#define OBJ_policy_mappings	2388,79279
#define SN_authority_key_identifier	2390,79323
#define LN_authority_key_identifier	2391,79385
#define NID_authority_key_identifier	2392,79456
#define OBJ_authority_key_identifier	2393,79497
#define SN_policy_constraints	2395,79550
#define LN_policy_constraints	2396,79601
#define NID_policy_constraints	2397,79660
#define OBJ_policy_constraints	2398,79696
#define SN_ext_key_usage	2400,79743
#define LN_ext_key_usage	2401,79788
#define NID_ext_key_usage	2402,79842
#define OBJ_ext_key_usage	2403,79873
#define SN_freshest_crl	2405,79915
#define LN_freshest_crl	2406,79954
#define NID_freshest_crl	2407,80001
#define OBJ_freshest_crl	2408,80031
#define SN_inhibit_any_policy	2410,80072
#define LN_inhibit_any_policy	2411,80122
#define NID_inhibit_any_policy	2412,80181
#define OBJ_inhibit_any_policy	2413,80217
#define SN_target_information	2415,80264
#define LN_target_information	2416,80315
#define NID_target_information	2417,80368
#define OBJ_target_information	2418,80404
#define SN_no_rev_avail	2420,80451
#define LN_no_rev_avail	2421,80489
#define NID_no_rev_avail	2422,80547
#define OBJ_no_rev_avail	2423,80577
#define SN_anyExtendedKeyUsage	2425,80618
#define LN_anyExtendedKeyUsage	2426,80672
#define NID_anyExtendedKeyUsage	2427,80729
#define OBJ_anyExtendedKeyUsage	2428,80766
#define SN_netscape	2430,80821
#define LN_netscape	2431,80853
#define NID_netscape	2432,80906
#define OBJ_netscape	2433,80931
#define SN_netscape_cert_extension	2435,80977
#define LN_netscape_cert_extension	2436,81025
#define NID_netscape_cert_extension	2437,81094
#define OBJ_netscape_cert_extension	2438,81134
#define SN_netscape_data_type	2440,81188
#define LN_netscape_data_type	2441,81232
#define NID_netscape_data_type	2442,81284
#define OBJ_netscape_data_type	2443,81319
#define SN_netscape_cert_type	2445,81368
#define LN_netscape_cert_type	2446,81412
#define NID_netscape_cert_type	2447,81464
#define OBJ_netscape_cert_type	2448,81499
#define SN_netscape_base_url	2450,81563
#define LN_netscape_base_url	2451,81605
#define NID_netscape_base_url	2452,81655
#define OBJ_netscape_base_url	2453,81689
#define SN_netscape_revocation_url	2455,81752
#define LN_netscape_revocation_url	2456,81806
#define NID_netscape_revocation_url	2457,81868
#define OBJ_netscape_revocation_url	2458,81908
#define SN_netscape_ca_revocation_url	2460,81977
#define LN_netscape_ca_revocation_url	2461,82036
#define NID_netscape_ca_revocation_url	2462,82104
#define OBJ_netscape_ca_revocation_url	2463,82147
#define SN_netscape_renewal_url	2465,82219
#define LN_netscape_renewal_url	2466,82267
#define NID_netscape_renewal_url	2467,82323
#define OBJ_netscape_renewal_url	2468,82360
#define SN_netscape_ca_policy_url	2470,82426
#define LN_netscape_ca_policy_url	2471,82477
#define NID_netscape_ca_policy_url	2472,82537
#define OBJ_netscape_ca_policy_url	2473,82576
#define SN_netscape_ssl_server_name	2475,82644
#define LN_netscape_ssl_server_name	2476,82699
#define NID_netscape_ssl_server_name	2477,82763
#define OBJ_netscape_ssl_server_name	2478,82804
#define SN_netscape_comment	2480,82875
#define LN_netscape_comment	2481,82916
#define NID_netscape_comment	2482,82964
#define OBJ_netscape_comment	2483,82997
#define SN_netscape_cert_sequence	2485,83060
#define LN_netscape_cert_sequence	2486,83112
#define NID_netscape_cert_sequence	2487,83179
#define OBJ_netscape_cert_sequence	2488,83218
#define SN_ns_sgc	2490,83281
#define LN_ns_sgc	2491,83308
#define NID_ns_sgc	2492,83358
#define OBJ_ns_sgc	2493,83382
#define SN_org	2495,83422
#define LN_org	2496,83444
#define NID_org	2497,83466
#define OBJ_org	2498,83487
#define SN_dod	2500,83516
#define LN_dod	2501,83538
#define NID_dod	2502,83560
#define OBJ_dod	2503,83581
#define SN_iana	2505,83610
#define LN_iana	2506,83634
#define NID_iana	2507,83658
#define OBJ_iana	2508,83680
#define OBJ_internet	2510,83710
#define SN_Directory	2512,83742
#define LN_Directory	2513,83776
#define NID_Directory	2514,83810
#define OBJ_Directory	2515,83837
#define SN_Management	2517,83877
#define LN_Management	2518,83907
#define NID_Management	2519,83943
#define OBJ_Management	2520,83971
#define SN_Experimental	2522,84012
#define LN_Experimental	2523,84052
#define NID_Experimental	2524,84092
#define OBJ_Experimental	2525,84122
#define SN_Private	2527,84165
#define LN_Private	2528,84195
#define NID_Private	2529,84225
#define OBJ_Private	2530,84250
#define SN_Security	2532,84288
#define LN_Security	2533,84320
#define NID_Security	2534,84352
#define OBJ_Security	2535,84378
#define SN_SNMPv2	2537,84417
#define LN_SNMPv2	2538,84445
#define NID_SNMPv2	2539,84473
#define OBJ_SNMPv2	2540,84497
#define LN_Mail	2542,84534
#define NID_Mail	2543,84558
#define OBJ_Mail	2544,84580
#define SN_Enterprises	2546,84615
#define LN_Enterprises	2547,84653
#define NID_Enterprises	2548,84691
#define OBJ_Enterprises	2549,84720
#define SN_dcObject	2551,84761
#define LN_dcObject	2552,84793
#define NID_dcObject	2553,84825
#define OBJ_dcObject	2554,84851
#define SN_mime_mhs	2556,84901
#define LN_mime_mhs	2557,84933
#define NID_mime_mhs	2558,84965
#define OBJ_mime_mhs	2559,84991
#define SN_mime_mhs_headings	2561,85026
#define LN_mime_mhs_headings	2562,85076
#define NID_mime_mhs_headings	2563,85126
#define OBJ_mime_mhs_headings	2564,85161
#define SN_mime_mhs_bodies	2566,85209
#define LN_mime_mhs_bodies	2567,85255
#define NID_mime_mhs_bodies	2568,85301
#define OBJ_mime_mhs_bodies	2569,85334
#define SN_id_hex_partial_message	2571,85380
#define LN_id_hex_partial_message	2572,85440
#define NID_id_hex_partial_message	2573,85500
#define OBJ_id_hex_partial_message	2574,85540
#define SN_id_hex_multipart_message	2576,85602
#define LN_id_hex_multipart_message	2577,85666
#define NID_id_hex_multipart_message	2578,85730
#define OBJ_id_hex_multipart_message	2579,85772
#define SN_rle_compression	2581,85836
#define LN_rle_compression	2582,85870
#define NID_rle_compression	2583,85923
#define OBJ_rle_compression	2584,85956
#define SN_zlib_compression	2586,86006
#define LN_zlib_compression	2587,86042
#define NID_zlib_compression	2588,86090
#define OBJ_zlib_compression	2589,86124
#define OBJ_csor	2591,86175
#define OBJ_nistAlgorithms	2593,86217
#define OBJ_aes	2595,86258
#define SN_aes_128_ecb	2597,86298
#define LN_aes_128_ecb	2598,86336
#define NID_aes_128_ecb	2599,86374
#define OBJ_aes_128_ecb	2600,86403
#define SN_aes_128_cbc	2602,86440
#define LN_aes_128_cbc	2603,86478
#define NID_aes_128_cbc	2604,86516
#define OBJ_aes_128_cbc	2605,86545
#define SN_aes_128_ofb128	2607,86582
#define LN_aes_128_ofb128	2608,86623
#define NID_aes_128_ofb128	2609,86664
#define OBJ_aes_128_ofb128	2610,86696
#define SN_aes_128_cfb128	2612,86736
#define LN_aes_128_cfb128	2613,86777
#define NID_aes_128_cfb128	2614,86818
#define OBJ_aes_128_cfb128	2615,86850
#define SN_id_aes128_wrap	2617,86890
#define NID_id_aes128_wrap	2618,86934
#define OBJ_id_aes128_wrap	2619,86966
#define SN_aes_128_gcm	2621,87006
#define LN_aes_128_gcm	2622,87046
#define NID_aes_128_gcm	2623,87084
#define OBJ_aes_128_gcm	2624,87113
#define SN_aes_128_ccm	2626,87150
#define LN_aes_128_ccm	2627,87190
#define NID_aes_128_ccm	2628,87228
#define OBJ_aes_128_ccm	2629,87257
#define SN_id_aes128_wrap_pad	2631,87294
#define NID_id_aes128_wrap_pad	2632,87346
#define OBJ_id_aes128_wrap_pad	2633,87382
#define SN_aes_192_ecb	2635,87426
#define LN_aes_192_ecb	2636,87464
#define NID_aes_192_ecb	2637,87502
#define OBJ_aes_192_ecb	2638,87531
#define SN_aes_192_cbc	2640,87569
#define LN_aes_192_cbc	2641,87607
#define NID_aes_192_cbc	2642,87645
#define OBJ_aes_192_cbc	2643,87674
#define SN_aes_192_ofb128	2645,87712
#define LN_aes_192_ofb128	2646,87753
#define NID_aes_192_ofb128	2647,87794
#define OBJ_aes_192_ofb128	2648,87826
#define SN_aes_192_cfb128	2650,87867
#define LN_aes_192_cfb128	2651,87908
#define NID_aes_192_cfb128	2652,87949
#define OBJ_aes_192_cfb128	2653,87981
#define SN_id_aes192_wrap	2655,88022
#define NID_id_aes192_wrap	2656,88066
#define OBJ_id_aes192_wrap	2657,88098
#define SN_aes_192_gcm	2659,88139
#define LN_aes_192_gcm	2660,88179
#define NID_aes_192_gcm	2661,88217
#define OBJ_aes_192_gcm	2662,88246
#define SN_aes_192_ccm	2664,88284
#define LN_aes_192_ccm	2665,88324
#define NID_aes_192_ccm	2666,88362
#define OBJ_aes_192_ccm	2667,88391
#define SN_id_aes192_wrap_pad	2669,88429
#define NID_id_aes192_wrap_pad	2670,88481
#define OBJ_id_aes192_wrap_pad	2671,88517
#define SN_aes_256_ecb	2673,88562
#define LN_aes_256_ecb	2674,88600
#define NID_aes_256_ecb	2675,88638
#define OBJ_aes_256_ecb	2676,88667
#define SN_aes_256_cbc	2678,88705
#define LN_aes_256_cbc	2679,88743
#define NID_aes_256_cbc	2680,88781
#define OBJ_aes_256_cbc	2681,88810
#define SN_aes_256_ofb128	2683,88848
#define LN_aes_256_ofb128	2684,88889
#define NID_aes_256_ofb128	2685,88930
#define OBJ_aes_256_ofb128	2686,88962
#define SN_aes_256_cfb128	2688,89003
#define LN_aes_256_cfb128	2689,89044
#define NID_aes_256_cfb128	2690,89085
#define OBJ_aes_256_cfb128	2691,89117
#define SN_id_aes256_wrap	2693,89158
#define NID_id_aes256_wrap	2694,89202
#define OBJ_id_aes256_wrap	2695,89234
#define SN_aes_256_gcm	2697,89275
#define LN_aes_256_gcm	2698,89315
#define NID_aes_256_gcm	2699,89353
#define OBJ_aes_256_gcm	2700,89382
#define SN_aes_256_ccm	2702,89420
#define LN_aes_256_ccm	2703,89460
#define NID_aes_256_ccm	2704,89498
#define OBJ_aes_256_ccm	2705,89527
#define SN_id_aes256_wrap_pad	2707,89565
#define NID_id_aes256_wrap_pad	2708,89617
#define OBJ_id_aes256_wrap_pad	2709,89653
#define SN_aes_128_cfb1	2711,89698
#define LN_aes_128_cfb1	2712,89738
#define NID_aes_128_cfb1	2713,89778
#define SN_aes_192_cfb1	2715,89809
#define LN_aes_192_cfb1	2716,89849
#define NID_aes_192_cfb1	2717,89889
#define SN_aes_256_cfb1	2719,89920
#define LN_aes_256_cfb1	2720,89960
#define NID_aes_256_cfb1	2721,90000
#define SN_aes_128_cfb8	2723,90031
#define LN_aes_128_cfb8	2724,90071
#define NID_aes_128_cfb8	2725,90111
#define SN_aes_192_cfb8	2727,90142
#define LN_aes_192_cfb8	2728,90182
#define NID_aes_192_cfb8	2729,90222
#define SN_aes_256_cfb8	2731,90253
#define LN_aes_256_cfb8	2732,90293
#define NID_aes_256_cfb8	2733,90333
#define SN_aes_128_ctr	2735,90364
#define LN_aes_128_ctr	2736,90402
#define NID_aes_128_ctr	2737,90440
#define SN_aes_192_ctr	2739,90470
#define LN_aes_192_ctr	2740,90508
#define NID_aes_192_ctr	2741,90546
#define SN_aes_256_ctr	2743,90576
#define LN_aes_256_ctr	2744,90614
#define NID_aes_256_ctr	2745,90652
#define SN_aes_128_xts	2747,90682
#define LN_aes_128_xts	2748,90720
#define NID_aes_128_xts	2749,90758
#define SN_aes_256_xts	2751,90788
#define LN_aes_256_xts	2752,90826
#define NID_aes_256_xts	2753,90864
#define SN_des_cfb1	2755,90894
#define LN_des_cfb1	2756,90926
#define NID_des_cfb1	2757,90958
#define SN_des_cfb8	2759,90985
#define LN_des_cfb8	2760,91017
#define NID_des_cfb8	2761,91049
#define SN_des_ede3_cfb1	2763,91076
#define LN_des_ede3_cfb1	2764,91118
#define NID_des_ede3_cfb1	2765,91160
#define SN_des_ede3_cfb8	2767,91192
#define LN_des_ede3_cfb8	2768,91234
#define NID_des_ede3_cfb8	2769,91276
#define OBJ_nist_hashalgs	2771,91308
#define SN_sha256	2773,91358
#define LN_sha256	2774,91386
#define NID_sha256	2775,91414
#define OBJ_sha256	2776,91438
#define SN_sha384	2778,91480
#define LN_sha384	2779,91508
#define NID_sha384	2780,91536
#define OBJ_sha384	2781,91560
#define SN_sha512	2783,91602
#define LN_sha512	2784,91630
#define NID_sha512	2785,91658
#define OBJ_sha512	2786,91682
#define SN_sha224	2788,91724
#define LN_sha224	2789,91752
#define NID_sha224	2790,91780
#define OBJ_sha224	2791,91804
#define OBJ_dsa_with_sha2	2793,91846
#define SN_dsa_with_SHA224	2795,91896
#define NID_dsa_with_SHA224	2796,91942
#define OBJ_dsa_with_SHA224	2797,91975
#define SN_dsa_with_SHA256	2799,92026
#define NID_dsa_with_SHA256	2800,92072
#define OBJ_dsa_with_SHA256	2801,92105
#define SN_hold_instruction_code	2803,92156
#define LN_hold_instruction_code	2804,92212
#define NID_hold_instruction_code	2805,92270
#define OBJ_hold_instruction_code	2806,92309
#define OBJ_holdInstruction	2808,92359
#define SN_hold_instruction_none	2810,92402
#define LN_hold_instruction_none	2811,92458
#define NID_hold_instruction_none	2812,92516
#define OBJ_hold_instruction_none	2813,92555
#define SN_hold_instruction_call_issuer	2815,92614
#define LN_hold_instruction_call_issuer	2816,92683
#define NID_hold_instruction_call_issuer	2817,92755
#define OBJ_hold_instruction_call_issuer	2818,92801
#define SN_hold_instruction_reject	2820,92867
#define LN_hold_instruction_reject	2821,92927
#define NID_hold_instruction_reject	2822,92989
#define OBJ_hold_instruction_reject	2823,93030
#define SN_data	2825,93091
#define NID_data	2826,93115
#define OBJ_data	2827,93137
#define SN_pss	2829,93169
#define NID_pss	2830,93191
#define OBJ_pss	2831,93212
#define SN_ucl	2833,93245
#define NID_ucl	2834,93267
#define OBJ_ucl	2835,93288
#define SN_pilot	2837,93324
#define NID_pilot	2838,93350
#define OBJ_pilot	2839,93373
#define LN_pilotAttributeType	2841,93406
#define NID_pilotAttributeType	2842,93458
#define OBJ_pilotAttributeType	2843,93494
#define LN_pilotAttributeSyntax	2845,93540
#define NID_pilotAttributeSyntax	2846,93596
#define OBJ_pilotAttributeSyntax	2847,93634
#define LN_pilotObjectClass	2849,93682
#define NID_pilotObjectClass	2850,93730
#define OBJ_pilotObjectClass	2851,93764
#define LN_pilotGroups	2853,93808
#define NID_pilotGroups	2854,93846
#define OBJ_pilotGroups	2855,93875
#define LN_iA5StringSyntax	2857,93915
#define NID_iA5StringSyntax	2858,93961
#define OBJ_iA5StringSyntax	2859,93994
#define LN_caseIgnoreIA5StringSyntax	2861,94052
#define NID_caseIgnoreIA5StringSyntax	2862,94118
#define OBJ_caseIgnoreIA5StringSyntax	2863,94161
#define LN_pilotObject	2865,94229
#define NID_pilotObject	2866,94267
#define OBJ_pilotObject	2867,94296
#define LN_pilotPerson	2869,94346
#define NID_pilotPerson	2870,94384
#define OBJ_pilotPerson	2871,94413
#define SN_account	2873,94463
#define NID_account	2874,94493
#define OBJ_account	2875,94518
#define SN_document	2877,94564
#define NID_document	2878,94596
#define OBJ_document	2879,94622
#define SN_room	2881,94669
#define NID_room	2882,94693
#define OBJ_room	2883,94715
#define LN_documentSeries	2885,94758
#define NID_documentSeries	2886,94802
#define OBJ_documentSeries	2887,94834
#define SN_Domain	2889,94887
#define LN_Domain	2890,94915
#define NID_Domain	2891,94943
#define OBJ_Domain	2892,94967
#define LN_rFC822localPart	2894,95013
#define NID_rFC822localPart	2895,95059
#define OBJ_rFC822localPart	2896,95092
#define LN_dNSDomain	2898,95147
#define NID_dNSDomain	2899,95181
#define OBJ_dNSDomain	2900,95208
#define LN_domainRelatedObject	2902,95257
#define NID_domainRelatedObject	2903,95311
#define OBJ_domainRelatedObject	2904,95348
#define LN_friendlyCountry	2906,95407
#define NID_friendlyCountry	2907,95453
#define OBJ_friendlyCountry	2908,95486
#define LN_simpleSecurityObject	2910,95541
#define NID_simpleSecurityObject	2911,95597
#define OBJ_simpleSecurityObject	2912,95635
#define LN_pilotOrganization	2914,95695
#define NID_pilotOrganization	2915,95745
#define OBJ_pilotOrganization	2916,95780
#define LN_pilotDSA	2918,95837
#define NID_pilotDSA	2919,95869
#define OBJ_pilotDSA	2920,95895
#define LN_qualityLabelledData	2922,95943
#define NID_qualityLabelledData	2923,95997
#define OBJ_qualityLabelledData	2924,96034
#define SN_userId	2926,96093
#define LN_userId	2927,96118
#define NID_userId	2928,96146
#define OBJ_userId	2929,96170
#define LN_textEncodedORAddress	2931,96217
#define NID_textEncodedORAddress	2932,96273
#define OBJ_textEncodedORAddress	2933,96311
#define SN_rfc822Mailbox	2935,96372
#define LN_rfc822Mailbox	2936,96405
#define NID_rfc822Mailbox	2937,96447
#define OBJ_rfc822Mailbox	2938,96478
#define SN_info	2940,96532
#define NID_info	2941,96556
#define OBJ_info	2942,96578
#define LN_favouriteDrink	2944,96623
#define NID_favouriteDrink	2945,96667
#define OBJ_favouriteDrink	2946,96699
#define LN_roomNumber	2948,96754
#define NID_roomNumber	2949,96790
#define OBJ_roomNumber	2950,96818
#define SN_photo	2952,96869
#define NID_photo	2953,96895
#define OBJ_photo	2954,96918
#define LN_userClass	2956,96964
#define NID_userClass	2957,96998
#define OBJ_userClass	2958,97025
#define SN_host	2960,97075
#define NID_host	2961,97099
#define OBJ_host	2962,97121
#define SN_manager	2964,97166
#define NID_manager	2965,97196
#define OBJ_manager	2966,97221
#define LN_documentIdentifier	2968,97270
#define NID_documentIdentifier	2969,97322
#define OBJ_documentIdentifier	2970,97358
#define LN_documentTitle	2972,97418
#define NID_documentTitle	2973,97460
#define OBJ_documentTitle	2974,97491
#define LN_documentVersion	2976,97546
#define NID_documentVersion	2977,97592
#define OBJ_documentVersion	2978,97625
#define LN_documentAuthor	2980,97682
#define NID_documentAuthor	2981,97726
#define OBJ_documentAuthor	2982,97758
#define LN_documentLocation	2984,97814
#define NID_documentLocation	2985,97862
#define OBJ_documentLocation	2986,97896
#define LN_homeTelephoneNumber	2988,97954
#define NID_homeTelephoneNumber	2989,98008
#define OBJ_homeTelephoneNumber	2990,98045
#define SN_secretary	2992,98106
#define NID_secretary	2993,98140
#define OBJ_secretary	2994,98167
#define LN_otherMailbox	2996,98218
#define NID_otherMailbox	2997,98258
#define OBJ_otherMailbox	2998,98288
#define LN_lastModifiedTime	3000,98342
#define NID_lastModifiedTime	3001,98390
#define OBJ_lastModifiedTime	3002,98424
#define LN_lastModifiedBy	3004,98482
#define NID_lastModifiedBy	3005,98526
#define OBJ_lastModifiedBy	3006,98558
#define SN_domainComponent	3008,98614
#define LN_domainComponent	3009,98647
#define NID_domainComponent	3010,98693
#define OBJ_domainComponent	3011,98726
#define LN_aRecord	3013,98783
#define NID_aRecord	3014,98813
#define OBJ_aRecord	3015,98838
#define LN_pilotAttributeType27	3017,98887
#define NID_pilotAttributeType27	3018,98943
#define OBJ_pilotAttributeType27	3019,98981
#define LN_mXRecord	3021,99043
#define NID_mXRecord	3022,99075
#define OBJ_mXRecord	3023,99101
#define LN_nSRecord	3025,99151
#define NID_nSRecord	3026,99183
#define OBJ_nSRecord	3027,99209
#define LN_sOARecord	3029,99259
#define NID_sOARecord	3030,99293
#define OBJ_sOARecord	3031,99320
#define LN_cNAMERecord	3033,99371
#define NID_cNAMERecord	3034,99409
#define OBJ_cNAMERecord	3035,99438
#define LN_associatedDomain	3037,99491
#define NID_associatedDomain	3038,99539
#define OBJ_associatedDomain	3039,99573
#define LN_associatedName	3041,99631
#define NID_associatedName	3042,99675
#define OBJ_associatedName	3043,99707
#define LN_homePostalAddress	3045,99763
#define NID_homePostalAddress	3046,99813
#define OBJ_homePostalAddress	3047,99848
#define LN_personalTitle	3049,99907
#define NID_personalTitle	3050,99949
#define OBJ_personalTitle	3051,99980
#define LN_mobileTelephoneNumber	3053,100035
#define NID_mobileTelephoneNumber	3054,100093
#define OBJ_mobileTelephoneNumber	3055,100132
#define LN_pagerTelephoneNumber	3057,100195
#define NID_pagerTelephoneNumber	3058,100251
#define OBJ_pagerTelephoneNumber	3059,100289
#define LN_friendlyCountryName	3061,100351
#define NID_friendlyCountryName	3062,100405
#define OBJ_friendlyCountryName	3063,100442
#define LN_organizationalStatus	3065,100503
#define NID_organizationalStatus	3066,100559
#define OBJ_organizationalStatus	3067,100597
#define LN_janetMailbox	3069,100659
#define NID_janetMailbox	3070,100699
#define OBJ_janetMailbox	3071,100729
#define LN_mailPreferenceOption	3073,100783
#define NID_mailPreferenceOption	3074,100839
#define OBJ_mailPreferenceOption	3075,100877
#define LN_buildingName	3077,100939
#define NID_buildingName	3078,100979
#define OBJ_buildingName	3079,101009
#define LN_dSAQuality	3081,101063
#define NID_dSAQuality	3082,101099
#define OBJ_dSAQuality	3083,101127
#define LN_singleLevelQuality	3085,101179
#define NID_singleLevelQuality	3086,101231
#define OBJ_singleLevelQuality	3087,101267
#define LN_subtreeMinimumQuality	3089,101327
#define NID_subtreeMinimumQuality	3090,101385
#define OBJ_subtreeMinimumQuality	3091,101424
#define LN_subtreeMaximumQuality	3093,101487
#define NID_subtreeMaximumQuality	3094,101545
#define OBJ_subtreeMaximumQuality	3095,101584
#define LN_personalSignature	3097,101647
#define NID_personalSignature	3098,101697
#define OBJ_personalSignature	3099,101732
#define LN_dITRedirect	3101,101791
#define NID_dITRedirect	3102,101829
#define OBJ_dITRedirect	3103,101858
#define SN_audio	3105,101911
#define NID_audio	3106,101937
#define OBJ_audio	3107,101960
#define LN_documentPublisher	3109,102007
#define NID_documentPublisher	3110,102057
#define OBJ_documentPublisher	3111,102092
#define SN_id_set	3113,102151
#define LN_id_set	3114,102179
#define NID_id_set	3115,102231
#define OBJ_id_set	3116,102255
#define SN_set_ctype	3118,102312
#define LN_set_ctype	3119,102346
#define NID_set_ctype	3120,102384
#define OBJ_set_ctype	3121,102411
#define SN_set_msgExt	3123,102449
#define LN_set_msgExt	3124,102485
#define NID_set_msgExt	3125,102529
#define OBJ_set_msgExt	3126,102557
#define SN_set_attr	3128,102596
#define NID_set_attr	3129,102628
#define OBJ_set_attr	3130,102654
#define SN_set_policy	3132,102691
#define NID_set_policy	3133,102727
#define OBJ_set_policy	3134,102755
#define SN_set_certExt	3136,102794
#define LN_set_certExt	3137,102832
#define NID_set_certExt	3138,102881
#define OBJ_set_certExt	3139,102910
#define SN_set_brand	3141,102950
#define NID_set_brand	3142,102984
#define OBJ_set_brand	3143,103011
#define SN_setct_PANData	3145,103049
#define NID_setct_PANData	3146,103091
#define OBJ_setct_PANData	3147,103122
#define SN_setct_PANToken	3149,103167
#define NID_setct_PANToken	3150,103211
#define OBJ_setct_PANToken	3151,103243
#define SN_setct_PANOnly	3153,103289
#define NID_setct_PANOnly	3154,103331
#define OBJ_setct_PANOnly	3155,103362
#define SN_setct_OIData	3157,103407
#define NID_setct_OIData	3158,103447
#define OBJ_setct_OIData	3159,103477
#define SN_setct_PI	3161,103521
#define NID_setct_PI	3162,103553
#define OBJ_setct_PI	3163,103579
#define SN_setct_PIData	3165,103619
#define NID_setct_PIData	3166,103659
#define OBJ_setct_PIData	3167,103689
#define SN_setct_PIDataUnsigned	3169,103733
#define NID_setct_PIDataUnsigned	3170,103789
#define OBJ_setct_PIDataUnsigned	3171,103827
#define SN_setct_HODInput	3173,103879
#define NID_setct_HODInput	3174,103923
#define OBJ_setct_HODInput	3175,103955
#define SN_setct_AuthResBaggage	3177,104001
#define NID_setct_AuthResBaggage	3178,104057
#define OBJ_setct_AuthResBaggage	3179,104095
#define SN_setct_AuthRevReqBaggage	3181,104147
#define NID_setct_AuthRevReqBaggage	3182,104209
#define OBJ_setct_AuthRevReqBaggage	3183,104250
#define SN_setct_AuthRevResBaggage	3185,104305
#define NID_setct_AuthRevResBaggage	3186,104367
#define OBJ_setct_AuthRevResBaggage	3187,104408
#define SN_setct_CapTokenSeq	3189,104464
#define NID_setct_CapTokenSeq	3190,104514
#define OBJ_setct_CapTokenSeq	3191,104549
#define SN_setct_PInitResData	3193,104599
#define NID_setct_PInitResData	3194,104651
#define OBJ_setct_PInitResData	3195,104687
#define SN_setct_PI_TBS	3197,104738
#define NID_setct_PI_TBS	3198,104778
#define OBJ_setct_PI_TBS	3199,104808
#define SN_setct_PResData	3201,104853
#define NID_setct_PResData	3202,104897
#define OBJ_setct_PResData	3203,104929
#define SN_setct_AuthReqTBS	3205,104976
#define NID_setct_AuthReqTBS	3206,105024
#define OBJ_setct_AuthReqTBS	3207,105058
#define SN_setct_AuthResTBS	3209,105107
#define NID_setct_AuthResTBS	3210,105155
#define OBJ_setct_AuthResTBS	3211,105189
#define SN_setct_AuthResTBSX	3213,105238
#define NID_setct_AuthResTBSX	3214,105288
#define OBJ_setct_AuthResTBSX	3215,105323
#define SN_setct_AuthTokenTBS	3217,105373
#define NID_setct_AuthTokenTBS	3218,105425
#define OBJ_setct_AuthTokenTBS	3219,105461
#define SN_setct_CapTokenData	3221,105512
#define NID_setct_CapTokenData	3222,105564
#define OBJ_setct_CapTokenData	3223,105600
#define SN_setct_CapTokenTBS	3225,105651
#define NID_setct_CapTokenTBS	3226,105701
#define OBJ_setct_CapTokenTBS	3227,105736
#define SN_setct_AcqCardCodeMsg	3229,105786
#define NID_setct_AcqCardCodeMsg	3230,105842
#define OBJ_setct_AcqCardCodeMsg	3231,105880
#define SN_setct_AuthRevReqTBS	3233,105933
#define NID_setct_AuthRevReqTBS	3234,105987
#define OBJ_setct_AuthRevReqTBS	3235,106024
#define SN_setct_AuthRevResData	3237,106076
#define NID_setct_AuthRevResData	3238,106132
#define OBJ_setct_AuthRevResData	3239,106170
#define SN_setct_AuthRevResTBS	3241,106223
#define NID_setct_AuthRevResTBS	3242,106277
#define OBJ_setct_AuthRevResTBS	3243,106314
#define SN_setct_CapReqTBS	3245,106366
#define NID_setct_CapReqTBS	3246,106412
#define OBJ_setct_CapReqTBS	3247,106445
#define SN_setct_CapReqTBSX	3249,106493
#define NID_setct_CapReqTBSX	3250,106541
#define OBJ_setct_CapReqTBSX	3251,106575
#define SN_setct_CapResData	3253,106624
#define NID_setct_CapResData	3254,106672
#define OBJ_setct_CapResData	3255,106706
#define SN_setct_CapRevReqTBS	3257,106755
#define NID_setct_CapRevReqTBS	3258,106807
#define OBJ_setct_CapRevReqTBS	3259,106843
#define SN_setct_CapRevReqTBSX	3261,106894
#define NID_setct_CapRevReqTBSX	3262,106948
#define OBJ_setct_CapRevReqTBSX	3263,106985
#define SN_setct_CapRevResData	3265,107037
#define NID_setct_CapRevResData	3266,107091
#define OBJ_setct_CapRevResData	3267,107128
#define SN_setct_CredReqTBS	3269,107180
#define NID_setct_CredReqTBS	3270,107228
#define OBJ_setct_CredReqTBS	3271,107262
#define SN_setct_CredReqTBSX	3273,107311
#define NID_setct_CredReqTBSX	3274,107361
#define OBJ_setct_CredReqTBSX	3275,107396
#define SN_setct_CredResData	3277,107446
#define NID_setct_CredResData	3278,107496
#define OBJ_setct_CredResData	3279,107531
#define SN_setct_CredRevReqTBS	3281,107581
#define NID_setct_CredRevReqTBS	3282,107635
#define OBJ_setct_CredRevReqTBS	3283,107672
#define SN_setct_CredRevReqTBSX	3285,107724
#define NID_setct_CredRevReqTBSX	3286,107780
#define OBJ_setct_CredRevReqTBSX	3287,107818
#define SN_setct_CredRevResData	3289,107871
#define NID_setct_CredRevResData	3290,107927
#define OBJ_setct_CredRevResData	3291,107965
#define SN_setct_PCertReqData	3293,108018
#define NID_setct_PCertReqData	3294,108070
#define OBJ_setct_PCertReqData	3295,108106
#define SN_setct_PCertResTBS	3297,108157
#define NID_setct_PCertResTBS	3298,108207
#define OBJ_setct_PCertResTBS	3299,108242
#define SN_setct_BatchAdminReqData	3301,108292
#define NID_setct_BatchAdminReqData	3302,108354
#define OBJ_setct_BatchAdminReqData	3303,108395
#define SN_setct_BatchAdminResData	3305,108451
#define NID_setct_BatchAdminResData	3306,108513
#define OBJ_setct_BatchAdminResData	3307,108554
#define SN_setct_CardCInitResTBS	3309,108610
#define NID_setct_CardCInitResTBS	3310,108668
#define OBJ_setct_CardCInitResTBS	3311,108707
#define SN_setct_MeAqCInitResTBS	3313,108761
#define NID_setct_MeAqCInitResTBS	3314,108819
#define OBJ_setct_MeAqCInitResTBS	3315,108858
#define SN_setct_RegFormResTBS	3317,108912
#define NID_setct_RegFormResTBS	3318,108966
#define OBJ_setct_RegFormResTBS	3319,109003
#define SN_setct_CertReqData	3321,109055
#define NID_setct_CertReqData	3322,109105
#define OBJ_setct_CertReqData	3323,109140
#define SN_setct_CertReqTBS	3325,109190
#define NID_setct_CertReqTBS	3326,109238
#define OBJ_setct_CertReqTBS	3327,109272
#define SN_setct_CertResData	3329,109321
#define NID_setct_CertResData	3330,109371
#define OBJ_setct_CertResData	3331,109406
#define SN_setct_CertInqReqTBS	3333,109456
#define NID_setct_CertInqReqTBS	3334,109510
#define OBJ_setct_CertInqReqTBS	3335,109547
#define SN_setct_ErrorTBS	3337,109599
#define NID_setct_ErrorTBS	3338,109643
#define OBJ_setct_ErrorTBS	3339,109675
#define SN_setct_PIDualSignedTBE	3341,109722
#define NID_setct_PIDualSignedTBE	3342,109780
#define OBJ_setct_PIDualSignedTBE	3343,109819
#define SN_setct_PIUnsignedTBE	3345,109873
#define NID_setct_PIUnsignedTBE	3346,109927
#define OBJ_setct_PIUnsignedTBE	3347,109964
#define SN_setct_AuthReqTBE	3349,110016
#define NID_setct_AuthReqTBE	3350,110064
#define OBJ_setct_AuthReqTBE	3351,110098
#define SN_setct_AuthResTBE	3353,110147
#define NID_setct_AuthResTBE	3354,110195
#define OBJ_setct_AuthResTBE	3355,110229
#define SN_setct_AuthResTBEX	3357,110278
#define NID_setct_AuthResTBEX	3358,110328
#define OBJ_setct_AuthResTBEX	3359,110363
#define SN_setct_AuthTokenTBE	3361,110413
#define NID_setct_AuthTokenTBE	3362,110465
#define OBJ_setct_AuthTokenTBE	3363,110501
#define SN_setct_CapTokenTBE	3365,110552
#define NID_setct_CapTokenTBE	3366,110602
#define OBJ_setct_CapTokenTBE	3367,110637
#define SN_setct_CapTokenTBEX	3369,110687
#define NID_setct_CapTokenTBEX	3370,110739
#define OBJ_setct_CapTokenTBEX	3371,110775
#define SN_setct_AcqCardCodeMsgTBE	3373,110826
#define NID_setct_AcqCardCodeMsgTBE	3374,110888
#define OBJ_setct_AcqCardCodeMsgTBE	3375,110929
#define SN_setct_AuthRevReqTBE	3377,110985
#define NID_setct_AuthRevReqTBE	3378,111039
#define OBJ_setct_AuthRevReqTBE	3379,111076
#define SN_setct_AuthRevResTBE	3381,111128
#define NID_setct_AuthRevResTBE	3382,111182
#define OBJ_setct_AuthRevResTBE	3383,111219
#define SN_setct_AuthRevResTBEB	3385,111271
#define NID_setct_AuthRevResTBEB	3386,111327
#define OBJ_setct_AuthRevResTBEB	3387,111365
#define SN_setct_CapReqTBE	3389,111418
#define NID_setct_CapReqTBE	3390,111464
#define OBJ_setct_CapReqTBE	3391,111497
#define SN_setct_CapReqTBEX	3393,111545
#define NID_setct_CapReqTBEX	3394,111593
#define OBJ_setct_CapReqTBEX	3395,111627
#define SN_setct_CapResTBE	3397,111676
#define NID_setct_CapResTBE	3398,111722
#define OBJ_setct_CapResTBE	3399,111755
#define SN_setct_CapRevReqTBE	3401,111803
#define NID_setct_CapRevReqTBE	3402,111855
#define OBJ_setct_CapRevReqTBE	3403,111891
#define SN_setct_CapRevReqTBEX	3405,111942
#define NID_setct_CapRevReqTBEX	3406,111996
#define OBJ_setct_CapRevReqTBEX	3407,112033
#define SN_setct_CapRevResTBE	3409,112085
#define NID_setct_CapRevResTBE	3410,112137
#define OBJ_setct_CapRevResTBE	3411,112173
#define SN_setct_CredReqTBE	3413,112224
#define NID_setct_CredReqTBE	3414,112272
#define OBJ_setct_CredReqTBE	3415,112306
#define SN_setct_CredReqTBEX	3417,112355
#define NID_setct_CredReqTBEX	3418,112405
#define OBJ_setct_CredReqTBEX	3419,112440
#define SN_setct_CredResTBE	3421,112490
#define NID_setct_CredResTBE	3422,112538
#define OBJ_setct_CredResTBE	3423,112572
#define SN_setct_CredRevReqTBE	3425,112621
#define NID_setct_CredRevReqTBE	3426,112675
#define OBJ_setct_CredRevReqTBE	3427,112712
#define SN_setct_CredRevReqTBEX	3429,112764
#define NID_setct_CredRevReqTBEX	3430,112820
#define OBJ_setct_CredRevReqTBEX	3431,112858
#define SN_setct_CredRevResTBE	3433,112911
#define NID_setct_CredRevResTBE	3434,112965
#define OBJ_setct_CredRevResTBE	3435,113002
#define SN_setct_BatchAdminReqTBE	3437,113054
#define NID_setct_BatchAdminReqTBE	3438,113114
#define OBJ_setct_BatchAdminReqTBE	3439,113154
#define SN_setct_BatchAdminResTBE	3441,113209
#define NID_setct_BatchAdminResTBE	3442,113269
#define OBJ_setct_BatchAdminResTBE	3443,113309
#define SN_setct_RegFormReqTBE	3445,113364
#define NID_setct_RegFormReqTBE	3446,113418
#define OBJ_setct_RegFormReqTBE	3447,113455
#define SN_setct_CertReqTBE	3449,113507
#define NID_setct_CertReqTBE	3450,113555
#define OBJ_setct_CertReqTBE	3451,113589
#define SN_setct_CertReqTBEX	3453,113638
#define NID_setct_CertReqTBEX	3454,113688
#define OBJ_setct_CertReqTBEX	3455,113723
#define SN_setct_CertResTBE	3457,113773
#define NID_setct_CertResTBE	3458,113821
#define OBJ_setct_CertResTBE	3459,113855
#define SN_setct_CRLNotificationTBS	3461,113904
#define NID_setct_CRLNotificationTBS	3462,113968
#define OBJ_setct_CRLNotificationTBS	3463,114010
#define SN_setct_CRLNotificationResTBS	3465,114067
#define NID_setct_CRLNotificationResTBS	3466,114137
#define OBJ_setct_CRLNotificationResTBS	3467,114182
#define SN_setct_BCIDistributionTBS	3469,114242
#define NID_setct_BCIDistributionTBS	3470,114306
#define OBJ_setct_BCIDistributionTBS	3471,114348
#define SN_setext_genCrypt	3473,114405
#define LN_setext_genCrypt	3474,114451
#define NID_setext_genCrypt	3475,114500
#define OBJ_setext_genCrypt	3476,114533
#define SN_setext_miAuth	3478,114581
#define LN_setext_miAuth	3479,114623
#define NID_setext_miAuth	3480,114675
#define OBJ_setext_miAuth	3481,114706
#define SN_setext_pinSecure	3483,114752
#define NID_setext_pinSecure	3484,114800
#define OBJ_setext_pinSecure	3485,114834
#define SN_setext_pinAny	3487,114883
#define NID_setext_pinAny	3488,114925
#define OBJ_setext_pinAny	3489,114956
#define SN_setext_track2	3491,115002
#define NID_setext_track2	3492,115044
#define OBJ_setext_track2	3493,115075
#define SN_setext_cv	3495,115121
#define LN_setext_cv	3496,115155
#define NID_setext_cv	3497,115203
#define OBJ_setext_cv	3498,115230
#define SN_set_policy_root	3500,115272
#define NID_set_policy_root	3501,115318
#define OBJ_set_policy_root	3502,115351
#define SN_setCext_hashedRoot	3504,115399
#define NID_setCext_hashedRoot	3505,115451
#define OBJ_setCext_hashedRoot	3506,115487
#define SN_setCext_certType	3508,115539
#define NID_setCext_certType	3509,115587
#define OBJ_setCext_certType	3510,115621
#define SN_setCext_merchData	3512,115671
#define NID_setCext_merchData	3513,115721
#define OBJ_setCext_merchData	3514,115756
#define SN_setCext_cCertRequired	3516,115807
#define NID_setCext_cCertRequired	3517,115865
#define OBJ_setCext_cCertRequired	3518,115904
#define SN_setCext_tunneling	3520,115959
#define NID_setCext_tunneling	3521,116009
#define OBJ_setCext_tunneling	3522,116044
#define SN_setCext_setExt	3524,116095
#define NID_setCext_setExt	3525,116139
#define OBJ_setCext_setExt	3526,116171
#define SN_setCext_setQualf	3528,116219
#define NID_setCext_setQualf	3529,116267
#define OBJ_setCext_setQualf	3530,116301
#define SN_setCext_PGWYcapabilities	3532,116351
#define NID_setCext_PGWYcapabilities	3533,116415
#define OBJ_setCext_PGWYcapabilities	3534,116457
#define SN_setCext_TokenIdentifier	3536,116515
#define NID_setCext_TokenIdentifier	3537,116577
#define OBJ_setCext_TokenIdentifier	3538,116618
#define SN_setCext_Track2Data	3540,116675
#define NID_setCext_Track2Data	3541,116727
#define OBJ_setCext_Track2Data	3542,116763
#define SN_setCext_TokenType	3544,116815
#define NID_setCext_TokenType	3545,116865
#define OBJ_setCext_TokenType	3546,116900
#define SN_setCext_IssuerCapabilities	3548,116952
#define NID_setCext_IssuerCapabilities	3549,117020
#define OBJ_setCext_IssuerCapabilities	3550,117064
#define SN_setAttr_Cert	3552,117125
#define NID_setAttr_Cert	3553,117165
#define OBJ_setAttr_Cert	3554,117195
#define SN_setAttr_PGWYcap	3556,117238
#define LN_setAttr_PGWYcap	3557,117284
#define NID_setAttr_PGWYcap	3558,117343
#define OBJ_setAttr_PGWYcap	3559,117376
#define SN_setAttr_TokenType	3561,117422
#define NID_setAttr_TokenType	3562,117472
#define OBJ_setAttr_TokenType	3563,117507
#define SN_setAttr_IssCap	3565,117555
#define LN_setAttr_IssCap	3566,117599
#define NID_setAttr_IssCap	3567,117648
#define OBJ_setAttr_IssCap	3568,117680
#define SN_set_rootKeyThumb	3570,117725
#define NID_set_rootKeyThumb	3571,117773
#define OBJ_set_rootKeyThumb	3572,117807
#define SN_set_addPolicy	3574,117858
#define NID_set_addPolicy	3575,117900
#define OBJ_set_addPolicy	3576,117931
#define SN_setAttr_Token_EMV	3578,117979
#define NID_setAttr_Token_EMV	3579,118029
#define OBJ_setAttr_Token_EMV	3580,118064
#define SN_setAttr_Token_B0Prime	3582,118121
#define NID_setAttr_Token_B0Prime	3583,118179
#define OBJ_setAttr_Token_B0Prime	3584,118218
#define SN_setAttr_IssCap_CVM	3586,118279
#define NID_setAttr_IssCap_CVM	3587,118331
#define OBJ_setAttr_IssCap_CVM	3588,118367
#define SN_setAttr_IssCap_T2	3590,118422
#define NID_setAttr_IssCap_T2	3591,118472
#define OBJ_setAttr_IssCap_T2	3592,118507
#define SN_setAttr_IssCap_Sig	3594,118561
#define NID_setAttr_IssCap_Sig	3595,118613
#define OBJ_setAttr_IssCap_Sig	3596,118649
#define SN_setAttr_GenCryptgrm	3598,118704
#define LN_setAttr_GenCryptgrm	3599,118758
#define NID_setAttr_GenCryptgrm	3600,118812
#define OBJ_setAttr_GenCryptgrm	3601,118849
#define SN_setAttr_T2Enc	3603,118909
#define LN_setAttr_T2Enc	3604,118951
#define NID_setAttr_T2Enc	3605,118997
#define OBJ_setAttr_T2Enc	3606,119028
#define SN_setAttr_T2cleartxt	3608,119081
#define LN_setAttr_T2cleartxt	3609,119133
#define NID_setAttr_T2cleartxt	3610,119184
#define OBJ_setAttr_T2cleartxt	3611,119220
#define SN_setAttr_TokICCsig	3613,119278
#define LN_setAttr_TokICCsig	3614,119328
#define NID_setAttr_TokICCsig	3615,119383
#define OBJ_setAttr_TokICCsig	3616,119418
#define SN_setAttr_SecDevSig	3618,119476
#define LN_setAttr_SecDevSig	3619,119526
#define NID_setAttr_SecDevSig	3620,119582
#define OBJ_setAttr_SecDevSig	3621,119617
#define SN_set_brand_IATA_ATA	3623,119675
#define NID_set_brand_IATA_ATA	3624,119727
#define OBJ_set_brand_IATA_ATA	3625,119763
#define SN_set_brand_Diners	3627,119813
#define NID_set_brand_Diners	3628,119861
#define OBJ_set_brand_Diners	3629,119895
#define SN_set_brand_AmericanExpress	3631,119944
#define NID_set_brand_AmericanExpress	3632,120010
#define OBJ_set_brand_AmericanExpress	3633,120053
#define SN_set_brand_JCB	3635,120111
#define NID_set_brand_JCB	3636,120153
#define OBJ_set_brand_JCB	3637,120184
#define SN_set_brand_Visa	3639,120230
#define NID_set_brand_Visa	3640,120274
#define OBJ_set_brand_Visa	3641,120306
#define SN_set_brand_MasterCard	3643,120352
#define NID_set_brand_MasterCard	3644,120408
#define OBJ_set_brand_MasterCard	3645,120446
#define SN_set_brand_Novus	3647,120498
#define NID_set_brand_Novus	3648,120544
#define OBJ_set_brand_Novus	3649,120577
#define SN_des_cdmf	3651,120627
#define LN_des_cdmf	3652,120659
#define NID_des_cdmf	3653,120691
#define OBJ_des_cdmf	3654,120717
#define SN_rsaOAEPEncryptionSET	3656,120758
#define NID_rsaOAEPEncryptionSET	3657,120814
#define OBJ_rsaOAEPEncryptionSET	3658,120852
#define SN_ipsec3	3660,120907
#define LN_ipsec3	3661,120942
#define NID_ipsec3	3662,120970
#define SN_ipsec4	3664,120995
#define LN_ipsec4	3665,121030
#define NID_ipsec4	3666,121058
#define SN_whirlpool	3668,121083
#define NID_whirlpool	3669,121117
#define OBJ_whirlpool	3670,121144
#define SN_cryptopro	3672,121196
#define NID_cryptopro	3673,121230
#define OBJ_cryptopro	3674,121257
#define SN_cryptocom	3676,121308
#define NID_cryptocom	3677,121342
#define OBJ_cryptocom	3678,121369
#define SN_id_GostR3411_94_with_GostR3410_2001	3680,121420
#define LN_id_GostR3411_94_with_GostR3410_2001	3681,121506
#define NID_id_GostR3411_94_with_GostR3410_2001	3682,121595
#define OBJ_id_GostR3411_94_with_GostR3410_2001	3683,121648
#define SN_id_GostR3411_94_with_GostR3410_94	3685,121715
#define LN_id_GostR3411_94_with_GostR3410_94	3686,121797
#define NID_id_GostR3411_94_with_GostR3410_94	3687,121882
#define OBJ_id_GostR3411_94_with_GostR3410_94	3688,121933
#define SN_id_GostR3411_94	3690,121998
#define LN_id_GostR3411_94	3691,122038
#define NID_id_GostR3411_94	3692,122084
#define OBJ_id_GostR3411_94	3693,122117
#define SN_id_HMACGostR3411_94	3695,122164
#define LN_id_HMACGostR3411_94	3696,122218
#define NID_id_HMACGostR3411_94	3697,122271
#define OBJ_id_HMACGostR3411_94	3698,122308
#define SN_id_GostR3410_2001	3700,122360
#define LN_id_GostR3410_2001	3701,122401
#define NID_id_GostR3410_2001	3702,122451
#define OBJ_id_GostR3410_2001	3703,122486
#define SN_id_GostR3410_94	3705,122536
#define LN_id_GostR3410_94	3706,122573
#define NID_id_GostR3410_94	3707,122619
#define OBJ_id_GostR3410_94	3708,122652
#define SN_id_Gost28147_89	3710,122700
#define LN_id_Gost28147_89	3711,122737
#define NID_id_Gost28147_89	3712,122781
#define OBJ_id_Gost28147_89	3713,122814
#define SN_gost89_cnt	3715,122862
#define NID_gost89_cnt	3716,122898
#define SN_id_Gost28147_89_MAC	3718,122927
#define LN_id_Gost28147_89_MAC	3719,122970
#define NID_id_Gost28147_89_MAC	3720,123022
#define OBJ_id_Gost28147_89_MAC	3721,123059
#define SN_id_GostR3411_94_prf	3723,123111
#define LN_id_GostR3411_94_prf	3724,123162
#define NID_id_GostR3411_94_prf	3725,123216
#define OBJ_id_GostR3411_94_prf	3726,123253
#define SN_id_GostR3410_2001DH	3728,123305
#define LN_id_GostR3410_2001DH	3729,123359
#define NID_id_GostR3410_2001DH	3730,123414
#define OBJ_id_GostR3410_2001DH	3731,123451
#define SN_id_GostR3410_94DH	3733,123503
#define LN_id_GostR3410_94DH	3734,123553
#define NID_id_GostR3410_94DH	3735,123604
#define OBJ_id_GostR3410_94DH	3736,123639
#define SN_id_Gost28147_89_CryptoPro_KeyMeshing	3738,123689
#define NID_id_Gost28147_89_CryptoPro_KeyMeshing	3739,123777
#define OBJ_id_Gost28147_89_CryptoPro_KeyMeshing	3740,123831
#define SN_id_Gost28147_89_None_KeyMeshing	3742,123903
#define NID_id_Gost28147_89_None_KeyMeshing	3743,123981
#define OBJ_id_Gost28147_89_None_KeyMeshing	3744,124030
#define SN_id_GostR3411_94_TestParamSet	3746,124097
#define NID_id_GostR3411_94_TestParamSet	3747,124169
#define OBJ_id_GostR3411_94_TestParamSet	3748,124215
#define SN_id_GostR3411_94_CryptoProParamSet	3750,124279
#define NID_id_GostR3411_94_CryptoProParamSet	3751,124361
#define OBJ_id_GostR3411_94_CryptoProParamSet	3752,124412
#define SN_id_Gost28147_89_TestParamSet	3754,124481
#define NID_id_Gost28147_89_TestParamSet	3755,124553
#define OBJ_id_Gost28147_89_TestParamSet	3756,124599
#define SN_id_Gost28147_89_CryptoPro_A_ParamSet	3758,124663
#define NID_id_Gost28147_89_CryptoPro_A_ParamSet	3759,124751
#define OBJ_id_Gost28147_89_CryptoPro_A_ParamSet	3760,124805
#define SN_id_Gost28147_89_CryptoPro_B_ParamSet	3762,124877
#define NID_id_Gost28147_89_CryptoPro_B_ParamSet	3763,124965
#define OBJ_id_Gost28147_89_CryptoPro_B_ParamSet	3764,125019
#define SN_id_Gost28147_89_CryptoPro_C_ParamSet	3766,125091
#define NID_id_Gost28147_89_CryptoPro_C_ParamSet	3767,125179
#define OBJ_id_Gost28147_89_CryptoPro_C_ParamSet	3768,125233
#define SN_id_Gost28147_89_CryptoPro_D_ParamSet	3770,125305
#define NID_id_Gost28147_89_CryptoPro_D_ParamSet	3771,125393
#define OBJ_id_Gost28147_89_CryptoPro_D_ParamSet	3772,125447
#define SN_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet	3774,125519
#define NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet	3775,125623
#define OBJ_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet	3776,125685
#define SN_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet	3778,125765
#define NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet	3779,125869
#define OBJ_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet	3780,125931
#define SN_id_Gost28147_89_CryptoPro_RIC_1_ParamSet	3782,126011
#define NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet	3783,126107
#define OBJ_id_Gost28147_89_CryptoPro_RIC_1_ParamSet	3784,126165
#define SN_id_GostR3410_94_TestParamSet	3786,126241
#define NID_id_GostR3410_94_TestParamSet	3787,126313
#define OBJ_id_GostR3410_94_TestParamSet	3788,126359
#define SN_id_GostR3410_94_CryptoPro_A_ParamSet	3790,126423
#define NID_id_GostR3410_94_CryptoPro_A_ParamSet	3791,126511
#define OBJ_id_GostR3410_94_CryptoPro_A_ParamSet	3792,126565
#define SN_id_GostR3410_94_CryptoPro_B_ParamSet	3794,126637
#define NID_id_GostR3410_94_CryptoPro_B_ParamSet	3795,126725
#define OBJ_id_GostR3410_94_CryptoPro_B_ParamSet	3796,126779
#define SN_id_GostR3410_94_CryptoPro_C_ParamSet	3798,126851
#define NID_id_GostR3410_94_CryptoPro_C_ParamSet	3799,126939
#define OBJ_id_GostR3410_94_CryptoPro_C_ParamSet	3800,126993
#define SN_id_GostR3410_94_CryptoPro_D_ParamSet	3802,127065
#define NID_id_GostR3410_94_CryptoPro_D_ParamSet	3803,127153
#define OBJ_id_GostR3410_94_CryptoPro_D_ParamSet	3804,127207
#define SN_id_GostR3410_94_CryptoPro_XchA_ParamSet	3806,127279
#define NID_id_GostR3410_94_CryptoPro_XchA_ParamSet	3807,127373
#define OBJ_id_GostR3410_94_CryptoPro_XchA_ParamSet	3808,127430
#define SN_id_GostR3410_94_CryptoPro_XchB_ParamSet	3810,127505
#define NID_id_GostR3410_94_CryptoPro_XchB_ParamSet	3811,127599
#define OBJ_id_GostR3410_94_CryptoPro_XchB_ParamSet	3812,127656
#define SN_id_GostR3410_94_CryptoPro_XchC_ParamSet	3814,127731
#define NID_id_GostR3410_94_CryptoPro_XchC_ParamSet	3815,127825
#define OBJ_id_GostR3410_94_CryptoPro_XchC_ParamSet	3816,127882
#define SN_id_GostR3410_2001_TestParamSet	3818,127957
#define NID_id_GostR3410_2001_TestParamSet	3819,128033
#define OBJ_id_GostR3410_2001_TestParamSet	3820,128081
#define SN_id_GostR3410_2001_CryptoPro_A_ParamSet	3822,128147
#define NID_id_GostR3410_2001_CryptoPro_A_ParamSet	3823,128239
#define OBJ_id_GostR3410_2001_CryptoPro_A_ParamSet	3824,128295
#define SN_id_GostR3410_2001_CryptoPro_B_ParamSet	3826,128369
#define NID_id_GostR3410_2001_CryptoPro_B_ParamSet	3827,128461
#define OBJ_id_GostR3410_2001_CryptoPro_B_ParamSet	3828,128517
#define SN_id_GostR3410_2001_CryptoPro_C_ParamSet	3830,128591
#define NID_id_GostR3410_2001_CryptoPro_C_ParamSet	3831,128683
#define OBJ_id_GostR3410_2001_CryptoPro_C_ParamSet	3832,128739
#define SN_id_GostR3410_2001_CryptoPro_XchA_ParamSet	3834,128813
#define NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet	3835,128911
#define OBJ_id_GostR3410_2001_CryptoPro_XchA_ParamSet	3836,128970
#define SN_id_GostR3410_2001_CryptoPro_XchB_ParamSet	3838,129047
#define NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet	3839,129145
#define OBJ_id_GostR3410_2001_CryptoPro_XchB_ParamSet	3840,129204
#define SN_id_GostR3410_94_a	3842,129281
#define NID_id_GostR3410_94_a	3843,129331
#define OBJ_id_GostR3410_94_a	3844,129366
#define SN_id_GostR3410_94_aBis	3846,129421
#define NID_id_GostR3410_94_aBis	3847,129477
#define OBJ_id_GostR3410_94_aBis	3848,129515
#define SN_id_GostR3410_94_b	3850,129573
#define NID_id_GostR3410_94_b	3851,129623
#define OBJ_id_GostR3410_94_b	3852,129658
#define SN_id_GostR3410_94_bBis	3854,129713
#define NID_id_GostR3410_94_bBis	3855,129769
#define OBJ_id_GostR3410_94_bBis	3856,129807
#define SN_id_Gost28147_89_cc	3858,129865
#define LN_id_Gost28147_89_cc	3859,129917
#define NID_id_Gost28147_89_cc	3860,129983
#define OBJ_id_Gost28147_89_cc	3861,130019
#define SN_id_GostR3410_94_cc	3863,130075
#define LN_id_GostR3410_94_cc	3864,130117
#define NID_id_GostR3410_94_cc	3865,130174
#define OBJ_id_GostR3410_94_cc	3866,130210
#define SN_id_GostR3410_2001_cc	3868,130266
#define LN_id_GostR3410_2001_cc	3869,130312
#define NID_id_GostR3410_2001_cc	3870,130373
#define OBJ_id_GostR3410_2001_cc	3871,130411
#define SN_id_GostR3411_94_with_GostR3410_94_cc	3873,130469
#define LN_id_GostR3411_94_with_GostR3410_94_cc	3874,130557
#define NID_id_GostR3411_94_with_GostR3410_94_cc	3875,130655
#define OBJ_id_GostR3411_94_with_GostR3410_94_cc	3876,130709
#define SN_id_GostR3411_94_with_GostR3410_2001_cc	3878,130783
#define LN_id_GostR3411_94_with_GostR3410_2001_cc	3879,130875
#define NID_id_GostR3411_94_with_GostR3410_2001_cc	3880,130977
#define OBJ_id_GostR3411_94_with_GostR3410_2001_cc	3881,131033
#define SN_id_GostR3410_2001_ParamSet_cc	3883,131109
#define LN_id_GostR3410_2001_ParamSet_cc	3884,131183
#define NID_id_GostR3410_2001_ParamSet_cc	3885,131268
#define OBJ_id_GostR3410_2001_ParamSet_cc	3886,131315
#define SN_camellia_128_cbc	3888,131382
#define LN_camellia_128_cbc	3889,131430
#define NID_camellia_128_cbc	3890,131478
#define OBJ_camellia_128_cbc	3891,131512
#define SN_camellia_192_cbc	3893,131578
#define LN_camellia_192_cbc	3894,131626
#define NID_camellia_192_cbc	3895,131674
#define OBJ_camellia_192_cbc	3896,131708
#define SN_camellia_256_cbc	3898,131774
#define LN_camellia_256_cbc	3899,131822
#define NID_camellia_256_cbc	3900,131870
#define OBJ_camellia_256_cbc	3901,131904
#define SN_id_camellia128_wrap	3903,131970
#define NID_id_camellia128_wrap	3904,132024
#define OBJ_id_camellia128_wrap	3905,132061
#define SN_id_camellia192_wrap	3907,132130
#define NID_id_camellia192_wrap	3908,132184
#define OBJ_id_camellia192_wrap	3909,132221
#define SN_id_camellia256_wrap	3911,132290
#define NID_id_camellia256_wrap	3912,132344
#define OBJ_id_camellia256_wrap	3913,132381
#define OBJ_ntt_ds	3915,132450
#define OBJ_camellia	3917,132486
#define SN_camellia_128_ecb	3919,132529
#define LN_camellia_128_ecb	3920,132577
#define NID_camellia_128_ecb	3921,132625
#define OBJ_camellia_128_ecb	3922,132659
#define SN_camellia_128_ofb128	3924,132706
#define LN_camellia_128_ofb128	3925,132757
#define NID_camellia_128_ofb128	3926,132808
#define OBJ_camellia_128_ofb128	3927,132845
#define SN_camellia_128_cfb128	3929,132895
#define LN_camellia_128_cfb128	3930,132946
#define NID_camellia_128_cfb128	3931,132997
#define OBJ_camellia_128_cfb128	3932,133034
#define SN_camellia_192_ecb	3934,133084
#define LN_camellia_192_ecb	3935,133132
#define NID_camellia_192_ecb	3936,133180
#define OBJ_camellia_192_ecb	3937,133214
#define SN_camellia_192_ofb128	3939,133262
#define LN_camellia_192_ofb128	3940,133313
#define NID_camellia_192_ofb128	3941,133364
#define OBJ_camellia_192_ofb128	3942,133401
#define SN_camellia_192_cfb128	3944,133452
#define LN_camellia_192_cfb128	3945,133503
#define NID_camellia_192_cfb128	3946,133554
#define OBJ_camellia_192_cfb128	3947,133591
#define SN_camellia_256_ecb	3949,133642
#define LN_camellia_256_ecb	3950,133690
#define NID_camellia_256_ecb	3951,133738
#define OBJ_camellia_256_ecb	3952,133772
#define SN_camellia_256_ofb128	3954,133820
#define LN_camellia_256_ofb128	3955,133871
#define NID_camellia_256_ofb128	3956,133922
#define OBJ_camellia_256_ofb128	3957,133959
#define SN_camellia_256_cfb128	3959,134010
#define LN_camellia_256_cfb128	3960,134061
#define NID_camellia_256_cfb128	3961,134112
#define OBJ_camellia_256_cfb128	3962,134149
#define SN_camellia_128_cfb1	3964,134200
#define LN_camellia_128_cfb1	3965,134250
#define NID_camellia_128_cfb1	3966,134300
#define SN_camellia_192_cfb1	3968,134336
#define LN_camellia_192_cfb1	3969,134386
#define NID_camellia_192_cfb1	3970,134436
#define SN_camellia_256_cfb1	3972,134472
#define LN_camellia_256_cfb1	3973,134522
#define NID_camellia_256_cfb1	3974,134572
#define SN_camellia_128_cfb8	3976,134608
#define LN_camellia_128_cfb8	3977,134658
#define NID_camellia_128_cfb8	3978,134708
#define SN_camellia_192_cfb8	3980,134744
#define LN_camellia_192_cfb8	3981,134794
#define NID_camellia_192_cfb8	3982,134844
#define SN_camellia_256_cfb8	3984,134880
#define LN_camellia_256_cfb8	3985,134930
#define NID_camellia_256_cfb8	3986,134980
#define SN_kisa	3988,135016
#define LN_kisa	3989,135040
#define NID_kisa	3990,135064
#define OBJ_kisa	3991,135086
#define SN_seed_ecb	3993,135134
#define LN_seed_ecb	3994,135166
#define NID_seed_ecb	3995,135198
#define OBJ_seed_ecb	3996,135224
#define SN_seed_cbc	3998,135262
#define LN_seed_cbc	3999,135294
#define NID_seed_cbc	4000,135326
#define OBJ_seed_cbc	4001,135352
#define SN_seed_cfb128	4003,135390
#define LN_seed_cfb128	4004,135425
#define NID_seed_cfb128	4005,135460
#define OBJ_seed_cfb128	4006,135489
#define SN_seed_ofb128	4008,135530
#define LN_seed_ofb128	4009,135565
#define NID_seed_ofb128	4010,135600
#define OBJ_seed_ofb128	4011,135629
#define SN_hmac	4013,135670
#define LN_hmac	4014,135694
#define NID_hmac	4015,135718
#define SN_cmac	4017,135741
#define LN_cmac	4018,135765
#define NID_cmac	4019,135789
#define SN_rc4_hmac_md5	4021,135812
#define LN_rc4_hmac_md5	4022,135852
#define NID_rc4_hmac_md5	4023,135892
#define SN_aes_128_cbc_hmac_sha1	4025,135923
#define LN_aes_128_cbc_hmac_sha1	4026,135981
#define NID_aes_128_cbc_hmac_sha1	4027,136039
#define SN_aes_192_cbc_hmac_sha1	4029,136079
#define LN_aes_192_cbc_hmac_sha1	4030,136137
#define NID_aes_192_cbc_hmac_sha1	4031,136195
#define SN_aes_256_cbc_hmac_sha1	4033,136235
#define LN_aes_256_cbc_hmac_sha1	4034,136293
#define NID_aes_256_cbc_hmac_sha1	4035,136351

crypto/objects/obj_lib.c,60
ASN1_OBJECT *OBJ_dup(OBJ_dup65,3327
int OBJ_cmp(122,4581

crypto/objects/obj_xref.h,205
	int sign_id;5,66
	int hash_id;6,80
	int pkey_id;7,94
	} nid_triple;8,108
static const nid_triple sigoid_srt[sigoid_srt10,124
static const nid_triple * const sigoid_srt_xref[sigoid_srt_xref44,1957

crypto/objects/obj_xref.c,260
DECLARE_STACK_OF(62,2802
static int sig_sk_cmp(73,3092
static int sigx_cmp(80,3293
int OBJ_find_sigid_algs(91,3566
int OBJ_find_sigid_by_algs(120,4109
int OBJ_add_sigid(154,4706
static void sid_free(187,5303
void OBJ_sigid_free(192,5366
main(208,5582

crypto/objects/obj_dat.h,371
#define NUM_NID 65,3331
#define NUM_SN 66,3351
#define NUM_LN 67,3370
#define NUM_OBJ 68,3389
static const unsigned char lvalues[lvalues70,3410
static const ASN1_OBJECT nid_objs[nid_objs931,72655
static const unsigned int sn_objs[sn_objs2414,148847
static const unsigned int ln_objs[ln_objs3331,175228
static const unsigned int obj_objs[obj_objs4248,203128

crypto/objects/o_names.c,1051
# define OPENSSL_strcmp 17,475
# define OPENSSL_strcmp 19,548
static LHASH_OF(26,772
typedef struct name_funcs_st29,860
	unsigned long (*hash_func)hash_func31,892
	int (*cmp_func)cmp_func32,939
	void (*free_func)free_func33,986
	} NAME_FUNCS;34,1039
DECLARE_STACK_OF(36,1055
int OBJ_NAME_new_index(62,1863
static int obj_name_cmp(115,3243
static unsigned long obj_name_hash(137,3755
const char *OBJ_NAME_get(OBJ_NAME_get155,4124
int OBJ_NAME_add(185,4626
int OBJ_NAME_remove(233,5546
struct doall262,6172
	int type;264,6188
	void (*fn)fn265,6199
	void *arg;arg266,6240
static void do_all_fn_doall_arg(269,6257
static IMPLEMENT_LHASH_DOALL_ARG_FN(275,6383
struct doall_sorted289,6695
	int type;291,6718
	int n;292,6729
	const OBJ_NAME **names;names293,6737
static void do_all_sorted_fn(296,6767
static int do_all_sorted_cmp(306,6925
void OBJ_NAME_do_all_sorted(314,7102
static int free_type;333,7520
static void names_lh_free_doall(335,7543
static IMPLEMENT_LHASH_DOALL_FN(344,7712
void OBJ_NAME_cleanup(351,7842

crypto/bf/bf_enc.c,81
void BF_encrypt(72,3612
void BF_decrypt(149,4939
void BF_cbc_encrypt(224,6239

crypto/bf/bf_locl.h,548
#define HEADER_BF_LOCL_H60,3221
#undef c2l63,3302
#define c2l(64,3313
#undef c2ln70,3542
#define c2ln(71,3554
#undef l2c86,4045
#define l2c(87,4056
#undef l2cn93,4310
#define l2cn(94,4322
#define n2ln(109,4894
#define l2nn(125,5424
#undef n2l139,5943
#define n2l(140,5954
#undef l2n145,6204
#define l2n(146,6215
#define BF_ENC(164,6982
#define BF_LONG_LOG2 176,7278
#define BF_M 178,7354
#define BF_0 179,7389
#define BF_1 180,7421
#define BF_2 181,7453
#define BF_3 182,7485
#define BF_ENC(193,7938
#define BF_ENC(210,8576

crypto/bf/bfspeed.c,432
#define TIMES63,3458
#undef TIMES89,4053
#define _POSIX_SOURCE97,4157
#define HZ	107,4362
#define HZ 109,4399
#define BUFSIZE	113,4443
long run=114,4472
#define SIGRETTYPE 119,4577
#define SIGRETTYPE 121,4607
SIGRETTYPE sig_done(125,4668
#define START	135,4775
#define STOP	136,4791
double Time_F(138,4807
int main(174,5360
#define COND(211,6134
#define COUNT(212,6165
#define COND(214,6192
#define COUNT(215,6214

crypto/bf/bf_cfb64.c,31
void BF_cfb64_encrypt(67,3436

crypto/bf/blowfish.h,348
#define HEADER_BLOWFISH_H60,3223
#define BF_ENCRYPT	72,3371
#define BF_DECRYPT	73,3392
#define BF_LONG 83,3716
#define BF_LONG 85,3800
#define BF_LONG_LOG2 86,3830
#define BF_LONG 95,4131
#define BF_ROUNDS	98,4168
#define BF_BLOCK	99,4189
typedef struct bf_key_st101,4209
	BF_LONG P[P103,4237
	BF_LONG S[S104,4262
	} BF_KEY;105,4281

crypto/bf/bftest.c,846
int main(70,3504
static char *bf_key[bf_key82,3682
static BF_LONG bf_plain[bf_plain88,3781
static BF_LONG bf_cipher[bf_cipher93,3873
#define NUM_TESTS 100,4021
static unsigned char ecb_data[ecb_data101,4042
static unsigned char plain_data[plain_data137,5586
static unsigned char cipher_data[cipher_data173,7132
static unsigned char cbc_key 210,8682
static unsigned char cbc_iv 213,8803
static char cbc_data[cbc_data214,8878
static unsigned char cbc_ok[cbc_ok215,8935
static unsigned char cfb64_ok[cfb64_ok221,9139
static unsigned char ofb64_ok[ofb64_ok227,9328
#define KEY_TEST_NUM	233,9517
static unsigned char key_test[key_test234,9541
static unsigned char key_data[key_data240,9722
static unsigned char key_out[key_out243,9801
int main(272,10969
static int print_test_data(288,11180
static int test(355,12768

crypto/bf/bf_skey.c,58
void BF_set_key(66,3334
void private_BF_set_key(72,3492

crypto/bf/bf_ofb64.c,31
void BF_ofb64_encrypt(66,3435

crypto/bf/bf_cbc.c,29
void BF_cbc_encrypt(62,3247

crypto/bf/bf_pi.h,37
static const BF_KEY bf_init=59,3194

crypto/bf/bf_ecb.c,114
const char BF_version[BF_version68,3492
const char *BF_options(BF_options70,3551
void BF_ecb_encrypt(81,3716

crypto/bf/bf_opts.c,1013
#define TIMES63,3459
#undef TIMES89,4054
#define _POSIX_SOURCE97,4158
#define BF_DEFAULT_OPTIONS104,4262
#undef BF_ENC106,4290
#define BF_encrypt 107,4304
#undef HEADER_BF_LOCL_H108,4342
#define BF_PTR111,4387
#undef BF_PTR2112,4402
#undef BF_ENC113,4417
#undef BF_encrypt114,4431
#define BF_encrypt 115,4449
#undef HEADER_BF_LOCL_H116,4484
#undef BF_PTR119,4529
#define BF_PTR2120,4543
#undef BF_ENC121,4559
#undef BF_encrypt122,4573
#define BF_encrypt 123,4591
#undef HEADER_BF_LOCL_H124,4627
#   define HZ	131,4816
#   define HZ 133,4864
#  define HZ 136,4932
#define BUFSIZE	140,4979
long run=141,5008
#define SIGRETTYPE 146,5096
#define SIGRETTYPE 148,5126
SIGRETTYPE sig_done(152,5187
#define START	162,5294
#define STOP	163,5310
double Time_F(165,5326
#define print_name(202,5897
#define print_name(204,5991
#define time_it(207,6073
#define print_it(222,6437
int main(226,6565
#define COND(273,7479
#define COUNT(274,7510
#define COND(276,7537
#define COUNT(277,7559

crypto/rand/rand_egd.c,293
int RAND_query_egd_bytes(99,4916
int RAND_egd(103,5009
int RAND_egd_bytes(108,5060
struct	sockaddr_un 124,5355
	short	sun_family;125,5376
	char	sun_path[sun_path126,5410
#  define offsetof(133,5539
int RAND_query_egd_bytes(136,5612
int RAND_egd_bytes(284,8341
int RAND_egd(297,8550

crypto/rand/md_rand.c,919
#define OPENSSL_FIPSEVP112,5832
#   define NDEBUG116,5894
# define PREDICT133,6126
#define STATE_SIZE	138,6176
static int state_num=139,6200
static unsigned char state[state140,6238
static unsigned char md[md141,6295
static long md_count[md_count142,6338
static double entropy=143,6369
static int initialized=144,6394
static unsigned int crypto_lock_rand 146,6421
static CRYPTO_THREADID locking_threadid;150,6707
int rand_predictable=154,6805
const char RAND_version[RAND_version157,6837
RAND_METHOD rand_ssleay_meth=167,7307
RAND_METHOD *RAND_SSLeay(RAND_SSLeay176,7479
static void ssleay_rand_cleanup(181,7545
static void ssleay_rand_add(193,7758
static void ssleay_rand_seed(329,11751
static int ssleay_rand_bytes(334,11854
#define DUMMY_SEED 436,14803
static int ssleay_rand_nopseudo_bytes(534,17386
static int ssleay_rand_pseudo_bytes(541,17584
static int ssleay_rand_status(546,17697

crypto/rand/rand_nw.c,24
int RAND_poll(132,6356

crypto/rand/rand_lib.c,834
static ENGINE *funct_ref funct_ref75,3513
static const RAND_METHOD *default_RAND_meth default_RAND_meth77,3552
int RAND_set_rand_method(79,3605
const RAND_METHOD *RAND_get_rand_method(RAND_get_rand_method92,3804
int RAND_set_rand_engine(117,4223
void RAND_cleanup(138,4607
void RAND_seed(146,4765
void RAND_add(153,4912
int RAND_bytes(160,5080
int RAND_pseudo_bytes(168,5252
int RAND_status(176,5441
static size_t drbg_get_entropy(194,5823
static void drbg_free_entropy(211,6268
static size_t drbg_get_adin(221,6520
static int drbg_rand_add(235,6903
static int drbg_rand_seed(242,7049
#define OPENSSL_DRBG_DEFAULT_TYPE	249,7202
#define OPENSSL_DRBG_DEFAULT_FLAGS	252,7294
static int fips_drbg_type 255,7359
static int fips_drbg_flags 256,7414
void RAND_set_fips_drbg_type(258,7472
int RAND_init_fips(264,7579

crypto/rand/randtest.c,18
int main(68,3353

crypto/rand/rand_unix.c,156
#define USE_SOCKETS113,5853
# define FD_SETSIZE 133,6448
int RAND_poll(153,7260
int RAND_poll(220,8789
int RAND_poll(237,9104
int RAND_poll(427,13466

crypto/rand/randfile.c,367
#define _XOPEN_SOURCE 60,3267
#define stat	83,3651
#define chmod	84,3670
#define open	85,3691
#define fdopen	86,3710
#undef BUFSIZE89,3741
#define BUFSIZE	90,3756
#define RAND_DATA 91,3777
#define VMS_OPEN_ATTRS 98,4096
int RAND_load_file(106,4375
int RAND_write_file(179,6154
#define O_BINARY 206,6828
const char *RAND_file_name(RAND_file_name271,8704

crypto/rand/rand.h,593
#define HEADER_RAND_H60,3217
#define FIPS_RAND_SIZE_T 75,3447
struct rand_meth_st81,3571
	void (*seed)seed83,3594
	int (*bytes)bytes84,3635
	void (*cleanup)cleanup85,3679
	void (*add)add86,3703
	int (*pseudorand)pseudorand87,3759
	int (*status)status88,3808
#define RAND_F_RAND_GET_RAND_METHOD	136,5176
#define RAND_F_RAND_INIT_FIPS	137,5219
#define RAND_F_SSLEAY_RAND_BYTES	138,5257
#define RAND_R_ERROR_INITIALISING_DRBG	141,5318
#define RAND_R_ERROR_INSTANTIATING_DRBG	142,5364
#define RAND_R_NO_FIPS_RANDOM_METHOD_SET	143,5411
#define RAND_R_PRNG_NOT_SEEDED	144,5458

crypto/rand/rand_os2.c,497
#define INCL_DOSPROCESS62,2759
#define INCL_DOSPROFILE63,2783
#define INCL_DOSMISC64,2807
#define INCL_DOSMODULEMGR65,2828
#define   CMD_KI_RDCNT 68,2872
typedef struct _CPUUTIL 70,2906
    ULONG ulTimeLow;71,2932
    ULONG ulTimeHigh;72,3001
    ULONG ulIdleLow;73,3070
    ULONG ulIdleHigh;74,3139
    ULONG ulBusyLow;75,3208
    ULONG ulBusyHigh;76,3277
    ULONG ulIntrLow;77,3346
    ULONG ulIntrHigh;78,3415
} CPUUTIL;79,3484
HMODULE hDoscalls 85,3741
int RAND_poll(87,3765

crypto/rand/rand_lcl.h,573
#define HEADER_RAND_LCL_H113,5859
#define ENTROPY_NEEDED 115,5886
#define USE_SHA1_RAND120,6128
#define USE_MD5_RAND122,6181
#define USE_MDC2_RAND124,6262
#define USE_MD2_RAND126,6315
#define MD_Update(133,6427
#define	MD_Final(134,6476
#define MD_DIGEST_LENGTH	137,6579
#define MD_Init(138,6622
#define	MD(139,6679
#define MD_DIGEST_LENGTH	142,6791
#define MD_Init(143,6834
#define	MD(144,6892
#define MD_DIGEST_LENGTH	147,7006
#define MD_Init(148,7050
#define	MD(149,7108
#define MD_DIGEST_LENGTH	152,7220
#define MD_Init(153,7263
#define	MD(154,7320

crypto/rand/rand_win.c,1564
# define _WIN32_WINNT 119,6009
#define MAXDELAY 126,6246
#define PROV_INTEL_SEC 131,6386
#define INTEL_DEF_PROV 132,6412
typedef struct tagCURSORINFO148,7013
    DWORD   cbSize;150,7044
    DWORD   flags;151,7064
    HCURSOR hCursor;152,7083
    POINT   ptScreenPos;153,7104
} CURSORINFO, *PCURSORINFO, *LPCURSORINFO;LPCURSORINFO154,7129
#define CURSOR_SHOWING 156,7173
typedef BOOL (WINAPI *CRYPTACQUIRECONTEXTW)CRYPTACQUIRECONTEXTW160,7272
typedef BOOL (WINAPI *CRYPTGENRANDOM)CRYPTGENRANDOM162,7371
typedef BOOL (WINAPI *CRYPTRELEASECONTEXT)CRYPTRELEASECONTEXT163,7437
typedef HWND (WINAPI *GETFOREGROUNDWINDOW)GETFOREGROUNDWINDOW165,7501
typedef BOOL (WINAPI *GETCURSORINFO)GETCURSORINFO166,7551
typedef DWORD (WINAPI *GETQUEUESTATUS)GETQUEUESTATUS167,7602
typedef HANDLE (WINAPI *CREATETOOLHELP32SNAPSHOT)CREATETOOLHELP32SNAPSHOT169,7649
typedef BOOL (WINAPI *CLOSETOOLHELP32SNAPSHOT)CLOSETOOLHELP32SNAPSHOT170,7714
typedef BOOL (WINAPI *HEAP32FIRST)HEAP32FIRST171,7770
typedef BOOL (WINAPI *HEAP32NEXT)HEAP32NEXT172,7836
typedef BOOL (WINAPI *HEAP32LIST)HEAP32LIST173,7886
typedef BOOL (WINAPI *PROCESS32)PROCESS32174,7943
typedef BOOL (WINAPI *THREAD32)THREAD32175,8003
typedef BOOL (WINAPI *MODULE32)MODULE32176,8061
typedef NET_API_STATUS (NET_API_FUNCTION * NETSTATGET)186,8523
typedef NET_API_STATUS (NET_API_FUNCTION * NETFREE)188,8627
int RAND_poll(192,8736
int RAND_event(634,22111
void RAND_screen(674,23272
static void readtimer(682,23424
# define have_tsc 704,23837
static void readscreen(738,24791

crypto/rand/rand_err.c,220
#define ERR_FUNC(68,2978
#define ERR_REASON(69,3031
static ERR_STRING_DATA RAND_str_functs[RAND_str_functs71,3091
static ERR_STRING_DATA RAND_str_reasons[RAND_str_reasons79,3327
void ERR_load_RAND_strings(90,3679

crypto/rand/rand_vms.c,312
# define PTR_T 76,3163
# define PTR_T 80,3284
static struct items_data_st83,3356
	short length,85,3387
	short length, code;85,3387
	} items_data[items_data86,3440
int RAND_poll(97,3648
		short length,103,3720
		short length, code;103,3720
		long *buffer;buffer104,3742
		int *retlen;retlen105,3758

crypto/jpake/jpake.c,1721
    char *name;name15,270
    char *peer_name;peer_name16,308
    BIGNUM *p;p17,329
    BIGNUM *g;g18,344
    BIGNUM *q;q19,359
    BIGNUM *gxc;gxc20,374
    BIGNUM *gxd;gxd21,428
    } JPAKE_CTX_PUBLIC;22,482
struct JPAKE_CTX24,507
    JPAKE_CTX_PUBLIC p;26,530
    BIGNUM *secret;secret27,554
    BN_CTX *ctx;ctx28,600
    BIGNUM *xa;xa29,617
    BIGNUM *xb;xb30,668
    BIGNUM *key;key31,719
static void JPAKE_ZKP_init(34,783
static void JPAKE_ZKP_release(40,886
#define JPAKE_STEP_PART_init	47,1054
#define JPAKE_STEP_PART_release	48,1100
void JPAKE_STEP_PART_init(50,1153
void JPAKE_STEP_PART_release(56,1264
void JPAKE_STEP1_init(62,1379
void JPAKE_STEP1_release(68,1501
static void JPAKE_CTX_init(74,1632
static void JPAKE_CTX_release(95,2184
JPAKE_CTX *JPAKE_CTX_new(JPAKE_CTX_new115,2616
void JPAKE_CTX_free(126,2903
static void hashlength(132,3003
static void hashstring(142,3187
static void hashbn(150,3346
static void zkp_hash(162,3621
static void generate_zkp(186,4274
static int verify_zkp(214,4917
static void generate_step_part(247,5708
static void genrand(255,5991
int JPAKE_STEP1_generate(276,6352
static int is_legal(286,6603
int JPAKE_STEP1_process(302,6923
int JPAKE_STEP2_generate(345,7878
static int compute_key(381,8816
int JPAKE_STEP2_process(414,9718
static void quickhashbn(444,10422
void JPAKE_STEP3A_init(453,10583
int JPAKE_STEP3A_generate(456,10633
int JPAKE_STEP3A_process(464,10811
void JPAKE_STEP3A_release(478,11159
void JPAKE_STEP3B_init(481,11212
int JPAKE_STEP3B_generate(484,11262
int JPAKE_STEP3B_process(491,11389
void JPAKE_STEP3B_release(504,11692
const BIGNUM *JPAKE_get_shared_key(JPAKE_get_shared_key507,11745

crypto/jpake/jpake.h,1130
#define HEADER_JPAKE_H9,224
typedef struct JPAKE_CTX JPAKE_CTX;24,431
    BIGNUM *gr;gr29,554
    BIGNUM *b;b30,591
    } JPAKE_ZKP;31,652
    BIGNUM *gx;gx35,691
    JPAKE_ZKP zkpx;36,770
    } JPAKE_STEP_PART;37,820
    JPAKE_STEP_PART p1;41,865
    JPAKE_STEP_PART p2;42,928
    } JPAKE_STEP1;43,991
typedef JPAKE_STEP_PART JPAKE_STEP2;45,1011
    unsigned char hhk[hhk49,1070
    } JPAKE_STEP3A;50,1112
    unsigned char hk[hk54,1154
    } JPAKE_STEP3B;55,1195
#define JPAKE_F_JPAKE_STEP1_PROCESS	111,3165
#define JPAKE_F_JPAKE_STEP2_PROCESS	112,3208
#define JPAKE_F_JPAKE_STEP3A_PROCESS	113,3251
#define JPAKE_F_JPAKE_STEP3B_PROCESS	114,3295
#define JPAKE_F_VERIFY_ZKP	115,3339
#define JPAKE_R_G_TO_THE_X3_IS_NOT_LEGAL	118,3395
#define JPAKE_R_G_TO_THE_X4_IS_NOT_LEGAL	119,3442
#define JPAKE_R_G_TO_THE_X4_IS_ONE	120,3489
#define JPAKE_R_HASH_OF_HASH_OF_KEY_MISMATCH	121,3531
#define JPAKE_R_HASH_OF_KEY_MISMATCH	122,3582
#define JPAKE_R_VERIFY_B_FAILED	123,3626
#define JPAKE_R_VERIFY_X3_FAILED	124,3666
#define JPAKE_R_VERIFY_X4_FAILED	125,3706
#define JPAKE_R_ZKP_VERIFY_FAILED	126,3746

crypto/jpake/jpake_err.c,225
#define ERR_FUNC(68,2981
#define ERR_REASON(69,3035
static ERR_STRING_DATA JPAKE_str_functs[JPAKE_str_functs71,3096
static ERR_STRING_DATA JPAKE_str_reasons[JPAKE_str_reasons81,3462
void ERR_load_JPAKE_strings(97,4148

crypto/jpake/jpaketest.c,90
int main(7,79
static void showbn(18,227
static int run_jpake(26,399
int main(113,2591

crypto/ecdh/ech_ossl.c,138
static ECDH_METHOD openssl_ecdh_meth 86,3525
const ECDH_METHOD *ECDH_OpenSSL(ECDH_OpenSSL97,3714
static int ecdh_compute_key(108,3950

crypto/ecdh/ech_locl.h,491
#define HEADER_ECH_LOCL_H57,2687
struct ecdh_method 65,2782
	const char *name;name67,2805
	int (*compute_key)compute_key68,2824
	int (*init)init71,3007
	int (*finish)finish72,3036
	int flags;74,3074
	char *app_data;app_data75,3086
#define ECDH_FLAG_FIPS_METHOD	84,3365
typedef struct ecdh_data_st 86,3400
	int (*init)init88,3459
	ENGINE	*engine;engine90,3511
	int	flags;91,3528
	const ECDH_METHOD *meth;meth92,3540
	CRYPTO_EX_DATA ex_data;93,3566
} ECDH_DATA;94,3591

crypto/ecdh/ech_err.c,220
#define ERR_FUNC(68,2977
#define ERR_REASON(69,3030
static ERR_STRING_DATA ECDH_str_functs[ECDH_str_functs71,3090
static ERR_STRING_DATA ECDH_str_reasons[ECDH_str_reasons79,3316
void ERR_load_ECDH_strings(90,3640

crypto/ecdh/ecdh.h,323
#define HEADER_ECDH_H70,3182
#define ECDH_F_ECDH_CHECK	112,4347
#define ECDH_F_ECDH_COMPUTE_KEY	113,4381
#define ECDH_F_ECDH_DATA_NEW_METHOD	114,4421
#define ECDH_R_KDF_FAILED	117,4485
#define ECDH_R_NON_FIPS_METHOD	118,4519
#define ECDH_R_NO_PRIVATE_VALUE	119,4558
#define ECDH_R_POINT_ARITHMETIC_FAILURE	120,4598

crypto/ecdh/ech_key.c,30
int ECDH_compute_key(75,3252

crypto/ecdh/ech_lib.c,627
const char ECDH_version[ECDH_version80,3349
static const ECDH_METHOD *default_ECDH_method default_ECDH_method82,3406
void ECDH_set_default_method(88,3569
const ECDH_METHOD *ECDH_get_default_method(ECDH_get_default_method93,3659
int ECDH_set_method(109,3935
static ECDH_DATA *ECDH_DATA_new_method(ECDH_DATA_new_method138,4388
static void *ecdh_data_new(ecdh_data_new182,5317
static void *ecdh_data_dup(ecdh_data_dup187,5401
void ecdh_data_free(198,5574
ECDH_DATA *ecdh_check(ecdh_check214,5855
int ECDH_get_ex_new_index(243,6524
int ECDH_set_ex_data(250,6765
void *ECDH_get_ex_data(ECDH_get_ex_data259,6949

crypto/ecdh/ecdhtest.c,299
int main(86,3515
#define MS_CALLBACK	96,3682
#define MS_CALLBACK98,3721
static const char rnd_seed[rnd_seed105,3816
static const int KDF1_SHA1_len 108,3916
static void *KDF1_SHA1(KDF1_SHA1109,3953
static int test_ecdh_curve(123,4207
int main(303,8250
static void MS_CALLBACK cb(359,10275

crypto/mem_dbg.c,1859
static int mh_mode=121,6016
static unsigned long order 136,6697
static LHASH_OF(139,6785
typedef struct app_mem_info_st144,6913
	CRYPTO_THREADID threadid;153,7271
	const char *file;file154,7298
	int line;155,7317
	const char *info;info156,7328
	struct app_mem_info_st *next;next157,7347
	int references;158,7407
	} APP_INFO;159,7424
static LHASH_OF(164,7506
typedef struct mem_st171,7753
	void *addr;addr174,7809
	int num;175,7822
	const char *file;file176,7832
	int line;177,7851
	CRYPTO_THREADID threadid;178,7862
	unsigned long order;179,7889
	time_t time;180,7911
	APP_INFO *app_info;app_info181,7925
	} MEM;182,7946
static long options 184,7955
static unsigned int num_disable 194,8224
static CRYPTO_THREADID disabling_threadid;202,8590
static void app_info_free(204,8634
int CRYPTO_mem_ctrl(216,8806
int CRYPTO_is_mem_check_on(286,10986
void CRYPTO_dbg_set_options(305,11340
long CRYPTO_dbg_get_options(310,11403
static int mem_cmp(315,11461
static IMPLEMENT_LHASH_COMP_FN(327,11735
static IMPLEMENT_LHASH_HASH_FN(338,11933
static IMPLEMENT_LHASH_COMP_FN(346,12212
static IMPLEMENT_LHASH_HASH_FN(357,12510
int CRYPTO_push_info_(397,13361
int CRYPTO_pop_info(448,14388
int CRYPTO_remove_all_info(463,14652
static unsigned long break_order_num=480,14900
void CRYPTO_dbg_malloc(481,14940
void CRYPTO_dbg_free(569,16687
void CRYPTO_dbg_realloc(605,17338
typedef struct mem_leak_st657,18379
	BIO *bio;bio659,18409
	int chunks;660,18420
	long bytes;661,18433
	} MEM_LEAK;662,18446
static void print_leak_doall_arg(664,18460
#define BUF_REMAIN 673,18636
static IMPLEMENT_LHASH_DOALL_ARG_FN(754,20331
void CRYPTO_mem_leaks_fp(826,22063
typedef CRYPTO_MEM_LEAK_CB *PCRYPTO_MEM_LEAK_CB;PCRYPTO_MEM_LEAK_CB858,23032
static void cb_leak_doall_arg(860,23082
static IMPLEMENT_LHASH_DOALL_ARG_FN(865,23207

crypto/x509/by_dir.c,932
typedef struct lookup_dir_hashes_st76,3445
	unsigned long hash;78,3484
	int suffix;79,3505
	} BY_DIR_HASH;80,3518
typedef struct lookup_dir_entry_st82,3535
	char *dir;dir84,3573
	int dir_type;85,3585
	STACK_OF(86,3600
	} BY_DIR_ENTRY;87,3632
typedef struct lookup_dir_st89,3650
	BUF_MEM *buffer;buffer91,3682
	STACK_OF(92,3700
	} BY_DIR;93,3731
DECLARE_STACK_OF(95,3743
X509_LOOKUP_METHOD *X509_LOOKUP_hash_dir(X509_LOOKUP_hash_dir119,4465
static int dir_ctrl(124,4546
static int new_dir(156,5168
static void by_dir_hash_free(172,5431
static int by_dir_hash_cmp(177,5507
static void by_dir_entry_free(187,5700
static void free_dir(196,5893
static int add_cert_dir(208,6128
static int get_cert_by_subject(273,7500
			X509 st_x509;279,7636
			X509_CINF st_x509_cinf;280,7653
			} x509;281,7680
			X509_CRL st_crl;283,7702
			X509_CRL_INFO st_crl_info;284,7722
			} crl;285,7752
#define stat 396,10059

crypto/x509/x509type.c,35
int X509_certificate_type(65,3321

crypto/x509/x509_r2x.c,49
X509 *X509_REQ_to_X509(X509_REQ_to_X50968,3399

crypto/x509/x509name.c,984
int X509_NAME_get_text_by_NID(67,3374
int X509_NAME_get_text_by_OBJ(76,3584
int X509_NAME_entry_count(92,3983
int X509_NAME_get_index_by_NID(98,4111
int X509_NAME_get_index_by_OBJ(108,4372
X509_NAME_ENTRY *X509_NAME_get_entry(X509_NAME_get_entry129,4802
X509_NAME_ENTRY *X509_NAME_delete_entry(X509_NAME_delete_entry138,5030
int X509_NAME_add_entry_by_OBJ(174,5967
int X509_NAME_add_entry_by_NID(186,6305
int X509_NAME_add_entry_by_txt(198,6634
int X509_NAME_add_entry(212,7095
X509_NAME_ENTRY *X509_NAME_ENTRY_create_by_txt(X509_NAME_ENTRY_create_by_txt275,8203
X509_NAME_ENTRY *X509_NAME_ENTRY_create_by_NID(X509_NAME_ENTRY_create_by_NID294,8690
X509_NAME_ENTRY *X509_NAME_ENTRY_create_by_OBJ(X509_NAME_ENTRY_create_by_OBJ311,9105
int X509_NAME_ENTRY_set_object(337,9662
int X509_NAME_ENTRY_set_data(349,9962
ASN1_OBJECT *X509_NAME_ENTRY_get_object(X509_NAME_ENTRY_get_object372,10567
ASN1_STRING *X509_NAME_ENTRY_get_data(X509_NAME_ENTRY_get_data378,10687

crypto/x509/x509_err.c,222
#define ERR_FUNC(68,2978
#define ERR_REASON(69,3031
static ERR_STRING_DATA X509_str_functs[X509_str_functs71,3091
static ERR_STRING_DATA X509_str_reasons[X509_str_reasons121,6077
void ERR_load_X509_strings(154,7891

crypto/x509/x509_att.c,952
int X509at_get_attr_count(68,3402
int X509at_get_attr_by_NID(73,3502
int X509at_get_attr_by_OBJ(83,3717
X509_ATTRIBUTE *X509at_get_attr(X509at_get_attr103,4105
X509_ATTRIBUTE *X509at_delete_attr(X509at_delete_attr111,4310
STACK_OF(121,4541
STACK_OF(156,5262
STACK_OF(169,5642
STACK_OF(182,6007
void *X509at_get0_data_by_OBJ(X509at_get0_data_by_OBJ195,6390
X509_ATTRIBUTE *X509_ATTRIBUTE_create_by_NID(X509_ATTRIBUTE_create_by_NID211,6837
X509_ATTRIBUTE *X509_ATTRIBUTE_create_by_OBJ(X509_ATTRIBUTE_create_by_OBJ228,7256
X509_ATTRIBUTE *X509_ATTRIBUTE_create_by_txt(X509_ATTRIBUTE_create_by_txt257,7904
int X509_ATTRIBUTE_set1_object(276,8392
int X509_ATTRIBUTE_set1_data(285,8598
int X509_ATTRIBUTE_count(327,9786
ASN1_OBJECT *X509_ATTRIBUTE_get0_object(X509_ATTRIBUTE_get0_object334,9944
void *X509_ATTRIBUTE_get0_data(X509_ATTRIBUTE_get0_data340,10067
ASN1_TYPE *X509_ATTRIBUTE_get0_type(X509_ATTRIBUTE_get0_type353,10394

crypto/x509/x509.h,13077
#define HEADER_X509_H65,3474
#undef X509_NAME117,4385
#undef X509_CERT_PAIR118,4402
#undef X509_EXTENSIONS119,4424
#define X509_FILETYPE_PEM	122,4455
#define X509_FILETYPE_ASN1	123,4483
#define X509_FILETYPE_DEFAULT	124,4512
#define X509v3_KU_DIGITAL_SIGNATURE	126,4545
#define X509v3_KU_NON_REPUDIATION	127,4588
#define X509v3_KU_KEY_ENCIPHERMENT	128,4629
#define X509v3_KU_DATA_ENCIPHERMENT	129,4671
#define X509v3_KU_KEY_AGREEMENT	130,4714
#define X509v3_KU_KEY_CERT_SIGN	131,4754
#define X509v3_KU_CRL_SIGN	132,4794
#define X509v3_KU_ENCIPHER_ONLY	133,4829
#define X509v3_KU_DECIPHER_ONLY	134,4869
#define X509v3_KU_UNDEF	135,4909
typedef struct X509_objects_st137,4943
	int nid;139,4977
	int (*a2i)a2i140,4987
	int (*i2a)i2a141,5006
	} X509_OBJECTS;142,5025
struct X509_algor_st144,5043
	ASN1_OBJECT *algorithm;algorithm146,5067
	ASN1_TYPE *parameter;parameter147,5092
DECLARE_ASN1_SET_OF(150,5137
typedef STACK_OF(X509_ALGOR)152,5170
typedef struct X509_val_st154,5213
	ASN1_TIME *notBefore;notBefore156,5243
	ASN1_TIME *notAfter;notAfter157,5266
	} X509_VAL;158,5288
struct X509_pubkey_st160,5302
	X509_ALGOR *algor;algor162,5327
	ASN1_BIT_STRING *public_key;public_key163,5347
	EVP_PKEY *pkey;pkey164,5377
typedef struct X509_sig_st167,5399
	X509_ALGOR *algor;algor169,5429
	ASN1_OCTET_STRING *digest;digest170,5449
	} X509_SIG;171,5477
typedef struct X509_name_entry_st173,5491
	ASN1_OBJECT *object;object175,5528
	ASN1_STRING *value;value176,5550
	int set;177,5571
	int size;178,5581
	} X509_NAME_ENTRY;179,5613
DECLARE_STACK_OF(181,5634
struct X509_name_st185,5750
	STACK_OF(187,5773
#define X509_EX_V_NETSCAPE_HACK	201,6090
#define X509_EX_V_INIT	202,6130
typedef struct X509_extension_st203,6162
	ASN1_OBJECT *object;object205,6198
	ASN1_BOOLEAN critical;206,6220
	ASN1_OCTET_STRING *value;value207,6244
	} X509_EXTENSION;208,6271
typedef STACK_OF(X509_EXTENSION)210,6291
DECLARE_STACK_OF(212,6342
typedef struct x509_attributes_st216,6447
	ASN1_OBJECT *object;object218,6484
	int single;219,6506
		char		*ptr;ptr221,6584
/* 0 */		STACK_OF(222,6598
	} X509_ATTRIBUTE;225,6672
DECLARE_STACK_OF(227,6692
typedef struct X509_req_info_st231,6763
	ASN1_ENCODING enc;233,6798
	ASN1_INTEGER *version;version234,6818
	X509_NAME *subject;subject235,6842
	X509_PUBKEY *pubkey;pubkey236,6863
	STACK_OF(238,6923
	} X509_REQ_INFO;239,6974
typedef struct X509_req_st241,6993
	X509_REQ_INFO *req_info;req_info243,7023
	X509_ALGOR *sig_alg;sig_alg244,7049
	ASN1_BIT_STRING *signature;signature245,7071
	int references;246,7100
	} X509_REQ;247,7117
typedef struct x509_cinf_st249,7131
	ASN1_INTEGER *version;version251,7162
	ASN1_INTEGER *serialNumber;serialNumber252,7213
	X509_ALGOR *signature;signature253,7242
	X509_NAME *issuer;issuer254,7266
	X509_VAL *validity;validity255,7286
	X509_NAME *subject;subject256,7307
	X509_PUBKEY *key;key257,7328
	ASN1_BIT_STRING *issuerUID;issuerUID258,7347
	ASN1_BIT_STRING *subjectUID;subjectUID259,7404
	STACK_OF(260,7462
	} X509_CINF;262,7548
typedef struct x509_cert_aux_st270,7761
	STACK_OF(272,7796
	} X509_CERT_AUX;277,8065
struct x509_st279,8084
	X509_CINF *cert_info;cert_info281,8102
	X509_ALGOR *sig_alg;sig_alg282,8125
	ASN1_BIT_STRING *signature;signature283,8147
	int valid;284,8176
	int references;285,8188
	char *name;name286,8205
	CRYPTO_EX_DATA ex_data;287,8218
	long ex_pathlen;289,8299
	long ex_pcpathlen;290,8317
	unsigned long ex_flags;291,8337
	unsigned long ex_kusage;292,8362
	unsigned long ex_xkusage;293,8388
	unsigned long ex_nscert;294,8415
	ASN1_OCTET_STRING *skid;skid295,8441
	AUTHORITY_KEYID *akid;akid296,8467
	X509_POLICY_CACHE *policy_cache;policy_cache297,8491
	STACK_OF(298,8525
typedef struct x509_trust_st 316,8950
	int trust;317,8981
	int flags;318,8993
	int (*check_trust)check_trust319,9005
	char *name;name320,9063
	int arg1;321,9076
	void *arg2;arg2322,9087
} X509_TRUST;323,9100
DECLARE_STACK_OF(325,9115
typedef struct x509_cert_pair_st 327,9145
	X509 *forward;forward328,9180
	X509 *reverse;reverse329,9196
} X509_CERT_PAIR;330,9212
#define X509_TRUST_DEFAULT	334,9257
#define X509_TRUST_COMPAT	336,9325
#define X509_TRUST_SSL_CLIENT	337,9353
#define X509_TRUST_SSL_SERVER	338,9385
#define X509_TRUST_EMAIL	339,9417
#define X509_TRUST_OBJECT_SIGN	340,9444
#define X509_TRUST_OCSP_SIGN	341,9477
#define X509_TRUST_OCSP_REQUEST	342,9508
#define X509_TRUST_TSA	343,9542
#define X509_TRUST_MIN	346,9598
#define X509_TRUST_MAX	347,9624
#define	X509_TRUST_DYNAMIC 351,9677
#define	X509_TRUST_DYNAMIC_NAME	352,9707
#define X509_TRUST_TRUSTED	356,9774
#define X509_TRUST_REJECTED	357,9803
#define X509_TRUST_UNTRUSTED	358,9833
#define	X509_FLAG_COMPAT	362,9898
#define	X509_FLAG_NO_HEADER	363,9926
#define	X509_FLAG_NO_VERSION	364,9958
#define	X509_FLAG_NO_SERIAL	365,9998
#define	X509_FLAG_NO_SIGNAME	366,10037
#define	X509_FLAG_NO_ISSUER	367,10077
#define	X509_FLAG_NO_VALIDITY	368,10116
#define	X509_FLAG_NO_SUBJECT	369,10157
#define	X509_FLAG_NO_PUBKEY	370,10197
#define	X509_FLAG_NO_EXTENSIONS	371,10236
#define	X509_FLAG_NO_SIGDUMP	372,10279
#define	X509_FLAG_NO_AUX	373,10319
#define	X509_FLAG_NO_ATTRIBUTES	374,10356
#define XN_FLAG_SEP_MASK	380,10487
#define XN_FLAG_COMPAT	382,10525
#define XN_FLAG_SEP_COMMA_PLUS	383,10602
#define XN_FLAG_SEP_CPLUS_SPC	384,10660
#define XN_FLAG_SEP_SPLUS_SPC	385,10731
#define XN_FLAG_SEP_MULTILINE	386,10787
#define XN_FLAG_DN_REV	388,10853
#define XN_FLAG_FN_MASK	392,10946
#define XN_FLAG_FN_SN	394,10984
#define XN_FLAG_FN_LN	395,11034
#define XN_FLAG_FN_OID	396,11090
#define XN_FLAG_FN_NONE	397,11146
#define XN_FLAG_SPC_EQ	399,11203
#define XN_FLAG_DUMP_UNKNOWN_FIELDS 405,11353
#define XN_FLAG_FN_ALIGN	407,11400
#define XN_FLAG_RFC2253 411,11514
#define XN_FLAG_ONELINE 419,11699
#define XN_FLAG_MULTILINE 427,11880
struct x509_revoked_st434,12055
	ASN1_INTEGER *serialNumber;serialNumber436,12081
	ASN1_TIME *revocationDate;revocationDate437,12110
	STACK_OF(438,12138
typedef struct X509_crl_info_st449,12399
	ASN1_INTEGER *version;version451,12434
	X509_ALGOR *sig_alg;sig_alg452,12458
	X509_NAME *issuer;issuer453,12480
	ASN1_TIME *lastUpdate;lastUpdate454,12500
	ASN1_TIME *nextUpdate;nextUpdate455,12524
	STACK_OF(456,12548
	} X509_CRL_INFO;459,12651
struct X509_crl_st461,12670
	X509_CRL_INFO *crl;crl464,12716
	X509_ALGOR *sig_alg;sig_alg465,12737
	ASN1_BIT_STRING *signature;signature466,12759
	int references;467,12788
	int flags;468,12805
	AUTHORITY_KEYID *akid;akid470,12853
	ISSUING_DIST_POINT *idp;idp471,12877
	int idp_flags;473,12938
	int idp_reasons;474,12954
	ASN1_INTEGER *crl_number;crl_number476,13025
	ASN1_INTEGER *base_crl_number;base_crl_number477,13052
	unsigned char sha1_hash[sha1_hash479,13107
	STACK_OF(481,13159
typedef struct private_key_st489,13320
	int version;491,13353
	X509_ALGOR *enc_algor;enc_algor493,13396
	ASN1_OCTET_STRING *enc_pkey;enc_pkey494,13420
	EVP_PKEY *dec_pkey;dec_pkey497,13529
	int key_length;500,13586
	char *key_data;key_data501,13603
	int key_free;502,13620
	EVP_CIPHER_INFO cipher;505,13718
	int references;507,13744
	} X509_PKEY;508,13761
typedef struct X509_info_st511,13799
	X509 *x509;x509513,13830
	X509_CRL *crl;crl514,13843
	X509_PKEY *x_pkey;x_pkey515,13859
	EVP_CIPHER_INFO enc_cipher;517,13880
	int enc_len;518,13909
	char *enc_data;enc_data519,13923
	int references;521,13941
	} X509_INFO;522,13958
DECLARE_STACK_OF(524,13973
typedef struct Netscape_spkac_st531,14207
	X509_PUBKEY *pubkey;pubkey533,14243
	ASN1_IA5STRING *challenge;challenge534,14265
	} NETSCAPE_SPKAC;535,14330
typedef struct Netscape_spki_st537,14350
	NETSCAPE_SPKAC *spkac;spkac539,14385
	X509_ALGOR *sig_algor;sig_algor540,14447
	ASN1_BIT_STRING *signature;signature541,14471
	} NETSCAPE_SPKI;542,14500
typedef struct Netscape_certificate_sequence545,14565
	ASN1_OBJECT *type;type547,14613
	STACK_OF(548,14633
	} NETSCAPE_CERT_SEQUENCE;549,14657
typedef struct PBEPARAM_st 560,14837
ASN1_OCTET_STRING *salt;salt561,14866
ASN1_INTEGER *iter;iter562,14891
} PBEPARAM;563,14911
typedef struct PBE2PARAM_st 567,14971
X509_ALGOR *keyfunc;keyfunc568,15001
X509_ALGOR *encryption;encryption569,15022
} PBE2PARAM;570,15046
typedef struct PBKDF2PARAM_st 572,15060
ASN1_TYPE *salt;salt573,15092
ASN1_INTEGER *iter;iter574,15158
ASN1_INTEGER *keylength;keylength575,15178
X509_ALGOR *prf;prf576,15203
} PBKDF2PARAM;577,15220
struct pkcs8_priv_key_info_st582,15278
        int broken;584,15318
#define PKCS8_OK	585,15380
#define PKCS8_NO_OCTET	586,15400
#define PKCS8_EMBEDDED_PARAM	587,15426
#define PKCS8_NS_DB	588,15457
#define PKCS8_NEG_PRIVKEY	589,15480
        ASN1_INTEGER *version;version590,15508
        X509_ALGOR *pkeyalg;pkeyalg591,15539
        ASN1_TYPE *pkey;pkey592,15568
        STACK_OF(593,15642
#define X509_EXT_PACK_UNKNOWN	607,15829
#define X509_EXT_PACK_STRING	608,15861
#define		X509_get_version(610,15893
#define		X509_get_notBefore(612,16034
#define		X509_get_notAfter(613,16103
#define		X509_extract_key(614,16170
#define		X509_REQ_get_version(615,16226
#define		X509_REQ_get_subject_name(616,16300
#define		X509_REQ_extract_key(617,16363
#define		X509_name_cmp(618,16419
#define		X509_get_signature_type(619,16470
#define		X509_CRL_get_version(621,16559
#define 	X509_CRL_get_lastUpdate(622,16628
#define 	X509_CRL_get_nextUpdate(623,16687
#define		X509_CRL_get_issuer(624,16746
#define		X509_CRL_get_REVOKED(625,16797
#define 	X509_get_X509_PUBKEY(641,17429
#define X509_F_ADD_CERT_DIR	1220,41955
#define X509_F_BY_FILE_CTRL	1221,41991
#define X509_F_CHECK_POLICY	1222,42027
#define X509_F_DIR_CTRL	1223,42063
#define X509_F_GET_CERT_BY_SUBJECT	1224,42096
#define X509_F_NETSCAPE_SPKI_B64_DECODE	1225,42138
#define X509_F_NETSCAPE_SPKI_B64_ENCODE	1226,42185
#define X509_F_X509AT_ADD1_ATTR	1227,42232
#define X509_F_X509V3_ADD_EXT	1228,42272
#define X509_F_X509_ATTRIBUTE_CREATE_BY_NID	1229,42310
#define X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ	1230,42360
#define X509_F_X509_ATTRIBUTE_CREATE_BY_TXT	1231,42410
#define X509_F_X509_ATTRIBUTE_GET0_DATA	1232,42460
#define X509_F_X509_ATTRIBUTE_SET1_DATA	1233,42507
#define X509_F_X509_CHECK_PRIVATE_KEY	1234,42554
#define X509_F_X509_CRL_PRINT_FP	1235,42599
#define X509_F_X509_EXTENSION_CREATE_BY_NID	1236,42639
#define X509_F_X509_EXTENSION_CREATE_BY_OBJ	1237,42689
#define X509_F_X509_GET_PUBKEY_PARAMETERS	1238,42739
#define X509_F_X509_LOAD_CERT_CRL_FILE	1239,42787
#define X509_F_X509_LOAD_CERT_FILE	1240,42833
#define X509_F_X509_LOAD_CRL_FILE	1241,42875
#define X509_F_X509_NAME_ADD_ENTRY	1242,42916
#define X509_F_X509_NAME_ENTRY_CREATE_BY_NID	1243,42958
#define X509_F_X509_NAME_ENTRY_CREATE_BY_TXT	1244,43009
#define X509_F_X509_NAME_ENTRY_SET_OBJECT	1245,43060
#define X509_F_X509_NAME_ONELINE	1246,43108
#define X509_F_X509_NAME_PRINT	1247,43148
#define X509_F_X509_PRINT_EX_FP	1248,43187
#define X509_F_X509_PUBKEY_GET	1249,43227
#define X509_F_X509_PUBKEY_SET	1250,43266
#define X509_F_X509_REQ_CHECK_PRIVATE_KEY	1251,43305
#define X509_F_X509_REQ_PRINT_EX	1252,43353
#define X509_F_X509_REQ_PRINT_FP	1253,43393
#define X509_F_X509_REQ_TO_X509	1254,43433
#define X509_F_X509_STORE_ADD_CERT	1255,43473
#define X509_F_X509_STORE_ADD_CRL	1256,43515
#define X509_F_X509_STORE_CTX_GET1_ISSUER	1257,43556
#define X509_F_X509_STORE_CTX_INIT	1258,43604
#define X509_F_X509_STORE_CTX_NEW	1259,43646
#define X509_F_X509_STORE_CTX_PURPOSE_INHERIT	1260,43687
#define X509_F_X509_TO_X509_REQ	1261,43739
#define X509_F_X509_TRUST_ADD	1262,43779
#define X509_F_X509_TRUST_SET	1263,43817
#define X509_F_X509_VERIFY_CERT	1264,43855
#define X509_R_BAD_X509_FILETYPE	1267,43916
#define X509_R_BASE64_DECODE_ERROR	1268,43956
#define X509_R_CANT_CHECK_DH_KEY	1269,43998
#define X509_R_CERT_ALREADY_IN_HASH_TABLE	1270,44038
#define X509_R_ERR_ASN1_LIB	1271,44086
#define X509_R_INVALID_DIRECTORY	1272,44122
#define X509_R_INVALID_FIELD_NAME	1273,44162
#define X509_R_INVALID_TRUST	1274,44203
#define X509_R_KEY_TYPE_MISMATCH	1275,44240
#define X509_R_KEY_VALUES_MISMATCH	1276,44280
#define X509_R_LOADING_CERT_DIR	1277,44322
#define X509_R_LOADING_DEFAULTS	1278,44362
#define X509_R_METHOD_NOT_SUPPORTED	1279,44402
#define X509_R_NO_CERT_SET_FOR_US_TO_VERIFY	1280,44445
#define X509_R_PUBLIC_KEY_DECODE_ERROR	1281,44495
#define X509_R_PUBLIC_KEY_ENCODE_ERROR	1282,44541
#define X509_R_SHOULD_RETRY	1283,44587
#define X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN	1284,44623
#define X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY	1285,44678
#define X509_R_UNKNOWN_KEY_TYPE	1286,44730
#define X509_R_UNKNOWN_NID	1287,44770
#define X509_R_UNKNOWN_PURPOSE_ID	1288,44805
#define X509_R_UNKNOWN_TRUST_ID	1289,44846
#define X509_R_UNSUPPORTED_ALGORITHM	1290,44886
#define X509_R_WRONG_LOOKUP_TYPE	1291,44930
#define X509_R_WRONG_TYPE	1292,44970

crypto/x509/x509_v3.c,764
int X509v3_get_ext_count(68,3401
int X509v3_get_ext_by_NID(74,3530
int X509v3_get_ext_by_OBJ(84,3745
int X509v3_get_ext_by_critical(104,4134
X509_EXTENSION *X509v3_get_ext(X509v3_get_ext125,4563
X509_EXTENSION *X509v3_delete_ext(X509v3_delete_ext133,4769
STACK_OF(143,5001
X509_EXTENSION *X509_EXTENSION_create_by_NID(X509_EXTENSION_create_by_NID183,5803
X509_EXTENSION *X509_EXTENSION_create_by_OBJ(X509_EXTENSION_create_by_OBJ200,6208
int X509_EXTENSION_set_object(231,6873
int X509_EXTENSION_set_critical(240,7066
int X509_EXTENSION_set_data(247,7205
ASN1_OBJECT *X509_EXTENSION_get_object(X509_EXTENSION_get_object257,7417
ASN1_OCTET_STRING *X509_EXTENSION_get_data(X509_EXTENSION_get_data263,7535
int X509_EXTENSION_get_critical(269,7656

crypto/x509/x509rset.c,106
int X509_REQ_set_version(66,3347
int X509_REQ_set_subject_name(72,3490
int X509_REQ_set_pubkey(78,3663

crypto/x509/by_file.c,246
X509_LOOKUP_METHOD x509_file_lookup=73,3504
X509_LOOKUP_METHOD *X509_LOOKUP_file(X509_LOOKUP_file87,3804
static int by_file_ctrl(92,3882
int X509_load_cert_file(130,4668
int X509_load_crl_file(197,5910
int X509_load_cert_crl_file(264,7161

crypto/x509/x509_lu.c,1330
X509_LOOKUP *X509_LOOKUP_new(X509_LOOKUP_new65,3321
void X509_LOOKUP_free(85,3705
int X509_LOOKUP_init(94,3889
int X509_LOOKUP_shutdown(103,4054
int X509_LOOKUP_ctrl(112,4231
int X509_LOOKUP_by_subject(122,4471
int X509_LOOKUP_by_issuer_serial(131,4748
int X509_LOOKUP_by_fingerprint(140,5048
int X509_LOOKUP_by_alias(148,5330
static int x509_object_cmp(157,5584
X509_STORE *X509_STORE_new(X509_STORE_new178,6007
static void cleanup(214,6757
void X509_STORE_free(232,6987
X509_LOOKUP *X509_STORE_add_lookup(X509_STORE_add_lookup257,7499
int X509_STORE_get_by_subject(289,8018
int X509_STORE_add_cert(334,8929
int X509_STORE_add_crl(367,9613
void X509_OBJECT_up_ref_count(400,10295
void X509_OBJECT_free_contents(413,10554
static int x509_object_idx_cnt(426,10748
int X509_OBJECT_idx_by_subject(473,11604
X509_OBJECT *X509_OBJECT_retrieve_by_subject(X509_OBJECT_retrieve_by_subject479,11751
STACK_OF(488,11987
STACK_OF(537,13175
X509_OBJECT *X509_OBJECT_retrieve_match(X509_OBJECT_retrieve_match583,14351
int X509_STORE_CTX_get1_issuer(624,15450
int X509_STORE_set_flags(683,16991
int X509_STORE_set_depth(688,17117
int X509_STORE_set_purpose(694,17237
int X509_STORE_set_trust(699,17361
int X509_STORE_set1_param(704,17477
void X509_STORE_set_verify_cb(709,17604
IMPLEMENT_STACK_OF(715,17734

crypto/x509/x509_cmp.c,1041
int X509_issuer_and_serial_cmp(67,3369
unsigned long X509_issuer_and_serial_hash(80,3649
int X509_issuer_name_cmp(109,4409
int X509_subject_name_cmp(114,4538
int X509_CRL_cmp(119,4670
int X509_CRL_match(125,4810
X509_NAME *X509_get_issuer_name(X509_get_issuer_name131,4929
unsigned long X509_issuer_name_hash(136,5008
unsigned long X509_issuer_name_hash_old(142,5130
X509_NAME *X509_get_subject_name(X509_get_subject_name148,5244
ASN1_INTEGER *X509_get_serialNumber(X509_get_serialNumber153,5325
unsigned long X509_subject_name_hash(158,5414
unsigned long X509_subject_name_hash_old(164,5538
int X509_cmp(180,6114
int X509_NAME_cmp(191,6340
unsigned long X509_NAME_hash(220,6842
unsigned long X509_NAME_hash_old(242,7425
X509 *X509_find_by_issuer_and_serial(X509_find_by_issuer_and_serial265,8105
X509 *X509_find_by_subject(X509_find_by_subject287,8498
EVP_PKEY *X509_get_pubkey(X509_get_pubkey301,8754
ASN1_BIT_STRING *X509_get0_pubkey_bitstr(X509_get0_pubkey_bitstr308,8901
int X509_check_private_key(314,9024

crypto/x509/x509spki.c,199
int NETSCAPE_SPKI_set_pubkey(63,2803
EVP_PKEY *NETSCAPE_SPKI_get_pubkey(NETSCAPE_SPKI_get_pubkey69,2974
NETSCAPE_SPKI * NETSCAPE_SPKI_b64_decode(78,3189
char * NETSCAPE_SPKI_b64_encode(104,3880

crypto/x509/x509_vfy.c,3417
#define CRL_SCORE_NOCRITICAL	77,3560
#define CRL_SCORE_SCOPE	81,3635
#define CRL_SCORE_TIME	85,3690
#define CRL_SCORE_ISSUER_NAME	89,3760
#define CRL_SCORE_VALID 93,3849
#define CRL_SCORE_ISSUER_CERT	97,3968
#define CRL_SCORE_SAME_PATH	101,4046
#define CRL_SCORE_AKID	105,4116
#define CRL_SCORE_TIME_DELTA	109,4188
const char X509_version[X509_version138,5468
static int null_callback(141,5527
static int x509_subject_cmp(147,5604
int X509_verify_cert(153,5704
static X509 *find_issuer(find_issuer397,11579
static int check_issued(412,11893
static int get_issuer_sk(431,12366
static int check_chain_extensions(448,12691
static int check_name_constraints(606,16458
static int check_trust(642,17394
static int check_revocation(668,18000
static int check_cert(691,18462
static int check_crl_time(759,19763
static int get_crl_sk(818,20915
static int crl_extension_match(870,22171
static int check_delta_base(912,22912
static void get_delta_sk(942,23844
static int get_crl_score(973,24812
static void crl_akid_check(1042,26514
static int check_crl_path(1107,28240
static int check_crl_chain(1146,29294
static int idp_check_dp(1166,29911
static int crldp_check_crlissuer(1232,31259
static int crl_crldp_check(1252,31805
static int get_crl_delta(1291,32664
static int check_crl(1337,33640
static int cert_crl(1444,36007
static int check_policy(1478,36924
static int check_cert_time(1528,37979
static int internal_verify(1575,38836
int X509_cmp_current_time(1665,40473
int X509_cmp_time(1670,40560
ASN1_TIME *X509_gmtime_adj(X509_gmtime_adj1749,41980
ASN1_TIME *X509_time_adj(X509_time_adj1754,42073
ASN1_TIME *X509_time_adj_ex(X509_time_adj_ex1759,42202
int X509_get_pubkey_parameters(1778,42672
int X509_STORE_CTX_get_ex_new_index(1820,43593
int X509_STORE_CTX_set_ex_data(1829,43965
void *X509_STORE_CTX_get_ex_data(X509_STORE_CTX_get_ex_data1834,44097
int X509_STORE_CTX_get_error(1839,44214
void X509_STORE_CTX_set_error(1844,44291
int X509_STORE_CTX_get_error_depth(1849,44375
X509 *X509_STORE_CTX_get_current_cert(X509_STORE_CTX_get_current_cert1854,44464
STACK_OF(1859,44557
STACK_OF(1864,44646
X509 *X509_STORE_CTX_get0_current_issuer(X509_STORE_CTX_get0_current_issuer1878,44974
X509_CRL *X509_STORE_CTX_get0_current_crl(X509_STORE_CTX_get0_current_crl1883,45072
X509_STORE_CTX *X509_STORE_CTX_get0_parent_ctx(X509_STORE_CTX_get0_parent_ctx1888,45168
void X509_STORE_CTX_set_cert(1893,45264
void X509_STORE_CTX_set_chain(1898,45344
void X509_STORE_CTX_set0_crls(1903,45442
int X509_STORE_CTX_set_purpose(1908,45539
int X509_STORE_CTX_set_trust(1913,45671
int X509_STORE_CTX_purpose_inherit(1928,46343
X509_STORE_CTX *X509_STORE_CTX_new(X509_STORE_CTX_new1976,47499
void X509_STORE_CTX_free(1989,47779
int X509_STORE_CTX_init(1995,47880
void X509_STORE_CTX_trusted_stack(2126,50887
void X509_STORE_CTX_cleanup(2132,51023
void X509_STORE_CTX_set_depth(2155,51540
void X509_STORE_CTX_set_flags(2160,51658
void X509_STORE_CTX_set_time(2165,51786
void X509_STORE_CTX_set_verify_cb(2170,51918
X509_POLICY_TREE *X509_STORE_CTX_get0_policy_tree(X509_STORE_CTX_get0_policy_tree2176,52054
int X509_STORE_CTX_get_explicit_policy(2181,52151
int X509_STORE_CTX_set_default(2186,52248
X509_VERIFY_PARAM *X509_STORE_CTX_get0_param(X509_STORE_CTX_get0_param2195,52478
void X509_STORE_CTX_set0_param(2200,52571
IMPLEMENT_STACK_OF(2207,52732

crypto/x509/x509_def.c,466
const char *X509_get_default_private_dir(X509_get_default_private_dir64,3295
const char *X509_get_default_cert_area(X509_get_default_cert_area67,3375
const char *X509_get_default_cert_dir(X509_get_default_cert_dir70,3450
const char *X509_get_default_cert_file(X509_get_default_cert_file73,3523
const char *X509_get_default_cert_dir_env(X509_get_default_cert_dir_env76,3598
const char *X509_get_default_cert_file_env(X509_get_default_cert_file_env79,3679

crypto/x509/x509_txt.c,81
const char *X509_verify_cert_error_string(X509_verify_cert_error_string71,3440

crypto/x509/x509_vfy.h,6227
#define HEADER_X509_VFY_H66,3374
typedef struct x509_hash_dir_st82,3643
	int num_dirs;84,3678
	char **dirs;dirs85,3693
	int *dirs_type;dirs_type86,3707
	int num_dirs_alloced;87,3724
	} X509_HASH_DIR_CTX;88,3747
typedef struct x509_file_st91,3777
	int num_paths;93,3808
	int num_alloced;94,3870
	char **paths;paths95,3888
	int *path_type;path_type96,3942
	} X509_CERT_FILE_CTX;97,3959
#define X509_LU_RETRY	117,4433
#define X509_LU_FAIL	118,4459
#define X509_LU_X509	119,4483
#define X509_LU_CRL	120,4507
#define X509_LU_PKEY	121,4530
typedef struct x509_object_st123,4555
	int type;126,4618
		char *ptr;ptr128,4638
		X509 *x509;x509129,4651
		X509_CRL *crl;crl130,4665
		EVP_PKEY *pkey;pkey131,4682
		} data;132,4700
	} X509_OBJECT;133,4710
typedef struct x509_lookup_st X509_LOOKUP;135,4727
DECLARE_STACK_OF(137,4771
typedef struct x509_lookup_method_st141,4891
	const char *name;name143,4931
	int (*new_item)new_item144,4950
	void (*free)free145,4986
	int (*init)init146,5019
	int (*shutdown)shutdown147,5051
	int (*ctrl)ctrl148,5087
	int (*get_by_subject)get_by_subject150,5169
	int (*get_by_issuer_serial)get_by_issuer_serial152,5263
	int (*get_by_fingerprint)get_by_fingerprint154,5383
	int (*get_by_alias)get_by_alias157,5498
	} X509_LOOKUP_METHOD;159,5590
typedef struct X509_VERIFY_PARAM_st166,5802
	char *name;name168,5841
	time_t check_time;169,5854
	unsigned long inh_flags;170,5892
	unsigned long flags;171,5942
	int purpose;172,5991
	int trust;173,6052
	int depth;174,6094
	STACK_OF(175,6126
	} X509_VERIFY_PARAM;176,6187
DECLARE_STACK_OF(178,6210
struct x509_store_st183,6442
	int cache;186,6515
	STACK_OF(187,6558
#define X509_STORE_set_verify_cb_func(213,7744
#define X509_STORE_set_verify_func(214,7818
struct x509_lookup_st217,7956
	int init;219,7981
	int skip;220,8021
	X509_LOOKUP_METHOD *method;method221,8054
	char *method_data;method_data222,8103
	X509_STORE *store_ctx;store_ctx224,8143
struct x509_store_ctx_st 230,8389
	X509_STORE *ctx;ctx232,8443
	int current_method;233,8461
	X509 *cert;cert236,8559
	STACK_OF(237,8597
#define X509_STORE_CTX_set_app_data(282,10564
#define X509_STORE_CTX_get_app_data(284,10652
#define X509_L_FILE_LOAD	287,10731
#define X509_L_ADD_DIR	288,10758
#define X509_LOOKUP_load_file(290,10785
#define X509_LOOKUP_add_dir(293,10897
#define		X509_V_OK	296,11005
#define		X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT	299,11101
#define		X509_V_ERR_UNABLE_TO_GET_CRL	300,11150
#define		X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE	301,11192
#define		X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE	302,11247
#define		X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY	303,11301
#define		X509_V_ERR_CERT_SIGNATURE_FAILURE	304,11358
#define		X509_V_ERR_CRL_SIGNATURE_FAILURE	305,11404
#define		X509_V_ERR_CERT_NOT_YET_VALID	306,11449
#define		X509_V_ERR_CERT_HAS_EXPIRED	307,11492
#define		X509_V_ERR_CRL_NOT_YET_VALID	308,11534
#define		X509_V_ERR_CRL_HAS_EXPIRED	309,11577
#define		X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD	310,11618
#define		X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD	311,11672
#define		X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD	312,11725
#define		X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD	313,11779
#define		X509_V_ERR_OUT_OF_MEM	314,11833
#define		X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT	315,11870
#define		X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN	316,11922
#define		X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY	317,11972
#define		X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE	318,12029
#define		X509_V_ERR_CERT_CHAIN_TOO_LONG	319,12084
#define		X509_V_ERR_CERT_REVOKED	320,12129
#define		X509_V_ERR_INVALID_CA	321,12168
#define		X509_V_ERR_PATH_LENGTH_EXCEEDED	322,12205
#define		X509_V_ERR_INVALID_PURPOSE	323,12251
#define		X509_V_ERR_CERT_UNTRUSTED	324,12292
#define		X509_V_ERR_CERT_REJECTED	325,12332
#define		X509_V_ERR_SUBJECT_ISSUER_MISMATCH	327,12432
#define		X509_V_ERR_AKID_SKID_MISMATCH	328,12480
#define		X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH	329,12524
#define		X509_V_ERR_KEYUSAGE_NO_CERTSIGN	330,12576
#define		X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER	332,12623
#define		X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION	333,12672
#define		X509_V_ERR_KEYUSAGE_NO_CRL_SIGN	334,12725
#define		X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION	335,12771
#define		X509_V_ERR_INVALID_NON_CA	336,12827
#define		X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED	337,12867
#define		X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE	338,12918
#define		X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED	339,12971
#define		X509_V_ERR_INVALID_EXTENSION	341,13026
#define		X509_V_ERR_INVALID_POLICY_EXTENSION	342,13069
#define		X509_V_ERR_NO_EXPLICIT_POLICY	343,13118
#define		X509_V_ERR_DIFFERENT_CRL_SCOPE	344,13162
#define		X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE	345,13207
#define		X509_V_ERR_UNNESTED_RESOURCE	347,13261
#define		X509_V_ERR_PERMITTED_VIOLATION	349,13305
#define		X509_V_ERR_EXCLUDED_VIOLATION	350,13350
#define		X509_V_ERR_SUBTREE_MINMAX	351,13394
#define		X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE	352,13434
#define		X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX	353,13486
#define		X509_V_ERR_UNSUPPORTED_NAME_SYNTAX	354,13539
#define		X509_V_ERR_CRL_PATH_VALIDATION_ERROR	355,13587
#define		X509_V_ERR_APPLICATION_VERIFICATION	358,13673
#define	X509_V_FLAG_CB_ISSUER_CHECK	363,13801
#define	X509_V_FLAG_USE_CHECK_TIME	365,13887
#define	X509_V_FLAG_CRL_CHECK	367,13945
#define	X509_V_FLAG_CRL_CHECK_ALL	369,14015
#define	X509_V_FLAG_IGNORE_CRITICAL	371,14097
#define	X509_V_FLAG_X509_STRICT	373,14189
#define	X509_V_FLAG_ALLOW_PROXY_CERTS	375,14270
#define X509_V_FLAG_POLICY_CHECK	377,14343
#define X509_V_FLAG_EXPLICIT_POLICY	379,14428
#define	X509_V_FLAG_INHIBIT_ANY	381,14512
#define X509_V_FLAG_INHIBIT_MAP	383,14597
#define X509_V_FLAG_NOTIFY_POLICY	385,14677
#define X509_V_FLAG_EXTENDED_CRL_SUPPORT	387,14796
#define X509_V_FLAG_USE_DELTAS	389,14868
#define X509_V_FLAG_CHECK_SS_SIGNATURE	391,14944
#define X509_VP_FLAG_DEFAULT	394,14993
#define X509_VP_FLAG_OVERWRITE	395,15028
#define X509_VP_FLAG_RESET_FLAGS	396,15065
#define X509_VP_FLAG_LOCKED	397,15103
#define X509_VP_FLAG_ONCE	398,15137
#define X509_V_FLAG_POLICY_MASK 401,15222

crypto/x509/x509_set.c,230
int X509_set_version(66,3347
int X509_set_serialNumber(77,3601
int X509_set_issuer_name(95,3939
int X509_set_subject_name(101,4104
int X509_set_notBefore(107,4271
int X509_set_notAfter(125,4647
int X509_set_pubkey(143,5019

crypto/x509/x509cset.c,265
int X509_CRL_set_version(66,2895
int X509_CRL_set_issuer_name(77,3139
int X509_CRL_set_lastUpdate(84,3301
int X509_CRL_set_nextUpdate(102,3603
int X509_CRL_sort(120,3905
int X509_REVOKED_set_revocationDate(136,4244
int X509_REVOKED_set_serialNumber(154,4549

crypto/x509/x_all.c,3197
int X509_verify(73,3480
int X509_REQ_verify(79,3621
int NETSCAPE_SPKI_verify(85,3774
int X509_sign(91,3936
int X509_sign_ctx(98,4160
int X509_REQ_sign(105,4340
int X509_REQ_sign_ctx(111,4522
int X509_CRL_sign(117,4692
int X509_CRL_sign_ctx(124,4907
int NETSCAPE_SPKI_sign(130,5083
X509 *d2i_X509_fp(d2i_X509_fp137,5301
int i2d_X509_fp(142,5407
X509 *d2i_X509_bio(d2i_X509_bio148,5517
int i2d_X509_bio(153,5624
X509_CRL *d2i_X509_CRL_fp(d2i_X509_CRL_fp159,5754
int i2d_X509_CRL_fp(164,5874
X509_CRL *d2i_X509_CRL_bio(d2i_X509_CRL_bio170,5994
int i2d_X509_CRL_bio(175,6115
PKCS7 *d2i_PKCS7_fp(d2i_PKCS7_fp181,6255
int i2d_PKCS7_fp(186,6361
PKCS7 *d2i_PKCS7_bio(d2i_PKCS7_bio192,6470
int i2d_PKCS7_bio(197,6577
X509_REQ *d2i_X509_REQ_fp(d2i_X509_REQ_fp203,6706
int i2d_X509_REQ_fp(208,6826
X509_REQ *d2i_X509_REQ_bio(d2i_X509_REQ_bio214,6946
int i2d_X509_REQ_bio(219,7067
RSA *d2i_RSAPrivateKey_fp(d2i_RSAPrivateKey_fp227,7231
int i2d_RSAPrivateKey_fp(232,7351
RSA *d2i_RSAPublicKey_fp(d2i_RSAPublicKey_fp237,7469
RSA *d2i_RSA_PUBKEY_fp(d2i_RSA_PUBKEY_fp243,7588
int i2d_RSAPublicKey_fp(250,7746
int i2d_RSA_PUBKEY_fp(255,7862
RSA *d2i_RSAPrivateKey_bio(d2i_RSAPrivateKey_bio261,7976
int i2d_RSAPrivateKey_bio(266,8097
RSA *d2i_RSAPublicKey_bio(d2i_RSAPublicKey_bio271,8216
RSA *d2i_RSA_PUBKEY_bio(d2i_RSA_PUBKEY_bio277,8336
int i2d_RSAPublicKey_bio(282,8447
int i2d_RSA_PUBKEY_bio(287,8564
DSA *d2i_DSAPrivateKey_fp(d2i_DSAPrivateKey_fp295,8721
int i2d_DSAPrivateKey_fp(300,8837
DSA *d2i_DSA_PUBKEY_fp(d2i_DSA_PUBKEY_fp305,8949
int i2d_DSA_PUBKEY_fp(310,9059
DSA *d2i_DSAPrivateKey_bio(d2i_DSAPrivateKey_bio316,9166
int i2d_DSAPrivateKey_bio(322,9284
DSA *d2i_DSA_PUBKEY_bio(d2i_DSA_PUBKEY_bio327,9397
int i2d_DSA_PUBKEY_bio(332,9508
EC_KEY *d2i_EC_PUBKEY_fp(d2i_EC_PUBKEY_fp341,9665
int i2d_EC_PUBKEY_fp(346,9791
EC_KEY *d2i_ECPrivateKey_fp(d2i_ECPrivateKey_fp351,9899
int i2d_ECPrivateKey_fp(356,10031
EC_KEY *d2i_EC_PUBKEY_bio(d2i_EC_PUBKEY_bio361,10151
int i2d_EC_PUBKEY_bio(366,10278
EC_KEY *d2i_ECPrivateKey_bio(d2i_ECPrivateKey_bio371,10387
int i2d_ECPrivateKey_bio(376,10520
int X509_pubkey_digest(383,10643
int X509_digest(392,10901
int X509_CRL_digest(398,11080
int X509_REQ_digest(404,11271
int X509_NAME_digest(410,11462
int PKCS7_ISSUER_AND_SERIAL_digest(416,11656
X509_SIG *d2i_PKCS8_fp(d2i_PKCS8_fp425,11916
int i2d_PKCS8_fp(430,12037
X509_SIG *d2i_PKCS8_bio(d2i_PKCS8_bio436,12145
int i2d_PKCS8_bio(441,12267
PKCS8_PRIV_KEY_INFO *d2i_PKCS8_PRIV_KEY_INFO_fp(d2i_PKCS8_PRIV_KEY_INFO_fp447,12395
int i2d_PKCS8_PRIV_KEY_INFO_fp(454,12608
int i2d_PKCS8PrivateKeyInfo_fp(460,12772
int i2d_PrivateKey_fp(471,13019
EVP_PKEY *d2i_PrivateKey_fp(d2i_PrivateKey_fp476,13131
int i2d_PUBKEY_fp(481,13259
EVP_PKEY *d2i_PUBKEY_fp(d2i_PUBKEY_fp486,13363
PKCS8_PRIV_KEY_INFO *d2i_PKCS8_PRIV_KEY_INFO_bio(d2i_PKCS8_PRIV_KEY_INFO_bio493,13487
int i2d_PKCS8_PRIV_KEY_INFO_bio(500,13699
int i2d_PKCS8PrivateKeyInfo_bio(506,13865
int i2d_PrivateKey_bio(517,14113
EVP_PKEY *d2i_PrivateKey_bio(d2i_PrivateKey_bio522,14226
int i2d_PUBKEY_bio(527,14357
EVP_PKEY *d2i_PUBKEY_bio(d2i_PUBKEY_bio532,14462

crypto/x509/x509_req.c,890
X509_REQ *X509_to_X509_REQ(X509_to_X509_REQ70,3451
EVP_PKEY *X509_REQ_get_pubkey(X509_REQ_get_pubkey110,4207
int X509_REQ_check_private_key(117,4371
static int ext_nid_list[ext_nid_list162,5386
static int *ext_nids ext_nids164,5458
int X509_REQ_extension_nid(166,5496
int *X509_REQ_get_extension_nids(X509_REQ_get_extension_nids176,5669
void X509_REQ_set_extension_nids(181,5732
STACK_OF(186,5799
int X509_REQ_add_extensions_nid(218,6714
int X509_REQ_add_extensions(251,7706
int X509_REQ_get_attr_count(258,7882
int X509_REQ_get_attr_by_NID(263,7994
int X509_REQ_get_attr_by_OBJ(269,8149
X509_ATTRIBUTE *X509_REQ_get_attr(X509_REQ_get_attr275,8313
X509_ATTRIBUTE *X509_REQ_delete_attr(X509_REQ_delete_attr280,8439
int X509_REQ_add1_attr(285,8565
int X509_REQ_add1_attr_by_OBJ(291,8707
int X509_REQ_add1_attr_by_NID(300,8939
int X509_REQ_add1_attr_by_txt(309,9156

crypto/x509/x509_ext.c,1243
int X509_CRL_get_ext_count(69,3403
int X509_CRL_get_ext_by_NID(74,3501
int X509_CRL_get_ext_by_OBJ(79,3635
int X509_CRL_get_ext_by_critical(84,3778
X509_EXTENSION *X509_CRL_get_ext(X509_CRL_get_ext89,3924
X509_EXTENSION *X509_CRL_delete_ext(X509_CRL_delete_ext94,4035
void *X509_CRL_get_ext_d2i(X509_CRL_get_ext_d2i99,4152
int X509_CRL_add1_ext_i2d(104,4287
int X509_CRL_add_ext(110,4462
int X509_get_ext_count(115,4595
int X509_get_ext_by_NID(120,4691
int X509_get_ext_by_OBJ(125,4823
int X509_get_ext_by_critical(130,4964
X509_EXTENSION *X509_get_ext(X509_get_ext135,5108
X509_EXTENSION *X509_delete_ext(X509_delete_ext140,5217
int X509_add_ext(145,5332
void *X509_get_ext_d2i(X509_get_ext_d2i150,5463
int X509_add1_ext_i2d(155,5596
int X509_REVOKED_get_ext_count(162,5776
int X509_REVOKED_get_ext_by_NID(167,5877
int X509_REVOKED_get_ext_by_OBJ(172,6014
int X509_REVOKED_get_ext_by_critical(178,6166
X509_EXTENSION *X509_REVOKED_get_ext(X509_REVOKED_get_ext183,6315
X509_EXTENSION *X509_REVOKED_delete_ext(X509_REVOKED_delete_ext188,6429
int X509_REVOKED_add_ext(193,6549
void *X509_REVOKED_get_ext_d2i(X509_REVOKED_get_ext_d2i198,6685
int X509_REVOKED_add1_ext_i2d(203,6823
IMPLEMENT_STACK_OF(209,7001

crypto/x509/x509_vpm.c,1106
static void x509_verify_param_zero(70,2950
X509_VERIFY_PARAM *X509_VERIFY_PARAM_new(X509_VERIFY_PARAM_new88,3328
void X509_VERIFY_PARAM_free(97,3554
#define test_x509_verify_param_copy(136,5083
#define x509_verify_param_copy(142,5270
int X509_VERIFY_PARAM_inherit(147,5394
int X509_VERIFY_PARAM_set1(199,6513
int X509_VERIFY_PARAM_set1_name(210,6786
int X509_VERIFY_PARAM_set_flags(220,6990
int X509_VERIFY_PARAM_clear_flags(228,7193
unsigned long X509_VERIFY_PARAM_get_flags(234,7317
int X509_VERIFY_PARAM_set_purpose(239,7414
int X509_VERIFY_PARAM_set_trust(244,7546
void X509_VERIFY_PARAM_set_depth(249,7668
void X509_VERIFY_PARAM_set_time(254,7768
int X509_VERIFY_PARAM_add0_policy(260,7912
int X509_VERIFY_PARAM_set1_policies(273,8190
int X509_VERIFY_PARAM_get_depth(309,8894
static const X509_VERIFY_PARAM default_table[default_table320,9221
static STACK_OF(372,10436
static int param_cmp(385,10775
int X509_VERIFY_PARAM_add0_table(391,10918
const X509_VERIFY_PARAM *X509_VERIFY_PARAM_lookup(X509_VERIFY_PARAM_lookup416,11450
void X509_VERIFY_PARAM_table_cleanup(432,11838

crypto/x509/x509_obj.c,51
char *X509_NAME_oneline(X509_NAME_oneline66,3351

crypto/x509/x509_d2.c,81
int X509_STORE_set_default_paths(65,3319
int X509_STORE_load_locations(83,3753

crypto/x509/x509_trs.c,700
static X509_TRUST trstandard[trstandard80,3415
#define X509_TRUST_COUNT	91,4062
IMPLEMENT_STACK_OF(93,4128
int (*X509_TRUST_set_default(X509_TRUST_set_default103,4324
int X509_check_trust(112,4517
int X509_TRUST_get_count(123,4773
X509_TRUST * X509_TRUST_get0(129,4903
int X509_TRUST_get_by_id(136,5092
int X509_TRUST_set(149,5386
int X509_TRUST_add(159,5565
static void trtable_free(210,7043
void X509_TRUST_cleanup(221,7238
int X509_TRUST_get_flags(229,7424
char *X509_TRUST_get0_name(X509_TRUST_get0_name234,7489
int X509_TRUST_get_trust(239,7555
static int trust_1oidany(244,7620
static int trust_1oid(254,7924
static int trust_compat(260,8073
static int obj_trust(267,8263

crypto/dh/dh_key.c,303
int DH_generate_key(74,3622
int DH_compute_key(87,3899
static DH_METHOD dh_ossl 100,4230
const DH_METHOD *DH_OpenSSL(DH_OpenSSL112,4360
static int generate_key(117,4417
static int compute_key(203,5985
static int dh_bn_mod_exp(263,7153
static int dh_init(281,7614
static int dh_finish(287,7696

crypto/dh/dh_gen.c,81
int DH_generate_parameters_ex(75,3558
static int dh_builtin_genparams(120,5191

crypto/dh/dh_asn1.c,58
static int dh_cb(67,2933
} ASN1_SEQUENCE_END_cb(86,3369

crypto/dh/dh.h,2991
#define HEADER_DH_H60,3211
# define OPENSSL_DH_MAX_MODULUS_BITS	77,3496
#define DH_FLAG_CACHE_MONT_P 80,3547
#define DH_FLAG_NO_EXP_CONSTTIME 81,3585
#define DH_FLAG_FIPS_METHOD	95,4343
#define DH_FLAG_NON_FIPS_ALLOW	102,4557
struct dh_method112,4749
	const char *name;name114,4769
	int (*generate_key)generate_key116,4808
	int (*compute_key)compute_key117,4838
	int (*bn_mod_exp)bn_mod_exp118,4908
	int (*init)init122,5064
	int (*finish)finish123,5086
	int flags;124,5110
	char *app_data;app_data125,5122
	int (*generate_params)generate_params127,5206
struct dh_st130,5288
	int pad;134,5403
	int version;135,5413
	BIGNUM *p;p136,5427
	BIGNUM *g;g137,5439
	long length;138,5451
	BIGNUM *pub_key;pub_key139,5480
	BIGNUM *priv_key;priv_key140,5508
	int flags;142,5536
	BN_MONT_CTX *method_mont_p;method_mont_p143,5548
	BIGNUM *q;q145,5624
	BIGNUM *j;j146,5636
	unsigned char *seed;seed147,5648
	int seedlen;148,5670
	BIGNUM *counter;counter149,5684
	int references;151,5703
	CRYPTO_EX_DATA ex_data;152,5720
	const DH_METHOD *meth;meth153,5745
	ENGINE *engine;engine154,5769
#define DH_GENERATOR_2	157,5791
#define DH_GENERATOR_5	159,5848
#define DH_CHECK_P_NOT_PRIME	162,5902
#define DH_CHECK_P_NOT_SAFE_PRIME	163,5937
#define DH_UNABLE_TO_CHECK_GENERATOR	164,5976
#define DH_NOT_SUITABLE_GENERATOR	165,6018
#define DH_CHECK_PUBKEY_TOO_SMALL	168,6093
#define DH_CHECK_PUBKEY_TOO_LARGE	169,6132
#define DH_CHECK_P_NOT_STRONG_PRIME	173,6279
#define d2i_DHparams_fp(175,6342
#define i2d_DHparams_fp(177,6469
#define d2i_DHparams_bio(179,6556
#define i2d_DHparams_bio(180,6632
#define EVP_PKEY_CTX_set_dh_paramgen_prime_len(224,8092
#define EVP_PKEY_CTX_set_dh_paramgen_generator(228,8264
#define	EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN	232,8436
#define	EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR	233,8504
#define DH_F_COMPUTE_KEY	245,8851
#define DH_F_DHPARAMS_PRINT_FP	246,8884
#define DH_F_DH_BUILTIN_GENPARAMS	247,8923
#define DH_F_DH_COMPUTE_KEY	248,8964
#define DH_F_DH_GENERATE_KEY	249,9000
#define DH_F_DH_GENERATE_PARAMETERS_EX	250,9037
#define DH_F_DH_NEW_METHOD	251,9083
#define DH_F_DH_PARAM_DECODE	252,9118
#define DH_F_DH_PRIV_DECODE	253,9155
#define DH_F_DH_PRIV_ENCODE	254,9191
#define DH_F_DH_PUB_DECODE	255,9227
#define DH_F_DH_PUB_ENCODE	256,9262
#define DH_F_DO_DH_PRINT	257,9297
#define DH_F_GENERATE_KEY	258,9330
#define DH_F_GENERATE_PARAMETERS	259,9364
#define DH_F_PKEY_DH_DERIVE	260,9404
#define DH_F_PKEY_DH_KEYGEN	261,9440
#define DH_R_BAD_GENERATOR	264,9497
#define DH_R_BN_DECODE_ERROR	265,9532
#define DH_R_BN_ERROR	266,9569
#define DH_R_DECODE_ERROR	267,9600
#define DH_R_INVALID_PUBKEY	268,9634
#define DH_R_KEYS_NOT_SET	269,9670
#define DH_R_KEY_SIZE_TOO_SMALL	270,9704
#define DH_R_MODULUS_TOO_LARGE	271,9744
#define DH_R_NON_FIPS_METHOD	272,9783
#define DH_R_NO_PARAMETERS_SET	273,9820
#define DH_R_NO_PRIVATE_VALUE	274,9859
#define DH_R_PARAMETER_ENCODING_ERROR	275,9897

crypto/dh/p512.c,47
unsigned char data[data65,3312
main(76,3668

crypto/dh/dh_ameth.c,728
static void int_dh_free(66,2883
static int dh_pub_decode(71,2955
static int dh_pub_encode(129,4060
static int dh_priv_decode(184,5143
static int dh_priv_encode(236,6127
static void update_buflen(289,7134
static int dh_param_decode(298,7295
static int dh_param_encode(311,7553
static int do_dh_print(316,7674
static int int_dh_size(391,9155
static int dh_bits(396,9240
static int dh_cmp_parameters(401,9327
static int dh_copy_parameters(410,9515
static int dh_missing_parameters(429,9874
static int dh_pub_cmp(436,9995
static int dh_param_print(446,10198
static int dh_public_print(452,10353
static int dh_private_print(458,10509
int DHparams_print(464,10666
const EVP_PKEY_ASN1_METHOD dh_asn1_meth 469,10754

crypto/dh/dh_pmeth.c,453
	int prime_len;72,2991
	int generator;73,3007
	int use_dsa;74,3023
	int gentmp[gentmp76,3065
	} DH_PKEY_CTX;78,3103
static int pkey_dh_init(80,3120
static int pkey_dh_copy(97,3422
static void pkey_dh_cleanup(110,3715
static int pkey_dh_ctrl(117,3834
static int pkey_dh_ctrl_str(143,4264
static int pkey_dh_paramgen(161,4658
static int pkey_dh_keygen(186,5104
static int pkey_dh_derive(204,5518
const EVP_PKEY_METHOD dh_pkey_meth 220,5861

crypto/dh/p1024.c,47
unsigned char data[data65,3313
main(83,4011

crypto/dh/dh_check.c,53
int DH_check(73,3491
int DH_check_pub_key(122,4453

crypto/dh/dh_depr.c,93
static void *dummy=dummy64,2827
DH *DH_generate_parameters(DH_generate_parameters67,2885

crypto/dh/dh_lib.c,492
const char DH_version[DH_version71,3400
static const DH_METHOD *default_DH_method default_DH_method73,3465
void DH_set_default_method(75,3516
const DH_METHOD *DH_get_default_method(DH_get_default_method80,3600
int DH_set_method(96,3859
DH *DH_new(DH_new115,4328
DH *DH_new_method(DH_new_method120,4381
void DH_free(187,5689
int DH_up_ref(224,6525
int DH_get_ex_new_index(240,6786
int DH_set_ex_data(247,7037
void *DH_get_ex_data(DH_get_ex_data252,7140
int DH_size(257,7230

crypto/dh/dhtest.c,211
#undef OPENSSL_NO_DEPRECATED62,3355
int main(78,3624
#define MS_CALLBACK	87,3763
#define MS_CALLBACK89,3802
static const char rnd_seed[rnd_seed94,3887
int main(96,3986
static int MS_CALLBACK cb(211,6606

crypto/dh/dh_err.c,211
#define ERR_FUNC(68,2972
#define ERR_REASON(69,3023
static ERR_STRING_DATA DH_str_functs[DH_str_functs71,3081
static ERR_STRING_DATA DH_str_reasons[DH_str_reasons93,4037
void ERR_load_DH_strings(112,4853

crypto/dh/dh_prn.c,31
int DHparams_print_fp(65,3314

crypto/dh/p192.c,47
unsigned char data[data65,3312
main(71,3463

crypto/pem/pem_all.c,473
IMPLEMENT_PEM_rw(140,6421
RSA *PEM_read_bio_RSAPrivateKey(PEM_read_bio_RSAPrivateKey176,7326
RSA *PEM_read_RSAPrivateKey(PEM_read_RSAPrivateKey186,7551
IMPLEMENT_PEM_write_cb_const(196,7750
DSA *PEM_read_bio_DSAPrivateKey(PEM_read_bio_DSAPrivateKey218,8236
IMPLEMENT_PEM_write_cb_const(226,8456
IMPLEMENT_PEM_rw_const(241,8850
EC_KEY *PEM_read_bio_ECPrivateKey(PEM_read_bio_ECPrivateKey262,9211
IMPLEMENT_PEM_rw_const(270,9437
IMPLEMENT_PEM_rw_const(292,9972

crypto/pem/pem_oth.c,51
void *PEM_ASN1_read_bio(PEM_ASN1_read_bio70,3443

crypto/pem/pem_seal.c,119
int PEM_SealInit(70,3477
void PEM_SealUpdate(121,4561
int PEM_SealFinal(145,4991
static void *dummy=dummy186,5889

crypto/pem/pem_lib.c,565
const char PEM_version[PEM_version77,3584
#define MIN_LENGTH	79,3639
int PEM_def_callback(85,3842
void PEM_proc_type(127,4689
void PEM_dek_info(145,5064
void *PEM_ASN1_read(PEM_ASN1_read167,5569
static int check_pem(185,5988
int PEM_bytes_read_bio(273,8026
int PEM_ASN1_write(314,8886
int PEM_ASN1_write_bio(333,9401
int PEM_do_header(436,11943
int PEM_get_EVP_CIPHER_INFO(483,13065
static int load_iv(539,14469
int PEM_write(569,15008
int PEM_write_bio(587,15414
int PEM_read(649,16747
int PEM_read_bio(667,17154
int pem_check_suffix(837,20656

crypto/pem/pem_xaux.c,26
IMPLEMENT_PEM_rw(67,2905

crypto/pem/pem_pkey.c,308
EVP_PKEY *PEM_read_bio_PrivateKey(PEM_read_bio_PrivateKey75,3575
int PEM_write_bio_PrivateKey(140,5237
EVP_PKEY *PEM_read_bio_Parameters(PEM_read_bio_Parameters155,5788
int PEM_write_bio_Parameters(196,6584
EVP_PKEY *PEM_read_PrivateKey(PEM_read_PrivateKey209,6914
int PEM_write_PrivateKey(225,7305

crypto/pem/pem.h,7996
#define HEADER_PEM_H60,3214
#define PEM_BUFSIZE	77,3496
#define PEM_OBJ_UNDEF	79,3523
#define PEM_OBJ_X509	80,3548
#define PEM_OBJ_X509_REQ	81,3572
#define PEM_OBJ_CRL	82,3599
#define PEM_OBJ_SSL_SESSION	83,3622
#define PEM_OBJ_PRIV_KEY	84,3652
#define PEM_OBJ_PRIV_RSA	85,3680
#define PEM_OBJ_PRIV_DSA	86,3708
#define PEM_OBJ_PRIV_DH	87,3736
#define PEM_OBJ_PUB_RSA	88,3764
#define PEM_OBJ_PUB_DSA	89,3792
#define PEM_OBJ_PUB_DH	90,3820
#define PEM_OBJ_DHPARAMS	91,3847
#define PEM_OBJ_DSAPARAMS	92,3875
#define PEM_OBJ_PRIV_RSA_PUBLIC	93,3904
#define PEM_OBJ_PRIV_ECDSA	94,3939
#define PEM_OBJ_PUB_ECDSA	95,3969
#define PEM_OBJ_ECPARAMETERS	96,3998
#define PEM_ERROR	98,4031
#define PEM_DEK_DES_CBC 99,4053
#define PEM_DEK_IDEA_CBC 100,4088
#define PEM_DEK_DES_EDE 101,4123
#define PEM_DEK_DES_ECB 102,4158
#define PEM_DEK_RSA 103,4193
#define PEM_DEK_RSA_MD2 104,4228
#define PEM_DEK_RSA_MD5 105,4263
#define PEM_MD_MD2	107,4299
#define PEM_MD_MD5	108,4327
#define PEM_MD_SHA	109,4355
#define PEM_MD_MD2_RSA	110,4383
#define PEM_MD_MD5_RSA	111,4432
#define PEM_MD_SHA_RSA	112,4481
#define PEM_STRING_X509_OLD	114,4532
#define PEM_STRING_X509	115,4579
#define PEM_STRING_X509_PAIR	116,4618
#define PEM_STRING_X509_TRUSTED	117,4666
#define PEM_STRING_X509_REQ_OLD	118,4720
#define PEM_STRING_X509_REQ	119,4778
#define PEM_STRING_X509_CRL	120,4828
#define PEM_STRING_EVP_PKEY	121,4867
#define PEM_STRING_PUBLIC	122,4913
#define PEM_STRING_RSA	123,4952
#define PEM_STRING_RSA_PUBLIC	124,4994
#define PEM_STRING_DSA	125,5041
#define PEM_STRING_DSA_PUBLIC	126,5083
#define PEM_STRING_PKCS7	127,5130
#define PEM_STRING_PKCS7_SIGNED	128,5163
#define PEM_STRING_PKCS8	129,5217
#define PEM_STRING_PKCS8INF	130,5266
#define PEM_STRING_DHPARAMS	131,5308
#define PEM_STRING_SSL_SESSION	132,5352
#define PEM_STRING_DSAPARAMS	133,5408
#define PEM_STRING_ECDSA_PUBLIC 134,5454
#define PEM_STRING_ECPARAMETERS 135,5505
#define PEM_STRING_ECPRIVATEKEY	136,5553
#define PEM_STRING_PARAMETERS	137,5602
#define PEM_STRING_CMS	138,5645
typedef struct PEM_Encode_Seal_st142,5796
	EVP_ENCODE_CTX encode;144,5833
	EVP_MD_CTX md;145,5857
	EVP_CIPHER_CTX cipher;146,5873
	} PEM_ENCODE_SEAL_CTX;147,5897
#define PEM_TYPE_ENCRYPTED 150,5948
#define PEM_TYPE_MIC_ONLY 151,5983
#define PEM_TYPE_MIC_CLEAR 152,6018
#define PEM_TYPE_CLEAR	153,6053
typedef struct pem_recip_st155,6081
	char *name;name157,6112
	X509_NAME *dn;dn158,6125
	int cipher;160,6142
	int key_enc;161,6155
	} PEM_USER;163,6210
typedef struct pem_ctx_st165,6224
	int type;167,6253
		int version;170,6302
		int mode;171,6318
		} proc_type;172,6332
	char *domain;domain174,6348
		int cipher;177,6374
		} DEK_info;180,6443
	PEM_USER *originator;originator182,6460
	int num_recipient;184,6484
	PEM_USER **recipient;recipient185,6504
	EVP_MD *md;md189,6615
	int md_enc;191,6651
	int md_len;192,6699
	char *md_data;md_data193,6737
	EVP_CIPHER *dec;dec195,6801
	int key_len;196,6848
	unsigned char *key;key197,6880
	int  data_enc;202,6969
	int data_len;203,7014
	unsigned char *data;data204,7029
	} PEM_CTX;205,7051
#define IMPLEMENT_PEM_read_fp(214,7277
#define IMPLEMENT_PEM_write_fp(215,7335
#define IMPLEMENT_PEM_write_fp_const(216,7394
#define IMPLEMENT_PEM_write_cb_fp(217,7459
#define IMPLEMENT_PEM_write_cb_fp_const(218,7521
#define IMPLEMENT_PEM_read_fp(222,7597
#define IMPLEMENT_PEM_write_fp(228,7808
#define IMPLEMENT_PEM_write_fp_const(234,7996
#define IMPLEMENT_PEM_write_cb_fp(240,8204
#define IMPLEMENT_PEM_write_cb_fp_const(248,8493
#define IMPLEMENT_PEM_read_bio(258,8796
#define IMPLEMENT_PEM_write_bio(264,9014
#define IMPLEMENT_PEM_write_bio_const(270,9210
#define IMPLEMENT_PEM_write_cb_bio(276,9426
#define IMPLEMENT_PEM_write_cb_bio_const(283,9717
#define IMPLEMENT_PEM_write(290,10022
#define IMPLEMENT_PEM_write_const(294,10174
#define IMPLEMENT_PEM_write_cb(298,10344
#define IMPLEMENT_PEM_write_cb_const(302,10505
#define IMPLEMENT_PEM_read(306,10684
#define IMPLEMENT_PEM_rw(310,10833
#define IMPLEMENT_PEM_rw_const(314,10973
#define IMPLEMENT_PEM_rw_cb(318,11125
#define DECLARE_PEM_read_fp(326,11366
#define DECLARE_PEM_write_fp(327,11411
#define DECLARE_PEM_write_cb_fp(328,11457
#define DECLARE_PEM_read_fp(332,11514
#define DECLARE_PEM_write_fp(335,11631
#define DECLARE_PEM_write_fp_const(338,11717
#define DECLARE_PEM_write_cb_fp(341,11815
#define DECLARE_PEM_read_bio(348,12027
#define DECLARE_PEM_write_bio(351,12148
#define DECLARE_PEM_write_bio_const(354,12238
#define DECLARE_PEM_write_cb_bio(357,12340
#define DECLARE_PEM_read_bio(363,12532
#define DECLARE_PEM_write_bio(364,12578
#define DECLARE_PEM_write_bio_const(365,12625
#define DECLARE_PEM_write_cb_bio(366,12678
#define DECLARE_PEM_write(370,12737
#define DECLARE_PEM_write_const(374,12850
#define DECLARE_PEM_write_cb(378,12980
#define DECLARE_PEM_read(382,13102
#define DECLARE_PEM_rw(386,13211
#define DECLARE_PEM_rw_const(390,13312
#define DECLARE_PEM_rw_cb(394,13425
typedef int pem_password_cb(400,13579
typedef int pem_password_cb(403,13691
STACK_OF(423,14562
#define PEM_F_B2I_DSS	567,19317
#define PEM_F_B2I_PVK_BIO	568,19348
#define PEM_F_B2I_RSA	569,19382
#define PEM_F_CHECK_BITLEN_DSA	570,19413
#define PEM_F_CHECK_BITLEN_RSA	571,19452
#define PEM_F_D2I_PKCS8PRIVATEKEY_BIO	572,19491
#define PEM_F_D2I_PKCS8PRIVATEKEY_FP	573,19536
#define PEM_F_DO_B2I	574,19580
#define PEM_F_DO_B2I_BIO	575,19610
#define PEM_F_DO_BLOB_HEADER	576,19643
#define PEM_F_DO_PK8PKEY	577,19680
#define PEM_F_DO_PK8PKEY_FP	578,19713
#define PEM_F_DO_PVK_BODY	579,19749
#define PEM_F_DO_PVK_HEADER	580,19783
#define PEM_F_I2B_PVK	581,19819
#define PEM_F_I2B_PVK_BIO	582,19850
#define PEM_F_LOAD_IV	583,19884
#define PEM_F_PEM_ASN1_READ	584,19915
#define PEM_F_PEM_ASN1_READ_BIO	585,19951
#define PEM_F_PEM_ASN1_WRITE	586,19991
#define PEM_F_PEM_ASN1_WRITE_BIO	587,20028
#define PEM_F_PEM_DEF_CALLBACK	588,20068
#define PEM_F_PEM_DO_HEADER	589,20107
#define PEM_F_PEM_F_PEM_WRITE_PKCS8PRIVATEKEY	590,20143
#define PEM_F_PEM_GET_EVP_CIPHER_INFO	591,20195
#define PEM_F_PEM_PK8PKEY	592,20240
#define PEM_F_PEM_READ	593,20274
#define PEM_F_PEM_READ_BIO	594,20306
#define PEM_F_PEM_READ_BIO_PARAMETERS	595,20341
#define PEM_F_PEM_READ_BIO_PRIVATEKEY	596,20386
#define PEM_F_PEM_READ_PRIVATEKEY	597,20431
#define PEM_F_PEM_SEALFINAL	598,20472
#define PEM_F_PEM_SEALINIT	599,20508
#define PEM_F_PEM_SIGNFINAL	600,20543
#define PEM_F_PEM_WRITE	601,20579
#define PEM_F_PEM_WRITE_BIO	602,20612
#define PEM_F_PEM_WRITE_PRIVATEKEY	603,20648
#define PEM_F_PEM_X509_INFO_READ	604,20690
#define PEM_F_PEM_X509_INFO_READ_BIO	605,20730
#define PEM_F_PEM_X509_INFO_WRITE_BIO	606,20774
#define PEM_R_BAD_BASE64_DECODE	609,20840
#define PEM_R_BAD_DECRYPT	610,20880
#define PEM_R_BAD_END_LINE	611,20914
#define PEM_R_BAD_IV_CHARS	612,20949
#define PEM_R_BAD_MAGIC_NUMBER	613,20984
#define PEM_R_BAD_PASSWORD_READ	614,21023
#define PEM_R_BAD_VERSION_NUMBER	615,21063
#define PEM_R_BIO_WRITE_FAILURE	616,21103
#define PEM_R_CIPHER_IS_NULL	617,21143
#define PEM_R_ERROR_CONVERTING_PRIVATE_KEY	618,21180
#define PEM_R_EXPECTING_PRIVATE_KEY_BLOB	619,21229
#define PEM_R_EXPECTING_PUBLIC_KEY_BLOB	620,21276
#define PEM_R_INCONSISTENT_HEADER	621,21323
#define PEM_R_KEYBLOB_HEADER_PARSE_ERROR	622,21364
#define PEM_R_KEYBLOB_TOO_SHORT	623,21411
#define PEM_R_NOT_DEK_INFO	624,21451
#define PEM_R_NOT_ENCRYPTED	625,21486
#define PEM_R_NOT_PROC_TYPE	626,21522
#define PEM_R_NO_START_LINE	627,21558
#define PEM_R_PROBLEMS_GETTING_PASSWORD	628,21594
#define PEM_R_PUBLIC_KEY_NO_RSA	629,21641
#define PEM_R_PVK_DATA_TOO_SHORT	630,21681
#define PEM_R_PVK_TOO_SHORT	631,21721
#define PEM_R_READ_KEY	632,21757
#define PEM_R_SHORT_HEADER	633,21789
#define PEM_R_UNSUPPORTED_CIPHER	634,21824
#define PEM_R_UNSUPPORTED_ENCRYPTION	635,21864
#define PEM_R_UNSUPPORTED_KEY_COMPONENTS	636,21908

crypto/pem/pem_sign.c,83
void PEM_SignInit(67,3371
void PEM_SignUpdate(72,3464
int PEM_SignFinal(78,3590

crypto/pem/pem_pk8.c,559
int PEM_write_bio_PKCS8PrivateKey_nid(84,4041
int PEM_write_bio_PKCS8PrivateKey(91,4239
int i2d_PKCS8PrivateKey_bio(98,4445
int i2d_PKCS8PrivateKey_nid_bio(105,4645
static int do_pk8pkey(112,4837
EVP_PKEY *d2i_PKCS8PrivateKey_bio(d2i_PKCS8PrivateKey_bio152,5919
int i2d_PKCS8PrivateKey_fp(183,6657
int i2d_PKCS8PrivateKey_nid_fp(190,6860
int PEM_write_PKCS8PrivateKey_nid(197,7055
int PEM_write_PKCS8PrivateKey(204,7253
static int do_pk8pkey_fp(210,7456
EVP_PKEY *d2i_PKCS8PrivateKey_fp(d2i_PKCS8PrivateKey_fp225,7844
IMPLEMENT_PEM_rw(240,8173

crypto/pem/pem_info.c,74
STACK_OF(74,3509
STACK_OF(91,3938
int PEM_X509_INFO_write_bio(313,8596

crypto/pem/pvkfmt.c,1510
static unsigned int read_ledword(74,3120
static int read_lebn(90,3442
#define MS_PUBLICKEYBLOB	116,3933
#define MS_PRIVATEKEYBLOB	117,3962
#define MS_RSA1MAGIC	118,3992
#define MS_RSA2MAGIC	119,4026
#define MS_DSS1MAGIC	120,4060
#define MS_DSS2MAGIC	121,4094
#define MS_KEYALG_RSA_KEYX	123,4129
#define MS_KEYALG_DSS_SIGN	124,4163
#define MS_KEYTYPE_KEYX	126,4198
#define MS_KEYTYPE_SIGN	127,4227
#define MS_PVKMAGIC	130,4333
#define PVK_SALTLEN	132,4398
static int do_blob_header(139,4648
static unsigned int blob_length(214,5960
static EVP_PKEY *do_b2i(do_b2i247,6650
static EVP_PKEY *do_b2i_bio(do_b2i_bio270,7215
static EVP_PKEY *b2i_dss(b2i_dss311,8064
static EVP_PKEY *b2i_rsa(b2i_rsa369,9177
EVP_PKEY *b2i_PrivateKey(b2i_PrivateKey419,10249
EVP_PKEY *b2i_PublicKey(b2i_PublicKey424,10351
EVP_PKEY *b2i_PrivateKey_bio(b2i_PrivateKey_bio430,10453
EVP_PKEY *b2i_PublicKey_bio(b2i_PublicKey_bio435,10525
static void write_ledword(440,10596
static void write_lebn(450,10797
static int do_i2b(484,11514
static int do_i2b_bio(536,12570
static int check_bitlen_dsa(550,12856
static int check_bitlen_rsa(576,13385
static void write_rsa(611,14195
static void write_dsa(629,14655
int i2b_PrivateKey_bio(647,15057
int i2b_PublicKey_bio(652,15143
static int do_PVK_header(659,15252
static int derive_pvk_key(707,16174
static EVP_PKEY *do_PVK_body(do_PVK_body725,16616
EVP_PKEY *b2i_PVK_bio(b2i_PVK_bio805,18622
static int i2b_PVK(847,19434
int i2b_PVK_bio(930,21241

crypto/pem/pem_err.c,217
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA PEM_str_functs[PEM_str_functs71,3086
static ERR_STRING_DATA PEM_str_reasons[PEM_str_reasons116,5280
void ERR_load_PEM_strings(151,7172

crypto/asn1/a_strex.c,788
#define CHARTYPE_BS_ESC	75,3076
#define ESC_FLAGS 77,3177
static int send_mem_chars(87,3424
static int send_bio_chars(97,3597
static int send_fp_chars(104,3743
typedef int char_io(111,3902
static int do_esc_char(120,4148
#define BUF_TYPE_WIDTH_MASK	167,5473
#define BUF_TYPE_CONVUTF8	168,5505
static int do_buf(175,5694
static int do_hex_dump(238,7352
static int do_dump(262,7932
static const signed char tag2nbyte[tag2nbyte296,8913
static int do_print_ex(314,9366
static int do_indent(381,11084
#define FN_WIDTH_LN	389,11234
#define FN_WIDTH_SN	390,11257
static int do_name_ex(392,11281
int X509_NAME_print_ex(519,14354
int X509_NAME_print_ex_fp(527,14598
int ASN1_STRING_print_ex(543,14949
int ASN1_STRING_print_ex_fp(549,15108
int ASN1_STRING_to_UTF8(559,15377

crypto/asn1/a_octet.c,142
ASN1_OCTET_STRING *ASN1_OCTET_STRING_dup(ASN1_OCTET_STRING_dup63,3266
int ASN1_OCTET_STRING_cmp(66,3375
int ASN1_OCTET_STRING_set(69,3500

crypto/asn1/x_attrib.c,65
} ASN1_CHOICE_END_selector(88,3984
} ASN1_SEQUENCE_END(94,4222

crypto/asn1/x_info.c,77
X509_INFO *X509_INFO_new(X509_INFO_new65,3316
void X509_INFO_free(87,3705

crypto/asn1/bio_ndef.c,445
typedef struct ndef_aux_st81,3282
	ASN1_VALUE *val;val84,3353
	const ASN1_ITEM *it;it85,3371
	BIO *ndef_bio;ndef_bio87,3421
	BIO *out;out89,3455
	unsigned char **boundary;boundary91,3508
	unsigned char *derbuf;derbuf93,3559
	} NDEF_SUPPORT;94,3583
BIO *BIO_new_NDEF(BIO_new_NDEF101,3920
static int ndef_prefix(155,5097
static int ndef_prefix_free(180,5583
static int ndef_suffix_free(198,5881
static int ndef_suffix(208,6135

crypto/asn1/a_bytes.c,188
ASN1_STRING *d2i_ASN1_type_bytes(d2i_ASN1_type_bytes66,3390
int i2d_ASN1_bytes(131,4565
ASN1_STRING *d2i_ASN1_bytes(d2i_ASN1_bytes157,5087
static int asn1_collate_primitive(252,6806

crypto/asn1/a_utctm.c,482
int i2d_ASN1_UTCTIME(66,3310
ASN1_UTCTIME *d2i_ASN1_UTCTIME(d2i_ASN1_UTCTIME85,3774
int ASN1_UTCTIME_check(115,4414
int ASN1_UTCTIME_set_string(165,5413
ASN1_UTCTIME *ASN1_UTCTIME_set(ASN1_UTCTIME_set187,5794
ASN1_UTCTIME *ASN1_UTCTIME_adj(ASN1_UTCTIME_adj192,5897
int ASN1_UTCTIME_cmp_time_t(243,6929
#define g2(250,7051
#define return_cmp(265,7335
#undef g2275,7729
#undef return_cmp276,7739
time_t ASN1_UTCTIME_get(283,7780
#define g2(290,7889
#undef g2307,8270

crypto/asn1/asn1_err.c,223
#define ERR_FUNC(68,2978
#define ERR_REASON(69,3031
static ERR_STRING_DATA ASN1_str_functs[ASN1_str_functs71,3091
static ERR_STRING_DATA ASN1_str_reasons[ASN1_str_reasons197,9909
void ERR_load_ASN1_strings(322,18000

crypto/asn1/x_spki.c,58
} ASN1_SEQUENCE_END(71,3566
} ASN1_SEQUENCE_END(79,3838

crypto/asn1/a_bool.c,60
int i2d_ASN1_BOOLEAN(63,3266
int d2i_ASN1_BOOLEAN(78,3533

crypto/asn1/asn1_gen.c,1402
#define ASN1_GEN_FLAG	63,2812
#define ASN1_GEN_FLAG_IMP	64,2843
#define ASN1_GEN_FLAG_EXP	65,2887
#define ASN1_GEN_FLAG_TAG	66,2931
#define ASN1_GEN_FLAG_BITWRAP	67,2975
#define ASN1_GEN_FLAG_OCTWRAP	68,3023
#define ASN1_GEN_FLAG_SEQWRAP	69,3071
#define ASN1_GEN_FLAG_SETWRAP	70,3119
#define ASN1_GEN_FLAG_FORMAT	71,3167
#define ASN1_GEN_STR(73,3215
#define ASN1_FLAG_EXP_MAX	75,3274
#define ASN1_GEN_FORMAT_ASCII	80,3346
#define ASN1_GEN_FORMAT_UTF8	82,3389
#define ASN1_GEN_FORMAT_HEX	84,3430
#define ASN1_GEN_FORMAT_BITLIST	86,3479
struct tag_name_st89,3515
	const char *strnam;strnam91,3537
	int len;92,3558
	int tag;93,3568
	int exp_tag;98,3601
	int exp_class;99,3615
	int exp_constructed;100,3631
	int exp_pad;101,3653
	long exp_len;102,3667
	} tag_exp_type;103,3682
	int imp_tag;107,3718
	int imp_class;108,3732
	int utype;109,3748
	int format;110,3760
	const char *str;str111,3773
	tag_exp_type exp_list[exp_list112,3791
	int exp_count;113,3834
	} tag_exp_arg;114,3850
ASN1_TYPE *ASN1_generate_nconf(ASN1_generate_nconf124,4393
ASN1_TYPE *ASN1_generate_v3(ASN1_generate_v3135,4594
static int asn1_cb(277,8055
static int parse_tagging(386,10333
static ASN1_TYPE *asn1_multi(asn1_multi448,11421
static int append_exp(512,12647
static int asn1_str2tag(552,13530
static ASN1_TYPE *asn1_str2type(asn1_str2type629,16380
static int bitstr_cb(833,20668

crypto/asn1/t_x509a.c,33
int X509_CERT_AUX_print(68,2899

crypto/asn1/a_object.c,406
int i2d_ASN1_OBJECT(67,3368
int a2d_ASN1_OBJECT(86,3752
int i2t_ASN1_OBJECT(230,6158
int i2a_ASN1_OBJECT(235,6264
ASN1_OBJECT *d2i_ASN1_OBJECT(d2i_ASN1_OBJECT258,6704
ASN1_OBJECT *c2i_ASN1_OBJECT(c2i_ASN1_OBJECT286,7220
ASN1_OBJECT *ASN1_OBJECT_new(ASN1_OBJECT_new347,8752
void ASN1_OBJECT_free(366,9097
ASN1_OBJECT *ASN1_OBJECT_create(ASN1_OBJECT_create387,9689
IMPLEMENT_STACK_OF(402,10006

crypto/asn1/a_digest.c,55
int ASN1_digest(75,3441
int ASN1_item_digest(99,3858

crypto/asn1/x_exten.c,29
} ASN1_SEQUENCE_END(68,3025

crypto/asn1/f_string.c,58
int i2a_ASN1_STRING(64,3295
int a2i_ASN1_STRING(97,3869

crypto/asn1/t_req.c,91
int X509_REQ_print_fp(74,3509
int X509_REQ_print_ex(91,3863
int X509_REQ_print(263,8021

crypto/asn1/asn1_mac.h,3705
#define HEADER_ASN1_MAC_H60,3225
#define ASN1_MAC_ERR_LIB	69,3345
#define ASN1_MAC_H_err(72,3392
#define M_ASN1_D2I_vars(75,3485
#define M_ASN1_D2I_Init(87,3806
#define M_ASN1_D2I_Finish_2(91,3909
#define M_ASN1_D2I_Finish(98,4087
#define M_ASN1_D2I_start_sequence(106,4341
#define M_ASN1_D2I_begin(110,4506
#define M_ASN1_D2I_Finish_nolen(114,4601
#define M_ASN1_D2I_end_sequence(124,4868
#define M_ASN1_D2I_get(129,5040
#define M_ASN1_D2I_get_x(136,5225
#define M_ASN1_D2I_get_int(143,5413
#define M_ASN1_D2I_get_opt(149,5552
#define M_ASN1_D2I_get_int_opt(156,5731
#define M_ASN1_D2I_get_imp(163,5918
#define M_ASN1_D2I_get_IMP_opt(171,6165
#define M_ASN1_D2I_get_set(179,6405
#define M_ASN1_D2I_get_set_type(183,6531
#define M_ASN1_D2I_get_set_opt(187,6677
#define M_ASN1_D2I_get_set_opt_type(192,6868
#define M_ASN1_I2D_len_SET_opt(197,7079
#define M_ASN1_I2D_put_SET_opt(201,7185
#define M_ASN1_I2D_put_SEQUENCE_opt(205,7291
#define M_ASN1_I2D_put_SEQUENCE_opt_type(209,7407
#define M_ASN1_D2I_get_IMP_set_opt(213,7552
#define M_ASN1_D2I_get_IMP_set_opt_type(222,7801
#define M_ASN1_D2I_get_seq(231,8070
#define M_ASN1_D2I_get_seq_type(235,8200
#define M_ASN1_D2I_get_seq_opt(239,8355
#define M_ASN1_D2I_get_seq_opt_type(244,8551
#define M_ASN1_D2I_get_IMP_set(249,8767
#define M_ASN1_D2I_get_IMP_set_type(253,8896
#define M_ASN1_D2I_get_imp_set(257,9045
#define M_ASN1_D2I_get_imp_set_type(264,9263
#define M_ASN1_D2I_get_set_strings(271,9481
#define M_ASN1_D2I_get_EXP_opt(277,9656
#define M_ASN1_D2I_get_EXP_set_opt(302,10410
#define M_ASN1_D2I_get_EXP_set_opt_type(329,11252
#define M_ASN1_New_Malloc(356,12100
#define M_ASN1_New(360,12232
#define M_ASN1_New_Error(363,12306
#define M_ASN1_next	374,12750
#define M_ASN1_next_prev	375,12799
#define M_ASN1_I2D_vars(379,12906
#define M_ASN1_I2D_len(384,13024
#define M_ASN1_I2D_len_IMP_opt(385,13067
#define M_ASN1_I2D_len_SET(387,13139
#define M_ASN1_I2D_len_SET_type(390,13240
#define M_ASN1_I2D_len_SEQUENCE(394,13373
#define M_ASN1_I2D_len_SEQUENCE_type(398,13498
#define M_ASN1_I2D_len_SEQUENCE_opt(402,13645
#define M_ASN1_I2D_len_SEQUENCE_opt_type(406,13763
#define M_ASN1_I2D_len_IMP_SET(410,13910
#define M_ASN1_I2D_len_IMP_SET_type(413,14015
#define M_ASN1_I2D_len_IMP_SET_opt(417,14152
#define M_ASN1_I2D_len_IMP_SET_opt_type(422,14313
#define M_ASN1_I2D_len_IMP_SEQUENCE(427,14508
#define M_ASN1_I2D_len_IMP_SEQUENCE_opt(431,14632
#define M_ASN1_I2D_len_IMP_SEQUENCE_opt_type(436,14803
#define M_ASN1_I2D_len_EXP_opt(442,15019
#define M_ASN1_I2D_len_EXP_SET_opt(449,15151
#define M_ASN1_I2D_len_EXP_SEQUENCE_opt(456,15354
#define M_ASN1_I2D_len_EXP_SEQUENCE_opt_type(464,15581
#define M_ASN1_I2D_put(474,15860
#define M_ASN1_I2D_put_IMP_opt(476,15897
#define M_ASN1_I2D_put_SET(484,16068
#define M_ASN1_I2D_put_SET_type(486,16161
#define M_ASN1_I2D_put_IMP_SET(488,16276
#define M_ASN1_I2D_put_IMP_SET_type(490,16373
#define M_ASN1_I2D_put_IMP_SEQUENCE(492,16492
#define M_ASN1_I2D_put_SEQUENCE(495,16600
#define M_ASN1_I2D_put_SEQUENCE_type(498,16716
#define M_ASN1_I2D_put_SEQUENCE_opt(502,16857
#define M_ASN1_I2D_put_IMP_SET_opt(506,16975
#define M_ASN1_I2D_put_IMP_SET_opt_type(511,17137
#define M_ASN1_I2D_put_IMP_SEQUENCE_opt(517,17334
#define M_ASN1_I2D_put_IMP_SEQUENCE_opt_type(522,17506
#define M_ASN1_I2D_put_EXP_opt(528,17713
#define M_ASN1_I2D_put_EXP_SET_opt(535,17861
#define M_ASN1_I2D_put_EXP_SEQUENCE_opt(542,18082
#define M_ASN1_I2D_put_EXP_SEQUENCE_opt_type(549,18313
#define M_ASN1_I2D_seq_total(557,18588
#define M_ASN1_I2D_INF_seq_start(563,18773
#define M_ASN1_I2D_INF_seq_end(567,18877
#define M_ASN1_I2D_finish(569,18936

crypto/asn1/charmap.h,53
static const unsigned char char_type[char_type5,88

crypto/asn1/a_i2d_fp.c,114
int ASN1_i2d_fp(67,3342
int ASN1_i2d_bio(84,3701
int ASN1_item_i2d_fp(120,4190
int ASN1_item_i2d_bio(137,4566

crypto/asn1/a_set.c,164
    unsigned char *pbData;pbData67,3310
    int cbData;68,3337
    } MYBLOB;69,3353
static int SetBlobCmp(74,3441
int i2d_ASN1_SET(88,3859
STACK_OF(166,5988

crypto/asn1/asn1_locl.h,1489
struct asn1_pctx_st63,2839
	unsigned long flags;65,2862
	unsigned long nm_flags;66,2884
	unsigned long cert_flags;67,2909
	unsigned long oid_flags;68,2936
	unsigned long str_flags;69,2962
struct evp_pkey_asn1_method_st74,3049
	int pkey_id;76,3083
	int pkey_base_id;77,3097
	unsigned long pkey_flags;78,3116
	char *pem_str;pem_str80,3144
	char *info;info81,3160
	int (*pub_decode)pub_decode83,3174
	int (*pub_encode)pub_encode84,3226
	int (*pub_cmp)pub_cmp85,3284
	int (*pub_print)pub_print86,3339
	int (*priv_decode)priv_decode89,3427
	int (*priv_encode)priv_encode90,3490
	int (*priv_print)priv_print91,3556
	int (*pkey_size)pkey_size94,3645
	int (*pkey_bits)pkey_bits95,3684
	int (*param_decode)param_decode97,3724
	int (*param_encode)param_encode99,3806
	int (*param_missing)param_missing100,3872
	int (*param_copy)param_copy101,3915
	int (*param_cmp)param_cmp102,3971
	int (*param_print)param_print103,4028
	int (*sig_print)sig_print105,4117
	void (*pkey_free)pkey_free110,4237
	int (*pkey_ctrl)pkey_ctrl111,4273
	int (*old_priv_decode)old_priv_decode115,4377
	int (*old_priv_encode)old_priv_encode117,4462
	int (*item_verify)item_verify119,4573
	int (*item_sign)item_sign122,4704
#define X509_CRL_METHOD_DYNAMIC	135,5179
struct x509_crl_method_st137,5215
	int flags;139,5244
	int (*crl_init)crl_init140,5256
	int (*crl_free)crl_free141,5289
	int (*crl_lookup)crl_lookup142,5322
	int (*crl_verify)crl_verify144,5419

crypto/asn1/tasn_enc.c,462
int ASN1_item_ndef_i2d(83,3542
int ASN1_item_i2d(89,3696
static int asn1_item_flags_i2d(103,4115
int ASN1_item_ex_i2d(130,4723
int ASN1_template_i2d(264,8320
static int asn1_template_ex_i2d(270,8473
	unsigned char *data;data421,12140
	int length;422,12162
	ASN1_VALUE *field;field423,12175
} DER_ENC;424,12195
static int der_cmp(426,12207
static int asn1_set_seq_out(439,12527
static int asn1_i2d_ex_primitive(504,14138
int asn1_ex_i2c(565,15377

crypto/asn1/a_mbstr.c,346
int ASN1_mbstring_copy(83,3764
int ASN1_mbstring_ncopy(89,3945
static int traverse_string(250,7811
static int in_utf8(287,8601
static int out_utf8(297,8757
static int type_str(309,8987
static int cpy_asc(328,9573
static int cpy_bmp(340,9767
static int cpy_univ(353,10025
static int cpy_utf8(368,10355
static int is_printable(380,10647

crypto/asn1/x_val.c,29
} ASN1_SEQUENCE_END(67,3409

crypto/asn1/x_sig.c,29
} ASN1_SEQUENCE_END(67,3412

crypto/asn1/a_dup.c,76
void *ASN1_dup(ASN1_dup65,3285
void *ASN1_item_dup(ASN1_item_dup93,3900

crypto/asn1/x_pubkey.c,477
static int pubkey_cb(72,3476
} ASN1_SEQUENCE_END_cb(86,3854
EVP_PKEY *X509_PUBKEY_get(X509_PUBKEY_get133,4630
EVP_PKEY *d2i_PUBKEY(d2i_PUBKEY198,5901
int i2d_PUBKEY(216,6235
RSA *d2i_RSA_PUBKEY(d2i_RSA_PUBKEY231,6550
int i2d_RSA_PUBKEY(252,6902
DSA *d2i_DSA_PUBKEY(d2i_DSA_PUBKEY271,7243
int i2d_DSA_PUBKEY(292,7595
EC_KEY *d2i_EC_PUBKEY(d2i_EC_PUBKEY311,7933
int i2d_EC_PUBKEY(331,8297
int X509_PUBKEY_set0_param(348,8623
int X509_PUBKEY_get0_param(367,9156

crypto/asn1/p5_pbe.c,79
} ASN1_SEQUENCE_END(70,3024
X509_ALGOR *PKCS5_pbe_set(PKCS5_pbe_set132,4371

crypto/asn1/a_sign.c,86
int ASN1_sign(130,6124
int ASN1_item_sign(216,8456
int ASN1_item_sign_ctx(231,8848

crypto/asn1/tasn_new.c,312
ASN1_VALUE *ASN1_item_new(ASN1_item_new73,3208
int ASN1_item_ex_new(83,3386
static int asn1_item_ex_combine_new(88,3501
static void asn1_item_clear(230,6176
int ASN1_template_new(266,6808
static void asn1_template_clear(311,7757
int ASN1_primitive_new(325,8121
static void asn1_primitive_clear(377,9076

crypto/asn1/tasn_prn.c,906
ASN1_PCTX default_pctx 75,3020
ASN1_PCTX *ASN1_PCTX_new(ASN1_PCTX_new85,3177
void ASN1_PCTX_free(102,3484
unsigned long ASN1_PCTX_get_flags(107,3543
void ASN1_PCTX_set_flags(112,3616
unsigned long ASN1_PCTX_get_nm_flags(117,3702
void ASN1_PCTX_set_nm_flags(122,3781
unsigned long ASN1_PCTX_get_cert_flags(127,3873
void ASN1_PCTX_set_cert_flags(132,3956
unsigned long ASN1_PCTX_get_oid_flags(137,4052
void ASN1_PCTX_set_oid_flags(142,4133
unsigned long ASN1_PCTX_get_str_flags(147,4227
void ASN1_PCTX_set_str_flags(152,4308
int ASN1_item_print(176,5017
static int asn1_item_print_ctx(190,5371
int asn1_template_print_ctx(339,8549
static int asn1_print_fsname(400,10091
static int asn1_print_boolean_ctx(449,10991
static int asn1_print_integer_ctx(475,11302
static int asn1_print_oid_ctx(487,11529
static int asn1_print_obstring_ctx(501,11838
static int asn1_primitive_print(519,12257

crypto/asn1/n_pkey.c,597
typedef struct netscape_pkey_st72,3449
	long version;74,3484
	X509_ALGOR *algor;algor75,3499
	ASN1_OCTET_STRING *private_key;private_key76,3519
	} NETSCAPE_PKEY;77,3552
typedef struct netscape_encrypted_pkey_st79,3571
	ASN1_OCTET_STRING *os;os81,3616
	X509_SIG *enckey;enckey86,3765
	} NETSCAPE_ENCRYPTED_PKEY;87,3784
} ASN1_BROKEN_SEQUENCE_END(93,3982
} ASN1_SEQUENCE_END(103,4416
int i2d_RSA_NET(121,4936
RSA *d2i_Netscape_RSA(d2i_Netscape_RSA238,7898
RSA *d2i_RSA_NET(d2i_RSA_NET245,8091
static RSA *d2i_RSA_NET_2(d2i_RSA_NET_2285,9055
static void *dummy=dummy350,10546

crypto/asn1/asn_pack.c,284
STACK_OF(69,2935
unsigned char *ASN1_seq_pack(ASN1_seq_pack85,3436
void *ASN1_unpack_string(ASN1_unpack_string109,4108
ASN1_STRING *ASN1_pack_string(ASN1_pack_string122,4387
ASN1_STRING *ASN1_item_pack(ASN1_item_pack152,5033
void *ASN1_item_unpack(ASN1_item_unpack182,5695

crypto/asn1/f_enum.c,66
int i2a_ASN1_ENUMERATED(66,3350
int a2i_ASN1_ENUMERATED(99,3923

crypto/asn1/x_crl.c,812
} ASN1_SEQUENCE_END(74,3705
static const X509_CRL_METHOD *default_crl_method default_crl_method88,3990
static int crl_inf_cb(94,4232
} ASN1_SEQUENCE_END_enc(120,5101
static int crl_cb(208,6860
static void setup_idp(311,9324
} ASN1_SEQUENCE_END_ref(356,10414
int X509_CRL_add0_revoked(371,10813
int X509_CRL_verify(385,11169
int X509_CRL_get0_by_serial(392,11303
int X509_CRL_get0_by_cert(400,11492
static int def_crl_verify(409,11713
static int crl_revoked_issuer_match(415,11875
static int def_crl_lookup(444,12398
void X509_CRL_set_default_method(480,13358
X509_CRL_METHOD *X509_CRL_METHOD_new(X509_CRL_METHOD_new488,13520
void X509_CRL_METHOD_free(507,14024
void X509_CRL_set_meth_data(514,14149
void *X509_CRL_get_meth_data(X509_CRL_get_meth_data519,14233
IMPLEMENT_STACK_OF(524,14308

crypto/asn1/x_bignum.c,188
#define BN_SENSITIVE	70,3103
static ASN1_PRIMITIVE_FUNCS bignum_pf 78,3465
ASN1_ITEM_start(87,3561
static void bn_free(102,3945
static int bn_i2c(110,4138
static int bn_c2i(126,4501

crypto/asn1/t_pkey.c,27
int ASN1_bn_print(65,3320

crypto/asn1/tasn_dec.c,658
static const unsigned long tag2bit[tag2bit96,3986
unsigned long ASN1_tag2bit(108,4696
#define asn1_tlc_clear(116,4853
#define asn1_tlc_clear_nc(118,4967
ASN1_VALUE *ASN1_item_d2i(ASN1_item_d2i128,5289
int ASN1_template_d2i(141,5588
int ASN1_item_ex_d2i(154,5920
static int asn1_template_ex_d2i(532,14925
static int asn1_template_noexp_d2i(618,16715
static int asn1_d2i_ex_primitive(766,19657
int asn1_ex_c2i(919,22972
static int asn1_find_end(1089,26647
#define ASN1_MAX_STRING_NEST 1150,28278
static int asn1_collect(1154,28318
static int collect_data(1220,29618
static int asn1_check_eoc(1239,29981
static int asn1_check_tlen(1259,30441

crypto/asn1/t_spki.c,33
int NETSCAPE_SPKI_print(73,2986

crypto/asn1/a_enum.c,201
int ASN1_ENUMERATED_set(69,3416
long ASN1_ENUMERATED_get(109,4135
ASN1_ENUMERATED *BN_to_ASN1_ENUMERATED(BN_to_ASN1_ENUMERATED138,4579
BIGNUM *ASN1_ENUMERATED_to_BN(ASN1_ENUMERATED_to_BN174,5342

crypto/asn1/i2d_pr.c,28
int i2d_PrivateKey(65,3313

crypto/asn1/d2i_pr.c,107
EVP_PKEY *d2i_PrivateKey(d2i_PrivateKey71,3453
EVP_PKEY *d2i_AutoPrivateKey(d2i_AutoPrivateKey130,4612

crypto/asn1/x_long.c,194
static ASN1_PRIMITIVE_FUNCS long_pf 76,3392
ASN1_ITEM_start(86,3555
static void long_free(100,3897
static int long_i2c(105,3991
static int long_c2i(142,4963
static int long_print(175,5680

crypto/asn1/p5_pbev2.c,166
} ASN1_SEQUENCE_END(70,3040
} ASN1_SEQUENCE_END(79,3319
X509_ALGOR *PKCS5_pbe2_set(PKCS5_pbe2_set194,6094
X509_ALGOR *PKCS5_pbkdf2_set(PKCS5_pbkdf2_set200,6269

crypto/asn1/x_nx509.c,29
} ASN1_SEQUENCE_END(69,3007

crypto/asn1/p8_pkey.c,90
static int pkey_cb(65,2888
} ASN1_SEQUENCE_END_cb(83,3589
int PKCS8_pkey_get0(124,4475

crypto/asn1/i2d_pu.c,27
int i2d_PublicKey(74,3480

crypto/asn1/a_time.c,285
IMPLEMENT_ASN1_MSTRING(70,2958
ASN1_TIME *ASN1_TIME_set(ASN1_TIME_set101,3748
ASN1_TIME *ASN1_TIME_adj(ASN1_TIME_adj106,3839
int ASN1_TIME_check(128,4377
ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME_to_generalizedtime138,4634
int ASN1_TIME_set_string(177,5523

crypto/asn1/ameth_lib.c,1006
static const EVP_PKEY_ASN1_METHOD *standard_methods[standard_methods75,3241
typedef int sk_cmp_fn_type(98,3641
DECLARE_STACK_OF(99,3715
static int ameth_cmp(120,4173
int EVP_PKEY_asn1_get_count(129,4440
const EVP_PKEY_ASN1_METHOD *EVP_PKEY_asn1_get0(EVP_PKEY_asn1_get0137,4631
static const EVP_PKEY_ASN1_METHOD *pkey_asn1_find(pkey_asn1_find148,4910
const EVP_PKEY_ASN1_METHOD *EVP_PKEY_asn1_find(EVP_PKEY_asn1_find174,5624
const EVP_PKEY_ASN1_METHOD *EVP_PKEY_asn1_find_str(EVP_PKEY_asn1_find_str202,6126
int EVP_PKEY_asn1_add0(240,6881
int EVP_PKEY_asn1_add_alias(254,7192
int EVP_PKEY_asn1_get0_info(264,7425
const EVP_PKEY_ASN1_METHOD* EVP_PKEY_get0_asn1(283,7876
EVP_PKEY_ASN1_METHOD* EVP_PKEY_asn1_new(288,7967
void EVP_PKEY_asn1_copy(357,9172
void EVP_PKEY_asn1_free(391,10053
void EVP_PKEY_asn1_set_public(403,10303
void EVP_PKEY_asn1_set_private(420,10891
void EVP_PKEY_asn1_set_param(431,11281
void EVP_PKEY_asn1_set_free(449,11957
void EVP_PKEY_asn1_set_ctrl(455,12089

crypto/asn1/a_bitstr.c,245
int ASN1_BIT_STRING_set(63,3267
int i2c_ASN1_BIT_STRING(66,3384
ASN1_BIT_STRING *c2i_ASN1_BIT_STRING(c2i_ASN1_BIT_STRING116,4232
int ASN1_BIT_STRING_set_bit(176,5530
int ASN1_BIT_STRING_get_bit(215,6377
int ASN1_BIT_STRING_check(232,6814

crypto/asn1/x_x509.c,217
} ASN1_SEQUENCE_END_enc(77,3899
} ASN1_SEQUENCE_END_ref(139,5500
int X509_set_ex_data(151,5858
void *X509_get_ex_data(X509_get_ex_data156,5965
X509 *d2i_X509_AUX(d2i_X509_AUX169,6338
int i2d_X509_AUX(188,6761

crypto/asn1/x_x509a.c,372
} ASN1_SEQUENCE_END(80,3505
int X509_alias_set1(91,3724
int X509_keyid_set1(107,4107
unsigned char *X509_alias_get0(X509_alias_get0123,4488
unsigned char *X509_keyid_get0(X509_keyid_get0130,4655
int X509_add1_trust_object(137,4822
int X509_add1_reject_object(148,5122
void X509_trust_clear(159,5426
void X509_reject_clear(167,5580
} ASN1_SEQUENCE_END(178,5869

crypto/asn1/tasn_fre.c,174
void ASN1_item_free(69,2962
void ASN1_item_ex_free(74,3065
static void asn1_item_combine_free(79,3173
void ASN1_template_free(183,5375
void ASN1_primitive_free(204,5890

crypto/asn1/t_crl.c,59
int X509_CRL_print_fp(68,2935
int X509_CRL_print(85,3289

crypto/asn1/bio_asn1.c,1784
#define DEFAULT_ASN1_BUF_SIZE 69,3049
	ASN1_STATE_START,73,3100
	ASN1_STATE_PRE_COPY,74,3119
	ASN1_STATE_HEADER,75,3141
	ASN1_STATE_HEADER_COPY,76,3161
	ASN1_STATE_DATA_COPY,77,3186
	ASN1_STATE_POST_COPY,78,3209
	ASN1_STATE_DONE79,3232
	} asn1_bio_state_t;80,3249
typedef struct BIO_ASN1_EX_FUNCS_st82,3271
	asn1_ps_func	*ex_func;ex_func84,3310
	asn1_ps_func	*ex_free_func;ex_free_func85,3334
	} BIO_ASN1_EX_FUNCS;86,3363
typedef struct BIO_ASN1_BUF_CTX_t88,3386
	asn1_bio_state_t state;91,3445
	unsigned char *buf;buf93,3493
	int bufsize;95,3536
	int bufpos;97,3584
	int buflen;99,3626
	int copylen;101,3669
	int asn1_class,103,3711
	int asn1_class, asn1_tag;103,3711
	asn1_ps_func *prefix,prefix104,3738
	asn1_ps_func *prefix, *prefix_free,prefix_free104,3738
	asn1_ps_func *prefix, *prefix_free, *suffix,suffix104,3738
	asn1_ps_func *prefix, *prefix_free, *suffix, *suffix_free;suffix_free104,3738
	unsigned char *ex_buf;ex_buf106,3845
	int ex_len;107,3869
	int ex_pos;108,3882
	void *ex_arg;ex_arg109,3895
	} BIO_ASN1_BUF_CTX;110,3910
static BIO_METHOD methods_asn1=130,4685
BIO_METHOD *BIO_f_asn1(BIO_f_asn1144,4887
static int asn1_bio_new(150,4948
static int asn1_bio_init(164,5207
static int asn1_bio_free(182,5583
static int asn1_bio_write(197,5830
static int asn1_bio_flush_ex(301,7648
static int asn1_bio_setup_ex(329,8164
static int asn1_bio_read(346,8529
static int asn1_bio_puts(353,8661
static int asn1_bio_gets(358,8763
static long asn1_bio_callback_ctrl(365,8898
static long asn1_bio_ctrl(371,9058
static int asn1_bio_set_ex(454,10619
static int asn1_bio_get_ex(463,10848
int BIO_asn1_set_prefix(477,11127
int BIO_asn1_get_prefix(482,11282
int BIO_asn1_set_suffix(487,11443
int BIO_asn1_get_suffix(492,11598

crypto/asn1/asn1.h,23517
#define HEADER_ASN1_H60,3217
# undef OPENSSL_EXTERN78,3555
# define OPENSSL_EXTERN 79,3578
#define V_ASN1_UNIVERSAL	86,3666
#define	V_ASN1_APPLICATION	87,3697
#define V_ASN1_CONTEXT_SPECIFIC	88,3730
#define V_ASN1_PRIVATE	89,3768
#define V_ASN1_CONSTRUCTED	91,3799
#define V_ASN1_PRIMITIVE_TAG	92,3832
#define V_ASN1_PRIMATIVE_TAG	93,3867
#define V_ASN1_APP_CHOOSE	95,3903
#define V_ASN1_OTHER	96,3964
#define V_ASN1_ANY	97,4014
#define V_ASN1_NEG	99,4072
#define V_ASN1_UNDEF	101,4120
#define V_ASN1_EOC	102,4146
#define V_ASN1_BOOLEAN	103,4169
#define V_ASN1_INTEGER	104,4201
#define V_ASN1_NEG_INTEGER	105,4228
#define V_ASN1_BIT_STRING	106,4273
#define V_ASN1_OCTET_STRING	107,4302
#define V_ASN1_NULL	108,4333
#define V_ASN1_OBJECT	109,4357
#define V_ASN1_OBJECT_DESCRIPTOR	110,4383
#define V_ASN1_EXTERNAL	111,4418
#define V_ASN1_REAL	112,4446
#define V_ASN1_ENUMERATED	113,4470
#define V_ASN1_NEG_ENUMERATED	114,4500
#define V_ASN1_UTF8STRING	115,4549
#define V_ASN1_SEQUENCE	116,4579
#define V_ASN1_SET	117,4608
#define V_ASN1_NUMERICSTRING	118,4632
#define V_ASN1_PRINTABLESTRING	119,4670
#define V_ASN1_T61STRING	120,4705
#define V_ASN1_TELETEXSTRING	121,4734
#define V_ASN1_VIDEOTEXSTRING	122,4779
#define V_ASN1_IA5STRING	123,4818
#define V_ASN1_UTCTIME	124,4847
#define V_ASN1_GENERALIZEDTIME	125,4875
#define V_ASN1_GRAPHICSTRING	126,4915
#define V_ASN1_ISO64STRING	127,4953
#define V_ASN1_VISIBLESTRING	128,4989
#define V_ASN1_GENERALSTRING	129,5034
#define V_ASN1_UNIVERSALSTRING	130,5072
#define V_ASN1_BMPSTRING	131,5112
#define B_ASN1_NUMERICSTRING	134,5183
#define B_ASN1_PRINTABLESTRING	135,5219
#define B_ASN1_T61STRING	136,5257
#define B_ASN1_TELETEXSTRING	137,5289
#define B_ASN1_VIDEOTEXSTRING	138,5325
#define B_ASN1_IA5STRING	139,5362
#define B_ASN1_GRAPHICSTRING	140,5394
#define B_ASN1_ISO64STRING	141,5430
#define B_ASN1_VISIBLESTRING	142,5464
#define B_ASN1_GENERALSTRING	143,5500
#define B_ASN1_UNIVERSALSTRING	144,5536
#define B_ASN1_OCTET_STRING	145,5574
#define B_ASN1_BIT_STRING	146,5609
#define B_ASN1_BMPSTRING	147,5642
#define B_ASN1_UNKNOWN	148,5674
#define B_ASN1_UTF8STRING	149,5705
#define B_ASN1_UTCTIME	150,5738
#define B_ASN1_GENERALIZEDTIME	151,5769
#define B_ASN1_SEQUENCE	152,5807
#define MBSTRING_FLAG	155,5881
#define MBSTRING_UTF8	156,5911
#define MBSTRING_ASC	157,5950
#define MBSTRING_BMP	158,5990
#define MBSTRING_UNIV	159,6030
#define SMIME_OLDMIME	161,6072
#define SMIME_CRLFEOL	162,6101
#define SMIME_STREAM	163,6130
#define DECLARE_ASN1_SET_OF(168,6212
#define IMPLEMENT_ASN1_SET_OF(169,6276
DECLARE_STACK_OF(IMPLEMENT_ASN1_SET_OF166,6182
typedef struct asn1_ctx_st175,6556
	unsigned char *p;p177,6586
	int eos;178,6628
	int error;179,6689
	int inf;180,6749
	int tag;181,6805
	int xclass;182,6848
	long slen;183,6896
	unsigned char *max;max184,6942
	unsigned char *q;q185,6996
	unsigned char **pp;pp186,7039
	int line;187,7074
	} ASN1_CTX;188,7116
typedef struct asn1_const_ctx_st190,7130
	const unsigned char *p;p192,7166
	int eos;193,7214
	int error;194,7275
	int inf;195,7335
	int tag;196,7391
	int xclass;197,7434
	long slen;198,7482
	const unsigned char *max;max199,7528
	const unsigned char *q;q200,7588
	const unsigned char **pp;pp201,7637
	int line;202,7678
	} ASN1_const_CTX;203,7720
#define ASN1_OBJECT_FLAG_DYNAMIC	207,7858
#define ASN1_OBJECT_FLAG_CRITICAL	208,7916
#define ASN1_OBJECT_FLAG_DYNAMIC_STRINGS 209,7988
#define ASN1_OBJECT_FLAG_DYNAMIC_DATA 210,8053
typedef struct asn1_object_st211,8117
	const char *sn,sn213,8150
	const char *sn,*ln;ln213,8150
	int nid;214,8171
	int length;215,8181
	const unsigned char *data;data216,8194
	int flags;217,8258
	} ASN1_OBJECT;218,8300
#define ASN1_STRING_FLAG_BITS_LEFT 220,8317
#define ASN1_STRING_FLAG_NDEF 225,8587
#define ASN1_STRING_FLAG_CONT 232,8841
#define ASN1_STRING_FLAG_MSTRING 236,8966
struct asn1_string_st238,9071
	int length;240,9096
	int type;241,9109
	unsigned char *data;data242,9120
	long flags;247,9352
typedef struct ASN1_ENCODING_st255,9557
	unsigned char *enc;enc257,9592
	long len;258,9632
	int modified;259,9669
	} ASN1_ENCODING;260,9721
#define ASN1_LONG_UNDEF	263,9811
#define STABLE_FLAGS_MALLOC	265,9848
#define STABLE_NO_MASK	266,9881
#define DIRSTRING_TYPE	267,9910
#define PKCS9STRING_TYPE 269,10013
typedef struct asn1_string_table_st 271,10073
	int nid;272,10111
	long minsize;273,10121
	long maxsize;274,10136
	unsigned long mask;275,10151
	unsigned long flags;276,10172
} ASN1_STRING_TABLE;277,10194
#define ub_name	283,10315
#define ub_common_name	284,10340
#define ub_locality_name	285,10368
#define ub_state_name	286,10398
#define ub_organization_name	287,10426
#define ub_organization_unit_name	288,10459
#define ub_title	289,10496
#define ub_email_address	290,10518
DECLARE_STACK_OF(ub_email_address279,10216
typedef struct ASN1_TEMPLATE_st ASN1_TEMPLATE;295,10630
typedef struct ASN1_TLC_st ASN1_TLC;296,10677
typedef struct ASN1_VALUE_st ASN1_VALUE;298,10751
#define DECLARE_ASN1_FUNCTIONS(302,10858
#define DECLARE_ASN1_ALLOC_FUNCTIONS(304,10936
#define DECLARE_ASN1_FUNCTIONS_name(307,11029
#define DECLARE_ASN1_FUNCTIONS_fname(311,11178
#define	DECLARE_ASN1_ENCODE_FUNCTIONS(315,11338
#define	DECLARE_ASN1_ENCODE_FUNCTIONS_const(320,11542
#define	DECLARE_ASN1_NDEF_FUNCTION(325,11748
#define DECLARE_ASN1_FUNCTIONS_const(328,11846
#define DECLARE_ASN1_ALLOC_FUNCTIONS_name(332,11979
#define DECLARE_ASN1_PRINT_FUNCTION(336,12091
#define DECLARE_ASN1_PRINT_FUNCTION_fname(339,12189
#define D2I_OF(343,12337
#define I2D_OF(344,12405
#define I2D_OF_const(345,12459
#define CHECKED_D2I_OF(347,12526
#define CHECKED_I2D_OF(349,12613
#define CHECKED_NEW_OF(351,12700
#define CHECKED_PTR_OF(353,12795
#define CHECKED_PPTR_OF(355,12862
#define TYPEDEF_D2I_OF(358,12933
#define TYPEDEF_I2D_OF(359,13027
#define TYPEDEF_D2I2D_OF(360,13107
typedef const ASN1_ITEM ASN1_ITEM_EXP;402,14371
#define ASN1_ITEM_ptr(405,14470
#define ASN1_ITEM_ref(408,14562
#define ASN1_ITEM_rptr(410,14606
#define DECLARE_ASN1_ITEM(412,14649
typedef const ASN1_ITEM * ASN1_ITEM_EXP(422,14898
#define ASN1_ITEM_ptr(425,15005
#define ASN1_ITEM_ref(428,15099
#define ASN1_ITEM_rptr(430,15140
#define DECLARE_ASN1_ITEM(432,15182
#define ASN1_STRFLGS_ESC_2253	444,15438
#define ASN1_STRFLGS_ESC_CTRL	445,15471
#define ASN1_STRFLGS_ESC_MSB	446,15504
#define ASN1_STRFLGS_ESC_QUOTE	454,15662
#define CHARTYPE_PRINTABLESTRING	460,15799
#define CHARTYPE_FIRST_ESC_2253	462,15897
#define CHARTYPE_LAST_ESC_2253	464,15994
#define ASN1_STRFLGS_UTF8_CONVERT	474,16198
#define ASN1_STRFLGS_IGNORE_TYPE	481,16406
#define ASN1_STRFLGS_SHOW_TYPE	484,16507
#define ASN1_STRFLGS_DUMP_ALL	494,16872
#define ASN1_STRFLGS_DUMP_UNKNOWN	495,16908
#define ASN1_STRFLGS_DUMP_DER	502,17090
#define ASN1_STRFLGS_RFC2253	509,17271
DECLARE_STACK_OF(516,17482
typedef struct asn1_type_st521,17586
	int type;523,17617
		char *ptr;ptr525,17637
		ASN1_BOOLEAN		boolean;526,17650
		ASN1_STRING *		asn1_string;527,17675
		ASN1_OBJECT *		object;528,17705
		ASN1_INTEGER *		integer;529,17730
		ASN1_ENUMERATED *	enumerated;530,17757
		ASN1_BIT_STRING *	bit_string;531,17789
		ASN1_OCTET_STRING *	octet_string;532,17821
		ASN1_PRINTABLESTRING *	printablestring;533,17857
		ASN1_T61STRING *	t61string;534,17899
		ASN1_IA5STRING *	ia5string;535,17929
		ASN1_GENERALSTRING *	generalstring;536,17959
		ASN1_BMPSTRING *	bmpstring;537,17997
		ASN1_UNIVERSALSTRING *	universalstring;538,18027
		ASN1_UTCTIME *		utctime;539,18069
		ASN1_GENERALIZEDTIME *	generalizedtime;540,18096
		ASN1_VISIBLESTRING *	visiblestring;541,18138
		ASN1_UTF8STRING *	utf8string;542,18176
		ASN1_STRING *		set;545,18300
		ASN1_STRING *		sequence;546,18322
		ASN1_VALUE *		asn1_value;547,18349
		} value;548,18377
	} ASN1_TYPE;549,18388
DECLARE_STACK_OF(551,18403
typedef STACK_OF(ASN1_TYPE)554,18463
DECLARE_ASN1_ENCODE_FUNCTIONS_const(556,18511
typedef struct NETSCAPE_X509_st559,18655
	ASN1_OCTET_STRING *header;header561,18690
	X509 *cert;cert562,18718
	} NETSCAPE_X509;563,18731
typedef struct BIT_STRING_BITNAME_st 566,18800
	int bitnum;567,18839
	const char *lname;lname568,18852
	const char *sname;sname569,18872
} BIT_STRING_BITNAME;570,18892
#define M_ASN1_STRING_length(573,18916
#define M_ASN1_STRING_length_set(574,18962
#define M_ASN1_STRING_type(575,19021
#define M_ASN1_STRING_data(576,19063
#define M_ASN1_BIT_STRING_new(579,19141
#define M_ASN1_BIT_STRING_free(581,19236
#define M_ASN1_BIT_STRING_dup(582,19305
#define M_ASN1_BIT_STRING_cmp(584,19401
#define M_ASN1_BIT_STRING_set(586,19503
#define M_ASN1_INTEGER_new(588,19579
#define M_ASN1_INTEGER_free(590,19665
#define M_ASN1_INTEGER_dup(591,19732
#define M_ASN1_INTEGER_cmp(593,19822
#define M_ASN1_ENUMERATED_new(596,19922
#define M_ASN1_ENUMERATED_free(598,20017
#define M_ASN1_ENUMERATED_dup(599,20086
#define M_ASN1_ENUMERATED_cmp(601,20182
#define M_ASN1_OCTET_STRING_new(604,20285
#define M_ASN1_OCTET_STRING_free(606,20386
#define M_ASN1_OCTET_STRING_dup(607,20457
#define M_ASN1_OCTET_STRING_cmp(609,20557
#define M_ASN1_OCTET_STRING_set(611,20661
#define M_ASN1_OCTET_STRING_print(612,20738
#define M_i2d_ASN1_OCTET_STRING(613,20815
#define B_ASN1_TIME 617,20935
#define B_ASN1_PRINTABLE 621,21006
#define B_ASN1_DIRECTORYSTRING 633,21272
#define B_ASN1_DISPLAYTEXT 640,21432
#define M_ASN1_PRINTABLE_new(646,21555
#define M_ASN1_PRINTABLE_free(647,21625
#define M_i2d_ASN1_PRINTABLE(648,21693
#define M_d2i_ASN1_PRINTABLE(650,21793
#define M_DIRECTORYSTRING_new(654,21902
#define M_DIRECTORYSTRING_free(655,21979
#define M_i2d_DIRECTORYSTRING(656,22048
#define M_d2i_DIRECTORYSTRING(658,22153
#define M_DISPLAYTEXT_new(662,22269
#define M_DISPLAYTEXT_free(663,22340
#define M_i2d_DISPLAYTEXT(664,22405
#define M_d2i_DISPLAYTEXT(666,22506
#define M_ASN1_PRINTABLESTRING_new(670,22614
#define M_ASN1_PRINTABLESTRING_free(672,22724
#define M_i2d_ASN1_PRINTABLESTRING(673,22798
#define M_d2i_ASN1_PRINTABLESTRING(676,22923
#define M_ASN1_T61STRING_new(680,23066
#define M_ASN1_T61STRING_free(682,23158
#define M_i2d_ASN1_T61STRING(683,23226
#define M_d2i_ASN1_T61STRING(686,23339
#define M_ASN1_IA5STRING_new(690,23464
#define M_ASN1_IA5STRING_free(692,23556
#define M_ASN1_IA5STRING_dup(693,23624
#define M_i2d_ASN1_IA5STRING(695,23718
#define M_d2i_ASN1_IA5STRING(698,23832
#define M_ASN1_UTCTIME_new(702,23958
#define M_ASN1_UTCTIME_free(704,24044
#define M_ASN1_UTCTIME_dup(705,24110
#define M_ASN1_GENERALIZEDTIME_new(708,24201
#define M_ASN1_GENERALIZEDTIME_free(710,24311
#define M_ASN1_GENERALIZEDTIME_dup(711,24385
#define M_ASN1_TIME_new(714,24491
#define M_ASN1_TIME_free(716,24571
#define M_ASN1_TIME_dup(717,24634
#define M_ASN1_GENERALSTRING_new(720,24718
#define M_ASN1_GENERALSTRING_free(722,24822
#define M_i2d_ASN1_GENERALSTRING(723,24894
#define M_d2i_ASN1_GENERALSTRING(726,25016
#define M_ASN1_UNIVERSALSTRING_new(730,25153
#define M_ASN1_UNIVERSALSTRING_free(732,25263
#define M_i2d_ASN1_UNIVERSALSTRING(733,25337
#define M_d2i_ASN1_UNIVERSALSTRING(736,25463
#define M_ASN1_BMPSTRING_new(740,25606
#define M_ASN1_BMPSTRING_free(742,25698
#define M_i2d_ASN1_BMPSTRING(743,25766
#define M_d2i_ASN1_BMPSTRING(746,25880
#define M_ASN1_VISIBLESTRING_new(750,26005
#define M_ASN1_VISIBLESTRING_free(752,26109
#define M_i2d_ASN1_VISIBLESTRING(753,26181
#define M_d2i_ASN1_VISIBLESTRING(756,26303
#define M_ASN1_UTF8STRING_new(760,26440
#define M_ASN1_UTF8STRING_free(762,26535
#define M_i2d_ASN1_UTF8STRING(763,26604
#define M_d2i_ASN1_UTF8STRING(766,26720
#define IS_SEQUENCE	771,26897
#define IS_SET	772,26919
DECLARE_ASN1_FUNCTIONS_fname(774,26938
#define ASN1_dup_of(956,34558
#define ASN1_dup_of_const(961,34716
#define M_ASN1_new_of(970,35014
#define M_ASN1_free_of(971,35086
#define ASN1_d2i_fp_of(977,35290
#define ASN1_i2d_fp_of(986,35579
#define ASN1_i2d_fp_of_const(991,35706
#define ASN1_d2i_bio_of(1005,36166
#define ASN1_i2d_bio_of(1014,36474
#define ASN1_i2d_bio_of_const(1019,36605
#define ASN1_pack_string_of(1061,38386
#define ASN1_PCTX_FLAGS_SHOW_ABSENT	1100,39974
#define ASN1_PCTX_FLAGS_SHOW_SEQUENCE	1102,40055
#define ASN1_PCTX_FLAGS_SHOW_SSOF	1104,40144
#define ASN1_PCTX_FLAGS_SHOW_TYPE	1106,40224
#define ASN1_PCTX_FLAGS_NO_ANY_TYPE	1108,40299
#define ASN1_PCTX_FLAGS_NO_MSTRING_TYPE	1110,40381
#define ASN1_PCTX_FLAGS_NO_FIELD_NAME	1112,40469
#define ASN1_PCTX_FLAGS_SHOW_FIELD_STRUCT_NAME	1114,40564
#define ASN1_PCTX_FLAGS_NO_STRUCT_NAME	1116,40667
#define ASN1_F_A2D_ASN1_OBJECT	1159,42396
#define ASN1_F_A2I_ASN1_ENUMERATED	1160,42435
#define ASN1_F_A2I_ASN1_INTEGER	1161,42477
#define ASN1_F_A2I_ASN1_STRING	1162,42517
#define ASN1_F_APPEND_EXP	1163,42556
#define ASN1_F_ASN1_BIT_STRING_SET_BIT	1164,42590
#define ASN1_F_ASN1_CB	1165,42636
#define ASN1_F_ASN1_CHECK_TLEN	1166,42668
#define ASN1_F_ASN1_COLLATE_PRIMITIVE	1167,42707
#define ASN1_F_ASN1_COLLECT	1168,42752
#define ASN1_F_ASN1_D2I_EX_PRIMITIVE	1169,42788
#define ASN1_F_ASN1_D2I_FP	1170,42832
#define ASN1_F_ASN1_D2I_READ_BIO	1171,42867
#define ASN1_F_ASN1_DIGEST	1172,42907
#define ASN1_F_ASN1_DO_ADB	1173,42942
#define ASN1_F_ASN1_DUP	1174,42977
#define ASN1_F_ASN1_ENUMERATED_SET	1175,43010
#define ASN1_F_ASN1_ENUMERATED_TO_BN	1176,43052
#define ASN1_F_ASN1_EX_C2I	1177,43096
#define ASN1_F_ASN1_FIND_END	1178,43131
#define ASN1_F_ASN1_GENERALIZEDTIME_ADJ	1179,43168
#define ASN1_F_ASN1_GENERALIZEDTIME_SET	1180,43215
#define ASN1_F_ASN1_GENERATE_V3	1181,43262
#define ASN1_F_ASN1_GET_OBJECT	1182,43302
#define ASN1_F_ASN1_HEADER_NEW	1183,43341
#define ASN1_F_ASN1_I2D_BIO	1184,43380
#define ASN1_F_ASN1_I2D_FP	1185,43416
#define ASN1_F_ASN1_INTEGER_SET	1186,43451
#define ASN1_F_ASN1_INTEGER_TO_BN	1187,43491
#define ASN1_F_ASN1_ITEM_D2I_FP	1188,43532
#define ASN1_F_ASN1_ITEM_DUP	1189,43572
#define ASN1_F_ASN1_ITEM_EX_COMBINE_NEW	1190,43609
#define ASN1_F_ASN1_ITEM_EX_D2I	1191,43656
#define ASN1_F_ASN1_ITEM_I2D_BIO	1192,43696
#define ASN1_F_ASN1_ITEM_I2D_FP	1193,43736
#define ASN1_F_ASN1_ITEM_PACK	1194,43776
#define ASN1_F_ASN1_ITEM_SIGN	1195,43814
#define ASN1_F_ASN1_ITEM_SIGN_CTX	1196,43852
#define ASN1_F_ASN1_ITEM_UNPACK	1197,43893
#define ASN1_F_ASN1_ITEM_VERIFY	1198,43933
#define ASN1_F_ASN1_MBSTRING_NCOPY	1199,43973
#define ASN1_F_ASN1_OBJECT_NEW	1200,44015
#define ASN1_F_ASN1_OUTPUT_DATA	1201,44054
#define ASN1_F_ASN1_PACK_STRING	1202,44094
#define ASN1_F_ASN1_PCTX_NEW	1203,44134
#define ASN1_F_ASN1_PKCS5_PBE_SET	1204,44171
#define ASN1_F_ASN1_SEQ_PACK	1205,44212
#define ASN1_F_ASN1_SEQ_UNPACK	1206,44249
#define ASN1_F_ASN1_SIGN	1207,44288
#define ASN1_F_ASN1_STR2TYPE	1208,44321
#define ASN1_F_ASN1_STRING_SET	1209,44358
#define ASN1_F_ASN1_STRING_TABLE_ADD	1210,44397
#define ASN1_F_ASN1_STRING_TYPE_NEW	1211,44441
#define ASN1_F_ASN1_TEMPLATE_EX_D2I	1212,44484
#define ASN1_F_ASN1_TEMPLATE_NEW	1213,44527
#define ASN1_F_ASN1_TEMPLATE_NOEXP_D2I	1214,44567
#define ASN1_F_ASN1_TIME_ADJ	1215,44613
#define ASN1_F_ASN1_TIME_SET	1216,44650
#define ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING	1217,44687
#define ASN1_F_ASN1_TYPE_GET_OCTETSTRING	1218,44738
#define ASN1_F_ASN1_UNPACK_STRING	1219,44785
#define ASN1_F_ASN1_UTCTIME_ADJ	1220,44826
#define ASN1_F_ASN1_UTCTIME_SET	1221,44866
#define ASN1_F_ASN1_VERIFY	1222,44906
#define ASN1_F_B64_READ_ASN1	1223,44941
#define ASN1_F_B64_WRITE_ASN1	1224,44978
#define ASN1_F_BIO_NEW_NDEF	1225,45016
#define ASN1_F_BITSTR_CB	1226,45052
#define ASN1_F_BN_TO_ASN1_ENUMERATED	1227,45085
#define ASN1_F_BN_TO_ASN1_INTEGER	1228,45129
#define ASN1_F_C2I_ASN1_BIT_STRING	1229,45170
#define ASN1_F_C2I_ASN1_INTEGER	1230,45212
#define ASN1_F_C2I_ASN1_OBJECT	1231,45252
#define ASN1_F_COLLECT_DATA	1232,45291
#define ASN1_F_D2I_ASN1_BIT_STRING	1233,45327
#define ASN1_F_D2I_ASN1_BOOLEAN	1234,45369
#define ASN1_F_D2I_ASN1_BYTES	1235,45409
#define ASN1_F_D2I_ASN1_GENERALIZEDTIME	1236,45447
#define ASN1_F_D2I_ASN1_HEADER	1237,45494
#define ASN1_F_D2I_ASN1_INTEGER	1238,45533
#define ASN1_F_D2I_ASN1_OBJECT	1239,45573
#define ASN1_F_D2I_ASN1_SET	1240,45612
#define ASN1_F_D2I_ASN1_TYPE_BYTES	1241,45648
#define ASN1_F_D2I_ASN1_UINTEGER	1242,45690
#define ASN1_F_D2I_ASN1_UTCTIME	1243,45730
#define ASN1_F_D2I_AUTOPRIVATEKEY	1244,45770
#define ASN1_F_D2I_NETSCAPE_RSA	1245,45811
#define ASN1_F_D2I_NETSCAPE_RSA_2	1246,45851
#define ASN1_F_D2I_PRIVATEKEY	1247,45892
#define ASN1_F_D2I_PUBLICKEY	1248,45930
#define ASN1_F_D2I_RSA_NET	1249,45967
#define ASN1_F_D2I_RSA_NET_2	1250,46002
#define ASN1_F_D2I_X509	1251,46039
#define ASN1_F_D2I_X509_CINF	1252,46072
#define ASN1_F_D2I_X509_PKEY	1253,46109
#define ASN1_F_I2D_ASN1_BIO_STREAM	1254,46146
#define ASN1_F_I2D_ASN1_SET	1255,46188
#define ASN1_F_I2D_ASN1_TIME	1256,46224
#define ASN1_F_I2D_DSA_PUBKEY	1257,46261
#define ASN1_F_I2D_EC_PUBKEY	1258,46299
#define ASN1_F_I2D_PRIVATEKEY	1259,46336
#define ASN1_F_I2D_PUBLICKEY	1260,46374
#define ASN1_F_I2D_RSA_NET	1261,46411
#define ASN1_F_I2D_RSA_PUBKEY	1262,46446
#define ASN1_F_LONG_C2I	1263,46484
#define ASN1_F_OID_MODULE_INIT	1264,46517
#define ASN1_F_PARSE_TAGGING	1265,46556
#define ASN1_F_PKCS5_PBE2_SET_IV	1266,46593
#define ASN1_F_PKCS5_PBE_SET	1267,46633
#define ASN1_F_PKCS5_PBE_SET0_ALGOR	1268,46670
#define ASN1_F_PKCS5_PBKDF2_SET	1269,46713
#define ASN1_F_SMIME_READ_ASN1	1270,46753
#define ASN1_F_SMIME_TEXT	1271,46792
#define ASN1_F_X509_CINF_NEW	1272,46826
#define ASN1_F_X509_CRL_ADD0_REVOKED	1273,46863
#define ASN1_F_X509_INFO_NEW	1274,46907
#define ASN1_F_X509_NAME_ENCODE	1275,46944
#define ASN1_F_X509_NAME_EX_D2I	1276,46984
#define ASN1_F_X509_NAME_EX_NEW	1277,47024
#define ASN1_F_X509_NEW	1278,47064
#define ASN1_F_X509_PKEY_NEW	1279,47097
#define ASN1_R_ADDING_OBJECT	1282,47155
#define ASN1_R_ASN1_PARSE_ERROR	1283,47192
#define ASN1_R_ASN1_SIG_PARSE_ERROR	1284,47232
#define ASN1_R_AUX_ERROR	1285,47275
#define ASN1_R_BAD_CLASS	1286,47308
#define ASN1_R_BAD_OBJECT_HEADER	1287,47341
#define ASN1_R_BAD_PASSWORD_READ	1288,47381
#define ASN1_R_BAD_TAG	1289,47421
#define ASN1_R_BMPSTRING_IS_WRONG_LENGTH	1290,47453
#define ASN1_R_BN_LIB	1291,47500
#define ASN1_R_BOOLEAN_IS_WRONG_LENGTH	1292,47531
#define ASN1_R_BUFFER_TOO_SMALL	1293,47577
#define ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER	1294,47617
#define ASN1_R_CONTEXT_NOT_INITIALISED	1295,47670
#define ASN1_R_DATA_IS_WRONG	1296,47716
#define ASN1_R_DECODE_ERROR	1297,47753
#define ASN1_R_DECODING_ERROR	1298,47789
#define ASN1_R_DEPTH_EXCEEDED	1299,47827
#define ASN1_R_DIGEST_AND_KEY_TYPE_NOT_SUPPORTED	1300,47865
#define ASN1_R_ENCODE_ERROR	1301,47919
#define ASN1_R_ERROR_GETTING_TIME	1302,47955
#define ASN1_R_ERROR_LOADING_SECTION	1303,47996
#define ASN1_R_ERROR_PARSING_SET_ELEMENT	1304,48040
#define ASN1_R_ERROR_SETTING_CIPHER_PARAMS	1305,48087
#define ASN1_R_EXPECTING_AN_INTEGER	1306,48136
#define ASN1_R_EXPECTING_AN_OBJECT	1307,48179
#define ASN1_R_EXPECTING_A_BOOLEAN	1308,48221
#define ASN1_R_EXPECTING_A_TIME	1309,48263
#define ASN1_R_EXPLICIT_LENGTH_MISMATCH	1310,48303
#define ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED	1311,48350
#define ASN1_R_FIELD_MISSING	1312,48400
#define ASN1_R_FIRST_NUM_TOO_LARGE	1313,48437
#define ASN1_R_HEADER_TOO_LONG	1314,48479
#define ASN1_R_ILLEGAL_BITSTRING_FORMAT	1315,48518
#define ASN1_R_ILLEGAL_BOOLEAN	1316,48565
#define ASN1_R_ILLEGAL_CHARACTERS	1317,48604
#define ASN1_R_ILLEGAL_FORMAT	1318,48645
#define ASN1_R_ILLEGAL_HEX	1319,48683
#define ASN1_R_ILLEGAL_IMPLICIT_TAG	1320,48718
#define ASN1_R_ILLEGAL_INTEGER	1321,48761
#define ASN1_R_ILLEGAL_NESTED_TAGGING	1322,48800
#define ASN1_R_ILLEGAL_NULL	1323,48845
#define ASN1_R_ILLEGAL_NULL_VALUE	1324,48881
#define ASN1_R_ILLEGAL_OBJECT	1325,48922
#define ASN1_R_ILLEGAL_OPTIONAL_ANY	1326,48960
#define ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE	1327,49003
#define ASN1_R_ILLEGAL_TAGGED_ANY	1328,49057
#define ASN1_R_ILLEGAL_TIME_VALUE	1329,49098
#define ASN1_R_INTEGER_NOT_ASCII_FORMAT	1330,49139
#define ASN1_R_INTEGER_TOO_LARGE_FOR_LONG	1331,49186
#define ASN1_R_INVALID_BMPSTRING_LENGTH	1332,49234
#define ASN1_R_INVALID_DIGIT	1333,49281
#define ASN1_R_INVALID_MIME_TYPE	1334,49318
#define ASN1_R_INVALID_MODIFIER	1335,49358
#define ASN1_R_INVALID_NUMBER	1336,49398
#define ASN1_R_INVALID_OBJECT_ENCODING	1337,49436
#define ASN1_R_INVALID_SEPARATOR	1338,49482
#define ASN1_R_INVALID_TIME_FORMAT	1339,49522
#define ASN1_R_INVALID_UNIVERSALSTRING_LENGTH	1340,49564
#define ASN1_R_INVALID_UTF8STRING	1341,49616
#define ASN1_R_IV_TOO_LARGE	1342,49657
#define ASN1_R_LENGTH_ERROR	1343,49693
#define ASN1_R_LIST_ERROR	1344,49729
#define ASN1_R_MIME_NO_CONTENT_TYPE	1345,49763
#define ASN1_R_MIME_PARSE_ERROR	1346,49806
#define ASN1_R_MIME_SIG_PARSE_ERROR	1347,49846
#define ASN1_R_MISSING_EOC	1348,49889
#define ASN1_R_MISSING_SECOND_NUMBER	1349,49924
#define ASN1_R_MISSING_VALUE	1350,49968
#define ASN1_R_MSTRING_NOT_UNIVERSAL	1351,50005
#define ASN1_R_MSTRING_WRONG_TAG	1352,50049
#define ASN1_R_NESTED_ASN1_STRING	1353,50089
#define ASN1_R_NON_HEX_CHARACTERS	1354,50130
#define ASN1_R_NOT_ASCII_FORMAT	1355,50171
#define ASN1_R_NOT_ENOUGH_DATA	1356,50211
#define ASN1_R_NO_CONTENT_TYPE	1357,50250
#define ASN1_R_NO_DEFAULT_DIGEST	1358,50289
#define ASN1_R_NO_MATCHING_CHOICE_TYPE	1359,50329
#define ASN1_R_NO_MULTIPART_BODY_FAILURE	1360,50375
#define ASN1_R_NO_MULTIPART_BOUNDARY	1361,50422
#define ASN1_R_NO_SIG_CONTENT_TYPE	1362,50466
#define ASN1_R_NULL_IS_WRONG_LENGTH	1363,50508
#define ASN1_R_OBJECT_NOT_ASCII_FORMAT	1364,50551
#define ASN1_R_ODD_NUMBER_OF_CHARS	1365,50597
#define ASN1_R_PRIVATE_KEY_HEADER_MISSING	1366,50639
#define ASN1_R_SECOND_NUMBER_TOO_LARGE	1367,50687
#define ASN1_R_SEQUENCE_LENGTH_MISMATCH	1368,50733
#define ASN1_R_SEQUENCE_NOT_CONSTRUCTED	1369,50780
#define ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG	1370,50827
#define ASN1_R_SHORT_LINE	1371,50877
#define ASN1_R_SIG_INVALID_MIME_TYPE	1372,50911
#define ASN1_R_STREAMING_NOT_SUPPORTED	1373,50955
#define ASN1_R_STRING_TOO_LONG	1374,51001
#define ASN1_R_STRING_TOO_SHORT	1375,51040
#define ASN1_R_TAG_VALUE_TOO_HIGH	1376,51080
#define ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD 1377,51121
#define ASN1_R_TIME_NOT_ASCII_FORMAT	1378,51192
#define ASN1_R_TOO_LONG	1379,51236
#define ASN1_R_TYPE_NOT_CONSTRUCTED	1380,51269
#define ASN1_R_UNABLE_TO_DECODE_RSA_KEY	1381,51312
#define ASN1_R_UNABLE_TO_DECODE_RSA_PRIVATE_KEY	1382,51359
#define ASN1_R_UNEXPECTED_EOC	1383,51413
#define ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH	1384,51451
#define ASN1_R_UNKNOWN_FORMAT	1385,51504
#define ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM	1386,51542
#define ASN1_R_UNKNOWN_OBJECT_TYPE	1387,51596
#define ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE	1388,51638
#define ASN1_R_UNKNOWN_SIGNATURE_ALGORITHM	1389,51684
#define ASN1_R_UNKNOWN_TAG	1390,51733
#define ASN1_R_UNKOWN_FORMAT	1391,51768
#define ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE	1392,51805
#define ASN1_R_UNSUPPORTED_CIPHER	1393,51858
#define ASN1_R_UNSUPPORTED_ENCRYPTION_ALGORITHM	1394,51899
#define ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE	1395,51953
#define ASN1_R_UNSUPPORTED_TYPE	1396,52002
#define ASN1_R_WRONG_PUBLIC_KEY_TYPE	1397,52042
#define ASN1_R_WRONG_TAG	1398,52086
#define ASN1_R_WRONG_TYPE	1399,52119

crypto/asn1/x_algor.c,93
} ASN1_SEQUENCE_END(67,2957
void X509_ALGOR_get0(112,3935
void X509_ALGOR_set_md(133,4345

crypto/asn1/evp_asn1.c,165
int ASN1_TYPE_set_octetstring(64,3297
int ASN1_TYPE_get_octetstring(75,3604
int ASN1_TYPE_set_int_octetstring(96,4074
int ASN1_TYPE_get_int_octetstring(138,5109

crypto/asn1/asn1t.h,8372
#define HEADER_ASN1T_H59,2759
# undef OPENSSL_EXTERN66,2890
# define OPENSSL_EXTERN 67,2913
#define ASN1_ADB_ptr(80,3171
#define ASN1_ITEM_start(85,3283
#define ASN1_ITEM_end(88,3366
#define ASN1_ADB_ptr(94,3485
#define ASN1_ITEM_start(99,3599
#define ASN1_ITEM_end(104,3717
#define ASN1_ITEM_TEMPLATE(114,3833
#define ASN1_ITEM_TEMPLATE_END(117,3915
#define ASN1_SEQUENCE(152,4660
#define ASN1_SEQUENCE_END(155,4738
#define ASN1_SEQUENCE_END_name(157,4812
#define ASN1_NDEF_SEQUENCE(169,5067
#define ASN1_NDEF_SEQUENCE_cb(172,5126
#define ASN1_SEQUENCE_cb(175,5199
#define ASN1_BROKEN_SEQUENCE(179,5323
#define ASN1_SEQUENCE_ref(183,5461
#define ASN1_SEQUENCE_enc(187,5636
#define ASN1_NDEF_SEQUENCE_END(191,5802
#define ASN1_BROKEN_SEQUENCE_END(203,6052
#define ASN1_SEQUENCE_END_enc(205,6132
#define ASN1_SEQUENCE_END_cb(207,6215
#define ASN1_SEQUENCE_END_ref(209,6297
#define ASN1_NDEF_SEQUENCE_END_cb(221,6559
#define ASN1_CHOICE(256,7380
#define ASN1_CHOICE_cb(259,7455
#define ASN1_CHOICE_END(263,7575
#define ASN1_CHOICE_END_name(265,7645
#define ASN1_CHOICE_END_selector(267,7736
#define ASN1_CHOICE_END_cb(279,8008
#define ASN1_EX_TEMPLATE_TYPE(293,8344
#define ASN1_EX_TYPE(301,8542
#define ASN1_EX_COMBINE(307,8734
#define ASN1_IMP_EX(312,8890
#define ASN1_EXP_EX(315,9009
#define ASN1_ADB_OBJECT(321,9235
#define ASN1_ADB_INTEGER(322,9344
#define ASN1_ADB_OBJECT(324,9460
#define ASN1_ADB_INTEGER(325,9547
#define ASN1_SIMPLE(328,9666
#define ASN1_OPT(331,9774
#define ASN1_IMP(334,9904
#define ASN1_IMP_OPT(337,10032
#define ASN1_EXP(341,10172
#define ASN1_EXP_OPT(342,10256
#define ASN1_SEQUENCE_OF(345,10385
#define ASN1_SEQUENCE_OF_OPT(349,10523
#define ASN1_SET_OF(354,10693
#define ASN1_SET_OF_OPT(357,10794
#define ASN1_IMP_SET_OF(362,10998
#define ASN1_EXP_SET_OF(365,11110
#define ASN1_IMP_SET_OF_OPT(368,11222
#define ASN1_EXP_SET_OF_OPT(371,11357
#define ASN1_IMP_SEQUENCE_OF(374,11492
#define ASN1_IMP_SEQUENCE_OF_OPT(377,11614
#define ASN1_EXP_SEQUENCE_OF(380,11759
#define ASN1_EXP_SEQUENCE_OF_OPT(383,11881
#define ASN1_NDEF_EXP(387,12082
#define ASN1_NDEF_EXP_OPT(391,12255
#define ASN1_ADB(396,12427
#define ASN1_ADB_END(401,12539
#define ASN1_ADB_END(415,12793
#define ADB_ENTRY(435,13185
#define ASN1_ADB_TEMPLATE(437,13235
struct ASN1_TEMPLATE_st 446,13530
unsigned long flags;447,13556
long tag;448,13598
unsigned long offset;449,13644
const char *field_name;field_name451,13735
ASN1_ITEM_EXP *item;item453,13784
#define ASN1_TEMPLATE_item(458,13921
#define ASN1_TEMPLATE_adb(459,13965
typedef struct ASN1_ADB_TABLE_st ASN1_ADB_TABLE;461,14009
typedef struct ASN1_ADB_st ASN1_ADB;462,14058
struct ASN1_ADB_st 464,14096
	unsigned long flags;465,14117
	unsigned long offset;466,14159
	STACK_OF(467,14213
struct ASN1_ADB_TABLE_st 474,14529
	long value;475,14556
	const ASN1_TEMPLATE tt;476,14614
#define ASN1_TFLG_OPTIONAL	482,14716
#define ASN1_TFLG_SET_OF	485,14774
#define ASN1_TFLG_SEQUENCE_OF	488,14840
#define ASN1_TFLG_SET_ORDER	495,15055
#define ASN1_TFLG_SK_MASK	498,15132
#define ASN1_TFLG_IMPTAG	506,15332
#define ASN1_TFLG_EXPTAG	510,15425
#define ASN1_TFLG_TAG_MASK	512,15462
#define ASN1_TFLG_IMPLICIT	515,15533
#define ASN1_TFLG_EXPLICIT	518,15628
#define ASN1_TFLG_UNIVERSAL	527,15895
#define ASN1_TFLG_APPLICATION	529,15955
#define ASN1_TFLG_CONTEXT	531,16022
#define ASN1_TFLG_PRIVATE	533,16076
#define ASN1_TFLG_TAG_CLASS	535,16112
#define ASN1_TFLG_ADB_MASK	543,16325
#define ASN1_TFLG_ADB_OID	545,16362
#define ASN1_TFLG_ADB_INT	547,16398
#define ASN1_TFLG_COMBINE	557,16716
#define ASN1_TFLG_NDEF	564,16897
struct ASN1_ITEM_st 568,16975
char itype;569,16997
long utype;570,17070
const ASN1_TEMPLATE *templates;templates571,17106
long tcount;572,17193
const void *funcs;funcs573,17256
long size;574,17314
const char *sname;sname576,17385
#define ASN1_ITYPE_PRIMITIVE	624,18808
#define ASN1_ITYPE_SEQUENCE	626,18843
#define ASN1_ITYPE_CHOICE	628,18877
#define ASN1_ITYPE_COMPAT	630,18909
#define ASN1_ITYPE_EXTERN	632,18941
#define ASN1_ITYPE_MSTRING	634,18973
#define ASN1_ITYPE_NDEF_SEQUENCE	636,19006
struct ASN1_TLC_st{ASN1_TLC_st643,19143
	char valid;644,19163
	int ret;645,19205
	long plen;646,19234
	int ptag;647,19259
	int pclass;648,19288
	int hdrlen;649,19319
typedef ASN1_VALUE * ASN1_new_func(654,19399
typedef void ASN1_free_func(655,19441
typedef ASN1_VALUE * ASN1_d2i_func(656,19485
typedef int ASN1_i2d_func(657,19577
typedef int ASN1_ex_d2i(659,19641
typedef int ASN1_ex_i2d(662,19794
typedef int ASN1_ex_new_func(663,19901
typedef void ASN1_ex_free_func(664,19971
typedef int ASN1_ex_print_func(666,20044
typedef int ASN1_primitive_i2c(670,20174
typedef int ASN1_primitive_c2i(671,20280
typedef int ASN1_primitive_print(672,20416
typedef struct ASN1_COMPAT_FUNCS_st 674,20536
	ASN1_new_func *asn1_new;asn1_new675,20574
	ASN1_free_func *asn1_free;asn1_free676,20600
	ASN1_d2i_func *asn1_d2i;asn1_d2i677,20628
	ASN1_i2d_func *asn1_i2d;asn1_i2d678,20654
} ASN1_COMPAT_FUNCS;679,20680
typedef struct ASN1_EXTERN_FUNCS_st 681,20702
	void *app_data;app_data682,20740
	ASN1_ex_new_func *asn1_ex_new;asn1_ex_new683,20757
	ASN1_ex_free_func *asn1_ex_free;asn1_ex_free684,20789
	ASN1_ex_free_func *asn1_ex_clear;asn1_ex_clear685,20823
	ASN1_ex_d2i *asn1_ex_d2i;asn1_ex_d2i686,20858
	ASN1_ex_i2d *asn1_ex_i2d;asn1_ex_i2d687,20885
	ASN1_ex_print_func *asn1_ex_print;asn1_ex_print688,20912
} ASN1_EXTERN_FUNCS;689,20948
typedef struct ASN1_PRIMITIVE_FUNCS_st 691,20970
	void *app_data;app_data692,21011
	unsigned long flags;693,21028
	ASN1_ex_new_func *prim_new;prim_new694,21050
	ASN1_ex_free_func *prim_free;prim_free695,21079
	ASN1_ex_free_func *prim_clear;prim_clear696,21110
	ASN1_primitive_c2i *prim_c2i;prim_c2i697,21142
	ASN1_primitive_i2c *prim_i2c;prim_i2c698,21173
	ASN1_primitive_print *prim_print;prim_print699,21204
} ASN1_PRIMITIVE_FUNCS;700,21239
typedef int ASN1_aux_cb(719,21966
typedef struct ASN1_AUX_st 722,22062
	void *app_data;app_data723,22091
	int flags;724,22108
	int ref_offset;725,22120
	int ref_lock;726,22170
	ASN1_aux_cb *asn1_cb;asn1_cb727,22209
	int enc_offset;728,22232
} ASN1_AUX;729,22290
typedef struct ASN1_PRINT_ARG_st 732,22368
	BIO *out;out733,22403
	int indent;734,22414
	const ASN1_PCTX *pctx;pctx735,22427
} ASN1_PRINT_ARG;736,22451
typedef struct ASN1_STREAM_ARG_st 739,22539
	BIO *out;out741,22604
	BIO *ndef_bio;ndef_bio743,22648
	unsigned char **boundary;boundary745,22694
} ASN1_STREAM_ARG;746,22721
#define ASN1_AFLG_REFCOUNT	751,22794
#define ASN1_AFLG_ENCODING	753,22884
#define ASN1_AFLG_BROKEN	755,22950
#define ASN1_OP_NEW_PRE	759,23014
#define ASN1_OP_NEW_POST	760,23041
#define ASN1_OP_FREE_PRE	761,23068
#define ASN1_OP_FREE_POST	762,23095
#define ASN1_OP_D2I_PRE	763,23123
#define ASN1_OP_D2I_POST	764,23150
#define ASN1_OP_I2D_PRE	765,23177
#define ASN1_OP_I2D_POST	766,23204
#define ASN1_OP_PRINT_PRE	767,23231
#define ASN1_OP_PRINT_POST	768,23259
#define ASN1_OP_STREAM_PRE	769,23288
#define ASN1_OP_STREAM_POST	770,23318
#define ASN1_OP_DETACHED_PRE	771,23349
#define ASN1_OP_DETACHED_POST	772,23381
#define IMPLEMENT_ASN1_TYPE(775,23457
#define IMPLEMENT_ASN1_TYPE_ex(776,23535
#define IMPLEMENT_ASN1_MSTRING(782,23756
#define IMPLEMENT_COMPAT_ASN1(789,24004
#define IMPLEMENT_COMPAT_ASN1_type(791,24093
#define IMPLEMENT_EXTERN_ASN1(808,24468
#define IMPLEMENT_ASN1_FUNCTIONS(821,24725
#define IMPLEMENT_ASN1_FUNCTIONS_name(823,24822
#define IMPLEMENT_ASN1_FUNCTIONS_ENCODE_name(825,24932
#define IMPLEMENT_STATIC_ASN1_ALLOC_FUNCTIONS(828,25061
#define IMPLEMENT_ASN1_ALLOC_FUNCTIONS(831,25190
#define IMPLEMENT_ASN1_ALLOC_FUNCTIONS_pfname(834,25303
#define IMPLEMENT_ASN1_ALLOC_FUNCTIONS_fname(844,25588
#define IMPLEMENT_ASN1_FUNCTIONS_fname(854,25859
#define IMPLEMENT_ASN1_ENCODE_FUNCTIONS_fname(858,26049
#define IMPLEMENT_ASN1_NDEF_FUNCTION(868,26419
#define IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname(877,26720
#define IMPLEMENT_ASN1_DUP_FUNCTION(887,27102
#define IMPLEMENT_ASN1_PRINT_FUNCTION(893,27266
#define IMPLEMENT_ASN1_PRINT_FUNCTION_fname(896,27376
#define IMPLEMENT_ASN1_FUNCTIONS_const(904,27637
#define IMPLEMENT_ASN1_FUNCTIONS_const_fname(907,27742
DECLARE_ASN1_ITEM(913,27992

crypto/asn1/nsseq.c,61
static int nsseq_cb(65,2859
} ASN1_SEQUENCE_END_cb(81,3368

crypto/asn1/tasn_typ.c,29
IMPLEMENT_ASN1_TYPE(65,2845

crypto/asn1/a_type.c,112
int ASN1_TYPE_get(64,3295
void ASN1_TYPE_set(72,3429
int ASN1_TYPE_set1(86,3715
IMPLEMENT_STACK_OF(112,4171

crypto/asn1/a_strnid.c,839
static STACK_OF(66,2852
unsigned long ASN1_STRING_get_default_mask(84,3383
int ASN1_STRING_set_default_mask_asc(98,3845
ASN1_STRING *ASN1_STRING_set_by_NID(ASN1_STRING_set_by_NID123,4630
#define ub_name	147,5329
#define ub_common_name	148,5354
#define ub_locality_name	149,5382
#define ub_state_name	150,5412
#define ub_organization_name	151,5440
#define ub_organization_unit_name	152,5473
#define ub_title	153,5510
#define ub_email_address	154,5532
#define ub_serial_number	155,5562
static const ASN1_STRING_TABLE tbl_standard[tbl_standard160,5637
static int sk_table_cmp(182,6875
static int table_cmp(190,7084
ASN1_STRING_TABLE *ASN1_STRING_TABLE_get(ASN1_STRING_TABLE_get197,7267
int ASN1_STRING_TABLE_add(212,7673
void ASN1_STRING_TABLE_cleanup(242,8526
static void st_free(251,8698
IMPLEMENT_STACK_OF(257,8805

crypto/asn1/asn1_par.c,173
static int asn1_print_info(69,3529
int ASN1_parse(102,4353
int ASN1_parse_dump(107,4478
static int asn1_parse2(112,4621
const char *ASN1_tag2str(ASN1_tag2str418,10876

crypto/asn1/t_x509.c,419
int X509_print_fp(78,3586
int X509_print_ex_fp(83,3697
int X509_print(100,4102
int X509_print_ex(105,4204
int X509_ocspid_print 246,7688
int X509_signature_dump(294,8888
int X509_signature_print(316,9316
int ASN1_STRING_print(341,9980
int ASN1_TIME_print(371,10451
static const char *mon[mon380,10708
int ASN1_GENERALIZEDTIME_print(386,10831
int ASN1_UTCTIME_print(434,11963
int X509_NAME_print(470,12784

crypto/asn1/t_bitst.c,114
int ASN1_BIT_STRING_name_print(64,2830
int ASN1_BIT_STRING_set_asc(81,3229
int ASN1_BIT_STRING_num_asc(94,3507

crypto/asn1/a_utf8.c,47
int UTF8_getc(76,3711
int UTF8_putc(155,6151

crypto/asn1/a_d2i_fp.c,251
void *ASN1_d2i_fp(ASN1_d2i_fp70,3420
void *ASN1_d2i_bio(ASN1_d2i_bio87,3811
void *ASN1_item_d2i_bio(ASN1_item_d2i_bio106,4135
void *ASN1_item_d2i_fp(ASN1_item_d2i_fp124,4483
#define HEADER_SIZE 141,4864
static int asn1_d2i_read_bio(142,4888

crypto/asn1/d2i_pu.c,47
EVP_PKEY *d2i_PublicKey(d2i_PublicKey75,3506

crypto/asn1/x_req.c,96
static int rinf_cb(82,4024
} ASN1_SEQUENCE_END_enc(102,4652
} ASN1_SEQUENCE_END_ref(110,4950

crypto/asn1/a_int.c,450
ASN1_INTEGER *ASN1_INTEGER_dup(ASN1_INTEGER_dup64,3288
int ASN1_INTEGER_cmp(67,3376
int i2c_ASN1_INTEGER(114,5080
ASN1_INTEGER *c2i_ASN1_INTEGER(c2i_ASN1_INTEGER178,6337
ASN1_INTEGER *d2i_ASN1_UINTEGER(d2i_ASN1_UINTEGER271,8409
int ASN1_INTEGER_set(335,9602
long ASN1_INTEGER_get(375,10306
ASN1_INTEGER *BN_to_ASN1_INTEGER(BN_to_ASN1_INTEGER404,10751
BIGNUM *ASN1_INTEGER_to_BN(ASN1_INTEGER_to_BN446,11582
IMPLEMENT_STACK_OF(457,11855

crypto/asn1/a_verify.c,56
int ASN1_verify(77,3492
int ASN1_item_verify(134,4697

crypto/asn1/x_pkey.c,154
int i2d_X509_PKEY(67,3373
X509_PKEY *d2i_X509_PKEY(d2i_X509_PKEY72,3444
X509_PKEY *X509_PKEY_new(X509_PKEY_new107,4406
void X509_PKEY_free(127,4854

crypto/asn1/a_print.c,78
int ASN1_PRINTABLE_type(63,3266
int ASN1_UNIVERSALSTRING_to_string(102,4093

crypto/asn1/asn_mime.c,1502
char *param_name;param_name74,3039
char *param_value;param_value75,3090
} MIME_PARAM;76,3141
DECLARE_STACK_OF(78,3156
char *name;name82,3234
char *value;value83,3288
STACK_OF(84,3342
} MIME_HEADER;85,3403
DECLARE_STACK_OF(87,3419
#define MAX_SMLEN 110,4494
#define mime_debug(111,4517
static int B64_write_ASN1(148,5385
int PEM_write_bio_ASN1_stream(171,5861
static ASN1_VALUE *b64_read_asn1(b64_read_asn1182,6148
static int asn1_write_micalg(202,6625
int SMIME_write_ASN1(278,7877
static int asn1_output_data(374,10786
ASN1_VALUE *SMIME_read_ASN1(SMIME_read_ASN1432,12128
int SMIME_crlf_copy(536,15104
int SMIME_text(574,15959
static int multi_split(608,16883
#define MIME_INVALID	651,17866
#define MIME_START	652,17889
#define MIME_TYPE	653,17910
#define MIME_NAME	654,17930
#define MIME_VALUE	655,17950
#define MIME_QUOTE	656,17971
#define MIME_COMMENT	657,17992
static STACK_OF(660,18017
static char *strip_ends(strip_ends759,20109
static char *strip_start(strip_start765,20246
static char *strip_end(strip_end782,20655
static MIME_HEADER *mime_hdr_new(mime_hdr_new800,21001
static int mime_hdr_addparam(833,21743
static int mime_hdr_cmp(862,22436
static int mime_param_cmp(871,22641
static MIME_HEADER *mime_hdr_find(mime_hdr_find881,22934
static MIME_PARAM *mime_param_find(mime_param_find891,23170
static void mime_hdr_free(901,23416
static void mime_param_free(909,23638
static int mime_bound_check(921,23936
static int strip_eol(935,24361

crypto/asn1/asn_moid.c,141
static int oid_module_init(71,3015
static void oid_module_finish(95,3576
void ASN1_add_oid_module(100,3647
static int do_create(111,3887

crypto/asn1/tasn_utl.c,412
#define offset2ptr(70,2979
int asn1_get_choice_selector(76,3116
int asn1_set_choice_selector(86,3332
int asn1_do_lock(101,3782
static ASN1_ENCODING *asn1_get_enc_ptr(asn1_get_enc_ptr128,4402
void asn1_enc_init(139,4673
void asn1_enc_free(151,4869
int asn1_enc_save(165,5108
int asn1_enc_restore(185,5484
ASN1_VALUE ** asn1_get_field_ptr(203,5854
const ASN1_TEMPLATE *asn1_do_adb(asn1_do_adb220,6317

crypto/asn1/x_name.c,779
typedef STACK_OF(X509_NAME_ENTRY)66,3334
DECLARE_STACK_OF(67,3394
} ASN1_SEQUENCE_END(94,4377
IMPLEMENT_EXTERN_ASN1(127,5389
static void x509_name_ex_free(157,6104
static int x509_name_ex_d2i(172,6424
	union { STACK_OF(177,6617
	union { X509_NAME *x;x179,6702
	union { X509_NAME *x; ASN1_VALUE *a;a179,6702
static int x509_name_ex_i2d(224,7969
static void local_sk_X509_NAME_ENTRY_free(244,8373
static void local_sk_X509_NAME_ENTRY_pop_free(249,8483
static int x509_name_encode(254,8623
	union { STACK_OF(256,8667
static int x509_name_ex_print(294,9893
static int x509_name_canon(318,10678
#define ASN1_MASK_CANON	388,12214
static int asn1_string_canon(394,12400
static int i2d_name_canon(480,13929
int X509_NAME_set(500,14384
IMPLEMENT_STACK_OF(518,14628

crypto/asn1/f_int.c,61
int i2a_ASN1_INTEGER(64,3292
int a2i_ASN1_INTEGER(103,3951

crypto/asn1/asn1_lib.c,998
const char ASN1_version[ASN1_version67,3458
static int _asn1_check_infinite_end(69,3516
int ASN1_check_infinite_end(83,3804
int ASN1_const_check_infinite_end(88,3934
int ASN1_get_object(94,4053
static int asn1_get_length(154,5263
void ASN1_put_object(195,5901
int ASN1_put_eoc(225,6471
static void asn1_put_length(234,6583
int ASN1_object_size(257,6900
static int _asn1_Finish(285,7218
int asn1_Finish(304,7593
int asn1_const_Finish(309,7672
int asn1_GetSequence(314,7745
int ASN1_STRING_copy(343,8311
ASN1_STRING *ASN1_STRING_dup(ASN1_STRING_dup354,8534
int ASN1_STRING_set(370,8784
void ASN1_STRING_set0(407,9427
ASN1_STRING *ASN1_STRING_new(ASN1_STRING_new415,9577
ASN1_STRING *ASN1_STRING_type_new(ASN1_STRING_type_new421,9672
void ASN1_STRING_free(438,9982
int ASN1_STRING_cmp(446,10147
void asn1_add_error(463,10395
int ASN1_STRING_length(472,10694
void ASN1_STRING_length_set(475,10776
int ASN1_STRING_type(478,10876
unsigned char * ASN1_STRING_data(481,10948

crypto/asn1/a_gentm.c,370
int i2d_ASN1_GENERALIZEDTIME(69,3392
ASN1_GENERALIZEDTIME *d2i_ASN1_GENERALIZEDTIME(d2i_ASN1_GENERALIZEDTIME88,3868
int ASN1_GENERALIZEDTIME_check(118,4588
int ASN1_GENERALIZEDTIME_set_string(189,6173
ASN1_GENERALIZEDTIME *ASN1_GENERALIZEDTIME_set(ASN1_GENERALIZEDTIME_set211,6600
ASN1_GENERALIZEDTIME *ASN1_GENERALIZEDTIME_adj(ASN1_GENERALIZEDTIME_adj217,6742

crypto/krb5/krb5_asn.c,237
} ASN1_SEQUENCE_END(67,3045
} ASN1_SEQUENCE_END(75,3284
} ASN1_SEQUENCE_END(86,3642
} ASN1_SEQUENCE_END(106,4272
} ASN1_SEQUENCE_END(123,4729
} ASN1_SEQUENCE_END(131,4943
} ASN1_SEQUENCE_END(140,5214
} ASN1_SEQUENCE_END(157,5908

crypto/krb5/krb5_asn.h,2153
#define HEADER_KRB5_ASN_H61,2804
typedef	struct	krb5_encdata_st82,3181
	ASN1_INTEGER			*etype;etype84,3215
	ASN1_INTEGER			*kvno;kvno85,3239
	ASN1_OCTET_STRING		*cipher;cipher86,3262
	}	KRB5_ENCDATA;87,3291
DECLARE_STACK_OF(89,3309
typedef	struct	krb5_princname_st96,3486
	ASN1_INTEGER			*nametype;nametype98,3522
	STACK_OF(99,3549
	}	KRB5_PRINCNAME;100,3592
DECLARE_STACK_OF(102,3612
typedef	struct	krb5_tktbody_st112,3877
	ASN1_INTEGER			*tktvno;tktvno114,3911
	ASN1_GENERALSTRING		*realm;realm115,3936
	KRB5_PRINCNAME			*sname;sname116,3965
	KRB5_ENCDATA			*encdata;encdata117,3991
	}	KRB5_TKTBODY;118,4017
typedef STACK_OF(KRB5_TKTBODY)120,4035
DECLARE_STACK_OF(121,4079
typedef	struct	krb5_ap_req_st135,4481
	ASN1_INTEGER			*pvno;pvno137,4514
	ASN1_INTEGER			*msgtype;msgtype138,4537
	ASN1_BIT_STRING			*apoptions;apoptions139,4563
	KRB5_TICKET			*ticket;ticket140,4594
	KRB5_ENCDATA			*authenticator;authenticator141,4618
	}	KRB5_APREQBODY;142,4650
typedef STACK_OF(KRB5_APREQBODY)144,4670
DECLARE_STACK_OF(145,4715
typedef	struct	krb5_checksum_st156,4905
	ASN1_INTEGER			*ctype;ctype158,4940
	ASN1_OCTET_STRING		*checksum;checksum159,4964
	}	KRB5_CHECKSUM;160,4995
DECLARE_STACK_OF(162,5014
typedef struct  krb5_encryptionkey_st170,5180
	ASN1_INTEGER			*ktype;ktype172,5221
	ASN1_OCTET_STRING		*keyvalue;keyvalue173,5245
	}	KRB5_ENCKEY;174,5276
DECLARE_STACK_OF(176,5293
typedef struct	krb5_authorization_st184,5485
	ASN1_INTEGER			*adtype;adtype186,5525
	ASN1_OCTET_STRING		*addata;addata187,5550
	}	KRB5_AUTHDATA;188,5579
DECLARE_STACK_OF(190,5598
typedef struct	krb5_authenticator_st206,6177
	ASN1_INTEGER			*avno;avno208,6217
	ASN1_GENERALSTRING		*crealm;crealm209,6240
	KRB5_PRINCNAME			*cname;cname210,6270
	KRB5_CHECKSUM			*cksum;cksum211,6296
	ASN1_INTEGER			*cusec;cusec212,6321
	ASN1_GENERALIZEDTIME		*ctime;ctime213,6345
	KRB5_ENCKEY			*subkey;subkey214,6376
	ASN1_INTEGER			*seqnum;seqnum215,6400
	KRB5_AUTHDATA			*authorization;authorization216,6425
	}	KRB5_AUTHENTBODY;217,6458
typedef STACK_OF(KRB5_AUTHENTBODY)219,6480
DECLARE_STACK_OF(220,6529

crypto/evp/evp.h,17387
#define HEADER_ENVELOPE_H60,3219
# define OPENSSL_ALGORITHM_DEFINES65,3319
# undef OPENSSL_ALGORITHM_DEFINES67,3388
#define EVP_MAX_MD_SIZE	85,3714
#define EVP_MAX_KEY_LENGTH	86,3773
#define EVP_MAX_IV_LENGTH	87,3804
#define EVP_MAX_BLOCK_LENGTH	88,3834
#define PKCS5_SALT_LEN	90,3868
#define PKCS5_DEFAULT_ITER	92,3932
#define EVP_PK_RSA	96,3996
#define EVP_PK_DSA	97,4022
#define EVP_PK_DH	98,4048
#define EVP_PK_EC	99,4073
#define EVP_PKT_SIGN	100,4098
#define EVP_PKT_ENC	101,4126
#define EVP_PKT_EXCH	102,4153
#define EVP_PKS_RSA	103,4181
#define EVP_PKS_DSA	104,4208
#define EVP_PKS_EC	105,4235
#define EVP_PKT_EXP	106,4261
#define EVP_PKEY_NONE	108,4310
#define EVP_PKEY_RSA	109,4342
#define EVP_PKEY_RSA2	110,4381
#define EVP_PKEY_DSA	111,4411
#define EVP_PKEY_DSA1	112,4440
#define EVP_PKEY_DSA2	113,4472
#define EVP_PKEY_DSA3	114,4509
#define EVP_PKEY_DSA4	115,4547
#define EVP_PKEY_DH	116,4587
#define EVP_PKEY_EC	117,4626
#define EVP_PKEY_HMAC	118,4671
#define EVP_PKEY_CMAC	119,4702
struct evp_pkey_st128,4908
	int type;130,4930
	int save_type;131,4941
	int references;132,4957
	const EVP_PKEY_ASN1_METHOD *ameth;ameth133,4974
	ENGINE *engine;engine134,5010
		char *ptr;ptr136,5036
		struct rsa_st *rsa;rsa138,5072
		struct dsa_st *dsa;dsa141,5134
		struct dh_st *dh;dh144,5195
		struct ec_key_st *ec;ec147,5253
		} pkey;149,5294
	int save_parameters;150,5304
	STACK_OF(151,5326
#define EVP_PKEY_MO_SIGN	154,5397
#define EVP_PKEY_MO_VERIFY	155,5429
#define EVP_PKEY_MO_ENCRYPT	156,5463
#define EVP_PKEY_MO_DECRYPT	157,5498
struct env_md_st160,5549
	int type;162,5569
	int pkey_type;163,5580
	int md_size;164,5596
	unsigned long flags;165,5610
	int (*init)init166,5632
	int (*update)update167,5663
	int (*final)final168,5726
	int (*copy)copy169,5776
	int (*cleanup)cleanup170,5829
	int (*sign)sign173,5903
	int (*verify)verify175,6036
	int required_pkey_type[required_pkey_type178,6186
	int block_size;179,6232
	int ctx_size;180,6249
	int (*md_ctrl)md_ctrl182,6335
typedef int evp_sign_method(185,6414
typedef int evp_verify_method(188,6568
#define EVP_MD_FLAG_ONESHOT	192,6730
#define EVP_MD_FLAG_PKEY_DIGEST	195,6817
#define EVP_MD_FLAG_PKEY_METHOD_SIGNATURE	202,7076
#define EVP_MD_FLAG_DIGALGID_MASK	206,7168
#define EVP_MD_FLAG_DIGALGID_NULL	210,7262
#define EVP_MD_FLAG_DIGALGID_ABSENT	214,7384
#define EVP_MD_FLAG_DIGALGID_CUSTOM	218,7461
#define EVP_MD_FLAG_FIPS	220,7506
#define	EVP_MD_CTRL_DIGALGID	224,7603
#define	EVP_MD_CTRL_MICALG	225,7638
#define	EVP_MD_CTRL_ALG_CTRL	229,7717
#define EVP_PKEY_NULL_method	231,7756
#define EVP_PKEY_DSA_method	234,7829
#define EVP_PKEY_DSA_method	239,8004
#define EVP_PKEY_ECDSA_method 243,8086
#define EVP_PKEY_ECDSA_method 247,8254
#define EVP_PKEY_RSA_method	251,8338
#define EVP_PKEY_RSA_ASN1_OCTET_STRING_method 254,8473
#define EVP_PKEY_RSA_method	259,8674
#define EVP_PKEY_RSA_ASN1_OCTET_STRING_method 260,8723
struct env_md_ctx_st265,8820
	const EVP_MD *digest;digest267,8844
	ENGINE *engine;engine268,8867
	unsigned long flags;269,8942
	void *md_data;md_data270,8964
	EVP_PKEY_CTX *pctx;pctx272,9022
	int (*update)update274,9094
#define EVP_MD_CTX_FLAG_ONESHOT	279,9214
#define EVP_MD_CTX_FLAG_CLEANED	281,9307
#define EVP_MD_CTX_FLAG_REUSE	283,9394
#define EVP_MD_CTX_FLAG_NON_FIPS_ALLOW	289,9632
#define EVP_MD_CTX_FLAG_PAD_MASK	296,9901
#define EVP_MD_CTX_FLAG_PAD_PKCS1	297,9961
#define EVP_MD_CTX_FLAG_PAD_X931	298,10023
#define EVP_MD_CTX_FLAG_PAD_PSS	299,10078
#define EVP_MD_CTX_FLAG_NO_INIT	301,10132
struct evp_cipher_st303,10204
	int nid;305,10228
	int block_size;306,10238
	int key_len;307,10255
	int iv_len;308,10318
	unsigned long flags;309,10331
	int (*init)init310,10373
	int (*do_cipher)do_cipher312,10489
	int (*cleanup)cleanup314,10616
	int ctx_size;315,10669
	int (*set_asn1_parameters)set_asn1_parameters316,10728
	int (*get_asn1_parameters)get_asn1_parameters317,10831
	int (*ctrl)ctrl318,10929
	void *app_data;app_data319,11022
#define		EVP_CIPH_STREAM_CIPHER	326,11141
#define		EVP_CIPH_ECB_MODE	327,11178
#define		EVP_CIPH_CBC_MODE	328,11210
#define		EVP_CIPH_CFB_MODE	329,11242
#define		EVP_CIPH_OFB_MODE	330,11274
#define		EVP_CIPH_CTR_MODE	331,11306
#define		EVP_CIPH_GCM_MODE	332,11338
#define		EVP_CIPH_CCM_MODE	333,11370
#define		EVP_CIPH_XTS_MODE	334,11402
#define 	EVP_CIPH_MODE	335,11438
#define 	EVP_CIPH_VARIABLE_LENGTH	337,11507
#define 	EVP_CIPH_CUSTOM_IV	339,11610
#define 	EVP_CIPH_ALWAYS_CALL_INIT	341,11718
#define 	EVP_CIPH_CTRL_INIT	343,11802
#define 	EVP_CIPH_CUSTOM_KEY_LENGTH	345,11881
#define 	EVP_CIPH_NO_PADDING	347,11961
#define 	EVP_CIPH_RAND_KEY	349,12040
#define 	EVP_CIPH_CUSTOM_COPY	351,12124
#define		EVP_CIPH_FLAG_DEFAULT_ASN1	353,12201
#define		EVP_CIPH_FLAG_LENGTH_BITS	355,12298
#define		EVP_CIPH_FLAG_FIPS	357,12384
#define		EVP_CIPH_FLAG_NON_FIPS_ALLOW	359,12461
#define 	EVP_CIPH_FLAG_CUSTOM_CIPHER	363,12582
#define		EVP_CIPH_FLAG_AEAD_CIPHER	364,12628
#define		EVP_CTRL_INIT	368,12694
#define 	EVP_CTRL_SET_KEY_LENGTH	369,12723
#define 	EVP_CTRL_GET_RC2_KEY_BITS	370,12761
#define 	EVP_CTRL_SET_RC2_KEY_BITS	371,12800
#define 	EVP_CTRL_GET_RC5_ROUNDS	372,12839
#define 	EVP_CTRL_SET_RC5_ROUNDS	373,12877
#define 	EVP_CTRL_RAND_KEY	374,12915
#define 	EVP_CTRL_PBE_PRF_NID	375,12947
#define 	EVP_CTRL_COPY	376,12982
#define 	EVP_CTRL_GCM_SET_IVLEN	377,13011
#define 	EVP_CTRL_GCM_GET_TAG	378,13048
#define 	EVP_CTRL_GCM_SET_TAG	379,13084
#define		EVP_CTRL_GCM_SET_IV_FIXED	380,13120
#define		EVP_CTRL_GCM_IV_GEN	381,13160
#define		EVP_CTRL_CCM_SET_IVLEN	382,13195
#define		EVP_CTRL_CCM_GET_TAG	383,13251
#define		EVP_CTRL_CCM_SET_TAG	384,13303
#define		EVP_CTRL_CCM_SET_L	385,13355
#define		EVP_CTRL_CCM_SET_MSGLEN	386,13389
#define		EVP_CTRL_AEAD_TLS1_AAD	391,13605
#define		EVP_CTRL_AEAD_SET_MAC_KEY	393,13702
#define		EVP_CTRL_GCM_SET_IV_INV	395,13791
#define EVP_GCM_TLS_FIXED_IV_LEN	399,13905
#define EVP_GCM_TLS_EXPLICIT_IV_LEN	401,13998
#define EVP_GCM_TLS_TAG_LEN	403,14066
typedef struct evp_cipher_info_st406,14102
	const EVP_CIPHER *cipher;cipher408,14139
	unsigned char iv[iv409,14166
	} EVP_CIPHER_INFO;410,14204
struct evp_cipher_ctx_st412,14225
	const EVP_CIPHER *cipher;cipher414,14253
	ENGINE *engine;engine415,14280
	int encrypt;416,14355
	int buf_len;417,14395
	unsigned char  oiv[oiv419,14437
	unsigned char  iv[iv420,14495
	unsigned char buf[buf421,14551
	int num;422,14618
	void *app_data;app_data424,14663
	int key_len;425,14705
	unsigned long flags;426,14764
	void *cipher_data;cipher_data427,14806
	int final_used;428,14845
	int block_mask;429,14862
	unsigned char final[final430,14879
typedef struct evp_Encode_Ctx_st433,14975
	int num;435,15011
	int length;436,15067
	unsigned char enc_data[enc_data441,15301
	int line_num;442,15351
	int expect_nl;443,15400
	} EVP_ENCODE_CTX;444,15416
typedef int (EVP_PBE_KEYGEN)447,15477
#define EVP_PKEY_assign_RSA(452,15674
#define EVP_PKEY_assign_DSA(457,15801
#define EVP_PKEY_assign_DH(462,15927
#define EVP_PKEY_assign_EC_KEY(467,16049
#define EVP_get_digestbynid(472,16228
#define EVP_get_digestbyobj(473,16295
#define EVP_get_cipherbynid(474,16362
#define EVP_get_cipherbyobj(475,16429
#define EVP_MD_nid(478,16532
#define EVP_MD_name(479,16571
#define EVP_MD_CTX_size(486,16838
#define EVP_MD_CTX_block_size(487,16896
#define EVP_MD_CTX_type(488,16965
#define EVP_CIPHER_name(491,17070
#define EVP_CIPHER_mode(496,17344
#define EVP_CIPHER_CTX_type(506,17906
#define EVP_CIPHER_CTX_mode(508,18050
#define EVP_ENCODE_LENGTH(510,18125
#define EVP_DECODE_LENGTH(511,18182
#define EVP_SignInit_ex(513,18227
#define EVP_SignInit(514,18284
#define EVP_SignUpdate(515,18331
#define	EVP_VerifyInit_ex(516,18386
#define	EVP_VerifyInit(517,18444
#define	EVP_VerifyUpdate(518,18493
#define EVP_OpenUpdate(519,18550
#define EVP_SealUpdate(520,18613
#define EVP_DigestSignUpdate(521,18677
#define EVP_DigestVerifyUpdate(522,18737
# define BIO_set_md(527,18867
#define BIO_get_md(529,18939
#define BIO_get_md_ctx(530,19005
#define BIO_set_md_ctx(531,19084
#define BIO_get_cipher_status(532,19163
#define BIO_get_cipher_ctx(533,19239
#define EVP_add_cipher_alias(540,19428
#define EVP_add_digest_alias(542,19536
#define EVP_delete_cipher_alias(544,19640
#define EVP_delete_digest_alias(546,19747
# define EVP_des_cfb 709,26440
# define EVP_des_ede_cfb 713,26594
# define EVP_des_ede3_cfb 719,26778
# define EVP_idea_cfb 749,27820
# define EVP_rc2_cfb 759,28156
# define EVP_bf_cfb 766,28367
# define EVP_cast5_cfb 773,28586
# define EVP_rc5_32_12_16_cfb 780,28834
# define EVP_aes_128_cfb 789,29173
# define EVP_aes_192_cfb 800,29632
# define EVP_aes_256_cfb 810,30050
# define EVP_camellia_128_cfb 827,30736
# define EVP_camellia_192_cfb 834,31071
# define EVP_camellia_256_cfb 841,31406
# define EVP_seed_cfb 849,31655
#define OpenSSL_add_all_algorithms(857,31855
#define OpenSSL_add_all_algorithms(860,31936
#define SSLeay_add_all_algorithms(866,32093
#define SSLeay_add_all_ciphers(867,32158
#define SSLeay_add_all_digests(868,32217
#define EVP_PBE_TYPE_OUTER	986,36612
#define EVP_PBE_TYPE_PRF	988,36668
#define ASN1_PKEY_ALIAS	998,37036
#define ASN1_PKEY_DYNAMIC	999,37065
#define ASN1_PKEY_SIGPARAM_NULL	1000,37095
#define ASN1_PKEY_CTRL_PKCS7_SIGN	1002,37132
#define ASN1_PKEY_CTRL_PKCS7_ENCRYPT	1003,37170
#define ASN1_PKEY_CTRL_DEFAULT_MD_NID	1004,37211
#define ASN1_PKEY_CTRL_CMS_SIGN	1005,37253
#define ASN1_PKEY_CTRL_CMS_ENVELOPE	1006,37290
#define EVP_PKEY_OP_UNDEFINED	1055,39541
#define EVP_PKEY_OP_PARAMGEN	1056,39574
#define EVP_PKEY_OP_KEYGEN	1057,39611
#define EVP_PKEY_OP_SIGN	1058,39646
#define EVP_PKEY_OP_VERIFY	1059,39679
#define EVP_PKEY_OP_VERIFYRECOVER	1060,39714
#define EVP_PKEY_OP_SIGNCTX	1061,39755
#define EVP_PKEY_OP_VERIFYCTX	1062,39791
#define EVP_PKEY_OP_ENCRYPT	1063,39829
#define EVP_PKEY_OP_DECRYPT	1064,39865
#define EVP_PKEY_OP_DERIVE	1065,39901
#define EVP_PKEY_OP_TYPE_SIG	1067,39938
#define EVP_PKEY_OP_TYPE_CRYPT 1071,40089
#define EVP_PKEY_OP_TYPE_NOGEN 1074,40168
#define EVP_PKEY_OP_TYPE_GEN 1077,40262
#define	 EVP_PKEY_CTX_set_signature_md(1080,40340
#define EVP_PKEY_CTRL_MD	1084,40483
#define EVP_PKEY_CTRL_PEER_KEY	1085,40511
#define EVP_PKEY_CTRL_PKCS7_ENCRYPT	1087,40546
#define EVP_PKEY_CTRL_PKCS7_DECRYPT	1088,40584
#define EVP_PKEY_CTRL_PKCS7_SIGN	1090,40623
#define EVP_PKEY_CTRL_SET_MAC_KEY	1092,40659
#define EVP_PKEY_CTRL_DIGESTINIT	1094,40696
#define EVP_PKEY_CTRL_SET_IV 1097,40773
#define EVP_PKEY_CTRL_CMS_ENCRYPT	1099,40807
#define EVP_PKEY_CTRL_CMS_DECRYPT	1100,40843
#define EVP_PKEY_CTRL_CMS_SIGN	1101,40880
#define EVP_PKEY_CTRL_CIPHER	1103,40916
#define EVP_PKEY_ALG_CTRL	1105,40950
#define EVP_PKEY_FLAG_AUTOARGLEN	1108,40986
#define EVP_PKEY_FLAG_SIGCTX_CUSTOM	1112,41104
typedef int EVP_PKEY_gen_cb(1172,43523
#define EVP_F_AESNI_INIT_KEY	1255,46721
#define EVP_F_AESNI_XTS_CIPHER	1256,46758
#define EVP_F_AES_INIT_KEY	1257,46797
#define EVP_F_AES_XTS	1258,46832
#define EVP_F_AES_XTS_CIPHER	1259,46863
#define EVP_F_CAMELLIA_INIT_KEY	1260,46900
#define EVP_F_CMAC_INIT	1261,46940
#define EVP_F_D2I_PKEY	1262,46973
#define EVP_F_DO_SIGVER_INIT	1263,47005
#define EVP_F_DSAPKEY2PKCS8	1264,47042
#define EVP_F_DSA_PKEY2PKCS8	1265,47078
#define EVP_F_ECDSA_PKEY2PKCS8	1266,47115
#define EVP_F_ECKEY_PKEY2PKCS8	1267,47154
#define EVP_F_EVP_CIPHERINIT_EX	1268,47193
#define EVP_F_EVP_CIPHER_CTX_COPY	1269,47233
#define EVP_F_EVP_CIPHER_CTX_CTRL	1270,47274
#define EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH	1271,47315
#define EVP_F_EVP_DECRYPTFINAL_EX	1272,47365
#define EVP_F_EVP_DIGESTINIT_EX	1273,47406
#define EVP_F_EVP_ENCRYPTFINAL_EX	1274,47446
#define EVP_F_EVP_MD_CTX_COPY_EX	1275,47487
#define EVP_F_EVP_MD_SIZE	1276,47527
#define EVP_F_EVP_OPENINIT	1277,47561
#define EVP_F_EVP_PBE_ALG_ADD	1278,47596
#define EVP_F_EVP_PBE_ALG_ADD_TYPE	1279,47634
#define EVP_F_EVP_PBE_CIPHERINIT	1280,47676
#define EVP_F_EVP_PKCS82PKEY	1281,47716
#define EVP_F_EVP_PKCS82PKEY_BROKEN	1282,47753
#define EVP_F_EVP_PKEY2PKCS8_BROKEN	1283,47796
#define EVP_F_EVP_PKEY_COPY_PARAMETERS	1284,47839
#define EVP_F_EVP_PKEY_CTX_CTRL	1285,47885
#define EVP_F_EVP_PKEY_CTX_CTRL_STR	1286,47925
#define EVP_F_EVP_PKEY_CTX_DUP	1287,47968
#define EVP_F_EVP_PKEY_DECRYPT	1288,48007
#define EVP_F_EVP_PKEY_DECRYPT_INIT	1289,48046
#define EVP_F_EVP_PKEY_DECRYPT_OLD	1290,48089
#define EVP_F_EVP_PKEY_DERIVE	1291,48131
#define EVP_F_EVP_PKEY_DERIVE_INIT	1292,48169
#define EVP_F_EVP_PKEY_DERIVE_SET_PEER	1293,48211
#define EVP_F_EVP_PKEY_ENCRYPT	1294,48257
#define EVP_F_EVP_PKEY_ENCRYPT_INIT	1295,48296
#define EVP_F_EVP_PKEY_ENCRYPT_OLD	1296,48339
#define EVP_F_EVP_PKEY_GET1_DH	1297,48381
#define EVP_F_EVP_PKEY_GET1_DSA	1298,48420
#define EVP_F_EVP_PKEY_GET1_ECDSA	1299,48460
#define EVP_F_EVP_PKEY_GET1_EC_KEY	1300,48501
#define EVP_F_EVP_PKEY_GET1_RSA	1301,48543
#define EVP_F_EVP_PKEY_KEYGEN	1302,48583
#define EVP_F_EVP_PKEY_KEYGEN_INIT	1303,48621
#define EVP_F_EVP_PKEY_NEW	1304,48663
#define EVP_F_EVP_PKEY_PARAMGEN	1305,48698
#define EVP_F_EVP_PKEY_PARAMGEN_INIT	1306,48738
#define EVP_F_EVP_PKEY_SIGN	1307,48782
#define EVP_F_EVP_PKEY_SIGN_INIT	1308,48818
#define EVP_F_EVP_PKEY_VERIFY	1309,48858
#define EVP_F_EVP_PKEY_VERIFY_INIT	1310,48896
#define EVP_F_EVP_PKEY_VERIFY_RECOVER	1311,48938
#define EVP_F_EVP_PKEY_VERIFY_RECOVER_INIT	1312,48983
#define EVP_F_EVP_RIJNDAEL	1313,49032
#define EVP_F_EVP_SIGNFINAL	1314,49067
#define EVP_F_EVP_VERIFYFINAL	1315,49103
#define EVP_F_FIPS_CIPHERINIT	1316,49141
#define EVP_F_FIPS_CIPHER_CTX_COPY	1317,49179
#define EVP_F_FIPS_CIPHER_CTX_CTRL	1318,49221
#define EVP_F_FIPS_CIPHER_CTX_SET_KEY_LENGTH	1319,49263
#define EVP_F_FIPS_DIGESTINIT	1320,49314
#define EVP_F_FIPS_MD_CTX_COPY	1321,49352
#define EVP_F_HMAC_INIT_EX	1322,49391
#define EVP_F_INT_CTX_NEW	1323,49426
#define EVP_F_PKCS5_PBE_KEYIVGEN	1324,49460
#define EVP_F_PKCS5_V2_PBE_KEYIVGEN	1325,49500
#define EVP_F_PKCS5_V2_PBKDF2_KEYIVGEN	1326,49543
#define EVP_F_PKCS8_SET_BROKEN	1327,49589
#define EVP_F_PKEY_SET_TYPE	1328,49628
#define EVP_F_RC2_MAGIC_TO_METH	1329,49664
#define EVP_F_RC5_CTRL	1330,49704
#define EVP_R_AES_IV_SETUP_FAILED	1333,49757
#define EVP_R_AES_KEY_SETUP_FAILED	1334,49798
#define EVP_R_ASN1_LIB	1335,49840
#define EVP_R_BAD_BLOCK_LENGTH	1336,49872
#define EVP_R_BAD_DECRYPT	1337,49911
#define EVP_R_BAD_KEY_LENGTH	1338,49945
#define EVP_R_BN_DECODE_ERROR	1339,49982
#define EVP_R_BN_PUBKEY_ERROR	1340,50020
#define EVP_R_BUFFER_TOO_SMALL	1341,50058
#define EVP_R_CAMELLIA_KEY_SETUP_FAILED	1342,50097
#define EVP_R_CIPHER_PARAMETER_ERROR	1343,50144
#define EVP_R_COMMAND_NOT_SUPPORTED	1344,50188
#define EVP_R_CTRL_NOT_IMPLEMENTED	1345,50231
#define EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED	1346,50273
#define EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH	1347,50324
#define EVP_R_DECODE_ERROR	1348,50378
#define EVP_R_DIFFERENT_KEY_TYPES	1349,50413
#define EVP_R_DIFFERENT_PARAMETERS	1350,50454
#define EVP_R_DISABLED_FOR_FIPS	1351,50496
#define EVP_R_ENCODE_ERROR	1352,50536
#define EVP_R_EVP_PBE_CIPHERINIT_ERROR	1353,50571
#define EVP_R_EXPECTING_AN_RSA_KEY	1354,50617
#define EVP_R_EXPECTING_A_DH_KEY	1355,50659
#define EVP_R_EXPECTING_A_DSA_KEY	1356,50699
#define EVP_R_EXPECTING_A_ECDSA_KEY	1357,50740
#define EVP_R_EXPECTING_A_EC_KEY	1358,50783
#define EVP_R_INITIALIZATION_ERROR	1359,50823
#define EVP_R_INPUT_NOT_INITIALIZED	1360,50865
#define EVP_R_INVALID_DIGEST	1361,50908
#define EVP_R_INVALID_KEY_LENGTH	1362,50945
#define EVP_R_INVALID_OPERATION	1363,50985
#define EVP_R_IV_TOO_LARGE	1364,51025
#define EVP_R_KEYGEN_FAILURE	1365,51060
#define EVP_R_MESSAGE_DIGEST_IS_NULL	1366,51097
#define EVP_R_METHOD_NOT_SUPPORTED	1367,51141
#define EVP_R_MISSING_PARAMETERS	1368,51183
#define EVP_R_NO_CIPHER_SET	1369,51223
#define EVP_R_NO_DEFAULT_DIGEST	1370,51259
#define EVP_R_NO_DIGEST_SET	1371,51299
#define EVP_R_NO_DSA_PARAMETERS	1372,51335
#define EVP_R_NO_KEY_SET	1373,51375
#define EVP_R_NO_OPERATION_SET	1374,51408
#define EVP_R_NO_SIGN_FUNCTION_CONFIGURED	1375,51447
#define EVP_R_NO_VERIFY_FUNCTION_CONFIGURED	1376,51495
#define EVP_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE	1377,51545
#define EVP_R_OPERATON_NOT_INITIALIZED	1378,51605
#define EVP_R_PKCS8_UNKNOWN_BROKEN_TYPE	1379,51651
#define EVP_R_PRIVATE_KEY_DECODE_ERROR	1380,51698
#define EVP_R_PRIVATE_KEY_ENCODE_ERROR	1381,51744
#define EVP_R_PUBLIC_KEY_NOT_RSA	1382,51790
#define EVP_R_TOO_LARGE	1383,51830
#define EVP_R_UNKNOWN_CIPHER	1384,51863
#define EVP_R_UNKNOWN_DIGEST	1385,51900
#define EVP_R_UNKNOWN_PBE_ALGORITHM	1386,51937
#define EVP_R_UNSUPORTED_NUMBER_OF_ROUNDS	1387,51980
#define EVP_R_UNSUPPORTED_ALGORITHM	1388,52028
#define EVP_R_UNSUPPORTED_CIPHER	1389,52071
#define EVP_R_UNSUPPORTED_KEYLENGTH	1390,52111
#define EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION	1391,52154
#define EVP_R_UNSUPPORTED_KEY_SIZE	1392,52209
#define EVP_R_UNSUPPORTED_PRF	1393,52251
#define EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM	1394,52289
#define EVP_R_UNSUPPORTED_SALT_TYPE	1395,52343
#define EVP_R_WRONG_FINAL_BLOCK_LENGTH	1396,52386
#define EVP_R_WRONG_PUBLIC_KEY_TYPE	1397,52432

crypto/evp/e_idea.c,123
static int idea_ecb_cipher(75,3576
	IDEA_KEY_SCHEDULE ks;87,3879
	} EVP_IDEA_KEY;88,3902
BLOCK_CIPHER_func_cbc(90,3920

crypto/evp/encode.c,793
#define conv_bin2ascii(64,3286
#define conv_ascii2bin(65,3339
#define conv_bin2ascii(73,3702
#define conv_ascii2bin(74,3755
#define BIN_PER_LINE 84,3956
#define CHUNKS_PER_LINE 85,3989
#define CHAR_PER_LINE 86,4020
static const unsigned char data_bin2ascii[data_bin2ascii88,4052
#define B64_EOLN	98,4327
#define B64_CR	99,4350
#define B64_EOF	100,4372
#define B64_WS	101,4395
#define B64_ERROR 102,4417
#define B64_NOT_BASE64(103,4447
static const unsigned char data_ascii2bin[data_ascii2bin105,4495
void EVP_EncodeInit(124,5221
void EVP_EncodeUpdate(131,5317
void EVP_EncodeFinal(175,6167
int EVP_EncodeBlock(189,6410
void EVP_DecodeInit(223,7061
int EVP_DecodeUpdate(235,7236
int EVP_DecodeBlock(358,9719
int EVP_DecodeFinal(398,10651
int EVP_DecodeValid(416,10921

crypto/evp/e_rc5.c,164
	int rounds;75,3574
	RC5_32_KEY ks;76,3610
	} EVP_RC5_KEY;77,3645
#define data(79,3662
IMPLEMENT_BLOCK_CIPHER(81,3709
static int r_32_12_16_init_key(118,4459

crypto/evp/e_camellia.c,185
	CAMELLIA_KEY ks;71,3063
	} EVP_CAMELLIA_KEY;72,3081
#define data(75,3142
IMPLEMENT_BLOCK_CIPHER(77,3194
#define IMPLEMENT_CAMELLIA_CFBR(96,3771
static void *dummy=dummy128,4451

crypto/evp/p_open.c,89
int EVP_OpenInit(69,3368
int EVP_OpenFinal(113,4279
static void *dummy=dummy125,4519

crypto/evp/m_sha.c,153
static int init(72,3454
static int update(75,3524
static int final(78,3639
static const EVP_MD sha_md=81,3732
const EVP_MD *EVP_sha(EVP_sha97,3937

crypto/evp/evp_err.c,218
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA EVP_str_functs[EVP_str_functs71,3086
static ERR_STRING_DATA EVP_str_reasons[EVP_str_reasons152,7564
void ERR_load_EVP_strings(224,12052

crypto/evp/e_rc2.c,628
	int key_bits;79,3794
	RC2_KEY ks;80,3834
	} EVP_RC2_KEY;81,3866
#define data(83,3883
#define RC2_40_MAGIC	93,4172
#define RC2_64_MAGIC	94,4198
#define RC2_128_MAGIC	95,4224
IMPLEMENT_BLOCK_CIPHER(RC2_128_MAGIC85,3938
static const EVP_CIPHER r2_40_cbc_cipher=112,4540
const EVP_CIPHER *EVP_rc2_64_cbc(EVP_rc2_64_cbc127,4828
const EVP_CIPHER *EVP_rc2_40_cbc(EVP_rc2_40_cbc132,4902
static int rc2_init_key(137,4977
static int rc2_meth_to_magic(145,5195
static int rc2_magic_to_meth(156,5458
static int rc2_get_asn1_type_and_iv(168,5714
static int rc2_set_asn1_type_and_iv(194,6348
static int rc2_ctrl(208,6605

crypto/evp/p5_crpt2.c,188
int PKCS5_PBKDF2_HMAC(80,3392
int PKCS5_PBKDF2_HMAC_SHA1(147,4981
main(156,5248
int PKCS5_v2_PBE_keyivgen(172,5652
int PKCS5_v2_PBKDF2_keyivgen(230,7192
static void h__dump 316,9372

crypto/evp/m_md2.c,153
static int init(72,3422
static int update(75,3492
static int final(78,3607
static const EVP_MD md2_md=81,3700
const EVP_MD *EVP_md2(EVP_md297,3904

crypto/evp/m_sigver.c,173
static int do_sigver_init(66,2884
int EVP_DigestSignInit(119,4023
int EVP_DigestVerifyInit(125,4194
int EVP_DigestSignFinal(131,4367
int EVP_DigestVerifyFinal(174,5284

crypto/evp/evp_fips.c,2866
const EVP_CIPHER *EVP_aes_128_cbc(EVP_aes_128_cbc60,2637
const EVP_CIPHER *EVP_aes_128_ccm(EVP_aes_128_ccm61,2713
const EVP_CIPHER *EVP_aes_128_cfb1(EVP_aes_128_cfb162,2789
const EVP_CIPHER *EVP_aes_128_cfb128(EVP_aes_128_cfb12863,2867
const EVP_CIPHER *EVP_aes_128_cfb8(EVP_aes_128_cfb864,2949
const EVP_CIPHER *EVP_aes_128_ctr(EVP_aes_128_ctr65,3027
const EVP_CIPHER *EVP_aes_128_ecb(EVP_aes_128_ecb66,3103
const EVP_CIPHER *EVP_aes_128_gcm(EVP_aes_128_gcm67,3179
const EVP_CIPHER *EVP_aes_128_ofb(EVP_aes_128_ofb68,3255
const EVP_CIPHER *EVP_aes_128_xts(EVP_aes_128_xts69,3331
const EVP_CIPHER *EVP_aes_192_cbc(EVP_aes_192_cbc70,3407
const EVP_CIPHER *EVP_aes_192_ccm(EVP_aes_192_ccm71,3483
const EVP_CIPHER *EVP_aes_192_cfb1(EVP_aes_192_cfb172,3559
const EVP_CIPHER *EVP_aes_192_cfb128(EVP_aes_192_cfb12873,3637
const EVP_CIPHER *EVP_aes_192_cfb8(EVP_aes_192_cfb874,3719
const EVP_CIPHER *EVP_aes_192_ctr(EVP_aes_192_ctr75,3797
const EVP_CIPHER *EVP_aes_192_ecb(EVP_aes_192_ecb76,3873
const EVP_CIPHER *EVP_aes_192_gcm(EVP_aes_192_gcm77,3949
const EVP_CIPHER *EVP_aes_192_ofb(EVP_aes_192_ofb78,4025
const EVP_CIPHER *EVP_aes_256_cbc(EVP_aes_256_cbc79,4101
const EVP_CIPHER *EVP_aes_256_ccm(EVP_aes_256_ccm80,4177
const EVP_CIPHER *EVP_aes_256_cfb1(EVP_aes_256_cfb181,4253
const EVP_CIPHER *EVP_aes_256_cfb128(EVP_aes_256_cfb12882,4331
const EVP_CIPHER *EVP_aes_256_cfb8(EVP_aes_256_cfb883,4413
const EVP_CIPHER *EVP_aes_256_ctr(EVP_aes_256_ctr84,4491
const EVP_CIPHER *EVP_aes_256_ecb(EVP_aes_256_ecb85,4567
const EVP_CIPHER *EVP_aes_256_gcm(EVP_aes_256_gcm86,4643
const EVP_CIPHER *EVP_aes_256_ofb(EVP_aes_256_ofb87,4719
const EVP_CIPHER *EVP_aes_256_xts(EVP_aes_256_xts88,4795
const EVP_CIPHER *EVP_des_ede(EVP_des_ede89,4871
const EVP_CIPHER *EVP_des_ede3(EVP_des_ede390,4939
const EVP_CIPHER *EVP_des_ede3_cbc(EVP_des_ede3_cbc91,5009
const EVP_CIPHER *EVP_des_ede3_cfb1(EVP_des_ede3_cfb192,5087
const EVP_CIPHER *EVP_des_ede3_cfb64(EVP_des_ede3_cfb6493,5167
const EVP_CIPHER *EVP_des_ede3_cfb8(EVP_des_ede3_cfb894,5249
const EVP_CIPHER *EVP_des_ede3_ecb(EVP_des_ede3_ecb95,5329
const EVP_CIPHER *EVP_des_ede3_ofb(EVP_des_ede3_ofb96,5407
const EVP_CIPHER *EVP_des_ede_cbc(EVP_des_ede_cbc97,5485
const EVP_CIPHER *EVP_des_ede_cfb64(EVP_des_ede_cfb6498,5561
const EVP_CIPHER *EVP_des_ede_ecb(EVP_des_ede_ecb99,5641
const EVP_CIPHER *EVP_des_ede_ofb(EVP_des_ede_ofb100,5717
const EVP_CIPHER *EVP_enc_null(EVP_enc_null101,5793
const EVP_MD *EVP_sha1(EVP_sha1103,5864
const EVP_MD *EVP_sha224(EVP_sha224104,5922
const EVP_MD *EVP_sha256(EVP_sha256105,5984
const EVP_MD *EVP_sha384(EVP_sha384106,6046
const EVP_MD *EVP_sha512(EVP_sha512107,6108
const EVP_MD *EVP_dss(EVP_dss109,6171
const EVP_MD *EVP_dss1(EVP_dss1110,6227
const EVP_MD *EVP_ecdsa(EVP_ecdsa111,6285

crypto/evp/m_md4.c,153
static int init(74,3445
static int update(77,3515
static int final(80,3630
static const EVP_MD md4_md=83,3723
const EVP_MD *EVP_md4(EVP_md499,3928

crypto/evp/c_alld.c,38
void OpenSSL_add_all_digests(65,3320

crypto/evp/evp_pkey.c,649
EVP_PKEY *EVP_PKCS82PKEY(EVP_PKCS82PKEY68,2929
PKCS8_PRIV_KEY_INFO *EVP_PKEY2PKCS8(EVP_PKEY2PKCS8112,3782
PKCS8_PRIV_KEY_INFO *EVP_PKEY2PKCS8_broken(EVP_PKEY2PKCS8_broken119,3935
PKCS8_PRIV_KEY_INFO *PKCS8_set_broken(PKCS8_set_broken161,4775
int EVP_PKEY_get_attr_count(184,5184
int EVP_PKEY_get_attr_by_NID(189,5286
int EVP_PKEY_get_attr_by_OBJ(195,5431
X509_ATTRIBUTE *EVP_PKEY_get_attr(EVP_PKEY_get_attr201,5585
X509_ATTRIBUTE *EVP_PKEY_delete_attr(EVP_PKEY_delete_attr206,5701
int EVP_PKEY_add1_attr(211,5817
int EVP_PKEY_add1_attr_by_OBJ(217,5949
int EVP_PKEY_add1_attr_by_NID(226,6171
int EVP_PKEY_add1_attr_by_txt(235,6378

crypto/evp/pmeth_fn.c,478
#define M_check_autoarg(66,2873
int EVP_PKEY_sign_init(82,3224
int EVP_PKEY_sign(100,3620
int EVP_PKEY_verify_init(119,4135
int EVP_PKEY_verify(137,4543
int EVP_PKEY_verify_recover_init(155,5019
int EVP_PKEY_verify_recover(173,5474
int EVP_PKEY_encrypt_init(192,6064
int EVP_PKEY_encrypt(210,6478
int EVP_PKEY_decrypt_init(229,7010
int EVP_PKEY_decrypt(247,7424
int EVP_PKEY_derive_init(267,7957
int EVP_PKEY_derive_set_peer(285,8365
int EVP_PKEY_derive(352,10074

crypto/evp/e_des3.c,776
    DES_key_schedule ks1;80,3739
    DES_key_schedule ks2;81,3783
    DES_key_schedule ks3;82,3837
    } DES_EDE_KEY;83,3892
#define data(85,3912
static int des_ede_ecb_cipher(89,4051
static int des_ede_ofb_cipher(101,4369
static int des_ede_cbc_cipher(121,4934
static int des_ede_cfb64_cipher(151,5757
static int des_ede3_cfb1_cipher(172,6465
static int des_ede3_cfb8_cipher(191,6957
#define des_ede3_cfb64_cipher 216,7669
#define des_ede3_ofb_cipher 217,7720
#define des_ede3_cbc_cipher 218,7767
#define des_ede3_ecb_cipher 219,7814
BLOCK_CIPHER_defs(des_ede3_ecb_cipher210,7486
static int des_ede3_init_key(256,8946
static int des3_ctrl(284,9770
const EVP_CIPHER *EVP_des_ede(EVP_des_ede306,10160
const EVP_CIPHER *EVP_des_ede3(EVP_des_ede3311,10223

crypto/evp/e_dsa.c,43
static EVP_PKEY_METHOD dss_method=65,3317

crypto/evp/evp_enc.c,948
#define M_do_cipher(73,3471
#define M_do_cipher(75,3547
const char EVP_version[EVP_version79,3637
void EVP_CIPHER_CTX_init(81,3692
EVP_CIPHER_CTX *EVP_CIPHER_CTX_new(EVP_CIPHER_CTX_new87,3809
int EVP_CipherInit(95,3958
int EVP_CipherInit_ex(103,4193
int EVP_CipherUpdate(261,8164
int EVP_CipherFinal_ex(269,8405
int EVP_CipherFinal(276,8598
int EVP_EncryptInit(283,8782
int EVP_EncryptInit_ex(289,8962
int EVP_DecryptInit(295,9163
int EVP_DecryptInit_ex(301,9343
int EVP_EncryptUpdate(307,9549
int EVP_EncryptFinal(380,10655
int EVP_EncryptFinal_ex(387,10802
int EVP_DecryptUpdate(433,11524
int EVP_DecryptFinal(494,12544
int EVP_DecryptFinal_ex(501,12691
void EVP_CIPHER_CTX_free(560,13780
int EVP_CIPHER_CTX_cleanup(569,13903
int EVP_CIPHER_CTX_set_key_length(596,14545
int EVP_CIPHER_CTX_set_padding(610,14969
int EVP_CIPHER_CTX_ctrl(617,15135
int EVP_CIPHER_CTX_rand_key(638,15593
int EVP_CIPHER_CTX_copy(647,15840

crypto/evp/m_dss1.c,156
static int init(73,3421
static int update(76,3492
static int final(79,3608
static const EVP_MD dss1_md=82,3702
const EVP_MD *EVP_dss1(EVP_dss198,3921

crypto/evp/p_dec.c,34
int EVP_PKEY_decrypt_old(69,3398

crypto/evp/e_bf.c,97
	BF_KEY ks;72,3497
	} EVP_BF_KEY;73,3509
#define data(75,3525
IMPLEMENT_BLOCK_CIPHER(77,3571

crypto/evp/e_null.c,161
static const EVP_CIPHER n_cipher=70,3524
const EVP_CIPHER *EVP_enc_null(EVP_enc_null85,3658
static int null_init_key(90,3722
static int null_cipher(97,3894

crypto/evp/bio_md.c,290
static BIO_METHOD methods_md=77,3777
BIO_METHOD *BIO_f_md(BIO_f_md90,3947
static int md_new(95,4003
static int md_free(108,4173
static int md_read(118,4315
static int md_write(142,4741
static long md_ctrl(172,5256
static long md_callback_ctrl(238,6319
static int md_gets(252,6540

crypto/evp/evp_key.c,229
static char prompt_string[prompt_string67,3374
void EVP_set_pw_prompt(69,3406
char *EVP_get_pw_prompt(EVP_get_pw_prompt80,3578
int EVP_read_pw_string(91,3860
int EVP_read_pw_string_min(96,4003
int EVP_BytesToKey(115,4476

crypto/evp/e_old.c,998
static void *dummy dummy60,2809
#undef EVP_bf_cfb72,3147
const EVP_CIPHER *EVP_bf_cfb(EVP_bf_cfb74,3201
#undef EVP_des_cfb78,3294
const EVP_CIPHER *EVP_des_cfb(EVP_des_cfb80,3350
#undef EVP_des_ede3_cfb81,3414
const EVP_CIPHER *EVP_des_ede3_cfb(EVP_des_ede3_cfb83,3480
#undef EVP_des_ede_cfb84,3554
const EVP_CIPHER *EVP_des_ede_cfb(EVP_des_ede_cfb86,3618
#undef EVP_idea_cfb90,3722
const EVP_CIPHER *EVP_idea_cfb(EVP_idea_cfb92,3780
#undef EVP_rc2_cfb96,3877
const EVP_CIPHER *EVP_rc2_cfb(EVP_rc2_cfb98,3933
#undef EVP_cast5_cfb102,4029
const EVP_CIPHER *EVP_cast5_cfb(EVP_cast5_cfb104,4089
#undef EVP_rc5_32_12_16_cfb108,4188
const EVP_CIPHER *EVP_rc5_32_12_16_cfb(EVP_rc5_32_12_16_cfb110,4262
#undef EVP_aes_128_cfb114,4375
const EVP_CIPHER *EVP_aes_128_cfb(EVP_aes_128_cfb116,4439
#undef EVP_aes_192_cfb117,4512
const EVP_CIPHER *EVP_aes_192_cfb(EVP_aes_192_cfb119,4576
#undef EVP_aes_256_cfb120,4649
const EVP_CIPHER *EVP_aes_256_cfb(EVP_aes_256_cfb122,4713

crypto/evp/m_sha1.c,738
static int init(74,3421
static int update(77,3492
static int final(80,3608
static const EVP_MD sha1_md=83,3702
const EVP_MD *EVP_sha1(EVP_sha199,3970
static int init224(106,4058
static int init256(108,4133
static int update256(115,4395
static int final256(117,4515
static const EVP_MD sha224_md=120,4614
const EVP_MD *EVP_sha224(EVP_sha224136,4906
static const EVP_MD sha256_md=139,4963
const EVP_MD *EVP_sha256(EVP_sha256155,5255
static int init384(160,5376
static int init512(162,5451
static int update512(165,5566
static int final512(167,5686
static const EVP_MD sha384_md=170,5785
const EVP_MD *EVP_sha384(EVP_sha384186,6077
static const EVP_MD sha512_md=189,6134
const EVP_MD *EVP_sha512(EVP_sha512205,6426

crypto/evp/m_null.c,162
static int init(65,3318
static int update(68,3367
static int final(71,3448
static const EVP_MD null_md=74,3516
const EVP_MD *EVP_md_null(EVP_md_null90,3669

crypto/evp/openbsd_hw.c,1271
static void *dummy=dummy57,2564
#define MAX_HW_KEY	73,2892
#define MAX_HW_IV	74,2914
#define MD5_DIGEST_LENGTH	76,2935
#define MD5_CBLOCK	77,2964
static int fd;79,2988
static int dev_failed;80,3003
typedef struct session_op session_op;82,3027
#define CDATA(84,3066
static void err(86,3113
static int dev_crypto_init(91,3207
static int dev_crypto_cleanup(120,3707
static int dev_crypto_init_key(130,3905
static int dev_crypto_cipher(153,4384
static int dev_crypto_des_ede3_init_key(238,6091
#define dev_crypto_des_ede3_cbc_cipher 243,6287
BLOCK_CIPHER_def_cbc(245,6345
static const EVP_CIPHER r4_cipher=257,6754
const EVP_CIPHER *EVP_dev_crypto_rc4(EVP_dev_crypto_rc4271,7030
    session_op sess;276,7122
    char *data;data277,7143
    int len;278,7159
    unsigned char md[md279,7172
    } MD_DATA;280,7211
static int dev_crypto_init_digest(282,7227
static int dev_crypto_cleanup_digest(300,7539
static int dev_crypto_md5_init(313,7839
static int do_digest(316,7952
static int dev_crypto_md5_update(371,9039
static int dev_crypto_md5_final(386,9437
static int dev_crypto_md5_copy(407,9831
static int dev_crypto_md5_cleanup(421,10188
static const EVP_MD md5_md=426,10304
const EVP_MD *EVP_dev_crypto_md5(EVP_dev_crypto_md5442,10670

crypto/evp/bio_b64.c,741
#define B64_BLOCK_SIZE	73,3703
#define B64_BLOCK_SIZE2	74,3731
#define B64_NONE	75,3759
#define B64_ENCODE	76,3778
#define B64_DECODE	77,3799
typedef struct b64_struct79,3821
	int buf_len;82,3893
	int buf_off;83,3907
	int tmp_len;84,3921
	int tmp_nl;85,3979
	int encode;86,4024
	int start;87,4037
	int cont;88,4086
	EVP_ENCODE_CTX base64;89,4123
	char buf[buf90,4147
	char tmp[tmp91,4196
	} BIO_B64_CTX;92,4223
static BIO_METHOD methods_b64=94,4240
BIO_METHOD *BIO_f_base64(BIO_f_base64107,4424
static int b64_new(112,4485
static int b64_free(134,4815
static int b64_read(144,4952
static int b64_write(373,9415
static long b64_ctrl(491,12142
static long b64_callback_ctrl(581,14090
static int b64_puts(595,14312

crypto/evp/e_rc4_hmac_md5.c,718
#define EVP_CIPH_FLAG_AEAD_CIPHER	63,2719
#define EVP_CTRL_AEAD_TLS1_AAD	64,2762
#define EVP_CTRL_AEAD_SET_MAC_KEY	65,2799
#define EVP_RC4_KEY_SIZE	69,2895
    RC4_KEY		ks;73,2946
    MD5_CTX		head,74,2963
    MD5_CTX		head,tail,74,2963
    MD5_CTX		head,tail,md;74,2963
    size_t		payload_length;75,2990
    } EVP_RC4_HMAC_MD5;76,3018
#define NO_PAYLOAD_LENGTH	78,3043
#define data(83,3191
static int rc4_hmac_md5_init_key(85,3251
#define	STITCHED_CALL108,3840
#define	rc4_off 112,3898
#define	md5_off 113,3916
static int rc4_hmac_md5_cipher(116,3942
static int rc4_hmac_md5_ctrl(220,6843
static EVP_CIPHER r4_hmac_md5_cipher=275,7950
const EVP_CIPHER *EVP_rc4_hmac_md5(EVP_rc4_hmac_md5294,8283

crypto/evp/evp_test.c,288
static void hexdump(63,2578
static int convert(77,2830
static char *sstrsep(sstrsep96,3112
static unsigned char *ustrsep(ustrsep127,3619
static int test1_exit(130,3724
static void test1(136,3820
static int test_cipher(244,6459
static int test_digest(261,6867
int main(320,8122

crypto/evp/m_ripemd.c,171
static int init(73,3453
static int update(76,3529
static int final(79,3650
static const EVP_MD ripemd160_md=82,3749
const EVP_MD *EVP_ripemd160(EVP_ripemd16098,3980

crypto/evp/e_aes_cbc_hmac_sha1.c,1280
#define EVP_CIPH_FLAG_AEAD_CIPHER	64,2742
#define EVP_CTRL_AEAD_TLS1_AAD	65,2785
#define EVP_CTRL_AEAD_SET_MAC_KEY	66,2822
#define EVP_CIPH_FLAG_DEFAULT_ASN1 70,2910
#define TLS1_1_VERSION 73,2955
    AES_KEY		ks;77,3007
    SHA_CTX		head,78,3024
    SHA_CTX		head,tail,78,3024
    SHA_CTX		head,tail,md;78,3024
    size_t		payload_length;79,3051
	unsigned int	tls_ver;81,3124
    	unsigned char	tls_aad[tls_aad82,3147
    } aux;83,3193
    } EVP_AES_HMAC_SHA1;84,3204
#define NO_PAYLOAD_LENGTH	86,3230
#define AESNI_CAPABLE 94,3453
#define data(111,3977
static int aesni_cbc_hmac_sha1_init_key(113,4038
#define	STITCHED_CALL134,4524
#define	aes_off 137,4575
static void sha1_update(142,4665
#define SHA1_Update 170,5144
static int aesni_cbc_hmac_sha1_cipher(172,5177
static int aesni_cbc_hmac_sha1_ctrl(281,7985
static EVP_CIPHER aesni_128_cbc_hmac_sha1_cipher 347,9381
static EVP_CIPHER aesni_256_cbc_hmac_sha1_cipher 366,9852
const EVP_CIPHER *EVP_aes_128_cbc_hmac_sha1(EVP_aes_128_cbc_hmac_sha1385,10323
const EVP_CIPHER *EVP_aes_256_cbc_hmac_sha1(EVP_aes_256_cbc_hmac_sha1391,10465
const EVP_CIPHER *EVP_aes_128_cbc_hmac_sha1(EVP_aes_128_cbc_hmac_sha1397,10612
const EVP_CIPHER *EVP_aes_256_cbc_hmac_sha1(EVP_aes_256_cbc_hmac_sha1401,10682

crypto/evp/evp_locl.h,2918
#define BLOCK_CIPHER_ecb_loop(63,2825
#define BLOCK_CIPHER_func_ecb(70,2976
#define EVP_MAXCHUNK 78,3293
#define BLOCK_CIPHER_func_ofb(80,3347
#define BLOCK_CIPHER_func_cbc(95,3921
#define BLOCK_CIPHER_func_cfb(110,4477
#define BLOCK_CIPHER_all_funcs(127,5103
#define BLOCK_CIPHER_def1(133,5421
#define BLOCK_CIPHER_def_cbc(149,5902
#define BLOCK_CIPHER_def_cfb(155,6197
#define BLOCK_CIPHER_def_ofb(162,6498
#define BLOCK_CIPHER_def_ecb(169,6792
#define BLOCK_CIPHER_defs(175,7074
#define IMPLEMENT_BLOCK_CIPHER(246,9405
#define EVP_C_DATA(255,9809
#define IMPLEMENT_CFBR(257,9875
struct evp_pkey_ctx_st266,10261
	const EVP_PKEY_METHOD *pmeth;pmeth269,10332
	ENGINE *engine;engine271,10424
	EVP_PKEY *pkey;pkey273,10465
	EVP_PKEY *peerkey;peerkey275,10529
	int operation;277,10573
	void *data;data279,10620
	void *app_data;app_data281,10666
	EVP_PKEY_gen_cb *pkey_gencb;pkey_gencb283,10706
	int *keygen_info;keygen_info285,10779
	int keygen_info_count;286,10798
#define EVP_PKEY_FLAG_DYNAMIC	289,10846
struct evp_pkey_method_st291,10879
	int pkey_id;293,10908
	int flags;294,10922
	int (*init)init296,10935
	int (*copy)copy297,10968
	void (*cleanup)cleanup298,11020
	int (*paramgen_init)paramgen_init300,11058
	int (*paramgen)paramgen301,11100
	int (*keygen_init)keygen_init303,11154
	int (*keygen)keygen304,11194
	int (*sign_init)sign_init306,11246
	int (*sign)sign307,11284
	int (*verify_init)verify_init310,11399
	int (*verify)verify311,11439
	int (*verify_recover_init)verify_recover_init315,11565
	int (*verify_recover)verify_recover316,11613
	int (*signctx_init)signctx_init320,11744
	int (*signctx)signctx321,11803
	int (*verifyctx_init)verifyctx_init324,11899
	int (*verifyctx)verifyctx325,11960
	int (*encrypt_init)encrypt_init328,12059
	int (*encrypt)encrypt329,12100
	int (*decrypt_init)decrypt_init332,12217
	int (*decrypt)decrypt333,12258
	int (*derive_init)derive_init336,12375
	int (*derive)derive337,12415
	int (*ctrl)ctrl339,12487
	int (*ctrl_str)ctrl_str340,12548
#undef SHA1_Init354,12937
#undef SHA1_Update355,12954
#undef SHA224_Init356,12973
#undef SHA256_Init357,12992
#undef SHA384_Init358,13011
#undef SHA512_Init359,13030
#undef DES_set_key_unchecked360,13049
#define RIPEMD160_Init	363,13086
#define WHIRLPOOL_Init	364,13132
#define MD5_Init	365,13178
#define MD4_Init	366,13212
#define MD2_Init	367,13246
#define MDC2_Init	368,13280
#define SHA_Init	369,13316
#define SHA1_Init	370,13350
#define SHA224_Init	371,13386
#define SHA256_Init	372,13426
#define SHA384_Init	373,13466
#define SHA512_Init	374,13506
#define BF_set_key	376,13547
#define CAST_set_key	377,13585
#define idea_set_encrypt_key	378,13627
#define SEED_set_key	379,13685
#define RC2_set_key	380,13727
#define RC4_set_key	381,13767
#define DES_set_key_unchecked	382,13807
#define Camellia_set_key	383,13867

crypto/evp/m_mdc2.c,156
static int init(74,3448
static int update(77,3519
static int final(80,3635
static const EVP_MD mdc2_md=83,3729
const EVP_MD *EVP_mdc2(EVP_mdc299,3947

crypto/evp/p5_crpt.c,60
void PKCS5_PBE_add(68,2920
int PKCS5_PBE_keyivgen(72,2950

crypto/evp/bio_enc.c,585
#define ENC_BLOCK_SIZE	73,3711
#define BUF_OFFSET	74,3743
typedef struct enc_struct76,3788
	int buf_len;78,3817
	int buf_off;79,3831
	int cont;80,3845
	int finished;81,3882
	int ok;82,3897
	EVP_CIPHER_CTX cipher;83,3926
	char buf[buf87,4082
	} BIO_ENC_CTX;88,4122
static BIO_METHOD methods_enc=90,4139
BIO_METHOD *BIO_f_cipher(BIO_f_cipher103,4326
static int enc_new(108,4387
static int enc_free(128,4705
static int enc_read(143,4971
static int enc_write(231,6817
static long enc_ctrl(286,7816
static long enc_callback_ctrl(376,9699
void BIO_set_cipher(410,10294

crypto/evp/p_lib.c,1145
int EVP_PKEY_bits(85,3689
int EVP_PKEY_size(92,3832
int EVP_PKEY_save_parameters(99,3975
int EVP_PKEY_copy_parameters(124,4387
int EVP_PKEY_missing_parameters(143,4809
int EVP_PKEY_cmp_parameters(150,4972
int EVP_PKEY_cmp(159,5169
EVP_PKEY *EVP_PKEY_new(EVP_PKEY_new182,5537
static int pkey_set_type(207,6068
int EVP_PKEY_set_type(253,7015
int EVP_PKEY_set_type_str(258,7115
int EVP_PKEY_assign(263,7244
void *EVP_PKEY_get0(EVP_PKEY_get0271,7401
int EVP_PKEY_set1_RSA(277,7491
RSA *EVP_PKEY_get1_RSA(EVP_PKEY_get1_RSA285,7628
int EVP_PKEY_set1_DSA(297,7871
DSA *EVP_PKEY_get1_DSA(EVP_PKEY_get1_DSA305,8008
int EVP_PKEY_set1_EC_KEY(318,8250
EC_KEY *EVP_PKEY_get1_EC_KEY(EVP_PKEY_get1_EC_KEY326,8399
int EVP_PKEY_set1_DH(341,8651
DH *EVP_PKEY_get1_DH(EVP_PKEY_get1_DH349,8784
int EVP_PKEY_type(360,8995
int EVP_PKEY_id(377,9262
int EVP_PKEY_base_id(382,9327
void EVP_PKEY_free(387,9412
static void EVP_PKEY_free_it(411,9849
static int unsup_alg(427,10097
int EVP_PKEY_print_public(436,10324
int EVP_PKEY_print_private(445,10578
int EVP_PKEY_print_params(454,10836
int EVP_PKEY_get_default_digest_nid(462,11092

crypto/evp/names.c,583
int EVP_add_cipher(65,3317
int EVP_add_digest(81,3635
const EVP_CIPHER *EVP_get_cipherbyname(EVP_get_cipherbyname106,4271
const EVP_MD *EVP_get_digestbyname(EVP_get_digestbyname114,4442
void EVP_cleanup(122,4597
struct doall_cipher140,5032
	void *arg;arg142,5055
	void (*fn)fn143,5067
static void do_all_cipher_fn(147,5157
void EVP_CIPHER_do_all(156,5388
void EVP_CIPHER_do_all_sorted(165,5631
struct doall_md174,5887
	void *arg;arg176,5906
	void (*fn)fn177,5918
static void do_all_md_fn(181,6004
void EVP_MD_do_all(190,6223
void EVP_MD_do_all_sorted(199,6444

crypto/evp/bio_ok.c,952
#define OK_BLOCK_SIZE	140,6182
#define OK_BLOCK_BLOCK	141,6213
#define IOBS	142,6238
#define WELLKNOWN 143,6303
typedef struct ok_struct145,6377
	size_t buf_len;147,6405
	size_t buf_off;148,6422
	size_t buf_len_save;149,6439
	size_t buf_off_save;150,6461
	int cont;151,6483
	int finished;152,6520
	EVP_MD_CTX md;153,6535
	int blockout;154,6551
	int sigio;155,6596
	unsigned char buf[buf156,6638
	} BIO_OK_CTX;157,6664
static BIO_METHOD methods_ok=159,6680
BIO_METHOD *BIO_f_reliable(BIO_f_reliable172,6860
static int ok_new(177,6922
static int ok_free(201,7295
static int ok_read(213,7526
static int ok_write(298,9118
static long ok_ctrl(363,10394
static long ok_callback_ctrl(451,12014
static void longswap(465,12235
{	const union { long one;466,12280
{	const union { long one; char little;466,12280
static int sig_out(479,12498
static int sig_in(512,13353
static int block_out(556,14317
static int block_in(583,14899

crypto/evp/e_seed.c,88
	SEED_KEY_SCHEDULE ks;69,3014
	} EVP_SEED_KEY;70,3037
IMPLEMENT_BLOCK_CIPHER(72,3055

crypto/evp/e_des.c,275
static int des_ecb_cipher(74,3652
static int des_ofb_cipher(82,3902
static int des_cbc_cipher(99,4337
static int des_cfb64_cipher(116,4776
static int des_cfb1_cipher(135,5348
static int des_cfb8_cipher(162,5965
BLOCK_CIPHER_defs(179,6409
static int des_ctrl(208,7250

crypto/evp/p_sign.c,83
void EVP_SignInit(66,3331
void EVP_SignUpdate(71,3417
int EVP_SignFinal(78,3550

crypto/evp/p_seal.c,54
int EVP_SealInit(69,3399
int EVP_SealFinal(109,4298

crypto/evp/m_ecdsa.c,164
static int init(121,5998
static int update(124,6069
static int final(127,6185
static const EVP_MD ecdsa_md=130,6279
const EVP_MD *EVP_ecdsa(EVP_ecdsa146,6517

crypto/evp/evp_lib.c,1201
int EVP_CIPHER_param_to_asn1(64,3293
int EVP_CIPHER_asn1_to_param(77,3593
int EVP_CIPHER_get_asn1_iv(90,3893
int EVP_CIPHER_set_asn1_iv(108,4227
int EVP_CIPHER_type(123,4551
int EVP_CIPHER_block_size(181,5507
int EVP_CIPHER_CTX_block_size(186,5584
int EVP_Cipher(191,5681
const EVP_CIPHER *EVP_CIPHER_CTX_cipher(EVP_CIPHER_CTX_cipher196,5835
unsigned long EVP_CIPHER_flags(201,5930
unsigned long EVP_CIPHER_CTX_flags(206,6017
void *EVP_CIPHER_CTX_get_app_data(EVP_CIPHER_CTX_get_app_data211,6114
void EVP_CIPHER_CTX_set_app_data(216,6205
int EVP_CIPHER_iv_length(221,6301
int EVP_CIPHER_CTX_iv_length(226,6383
int EVP_CIPHER_key_length(231,6475
int EVP_CIPHER_CTX_key_length(236,6559
int EVP_CIPHER_nid(241,6645
int EVP_CIPHER_CTX_nid(246,6718
int EVP_MD_block_size(251,6801
int EVP_MD_type(256,6873
int EVP_MD_pkey_type(261,6932
int EVP_MD_size(266,7001
unsigned long EVP_MD_flags(276,7153
const EVP_MD *EVP_MD_CTX_md(EVP_MD_CTX_md281,7224
void EVP_MD_CTX_set_flags(288,7329
void EVP_MD_CTX_clear_flags(293,7412
int EVP_MD_CTX_test_flags(298,7498
void EVP_CIPHER_CTX_set_flags(303,7595
void EVP_CIPHER_CTX_clear_flags(308,7686
int EVP_CIPHER_CTX_test_flags(313,7780

crypto/evp/e_rc4.c,356
#define EVP_RC4_KEY_SIZE	70,3412
    RC4_KEY ks;74,3463
    } EVP_RC4_KEY;75,3497
#define data(77,3517
static const EVP_CIPHER r4_cipher=83,3789
static const EVP_CIPHER r4_40_cipher=98,3976
const EVP_CIPHER *EVP_rc4(EVP_rc4113,4168
const EVP_CIPHER *EVP_rc4_40(EVP_rc4_40118,4228
static int rc4_init_key(123,4294
static int rc4_cipher(131,4492

crypto/evp/p_enc.c,34
int EVP_PKEY_encrypt_old(69,3398

crypto/evp/e_cast.c,101
	CAST_KEY ks;73,3494
	} EVP_CAST_KEY;74,3508
#define data(76,3526
IMPLEMENT_BLOCK_CIPHER(78,3574

crypto/evp/pmeth_lib.c,1706
typedef int sk_cmp_fn_type(70,2958
DECLARE_STACK_OF(72,3033
static int pmeth_cmp(99,3639
const EVP_PKEY_METHOD *EVP_PKEY_meth_find(EVP_PKEY_meth_find108,3886
static EVP_PKEY_CTX *int_ctx_new(int_ctx_new127,4357
EVP_PKEY_METHOD* EVP_PKEY_meth_new(200,5698
void EVP_PKEY_meth_get0_info(241,6569
void EVP_PKEY_meth_copy(250,6748
void EVP_PKEY_meth_free(291,7691
EVP_PKEY_CTX *EVP_PKEY_CTX_new(EVP_PKEY_CTX_new297,7823
EVP_PKEY_CTX *EVP_PKEY_CTX_new_id(EVP_PKEY_CTX_new_id302,7922
EVP_PKEY_CTX *EVP_PKEY_CTX_dup(EVP_PKEY_CTX_dup307,8016
int EVP_PKEY_meth_add0(351,8940
void EVP_PKEY_CTX_free(365,9256
int EVP_PKEY_CTX_ctrl(384,9713
int EVP_PKEY_CTX_ctrl_str(417,10430
int EVP_PKEY_CTX_get_operation(440,10969
void EVP_PKEY_CTX_set0_keygen_info(445,11050
void EVP_PKEY_CTX_set_data(451,11192
void *EVP_PKEY_CTX_get_data(EVP_PKEY_CTX_get_data456,11276
EVP_PKEY *EVP_PKEY_CTX_get0_pkey(EVP_PKEY_CTX_get0_pkey461,11349
EVP_PKEY *EVP_PKEY_CTX_get0_peerkey(EVP_PKEY_CTX_get0_peerkey466,11427
void EVP_PKEY_CTX_set_app_data(471,11512
void *EVP_PKEY_CTX_get_app_data(EVP_PKEY_CTX_get_app_data476,11604
void EVP_PKEY_meth_set_init(481,11685
void EVP_PKEY_meth_set_copy(487,11798
void EVP_PKEY_meth_set_cleanup(493,11930
void EVP_PKEY_meth_set_paramgen(499,12056
void EVP_PKEY_meth_set_keygen(507,12282
void EVP_PKEY_meth_set_sign(515,12494
void EVP_PKEY_meth_set_verify(524,12758
void EVP_PKEY_meth_set_verify_recover(533,13041
void EVP_PKEY_meth_set_signctx(543,13380
void EVP_PKEY_meth_set_verifyctx(552,13660
void EVP_PKEY_meth_set_encrypt(561,13955
void EVP_PKEY_meth_set_decrypt(570,14242
void EVP_PKEY_meth_set_derive(579,14525
void EVP_PKEY_meth_set_ctrl(587,14757

crypto/evp/pmeth_gn.c,410
int EVP_PKEY_paramgen_init(67,2897
int EVP_PKEY_paramgen(85,3317
int EVP_PKEY_keygen_init(116,3875
int EVP_PKEY_keygen(134,4283
void EVP_PKEY_CTX_set_cb(165,4829
EVP_PKEY_gen_cb *EVP_PKEY_CTX_get_cb(EVP_PKEY_CTX_get_cb170,4924
static int trans_cb(179,5109
void evp_pkey_set_cb_translate(187,5279
int EVP_PKEY_CTX_get_keygen_info(192,5383
EVP_PKEY *EVP_PKEY_new_mac_key(EVP_PKEY_new_mac_key201,5590

crypto/evp/e_aes.c,2528
	AES_KEY ks;65,2742
	block128_f block;66,2755
		cbc128_f cbc;68,2783
		ctr128_f ctr;69,2799
	} stream;70,2815
	} EVP_AES_KEY;71,2826
	AES_KEY ks;75,2861
	int key_set;76,2905
	int iv_set;77,2949
	GCM128_CONTEXT gcm;78,2989
	unsigned char *iv;iv79,3010
	int ivlen;80,3055
	int taglen;81,3084
	int iv_gen;82,3097
	int tls_aad_len;83,3142
	ctr128_f ctr;84,3181
	} EVP_AES_GCM_CTX;85,3196
	AES_KEY ks1,89,3235
	AES_KEY ks1, ks2;89,3235
	XTS128_CONTEXT xts;90,3285
	void     (*stream)stream91,3306
	} EVP_AES_XTS_CTX;95,3466
	AES_KEY ks;99,3505
	int key_set;100,3549
	int iv_set;101,3593
	int tag_set;102,3633
	int len_set;103,3674
	int L,104,3721
	int L, M;104,3721
	CCM128_CONTEXT ccm;105,3771
	ccm128_f str;106,3792
	} EVP_AES_CCM_CTX;107,3807
#define MAXBITCHUNK	109,3828
#define VPAES_CAPABLE	166,5834
#define BSAES_CAPABLE	169,5916
#define	AESNI_CAPABLE	174,5984
static int aesni_init_key(229,7507
static int aesni_cbc_cipher(265,8468
static int aesni_ecb_cipher(273,8661
#define aesni_ofb_cipher 285,8909
#define aesni_cfb_cipher 289,9056
#define aesni_cfb8_cipher 293,9203
#define aesni_cfb1_cipher 297,9353
#define aesni_ctr_cipher 301,9503
static int aesni_gcm_init_key(305,9653
#define aesni_gcm_cipher 342,10544
static int aesni_xts_init_key(346,10694
#define aesni_xts_cipher 385,11544
static int aesni_ccm_init_key(389,11694
#define aesni_ccm_cipher 412,12286
#define BLOCK_CIPHER_generic(416,12436
#define BLOCK_CIPHER_custom(437,13146
#define BLOCK_CIPHER_generic(461,14041
#define BLOCK_CIPHER_custom(473,14456
#define BLOCK_CIPHER_generic_pack(487,14966
static int aes_init_key(496,15552
static int aes_cbc_cipher(574,17492
static int aes_ecb_cipher(589,17913
static int aes_ofb_cipher(604,18231
static int aes_cfb_cipher(614,18482
static int aes_cfb8_cipher(624,18746
static int aes_cfb1_cipher(634,19013
static int aes_ctr_cipher 657,19605
BLOCK_CIPHER_generic_pack(673,20042
static void ctr64_inc(687,20463
static int aes_gcm_ctrl(700,20631
static int aes_gcm_init_key(817,23509
static int aes_gcm_tls_cipher(886,25185
static int aes_gcm_cipher(959,26991
#define CUSTOM_FLAGS	1030,28298
BLOCK_CIPHER_custom(1034,28457
static int aes_xts_init_key(1052,29070
static int aes_xts_cipher(1121,30578
#define aes_xts_cleanup 1147,31277
#define XTS_FLAGS	1149,31307
BLOCK_CIPHER_custom(1152,31431
static int aes_ccm_init_key(1206,32510
static int aes_ccm_cipher(1238,33276
#define aes_ccm_cleanup 1306,34751
BLOCK_CIPHER_custom(1308,34781

crypto/evp/p_verify.c,29
int EVP_VerifyFinal(65,3320

crypto/evp/evp_pbe.c,512
DECLARE_STACK_OF(68,2931
	int pbe_type;75,3071
	int pbe_nid;76,3086
	int cipher_nid;77,3100
	int md_nid;78,3117
	EVP_PBE_KEYGEN *keygen;keygen79,3130
	} EVP_PBE_CTL;80,3155
static const EVP_PBE_CTL builtin_pbe[builtin_pbe82,3172
int main(129,5074
int EVP_PBE_CipherInit(155,5637
static int pbe2_cmp(213,6900
static int pbe_cmp(224,7154
int EVP_PBE_alg_add_type(235,7381
int EVP_PBE_alg_add(257,7931
int EVP_PBE_find(274,8291
static void free_evp_pbe_ctl(307,8955
void EVP_PBE_cleanup(312,9036

crypto/evp/m_dss.c,153
static int init(71,3417
static int update(74,3488
static int final(77,3604
static const EVP_MD dsa_md=80,3698
const EVP_MD *EVP_dss(EVP_dss96,3922

crypto/evp/m_wp.c,166
static int init(14,230
static int update(17,306
static int final(20,427
static const EVP_MD whirlpool_md=23,526
const EVP_MD *EVP_whirlpool(EVP_whirlpool39,741

crypto/evp/m_md5.c,153
static int init(73,3444
static int update(76,3514
static int final(79,3629
static const EVP_MD md5_md=82,3722
const EVP_MD *EVP_md5(EVP_md598,3927

crypto/evp/c_allc.c,38
void OpenSSL_add_all_ciphers(65,3320

crypto/evp/evp_acnf.c,46
void OPENSSL_add_all_algorithms_conf(69,2931

crypto/evp/c_all.c,131
#undef OpenSSL_add_all_algorithms67,3329
void OpenSSL_add_all_algorithms(69,3364
void OPENSSL_add_all_algorithms_noconf(75,3454

crypto/evp/e_xcbc_d.c,316
    DES_key_schedule ks;77,3619
    DES_cblock inw;78,3662
    DES_cblock outw;79,3682
    } DESX_CBC_KEY;80,3703
#define data(82,3724
static const EVP_CIPHER d_xcbc_cipher=84,3780
const EVP_CIPHER *EVP_desx_cbc(EVP_desx_cbc99,4002
static int desx_cbc_init_key(104,4072
static int desx_cbc_cipher(116,4378

crypto/evp/digest.c,403
void EVP_MD_CTX_init(124,6041
EVP_MD_CTX *EVP_MD_CTX_create(EVP_MD_CTX_create129,6117
int EVP_DigestInit(139,6255
int EVP_DigestInit_ex(145,6385
int EVP_DigestUpdate(245,8945
int EVP_DigestFinal(255,9216
int EVP_DigestFinal_ex(264,9469
int EVP_MD_CTX_copy(284,9956
int EVP_MD_CTX_copy_ex(290,10082
int EVP_Digest(350,11289
void EVP_MD_CTX_destroy(366,11689
int EVP_MD_CTX_cleanup(373,11843

crypto/ui/ui.h,1361
#define HEADER_UI_H60,2796
#define UI_INPUT_FLAG_ECHO	151,6978
#define UI_INPUT_FLAG_DEFAULT_PWD	157,7320
#define UI_INPUT_FLAG_USER_BASE	168,7753
#define UI_CTRL_PRINT_ERRORS	220,9824
#define UI_CTRL_IS_REDOABLE	224,10024
#define UI_set_app_data(228,10095
#define UI_get_app_data(229,10158
typedef struct ui_string_st UI_STRING;290,12840
DECLARE_STACK_OF(291,12879
enum UI_string_types295,13017
	UIT_NONE=297,13041
	UIT_PROMPT,298,13054
	UIT_VERIFY,299,13094
	UIT_BOOLEAN,300,13145
	UIT_INFO,301,13195
	UIT_ERROR	302,13235
#define UI_F_GENERAL_ALLOCATE_BOOLEAN	358,15844
#define UI_F_GENERAL_ALLOCATE_PROMPT	359,15889
#define UI_F_GENERAL_ALLOCATE_STRING	360,15933
#define UI_F_UI_CTRL	361,15977
#define UI_F_UI_DUP_ERROR_STRING	362,16007
#define UI_F_UI_DUP_INFO_STRING	363,16047
#define UI_F_UI_DUP_INPUT_BOOLEAN	364,16087
#define UI_F_UI_DUP_INPUT_STRING	365,16128
#define UI_F_UI_DUP_VERIFY_STRING	366,16168
#define UI_F_UI_GET0_RESULT	367,16209
#define UI_F_UI_NEW_METHOD	368,16245
#define UI_F_UI_SET_RESULT	369,16280
#define UI_R_COMMON_OK_AND_CANCEL_CHARACTERS	372,16336
#define UI_R_INDEX_TOO_LARGE	373,16387
#define UI_R_INDEX_TOO_SMALL	374,16424
#define UI_R_NO_RESULT_BUFFER	375,16461
#define UI_R_RESULT_TOO_LARGE	376,16499
#define UI_R_RESULT_TOO_SMALL	377,16537
#define UI_R_UNKNOWN_CONTROL_COMMAND	378,16575

crypto/ui/ui_lib.c,2464
IMPLEMENT_STACK_OF(67,2948
UI *UI_new_method(UI_new_method76,3083
static void free_string(98,3490
void UI_free(117,3898
static int allocate_string_stack(126,4081
static UI_STRING *general_allocate_prompt(general_allocate_prompt139,4264
static int general_allocate_string(165,4968
static int general_allocate_boolean(190,5644
int UI_add_input_string(243,6906
int UI_dup_input_string(251,7201
int UI_add_verify_string(270,7616
int UI_dup_verify_string(277,7863
int UI_add_input_boolean(296,8307
int UI_dup_input_boolean(304,8591
int UI_add_info_string(364,9955
int UI_dup_info_string(370,10090
int UI_add_error_string(388,10409
int UI_dup_error_string(394,10546
char *UI_construct_prompt(UI_construct_prompt411,10867
void *UI_add_user_data(UI_add_user_data446,11705
void *UI_get0_user_data(UI_get0_user_data453,11839
const char *UI_get0_result(UI_get0_result458,11901
static int print_error(473,12218
int UI_process(487,12478
int UI_ctrl(549,13636
int UI_get_ex_new_index(576,14173
int UI_set_ex_data(583,14424
void *UI_get_ex_data(UI_get_ex_data588,14527
void UI_set_default_method(593,14617
const UI_METHOD *UI_get_default_method(UI_get_default_method598,14697
const UI_METHOD *UI_get_method(UI_get_method607,14844
const UI_METHOD *UI_set_method(UI_set_method612,14908
UI_METHOD *UI_create_method(UI_create_method619,15012
void UI_destroy_method(634,15482
int UI_method_set_opener(641,15617
int UI_method_set_writer(652,15779
int UI_method_set_flusher(663,15957
int UI_method_set_reader(674,16115
int UI_method_set_closer(685,16292
int UI_method_set_prompt_constructor(696,16455
int (*UI_method_get_opener(UI_method_get_opener707,16709
int (*UI_method_get_writer(UI_method_get_writer715,16836
int (*UI_method_get_flusher(UI_method_get_flusher723,16974
int (*UI_method_get_reader(UI_method_get_reader731,17095
int (*UI_method_get_closer(UI_method_get_closer739,17232
char* (*UI_method_get_prompt_constructor(UI_method_get_prompt_constructor747,17360
enum UI_string_types UI_get_string_type(755,17531
int UI_get_input_flags(762,17643
const char *UI_get0_output_string(UI_get0_output_string769,17738
const char *UI_get0_action_string(UI_get0_action_string776,17846
const char *UI_get0_result_string(UI_get0_result_string790,18060
const char *UI_get0_test_string(UI_get0_test_string804,18257
int UI_get_result_minsize(817,18446
int UI_get_result_maxsize(831,18649
int UI_set_result(845,18852

crypto/ui/ui_util.c,65
int UI_UTIL_read_pw_string(59,2739
int UI_UTIL_read_pw(69,2977

crypto/ui/ui_openssl.c,2238
#define _POSIX_C_SOURCE 126,6430
#  define SIGACTION143,6838
#   define TERMIOS145,6921
# undef OPENSSL_SYS_WIN16152,6982
# undef WIN16153,7008
# undef _WINDOWS154,7022
# define TERMIOS182,7553
# undef  TERMIO183,7570
# undef  SGTTY184,7586
# undef  TERMIOS188,7648
# define TERMIO189,7665
# undef  SGTTY190,7681
# undef  TERMIOS194,7717
# define TERMIO195,7734
# undef  SGTTY196,7750
# undef  TERMIOS200,7950
# undef  TERMIO201,7967
# define SGTTY202,7983
#undef TERMIOS206,8039
#undef TERMIO207,8054
#undef SGTTY208,8068
#undef TERMIOS212,8122
#undef TERMIO213,8137
#undef SGTTY214,8151
# define TTY_STRUCT	219,8209
# define TTY_FLAGS	220,8245
# define TTY_get(221,8273
# define TTY_set(222,8320
# define TTY_STRUCT	227,8418
# define TTY_FLAGS	228,8453
# define TTY_get(229,8481
# define TTY_set(230,8531
# define TTY_STRUCT	235,8622
# define TTY_FLAGS	236,8657
# define TTY_get(237,8686
# define TTY_set(238,8738
struct IOSB 254,9142
	short iosb$w_value;255,9156
	short iosb$w_count;256,9177
	long  iosb$l_info;257,9198
	typedef int sig_atomic_t;262,9255
# define TTY_STRUCT 271,9551
# define NX509_SIG 275,9601
static struct sigaction savsig[savsig281,9701
static struct IOSB iosb;287,9821
static long tty_orig[tty_orig289,9881
static long tty_orig[3], tty_new[tty_new289,9881
static long status;290,10010
static unsigned short channel 291,10030
static TTY_STRUCT tty_orig,294,10125
static TTY_STRUCT tty_orig,tty_new;294,10125
static FILE *tty_in,tty_in297,10175
static FILE *tty_in, *tty_out;tty_out297,10175
static int is_a_tty;298,10206
static UI_METHOD ui_openssl 320,10879
UI_METHOD *UI_OpenSSL(UI_OpenSSL332,11120
static int write_string(339,11278
static int read_string(354,11512
static int read_till_nl(395,12550
#define SIZE 397,12587
static volatile sig_atomic_t intr_signal;407,12721
static int read_string_inner(410,12771
static int open_console(476,13928
#    define DEV_TTY 486,14212
#    define DEV_TTY 488,14246
static int noecho_console(525,15062
static int echo_console(547,15621
static int close_console(569,16211
static void pushsig(584,16560
static void popsig(631,17393
static void recsig(661,17901
static int noecho_fgets(669,18096

crypto/ui/ui_locl.h,1099
#define HEADER_UI_LOCL_H60,2801
#undef _66,2889
struct ui_method_st69,2906
	char *name;name71,2929
	int (*ui_open_session)ui_open_session80,3201
	int (*ui_write_string)ui_write_string82,3235
	int (*ui_flush)ui_flush86,3394
	int (*ui_read_string)ui_read_string88,3421
	int (*ui_close_session)ui_close_session90,3470
	char *(*ui_construct_prompt)ui_construct_prompt98,3867
struct ui_string_st102,3963
	enum UI_string_types type;104,3986
	const char *out_string;out_string105,4026
	int input_flags;106,4063
	char *result_buf;result_buf110,4222
			int result_minsize;118,4467
			int result_maxsize;121,4555
			const char *test_buf;test_buf124,4638
			} string_data;126,4715
			const char *action_desc;action_desc129,4747
			const char *ok_chars;ok_chars130,4787
			const char *cancel_chars;cancel_chars131,4824
			} boolean_data;132,4865
		} _;133,4884
#define OUT_STRING_FREEABLE 135,4892
	int flags;136,4925
struct ui_st139,4972
	const UI_METHOD *meth;meth141,4988
	STACK_OF(142,5012
#define UI_FLAG_REDOABLE	148,5200
#define UI_FLAG_PRINT_ERRORS	149,5232

crypto/ui/ui_err.c,211
#define ERR_FUNC(68,2972
#define ERR_REASON(69,3023
static ERR_STRING_DATA UI_str_functs[UI_str_functs71,3081
static ERR_STRING_DATA UI_str_reasons[UI_str_reasons88,3840
void ERR_load_UI_strings(102,4375

crypto/ui/ui_compat.c,77
int _ossl_old_des_read_pw_string(59,2751
int _ossl_old_des_read_pw(64,2904

crypto/ui/ui_compat.h,100
#define HEADER_UI_COMPAT_H60,2803
#define des_read_pw_string(72,3063
#define des_read_pw(74,3148

crypto/ocsp/ocsp_prn.c,424
static int ocsp_certid_print(69,3047
	long t;87,3676
	const char *m;m88,3685
	} OCSP_TBLSTR;89,3701
static const char *table2string(table2string91,3718
const char *OCSP_response_status_str(OCSP_response_status_str100,3918
const char *OCSP_cert_status_str(OCSP_cert_status_str112,4441
const char *OCSP_crl_reason_str(OCSP_crl_reason_str121,4727
int OCSP_REQUEST_print(135,5404
int OCSP_RESPONSE_print(181,6739

crypto/ocsp/ocsp.h,7526
#define HEADER_OCSP_H65,2929
#define OCSP_DEFAULT_NONCE_LENGTH	78,3141
#define OCSP_NOCERTS	80,3179
#define OCSP_NOINTERN	81,3206
#define OCSP_NOSIGS	82,3234
#define OCSP_NOCHAIN	83,3260
#define OCSP_NOVERIFY	84,3287
#define OCSP_NOEXPLICIT	85,3316
#define OCSP_NOCASIGN	86,3347
#define OCSP_NODELEGATED	87,3376
#define OCSP_NOCHECKS	88,3407
#define OCSP_TRUSTOTHER	89,3437
#define OCSP_RESPID_KEY	90,3469
#define OCSP_NOTIME	91,3501
typedef struct ocsp_cert_id_st99,3843
	X509_ALGOR *hashAlgorithm;hashAlgorithm101,3877
	ASN1_OCTET_STRING *issuerNameHash;issuerNameHash102,3905
	ASN1_OCTET_STRING *issuerKeyHash;issuerKeyHash103,3941
	ASN1_INTEGER *serialNumber;serialNumber104,3976
	} OCSP_CERTID;105,4005
DECLARE_STACK_OF(107,4022
typedef struct ocsp_one_request_st113,4204
	OCSP_CERTID *reqCert;reqCert115,4242
	STACK_OF(116,4265
	} OCSP_ONEREQ;117,4317
DECLARE_STACK_OF(119,4334
typedef struct ocsp_req_info_st129,4687
	ASN1_INTEGER *version;version131,4722
	GENERAL_NAME *requestorName;requestorName132,4746
	STACK_OF(133,4776
	} OCSP_REQINFO;135,4859
typedef struct ocsp_signature_st142,5092
	X509_ALGOR *signatureAlgorithm;signatureAlgorithm144,5128
	ASN1_BIT_STRING *signature;signature145,5161
	STACK_OF(146,5190
	} OCSP_SIGNATURE;147,5214
typedef struct ocsp_request_st153,5394
	OCSP_REQINFO *tbsRequest;tbsRequest155,5428
	OCSP_SIGNATURE *optionalSignature;optionalSignature156,5455
	} OCSP_REQUEST;157,5506
#define OCSP_RESPONSE_STATUS_SUCCESSFUL 169,6039
#define OCSP_RESPONSE_STATUS_MALFORMEDREQUEST 170,6090
#define OCSP_RESPONSE_STATUS_INTERNALERROR 171,6142
#define OCSP_RESPONSE_STATUS_TRYLATER 172,6194
#define OCSP_RESPONSE_STATUS_SIGREQUIRED 173,6246
#define OCSP_RESPONSE_STATUS_UNAUTHORIZED 174,6298
typedef struct ocsp_resp_bytes_st180,6477
	ASN1_OBJECT *responseType;responseType182,6514
	ASN1_OCTET_STRING *response;response183,6542
	} OCSP_RESPBYTES;184,6572
struct ocsp_response_st190,6749
	ASN1_ENUMERATED *responseStatus;responseStatus192,6776
	OCSP_RESPBYTES  *responseBytes;responseBytes193,6810
#define V_OCSP_RESPID_NAME 200,6940
#define V_OCSP_RESPID_KEY 201,6969
struct ocsp_responder_id_st202,6998
	int type;204,7029
		X509_NAME* byName;206,7051
        	ASN1_OCTET_STRING *byKey;byKey207,7072
		} value;208,7107
DECLARE_STACK_OF(211,7123
typedef struct ocsp_revoked_info_st222,7491
	ASN1_GENERALIZEDTIME *revocationTime;revocationTime224,7530
	ASN1_ENUMERATED *revocationReason;revocationReason225,7569
	} OCSP_REVOKEDINFO;226,7605
#define V_OCSP_CERTSTATUS_GOOD 233,7831
#define V_OCSP_CERTSTATUS_REVOKED 234,7867
#define V_OCSP_CERTSTATUS_UNKNOWN 235,7903
typedef struct ocsp_cert_status_st236,7939
	int type;238,7977
		ASN1_NULL *good;good240,7997
		OCSP_REVOKEDINFO *revoked;revoked241,8016
		ASN1_NULL *unknown;unknown242,8045
		} value;243,8067
	} OCSP_CERTSTATUS;244,8078
typedef struct ocsp_single_response_st253,8426
	OCSP_CERTID *certId;certId255,8468
	OCSP_CERTSTATUS *certStatus;certStatus256,8490
	ASN1_GENERALIZEDTIME *thisUpdate;thisUpdate257,8520
	ASN1_GENERALIZEDTIME *nextUpdate;nextUpdate258,8555
	STACK_OF(259,8590
	} OCSP_SINGLERESP;260,8635
DECLARE_STACK_OF(262,8656
typedef struct ocsp_response_data_st272,9048
	ASN1_INTEGER *version;version274,9088
	OCSP_RESPID  *responderId;responderId275,9112
	ASN1_GENERALIZEDTIME *producedAt;producedAt276,9140
	STACK_OF(277,9175
	} OCSP_RESPDATA;279,9261
typedef struct ocsp_basic_response_st303,10628
	OCSP_RESPDATA *tbsResponseData;tbsResponseData305,10669
	X509_ALGOR *signatureAlgorithm;signatureAlgorithm306,10702
	ASN1_BIT_STRING *signature;signature307,10735
	STACK_OF(308,10764
	} OCSP_BASICRESP;309,10788
#define OCSP_REVOKED_STATUS_NOSTATUS 322,11160
#define OCSP_REVOKED_STATUS_UNSPECIFIED 323,11214
#define OCSP_REVOKED_STATUS_KEYCOMPROMISE 324,11268
#define OCSP_REVOKED_STATUS_CACOMPROMISE 325,11322
#define OCSP_REVOKED_STATUS_AFFILIATIONCHANGED 326,11376
#define OCSP_REVOKED_STATUS_SUPERSEDED 327,11430
#define OCSP_REVOKED_STATUS_CESSATIONOFOPERATION 328,11484
#define OCSP_REVOKED_STATUS_CERTIFICATEHOLD 329,11538
#define OCSP_REVOKED_STATUS_REMOVEFROMCRL 330,11592
typedef struct ocsp_crl_id_st337,11875
	ASN1_IA5STRING *crlUrl;crlUrl339,11915
	ASN1_INTEGER *crlNum;crlNum340,11940
	ASN1_GENERALIZEDTIME *crlTime;crlTime341,11963
        } OCSP_CRLID;342,11995
typedef struct ocsp_service_locator_st348,12134
	X509_NAME* issuer;350,12183
	STACK_OF(351,12203
        } OCSP_SERVICELOC;352,12243
#define PEM_STRING_OCSP_REQUEST	354,12272
#define PEM_STRING_OCSP_RESPONSE 355,12319
#define d2i_OCSP_REQUEST_bio(357,12369
#define d2i_OCSP_RESPONSE_bio(359,12474
#define	PEM_read_bio_OCSP_REQUEST(361,12583
#define	PEM_read_bio_OCSP_RESPONSE(364,12746
#define PEM_write_bio_OCSP_REQUEST(367,12911
#define PEM_write_bio_OCSP_RESPONSE(371,13072
#define i2d_OCSP_RESPONSE_bio(375,13236
#define i2d_OCSP_REQUEST_bio(377,13327
#define OCSP_REQUEST_sign(379,13415
#define OCSP_BASICRESP_sign(384,13616
#define OCSP_REQUEST_verify(388,13778
#define OCSP_BASICRESP_verify(392,13961
#define ASN1_BIT_STRING_digest(395,14106
#define OCSP_CERTSTATUS_dup(398,14226
DECLARE_ASN1_FUNCTIONS(533,20679
#define OCSP_F_ASN1_STRING_ENCODE	568,21913
#define OCSP_F_D2I_OCSP_NONCE	569,21954
#define OCSP_F_OCSP_BASIC_ADD1_STATUS	570,21992
#define OCSP_F_OCSP_BASIC_SIGN	571,22037
#define OCSP_F_OCSP_BASIC_VERIFY	572,22076
#define OCSP_F_OCSP_CERT_ID_NEW	573,22116
#define OCSP_F_OCSP_CHECK_DELEGATED	574,22156
#define OCSP_F_OCSP_CHECK_IDS	575,22199
#define OCSP_F_OCSP_CHECK_ISSUER	576,22237
#define OCSP_F_OCSP_CHECK_VALIDITY	577,22277
#define OCSP_F_OCSP_MATCH_ISSUERID	578,22319
#define OCSP_F_OCSP_PARSE_URL	579,22361
#define OCSP_F_OCSP_REQUEST_SIGN	580,22399
#define OCSP_F_OCSP_REQUEST_VERIFY	581,22439
#define OCSP_F_OCSP_RESPONSE_GET1_BASIC	582,22481
#define OCSP_F_OCSP_SENDREQ_BIO	583,22528
#define OCSP_F_OCSP_SENDREQ_NBIO	584,22568
#define OCSP_F_PARSE_HTTP_LINE1	585,22608
#define OCSP_F_REQUEST_VERIFY	586,22648
#define OCSP_R_BAD_DATA	589,22707
#define OCSP_R_CERTIFICATE_VERIFY_ERROR	590,22740
#define OCSP_R_DIGEST_ERR	591,22787
#define OCSP_R_ERROR_IN_NEXTUPDATE_FIELD	592,22821
#define OCSP_R_ERROR_IN_THISUPDATE_FIELD	593,22868
#define OCSP_R_ERROR_PARSING_URL	594,22915
#define OCSP_R_MISSING_OCSPSIGNING_USAGE	595,22955
#define OCSP_R_NEXTUPDATE_BEFORE_THISUPDATE	596,23002
#define OCSP_R_NOT_BASIC_RESPONSE	597,23052
#define OCSP_R_NO_CERTIFICATES_IN_CHAIN	598,23093
#define OCSP_R_NO_CONTENT	599,23140
#define OCSP_R_NO_PUBLIC_KEY	600,23174
#define OCSP_R_NO_RESPONSE_DATA	601,23211
#define OCSP_R_NO_REVOKED_TIME	602,23251
#define OCSP_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE	603,23290
#define OCSP_R_REQUEST_NOT_SIGNED	604,23349
#define OCSP_R_RESPONSE_CONTAINS_NO_REVOCATION_DATA	605,23390
#define OCSP_R_ROOT_CA_NOT_TRUSTED	606,23447
#define OCSP_R_SERVER_READ_ERROR	607,23489
#define OCSP_R_SERVER_RESPONSE_ERROR	608,23529
#define OCSP_R_SERVER_RESPONSE_PARSE_ERROR	609,23573
#define OCSP_R_SERVER_WRITE_ERROR	610,23622
#define OCSP_R_SIGNATURE_FAILURE	611,23663
#define OCSP_R_SIGNER_CERTIFICATE_NOT_FOUND	612,23703
#define OCSP_R_STATUS_EXPIRED	613,23753
#define OCSP_R_STATUS_NOT_YET_VALID	614,23791
#define OCSP_R_STATUS_TOO_OLD	615,23834
#define OCSP_R_UNKNOWN_MESSAGE_DIGEST	616,23872
#define OCSP_R_UNKNOWN_NID	617,23917
#define OCSP_R_UNSUPPORTED_REQUESTORNAME_TYPE	618,23952

crypto/ocsp/ocsp_ext.c,2387
int OCSP_REQUEST_get_ext_count(76,3168
int OCSP_REQUEST_get_ext_by_NID(81,3288
int OCSP_REQUEST_get_ext_by_OBJ(86,3444
int OCSP_REQUEST_get_ext_by_critical(91,3609
X509_EXTENSION *OCSP_REQUEST_get_ext(OCSP_REQUEST_get_ext96,3777
X509_EXTENSION *OCSP_REQUEST_delete_ext(OCSP_REQUEST_delete_ext101,3910
void *OCSP_REQUEST_get1_ext_d2i(OCSP_REQUEST_get1_ext_d2i106,4049
int OCSP_REQUEST_add1_ext_i2d(111,4209
int OCSP_REQUEST_add_ext(117,4408
int OCSP_ONEREQ_get_ext_count(124,4588
int OCSP_ONEREQ_get_ext_by_NID(129,4700
int OCSP_ONEREQ_get_ext_by_OBJ(134,4848
int OCSP_ONEREQ_get_ext_by_critical(139,5005
X509_EXTENSION *OCSP_ONEREQ_get_ext(OCSP_ONEREQ_get_ext144,5165
X509_EXTENSION *OCSP_ONEREQ_delete_ext(OCSP_ONEREQ_delete_ext149,5290
void *OCSP_ONEREQ_get1_ext_d2i(OCSP_ONEREQ_get1_ext_d2i154,5421
int OCSP_ONEREQ_add1_ext_i2d(159,5573
int OCSP_ONEREQ_add_ext(165,5764
int OCSP_BASICRESP_get_ext_count(172,5938
int OCSP_BASICRESP_get_ext_by_NID(177,6068
int OCSP_BASICRESP_get_ext_by_OBJ(182,6234
int OCSP_BASICRESP_get_ext_by_critical(187,6409
X509_EXTENSION *OCSP_BASICRESP_get_ext(OCSP_BASICRESP_get_ext192,6587
X509_EXTENSION *OCSP_BASICRESP_delete_ext(OCSP_BASICRESP_delete_ext197,6730
void *OCSP_BASICRESP_get1_ext_d2i(OCSP_BASICRESP_get1_ext_d2i202,6879
int OCSP_BASICRESP_add1_ext_i2d(207,7049
int OCSP_BASICRESP_add_ext(213,7258
int OCSP_SINGLERESP_get_ext_count(220,7462
int OCSP_SINGLERESP_get_ext_by_NID(225,7575
int OCSP_SINGLERESP_get_ext_by_OBJ(230,7724
int OCSP_SINGLERESP_get_ext_by_critical(235,7882
X509_EXTENSION *OCSP_SINGLERESP_get_ext(OCSP_SINGLERESP_get_ext240,8043
X509_EXTENSION *OCSP_SINGLERESP_delete_ext(OCSP_SINGLERESP_delete_ext245,8169
void *OCSP_SINGLERESP_get1_ext_d2i(OCSP_SINGLERESP_get1_ext_d2i250,8301
int OCSP_SINGLERESP_add1_ext_i2d(255,8454
int OCSP_SINGLERESP_add_ext(261,8646
ASN1_STRING *ASN1_STRING_encode(ASN1_STRING_encode268,8832
static int ocsp_add1_nonce(318,10089
int OCSP_request_add1_nonce(352,11058
int OCSP_basic_add1_nonce(359,11253
int OCSP_check_nonce(377,11838
int OCSP_copy_nonce(412,12983
X509_EXTENSION *OCSP_crlID_new(OCSP_crlID_new424,13353
X509_EXTENSION *OCSP_accept_responses_new(OCSP_accept_responses_new453,14125
X509_EXTENSION *OCSP_archive_cutoff_new(OCSP_archive_cutoff_new474,14686
X509_EXTENSION *OCSP_url_svcloc_new(OCSP_url_svcloc_new491,15259

crypto/ocsp/ocsp_vfy.c,369
int OCSP_basic_verify(75,3525
static int ocsp_find_signer(162,5689
static X509 *ocsp_find_signer_sk(ocsp_find_signer_sk185,6190
static int ocsp_check_issuer(212,6901
static int ocsp_check_ids(257,8166
static int ocsp_match_issuerid(294,8965
static int ocsp_check_delegated(344,10143
int OCSP_request_verify(359,10580
static int ocsp_req_find_signer(428,12437

crypto/ocsp/ocsp_srv.c,445
int OCSP_request_onereq_count(72,3062
OCSP_ONEREQ *OCSP_request_onereq_get0(OCSP_request_onereq_get077,3176
OCSP_CERTID *OCSP_onereq_get0_id(OCSP_onereq_get0_id82,3310
int OCSP_id_get0_info(87,3390
int OCSP_request_is_signed(99,3773
OCSP_RESPONSE *OCSP_response_create(OCSP_response_create106,3943
OCSP_SINGLERESP *OCSP_basic_add1_status(OCSP_basic_add1_status124,4501
int OCSP_basic_add1_cert(198,6208
int OCSP_basic_sign(208,6457

crypto/ocsp/ocsp_err.c,221
#define ERR_FUNC(68,2978
#define ERR_REASON(69,3031
static ERR_STRING_DATA OCSP_str_functs[OCSP_str_functs71,3091
static ERR_STRING_DATA OCSP_str_reasons[OCSP_str_reasons95,4281
void ERR_load_OCSP_strings(132,6447

crypto/ocsp/ocsp_ht.c,862
#define strtoul 69,2960
struct ocsp_req_ctx_st 76,3137
	int state;77,3162
	unsigned char *iobuf;iobuf78,3199
	int iobuflen;79,3240
	BIO *io;io80,3281
	BIO *mem;mem81,3322
	unsigned long asn1_len;82,3374
#define OCSP_MAX_REQUEST_LENGTH	85,3434
#define OCSP_MAX_LINE_LEN	86,3479
#define OHS_NOREAD	91,3575
#define OHS_ERROR	93,3624
#define OHS_FIRSTLINE	95,3688
#define OHS_HEADERS	97,3743
#define OHS_ASN1_HEADER	99,3818
#define OHS_ASN1_CONTENT	101,3882
#define OHS_ASN1_WRITE	103,3934
#define OHS_ASN1_FLUSH	105,4003
#define OHS_DONE	107,4060
void OCSP_REQ_CTX_free(112,4139
int OCSP_REQ_CTX_set1_req(121,4296
int OCSP_REQ_CTX_add1_header(135,4728
OCSP_REQ_CTX *OCSP_sendreq_new(OCSP_sendreq_new154,5089
static int parse_http_line1(189,5905
int OCSP_sendreq_nbio(263,7384
OCSP_RESPONSE *OCSP_sendreq_bio(OCSP_sendreq_bio485,11193

crypto/ocsp/ocsp_asn.c,441
} ASN1_SEQUENCE_END(66,3026
} ASN1_SEQUENCE_END(75,3367
} ASN1_SEQUENCE_END(82,3603
} ASN1_SEQUENCE_END(91,3961
} ASN1_SEQUENCE_END(98,4188
} ASN1_SEQUENCE_END(107,4451
} ASN1_SEQUENCE_END(114,4688
} ASN1_CHOICE_END(121,4910
} ASN1_SEQUENCE_END(128,5159
} ASN1_CHOICE_END(136,5449
} ASN1_SEQUENCE_END(146,5904
} ASN1_SEQUENCE_END(156,6349
} ASN1_SEQUENCE_END(165,6712
} ASN1_SEQUENCE_END(173,6996
} ASN1_SEQUENCE_END(180,7220

crypto/ocsp/ocsp_lib.c,198
OCSP_CERTID *OCSP_cert_to_id(OCSP_cert_to_id76,3202
OCSP_CERTID *OCSP_cert_id_new(OCSP_cert_id_new99,3685
int OCSP_id_issuer_cmp(145,4993
int OCSP_id_cmp(155,5318
int OCSP_parse_url(168,5597

crypto/ocsp/ocsp_cl.c,505
OCSP_ONEREQ *OCSP_request_add0_id(OCSP_request_add0_id82,3367
int OCSP_request_set1_name(100,3795
int OCSP_request_add1_cert(121,4246
int OCSP_request_sign(143,4869
int OCSP_response_status(187,5851
OCSP_BASICRESP *OCSP_response_get1_basic(OCSP_response_get1_basic197,6048
int OCSP_resp_count(219,6578
OCSP_SINGLERESP *OCSP_resp_get0(OCSP_resp_get0227,6772
int OCSP_resp_find(235,6994
int OCSP_single_get0_status(258,7612
int OCSP_resp_find_status(288,8413
int OCSP_check_validity(312,9357

crypto/mdc2/mdc2test.c,148
#define OPENSSL_NO_MDC266,3338
int main(70,3393
static unsigned char pad1[pad183,3594
static unsigned char pad2[pad288,3714
int main(93,3834

crypto/mdc2/mdc2_one.c,34
unsigned char *MDC2(MDC263,3267

crypto/mdc2/mdc2dgst.c,220
#undef c2l66,3338
#define c2l(67,3349
#undef l2c72,3513
#define l2c(73,3524
fips_md_init(79,3803
int MDC2_Update(88,3942
static void mdc2_body(124,4507
int MDC2_Final(162,5218
#undef TEST181,5571
main(184,5596

crypto/mdc2/mdc2.h,283
#define HEADER_MDC2_H60,3217
#define MDC2_BLOCK 72,3363
#define MDC2_DIGEST_LENGTH 73,3397
typedef struct mdc2_ctx_st75,3434
	unsigned int num;77,3464
	unsigned char data[data78,3483
	DES_cblock h,79,3516
	DES_cblock h,hh;79,3516
	int pad_type;80,3534
	} MDC2_CTX;81,3580

crypto/armcap.c,240
unsigned int OPENSSL_armcap_P;10,143
static sigset_t all_masked;12,175
static sigjmp_buf ill_jmp;14,204
static void ill_handler 15,231
unsigned int OPENSSL_rdtsc(24,477
void OPENSSL_cpuid_setup(33,630
void OPENSSL_cpuid_setup(35,698

crypto/LPdir_win32.c,68
#define LP_SYS_WIN3228,1483
#define LP_MULTIBYTE_AVAILABLE29,1504

crypto/vms_rms.h,993
# define CC_RMS_NAMX 4,23
# define FAB_NAMX 5,56
# define FAB_OR_NAML(6,85
# define FAB_OR_NAML_DNA 7,123
# define FAB_OR_NAML_DNS 8,168
# define FAB_OR_NAML_FNA 9,218
# define FAB_OR_NAML_FNS 10,264
# define NAMX_ESA 11,315
# define NAMX_ESL 12,352
# define NAMX_ESS 13,394
# define NAMX_NOP 14,437
# define SET_NAMX_NO_SHORT_UPCASE(15,466
#  define NAMX_DNA_FNA_SET(18,572
#  define NAMX_DNA_FNA_SET(21,721
# define NAMX_MAXRSS 25,867
# define NAMX_STRUCT 26,902
# define CC_RMS_NAMX 30,960
# define FAB_NAMX 31,992
# define FAB_OR_NAML(32,1020
# define FAB_OR_NAML_DNA 33,1057
# define FAB_OR_NAML_DNS 34,1092
# define FAB_OR_NAML_FNA 35,1127
# define FAB_OR_NAML_FNS 36,1162
# define NAMX_ESA 37,1197
# define NAMX_ESL 38,1225
# define NAMX_ESS 39,1253
# define NAMX_NOP 40,1281
# define NAMX_DNA_FNA_SET(41,1309
# define NAMX_MAXRSS 42,1340
# define NAMX_STRUCT 43,1374
#  define SET_NAMX_NO_SHORT_UPCASE(45,1429
#  define SET_NAMX_NO_SHORT_UPCASE(47,1541

crypto/srp/srptest.c,116
int main(6,76
static void showbn(18,241
#define RANDOM_SIZE 26,395
static int run_srp(28,451
int main(130,2592

crypto/srp/srp_lib.c,588
#define bn_pack4(66,3003
#define bn_pack4(69,3083
#define bn_pack4(72,3172
static BIGNUM *srp_Calc_k(srp_Calc_k78,3274
BIGNUM *SRP_Calc_u(SRP_Calc_u108,4024
BIGNUM *SRP_Calc_server_key(SRP_Calc_server_key143,4821
BIGNUM *SRP_Calc_B(SRP_Calc_B170,5390
BIGNUM *SRP_Calc_x(SRP_Calc_x203,6038
BIGNUM *SRP_Calc_A(SRP_Calc_A235,6852
BIGNUM *SRP_Calc_client_key(SRP_Calc_client_key255,7178
int SRP_Verify_B_mod_N(295,8100
int SRP_Verify_A_mod_N(317,8463
char *SRP_check_known_gN_param(SRP_check_known_gN_param327,8696
SRP_gN *SRP_get_default_gN(SRP_get_default_gN344,9004

crypto/srp/srp.h,1211
#define __SRP_H__60,2880
typedef struct SRP_gN_cache_st75,3088
	char *b64_bn;b64_bn77,3122
	BIGNUM *bn;bn78,3137
	} SRP_gN_cache;79,3150
DECLARE_STACK_OF(82,3169
typedef struct SRP_user_pwd_st84,3201
	char *id;id86,3235
	BIGNUM *s;s87,3246
	BIGNUM *v;v88,3258
	const BIGNUM *g;g89,3270
	const BIGNUM *N;N90,3288
	char *info;info91,3306
	} SRP_user_pwd;92,3319
DECLARE_STACK_OF(94,3337
typedef struct SRP_VBASE_st96,3369
	STACK_OF(98,3400
	} SRP_VBASE;104,3553
typedef struct SRP_gN_st108,3623
	char *id;id110,3651
	BIGNUM *g;g111,3662
	BIGNUM *N;N112,3674
	} SRP_gN;113,3686
DECLARE_STACK_OF(115,3698
#define SRP_NO_ERROR 126,4176
#define SRP_ERR_VBASE_INCOMPLETE_FILE 127,4199
#define SRP_ERR_VBASE_BN_LIB 128,4239
#define SRP_ERR_OPEN_FILE 129,4270
#define SRP_ERR_MEMORY 130,4298
#define DB_srptype	132,4324
#define DB_srpverifier	133,4345
#define DB_srpsalt 134,4370
#define DB_srpid	135,4392
#define DB_srpgN	136,4425
#define DB_srpinfo	137,4451
#undef  DB_NUMBER 138,4473
#define DB_NUMBER 139,4497
#define DB_SRP_INDEX	141,4524
#define DB_SRP_VALID	142,4549
#define DB_SRP_REVOKED	143,4574
#define DB_SRP_MODIF	144,4601
#define SRP_MINIMAL_N 165,5306

crypto/srp/srp_lcl.h,95
#define HEADER_SRP_LCL_H59,2815
#define srp_bn_print(65,2898
#define   srp_bn_print(68,3005

crypto/srp/srp_grps.h,1126
static BN_ULONG bn_group_1024_value[bn_group_1024_value3,31
static BIGNUM bn_group_1024 21,587
static BN_ULONG bn_group_1536_value[bn_group_1536_value29,765
static BIGNUM bn_group_1536 55,1577
static BN_ULONG bn_group_2048_value[bn_group_2048_value63,1755
static BIGNUM bn_group_2048 97,2823
static BN_ULONG bn_group_3072_value[bn_group_3072_value105,3001
static BIGNUM bn_group_3072 155,4581
static BN_ULONG bn_group_4096_value[bn_group_4096_value163,4759
static BIGNUM bn_group_4096 229,6851
static BN_ULONG bn_group_6144_value[bn_group_6144_value237,7029
static BIGNUM bn_group_6144 335,10145
static BN_ULONG bn_group_8192_value[bn_group_8192_value343,10323
static BIGNUM bn_group_8192 473,14463
static BN_ULONG bn_generator_19_value[bn_generator_19_value481,14641
static BIGNUM bn_generator_19 482,14690
static BN_ULONG bn_generator_5_value[bn_generator_5_value489,14783
static BIGNUM bn_generator_5 490,14830
static BN_ULONG bn_generator_2_value[bn_generator_2_value497,14921
static BIGNUM bn_generator_2 498,14968
static SRP_gN knowngN[knowngN506,15060
#define KNOWN_GN_NUMBER 515,15400

crypto/srp/srp_vfy.c,928
#define SRP_RANDOM_SALT_LEN 68,3065
#define MAX_LEN 69,3096
static char b64table[b64table71,3118
static int t_fromb64(79,3371
static char *t_tob64(t_tob64126,4224
static void SRP_user_pwd_free(182,5111
static SRP_user_pwd *SRP_user_pwd_new(SRP_user_pwd_new193,5343
static void SRP_user_pwd_set_gN(207,5605
static int SRP_user_pwd_set_ids(214,5734
static int SRP_user_pwd_set_sv(222,5970
static int SRP_user_pwd_set_sv_BN(237,6349
SRP_VBASE *SRP_VBASE_new(SRP_VBASE_new244,6512
int SRP_VBASE_free(271,7082
static SRP_gN_cache *SRP_gN_new_init(SRP_gN_new_init281,7280
static void SRP_gN_free(304,7715
static SRP_gN *SRP_get_gN_by_id(SRP_get_gN_by_id313,7885
static BIGNUM *SRP_gN_place_bn(SRP_gN_place_bn329,8195
int SRP_VBASE_init(360,8919
SRP_user_pwd *SRP_VBASE_get_by_user(SRP_VBASE_get_by_user475,11485
char *SRP_create_verifier(SRP_create_verifier524,12797
int SRP_create_verifier_BN(607,14377

crypto/aes/aes_misc.c,155
const char AES_version[AES_version57,2630
const char *AES_options(AES_options59,2685
int AES_set_encrypt_key(69,2886
int AES_set_decrypt_key(78,3089

crypto/aes/aes_locl.h,392
#define HEADER_AES_LOCL_H53,2545
# define SWAP(66,2798
# define GETU32(67,2871
# define PUTU32(68,2910
# define GETU32(70,2973
# define PUTU32(71,3079
typedef unsigned long u32;75,3235
typedef unsigned int u32;77,3268
typedef unsigned short u16;79,3301
typedef unsigned char u8;80,3329
#define MAXKC 82,3356
#define MAXKB 83,3381
#define MAXNR 84,3405
#undef FULL_UNROLL87,3474

crypto/aes/aes_core.c,687
#  define NDEBUG33,1324
static const u32 Te0[Te056,1754
static const u32 Te1[Te1122,5371
static const u32 Te2[Te2188,8988
static const u32 Te3[Te3254,12605
static const u32 Td0[Td0321,16223
static const u32 Td1[Td1387,19840
static const u32 Td2[Td2453,23457
static const u32 Td3[Td3519,27074
static const u8 Td4[Td4585,30691
static const u32 rcon[rcon619,32643
int private_AES_set_encrypt_key(628,32936
int private_AES_set_decrypt_key(729,35229
void AES_encrypt(781,36828
void AES_decrypt(972,45573
static const u8 Te4[Te41161,54264
static const u32 rcon[rcon1195,56215
int private_AES_set_encrypt_key(1204,56508
int private_AES_set_decrypt_key(1304,58660

crypto/aes/aes_wrap.c,632
static const unsigned char default_iv[default_iv58,2636
int AES_wrap_key(62,2734
int AES_unwrap_key(99,3488
int AES_wrap_unwrap_test(143,4363
int main(185,5154
static const unsigned char key[key195,5429
static const unsigned char e1[e1202,5669
static const unsigned char e2[e2208,5858
static const unsigned char e3[e3214,6047
static const unsigned char e4[e4220,6236
static const unsigned char e5[e5227,6475
static const unsigned char e6[e6234,6714
	AES_KEY wctx,242,7003
	AES_KEY wctx, xctx;242,7003
	int ret;243,7024
	ret 244,7034
	ret 246,7139
	ret 248,7244
	ret 250,7349
	ret 252,7454
	ret 254,7559

crypto/aes/aes.h,321
#define HEADER_AES_H53,2540
#define AES_ENCRYPT	63,2671
#define AES_DECRYPT	64,2693
#define AES_MAXNR 68,2822
#define AES_BLOCK_SIZE 69,2843
struct aes_key_st 76,2987
    unsigned long rd_key[rd_key78,3023
    unsigned int rd_key[rd_key80,3075
    int rounds;82,3127
typedef struct aes_key_st AES_KEY;84,3146

crypto/aes/aes_cfb.c,95
void AES_cfb128_encrypt(60,2765
void AES_cfb1_encrypt(68,3064
void AES_cfb8_encrypt(75,3326

crypto/aes/aes_ofb.c,33
void AES_ofb128_encrypt(55,2576

crypto/aes/asm/aes-ia64.S,1007
.ident	28,1586
.ident	29,1619
.proc	79,2546
.align	87,2736
_ia64_AES_encrypt:_ia64_AES_encrypt88,2746
.align	111,3175
.Le_top:.Le_top112,3185
.Le_end:.Le_end189,6580
.endp	273,9564
.global	276,9657
.proc	277,9678
.align	278,9697
AES_encrypt:AES_encrypt279,9707
.align	331,10884
.Le_i_unaligned:.Le_i_unaligned332,10894
.Le_o_unaligned:.Le_o_unaligned374,11894
.endp	413,12850
print 418,12955
print 420,13089
.proc	456,13915
.align	464,14105
_ia64_AES_decrypt:_ia64_AES_decrypt465,14115
.align	488,14544
.Ld_top:.Ld_top489,14554
.Ld_end:.Ld_end566,17949
.endp	650,20933
.global	653,21026
.proc	654,21047
.align	655,21066
AES_decrypt:AES_decrypt656,21076
.align	708,22253
.Ld_i_unaligned:.Ld_i_unaligned709,22263
.Ld_o_unaligned:.Ld_o_unaligned751,23263
.endp	790,24219
.align	793,24271
.global	794,24281
.type	795,24297
AES_Te:AES_Te796,24319
.size	957,32718
.align	959,32782
.global	960,32792
.type	961,32808
AES_Td:AES_Td962,32830
.size	1123,41229

crypto/aes/aes_ecb.c,55
#  define NDEBUG54,2557
void AES_ecb_encrypt(62,2658

crypto/aes/aes_ige.c,353
#define N_WORDS 57,2589
        unsigned long data[data59,2663
} aes_block_t;60,2700
#define UNALIGNED_MEMOPS_ARE_FAST 64,2808
#define UNALIGNED_MEMOPS_ARE_FAST 66,2850
#define load_block(70,2924
#define store_block(71,2988
#define load_block(73,3052
#define store_block(74,3122
void AES_ige_encrypt(79,3259
void AES_bi_ige_encrypt(213,6749

crypto/aes/aes_x86core.c,950
#  define NDEBUG40,1541
#define AES_COMPACT_IN_OUTER_ROUNDS53,1788
# undef  AES_COMPACT_IN_INNER_ROUNDS58,2013
static void prefetch256(62,2064
# define prefetch256(74,2315
#undef GETU3277,2347
#define GETU32(78,2361
typedef unsigned __int64 u64;81,2461
#define U64(82,2491
typedef unsigned long u64;84,2540
#define U64(85,2567
typedef unsigned long long u64;87,2594
#define U64(88,2626
#undef ROTATE91,2656
# define ROTATE(93,2710
#   define ROTATE(96,2868
#define Te0 113,3239
#define Te1 114,3276
#define Te2 115,3313
#define Te3 116,3350
#define Td0 125,3595
#define Td1 126,3632
#define Td2 127,3669
#define Td3 128,3706
static const u64 Te[Te130,3744
static const u8 Te4[Te4261,10688
static const u64 Td[Td296,12640
static const u8 Td4[Td4426,19583
static const u32 rcon[rcon461,21535
int AES_set_encrypt_key(470,21847
int AES_set_decrypt_key(571,24020
void AES_encrypt(652,26308
void AES_decrypt(864,31683

crypto/aes/aes_ctr.c,33
void AES_ctr128_encrypt(55,2576

crypto/aes/aes_cbc.c,30
void AES_cbc_encrypt(55,2576

crypto/comp/comp_lib.c,132
COMP_CTX *COMP_CTX_new(COMP_CTX_new7,115
void COMP_CTX_free(26,457
int COMP_compress_block(37,608
int COMP_expand_block(55,947

crypto/comp/c_zlib.c,2480
static COMP_METHOD zlib_method_nozlib=10,172
#undef ZLIB_SHARED22,296
static void* zlib_zalloc(36,762
static void zlib_zfree(47,927
static COMP_METHOD zlib_stateless_method=61,1359
static COMP_METHOD zlib_stateful_method=73,1529
typedef int (*compress_ft)compress_ft98,2213
typedef int (*inflateEnd_ft)inflateEnd_ft100,2309
typedef int (*inflate_ft)inflate_ft101,2355
typedef int (*inflateInit__ft)inflateInit__ft102,2409
typedef int (*deflateEnd_ft)deflateEnd_ft104,2497
typedef int (*deflate_ft)deflate_ft105,2543
typedef int (*deflateInit__ft)deflateInit__ft106,2597
typedef const char * (*zError__ft)zError__ft108,2696
static compress_ft	p_compress=109,2741
static inflateEnd_ft	p_inflateEnd=110,2777
static inflate_ft	p_inflate=111,2817
static inflateInit__ft	p_inflateInit_=112,2851
static deflateEnd_ft	p_deflateEnd=113,2895
static deflate_ft	p_deflate=114,2935
static deflateInit__ft	p_deflateInit_=115,2969
static zError__ft	p_zError=116,3013
static int zlib_loaded 118,3047
static DSO *zlib_dso zlib_dso119,3120
#define compress 121,3150
#define inflateEnd 122,3193
#define inflate 123,3238
#define inflateInit_ 124,3280
#define deflateEnd 125,3327
#define deflate 126,3372
#define deflateInit_ 127,3414
#define zError	128,3461
struct zlib_state131,3513
	z_stream istream;133,3534
	z_stream ostream;134,3553
static int zlib_stateful_ex_idx 137,3577
static int zlib_stateful_init(139,3616
static void zlib_stateful_finish(180,4693
static int zlib_stateful_compress_block(191,5003
static int zlib_stateful_expand_block(218,5739
static int zlib_compress_block(247,6477
static int zlib_expand_block(280,7024
static int zz_uncompress 305,7486
COMP_METHOD *COMP_zlib(COMP_zlib341,8346
void COMP_zlib_cleanup(416,10113
	unsigned char *ibuf;ibuf430,10298
	int ibufsize;431,10339
	z_stream zin;432,10373
	unsigned char *obuf;obuf433,10420
	int obufsize;434,10462
	unsigned char *optr;optr435,10503
	int ocount;436,10557
	int odone;437,10609
	int comp_level;438,10640
	z_stream zout;439,10689
	} BIO_ZLIB_CTX;440,10739
#define ZLIB_DEFAULT_BUFSIZE 442,10757
static BIO_METHOD bio_meth_zlib 451,11112
BIO_METHOD *BIO_f_zlib(BIO_f_zlib465,11298
static int bio_zlib_new(471,11359
static int bio_zlib_free(512,12249
static int bio_zlib_read(536,12659
static int bio_zlib_write(597,14076
static int bio_zlib_flush(665,15627
static long bio_zlib_ctrl(714,16732
static long bio_zlib_callback_ctrl(791,17841

crypto/comp/comp.h,877
#define HEADER_COMP_H3,23
typedef struct comp_ctx_st COMP_CTX;11,116
typedef struct comp_method_st13,154
	int type;15,187
	const char *name;name16,233
	int (*init)init17,296
	void (*finish)finish18,325
	int (*compress)compress19,357
	int (*expand)expand22,473
	long (*ctrl)ctrl26,674
	long (*callback_ctrl)callback_ctrl27,695
	} COMP_METHOD;28,725
struct comp_ctx_st30,742
	COMP_METHOD *meth;meth32,764
	unsigned long compress_in;33,784
	unsigned long compress_out;34,812
	unsigned long expand_in;35,841
	unsigned long expand_out;36,867
	CRYPTO_EX_DATA	ex_data;38,895
#define COMP_F_BIO_ZLIB_FLUSH	67,1650
#define COMP_F_BIO_ZLIB_NEW	68,1687
#define COMP_F_BIO_ZLIB_READ	69,1723
#define COMP_F_BIO_ZLIB_WRITE	70,1760
#define COMP_R_ZLIB_DEFLATE_ERROR	73,1819
#define COMP_R_ZLIB_INFLATE_ERROR	74,1859
#define COMP_R_ZLIB_NOT_SUPPORTED	75,1900

crypto/comp/c_rle.c,151
static COMP_METHOD rle_method=12,362
COMP_METHOD *COMP_rle(COMP_rle23,510
static int rle_compress_block(28,567
static int rle_expand_block(44,858

crypto/comp/comp_err.c,220
#define ERR_FUNC(68,2978
#define ERR_REASON(69,3031
static ERR_STRING_DATA COMP_str_functs[COMP_str_functs71,3091
static ERR_STRING_DATA COMP_str_reasons[COMP_str_reasons80,3356
void ERR_load_COMP_strings(90,3619

crypto/o_fips.c,87
int FIPS_mode(65,2849
int FIPS_mode_set(75,2965
#define FIPS_AUTH_USER_PASS	80,3058

crypto/crypto.h,5808
#define HEADER_CRYPTO_H118,6107
#define SSLEAY_VERSION_NUMBER	148,6711
#define SSLEAY_VERSION	149,6764
#define SSLEAY_CFLAGS	151,6841
#define SSLEAY_BUILT_ON	152,6866
#define SSLEAY_PLATFORM	153,6893
#define SSLEAY_DIR	154,6920
typedef struct crypto_ex_data_st CRYPTO_EX_DATA;158,6986
typedef int CRYPTO_EX_new(160,7077
typedef void CRYPTO_EX_free(163,7226
typedef int CRYPTO_EX_dup(166,7380
typedef struct openssl_item_st171,7577
	int code;173,7611
	void *value;value174,7622
	size_t value_size;175,7672
	size_t *value_length;value_length176,7745
	} OPENSSL_ITEM;177,7810
#define	CRYPTO_LOCK_ERR	184,7931
#define	CRYPTO_LOCK_EX_DATA	185,7959
#define	CRYPTO_LOCK_X509	186,7990
#define	CRYPTO_LOCK_X509_INFO	187,8018
#define	CRYPTO_LOCK_X509_PKEY	188,8051
#define CRYPTO_LOCK_X509_CRL	189,8084
#define CRYPTO_LOCK_X509_REQ	190,8116
#define CRYPTO_LOCK_DSA	191,8148
#define CRYPTO_LOCK_RSA	192,8176
#define CRYPTO_LOCK_EVP_PKEY	193,8204
#define CRYPTO_LOCK_X509_STORE	194,8237
#define CRYPTO_LOCK_SSL_CTX	195,8272
#define CRYPTO_LOCK_SSL_CERT	196,8304
#define CRYPTO_LOCK_SSL_SESSION	197,8337
#define CRYPTO_LOCK_SSL_SESS_CERT	198,8373
#define CRYPTO_LOCK_SSL	199,8410
#define CRYPTO_LOCK_SSL_METHOD	200,8439
#define CRYPTO_LOCK_RAND	201,8474
#define CRYPTO_LOCK_RAND2	202,8503
#define CRYPTO_LOCK_MALLOC	203,8533
#define CRYPTO_LOCK_BIO	204,8564
#define CRYPTO_LOCK_GETHOSTBYNAME	205,8593
#define CRYPTO_LOCK_GETSERVBYNAME	206,8630
#define CRYPTO_LOCK_READDIR	207,8667
#define CRYPTO_LOCK_RSA_BLINDING	208,8699
#define CRYPTO_LOCK_DH	209,8735
#define CRYPTO_LOCK_MALLOC2	210,8763
#define CRYPTO_LOCK_DSO	211,8795
#define CRYPTO_LOCK_DYNLOCK	212,8824
#define CRYPTO_LOCK_ENGINE	213,8856
#define CRYPTO_LOCK_UI	214,8887
#define CRYPTO_LOCK_ECDSA 215,8915
#define CRYPTO_LOCK_EC	216,8958
#define CRYPTO_LOCK_ECDH	217,8986
#define CRYPTO_LOCK_BN 218,9015
#define CRYPTO_LOCK_EC_PRE_COMP	219,9044
#define CRYPTO_LOCK_STORE	220,9080
#define CRYPTO_LOCK_COMP	221,9110
#define CRYPTO_LOCK_FIPS	222,9139
#define CRYPTO_LOCK_FIPS2	223,9168
#define CRYPTO_NUM_LOCKS	224,9198
#define CRYPTO_LOCK	226,9228
#define CRYPTO_UNLOCK	227,9251
#define CRYPTO_READ	228,9276
#define CRYPTO_WRITE	229,9299
#define CRYPTO_w_lock(233,9373
#define CRYPTO_w_unlock(235,9465
#define CRYPTO_r_lock(237,9561
#define CRYPTO_r_unlock(239,9652
#define CRYPTO_add(241,9747
#define CRYPTO_w_lock(245,9852
#define CRYPTO_w_unlock(246,9877
#define CRYPTO_r_lock(247,9904
#define CRYPTO_r_unlock(248,9929
#define CRYPTO_add(249,9956
	int references;258,10284
	struct CRYPTO_dynlock_value *data;data259,10301
	} CRYPTO_dynlock;260,10337
#define CRYPTO_MEM_CHECK_OFF	266,10477
#define CRYPTO_MEM_CHECK_ON	267,10525
#define CRYPTO_MEM_CHECK_ENABLE	268,10569
#define CRYPTO_MEM_CHECK_DISABLE 269,10617
#define V_CRYPTO_MDEBUG_TIME	275,10833
#define V_CRYPTO_MDEBUG_THREAD	277,10938
#define V_CRYPTO_MDEBUG_ALL 279,10986
typedef struct bio_st BIO_dummy;283,11093
struct crypto_ex_data_st285,11127
	STACK_OF(287,11155
typedef struct crypto_ex_data_func_st295,11390
	long argl;297,11431
	void *argp;argp298,11463
	CRYPTO_EX_new *new_func;new_func299,11498
	CRYPTO_EX_free *free_func;free_func300,11524
	CRYPTO_EX_dup *dup_func;dup_func301,11552
	} CRYPTO_EX_DATA_FUNCS;302,11578
#define CRYPTO_EX_INDEX_BIO	310,11737
#define CRYPTO_EX_INDEX_SSL	311,11768
#define CRYPTO_EX_INDEX_SSL_CTX	312,11799
#define CRYPTO_EX_INDEX_SSL_SESSION	313,11834
#define CRYPTO_EX_INDEX_X509_STORE	314,11872
#define CRYPTO_EX_INDEX_X509_STORE_CTX	315,11909
#define CRYPTO_EX_INDEX_RSA	316,11950
#define CRYPTO_EX_INDEX_DSA	317,11981
#define CRYPTO_EX_INDEX_DH	318,12012
#define CRYPTO_EX_INDEX_ENGINE	319,12042
#define CRYPTO_EX_INDEX_X509	320,12076
#define CRYPTO_EX_INDEX_UI	321,12109
#define CRYPTO_EX_INDEX_ECDSA	322,12140
#define CRYPTO_EX_INDEX_ECDH	323,12174
#define CRYPTO_EX_INDEX_COMP	324,12207
#define CRYPTO_EX_INDEX_STORE	325,12240
#define CRYPTO_EX_INDEX_USER	329,12391
#define CRYPTO_malloc_init(336,12600
#  define CRYPTO_MDEBUG341,12826
#define CRYPTO_malloc_debug_init(347,12962
DECLARE_STACK_OF(CRYPTO_malloc_debug_init304,11604
#define MemCheck_start(360,13259
#define MemCheck_stop(361,13321
#define MemCheck_on(364,13415
#define MemCheck_off(365,13478
#define is_MemCheck_on(366,13543
#define OPENSSL_malloc(368,13594
#define OPENSSL_strdup(369,13664
#define OPENSSL_realloc(370,13731
#define OPENSSL_realloc_clean(372,13824
#define OPENSSL_remalloc(374,13932
#define OPENSSL_freeFunc	376,14028
#define OPENSSL_free(377,14065
#define OPENSSL_malloc_locked(379,14111
#define OPENSSL_free_locked(381,14198
typedef struct st_CRYPTO_EX_DATA_IMPL	CRYPTO_EX_DATA_IMPL;390,14429
typedef struct crypto_threadid_st429,16495
	void *ptr;ptr431,16532
	unsigned long val;432,16544
	} CRYPTO_THREADID;433,16564
#define CRYPTO_push_info(505,20615
typedef void *CRYPTO_MEM_LEAK_CB(CRYPTO_MEM_LEAK_CB539,21953
#define OPENSSL_assert(544,22175
#define OPENSSL_ia32cap 547,22307
#define fips_md_init(555,22462
#define fips_md_init_ctx(558,22536
#define fips_cipher_abort(567,22809
#define fips_md_init_ctx(572,22967
#define fips_cipher_abort(574,23032
#define CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX	586,23363
#define CRYPTO_F_CRYPTO_GET_NEW_DYNLOCKID	587,23410
#define CRYPTO_F_CRYPTO_GET_NEW_LOCKID	588,23458
#define CRYPTO_F_CRYPTO_SET_EX_DATA	589,23504
#define CRYPTO_F_DEF_ADD_INDEX	590,23547
#define CRYPTO_F_DEF_GET_CLASS	591,23586
#define CRYPTO_F_FIPS_MODE_SET	592,23625
#define CRYPTO_F_INT_DUP_EX_DATA	593,23664
#define CRYPTO_F_INT_FREE_EX_DATA	594,23704
#define CRYPTO_F_INT_NEW_EX_DATA	595,23745
#define CRYPTO_R_FIPS_MODE_NOT_SUPPORTED	598,23806
#define CRYPTO_R_NO_DYNLOCK_CREATE_CALLBACK	599,23853

crypto/pkcs12/p12_asn.c,117
} ASN1_SEQUENCE_END(70,3009
} ASN1_SEQUENCE_END(78,3258
} ASN1_SEQUENCE_END(93,3891
} ASN1_SEQUENCE_END(112,4841

crypto/pkcs12/p12_attr.c,312
int PKCS12_add_localkeyid(65,2843
int PKCS8_add_keyusage(77,3107
int PKCS12_add_friendlyname_asc(90,3393
int PKCS12_add_friendlyname_uni(101,3630
int PKCS12_add_CSPName_asc(111,3858
ASN1_TYPE *PKCS12_get_attr_gen(PKCS12_get_attr_gen121,4088
char *PKCS12_get_friendlyname(PKCS12_get_friendlyname137,4525

crypto/pkcs12/p12_npas.c,157
int PKCS12_newpass(78,3276
static int newpass_p12(104,3807
static int newpass_bags(178,6116
static int newpass_bag(192,6448
static int alg_get(211,7025

crypto/pkcs12/p12_utl.c,513
unsigned char *OPENSSL_asc2uni(OPENSSL_asc2uni65,2841
char *OPENSSL_uni2asc(OPENSSL_uni2asc84,3336
int i2d_PKCS12_bio(98,3692
int i2d_PKCS12_fp(104,3824
PKCS12 *d2i_PKCS12_bio(d2i_PKCS12_bio110,3936
PKCS12 *d2i_PKCS12_fp(d2i_PKCS12_fp115,4072
PKCS12_SAFEBAG *PKCS12_x5092certbag(PKCS12_x5092certbag121,4196
PKCS12_SAFEBAG *PKCS12_x509crl2certbag(PKCS12_x509crl2certbag127,4348
X509 *PKCS12_certbag2x509(PKCS12_certbag2x509133,4500
X509_CRL *PKCS12_certbag2x509crl(PKCS12_certbag2x509crl140,4754

crypto/pkcs12/p12_mutl.c,120
int PKCS12_gen_mac(67,2902
int PKCS12_verify_mac(113,4158
int PKCS12_set_mac(132,4691
int PKCS12_setup_mac(156,5433

crypto/pkcs12/p12_init.c,41
PKCS12 *PKCS12_init(PKCS12_init65,2855

crypto/pkcs12/p12_p8d.c,58
PKCS8_PRIV_KEY_INFO *PKCS8_decrypt(PKCS8_decrypt63,2804

crypto/pkcs12/pk12err.c,232
#define ERR_FUNC(68,2981
#define ERR_REASON(69,3036
static ERR_STRING_DATA PKCS12_str_functs[PKCS12_str_functs71,3098
static ERR_STRING_DATA PKCS12_str_reasons[PKCS12_str_reasons105,4982
void ERR_load_PKCS12_strings(134,6556

crypto/pkcs12/p12_add.c,486
PKCS12_SAFEBAG *PKCS12_item_pack_safebag(PKCS12_item_pack_safebag65,2871
PKCS12_SAFEBAG *PKCS12_MAKE_KEYBAG(PKCS12_MAKE_KEYBAG90,3564
PKCS12_SAFEBAG *PKCS12_MAKE_SHKEYBAG(PKCS12_MAKE_SHKEYBAG104,3894
PKCS7 *PKCS12_pack_p7data(PKCS12_pack_p7data135,4670
STACK_OF(156,5255
PKCS7 *PKCS12_pack_p7encdata(PKCS12_pack_p7encdata168,5589
STACK_OF(209,6770
PKCS8_PRIV_KEY_INFO *PKCS12_decrypt_skey(PKCS12_decrypt_skey218,7108
int PKCS12_pack_authsafes(224,7273
STACK_OF(232,7455

crypto/pkcs12/p12_crpt.c,62
void PKCS12_PBE_add(65,2855
int PKCS12_PBE_keyivgen(69,2886

crypto/pkcs12/p12_crt.c,311
static int copy_bag_attr(66,2888
PKCS12 *PKCS12_create(PKCS12_create79,3178
PKCS12_SAFEBAG *PKCS12_add_cert(PKCS12_add_cert187,5460
PKCS12_SAFEBAG *PKCS12_add_key(PKCS12_add_key227,6165
int PKCS12_add_safe(265,6831
static int pkcs12_add_bag(311,7530
PKCS12 *PKCS12_add_safes(PKCS12_add_safes341,7951

crypto/pkcs12/p12_key.c,109
#define min(74,3096
int PKCS12_key_gen_asc(77,3145
int PKCS12_key_gen_uni(103,3809
void h__dump 214,6682

crypto/pkcs12/p12_p8e.c,47
X509_SIG *PKCS8_encrypt(PKCS8_encrypt63,2804

crypto/pkcs12/p12_decr.c,160
unsigned char * PKCS12_pbe_crypt(71,3001
void * PKCS12_item_decrypt_d2i(120,4199
ASN1_OCTET_STRING *PKCS12_item_i2d_encrypt(PKCS12_item_i2d_encrypt157,5105

crypto/pkcs12/p12_kiss.c,121
int PKCS12_parse(80,3456
static int parse_pk12(179,5375
static int parse_bags(212,6308
static int parse_bag(224,6622

crypto/pkcs12/pkcs12.h,4381
#define HEADER_PKCS12_H60,2757
#define PKCS12_KEY_ID	69,2874
#define PKCS12_IV_ID	70,2898
#define PKCS12_MAC_ID	71,2921
#define PKCS12_DEFAULT_ITER	75,3004
#define PKCS12_MAC_KEY_LENGTH 78,3059
#define PKCS12_SALT_LEN	80,3093
#define PKCS12_key_gen 87,3243
#define PKCS12_add_friendlyname 88,3285
#define PKCS12_key_gen 90,3351
#define PKCS12_add_friendlyname 91,3393
#define KEY_EX	96,3491
#define KEY_SIG 97,3511
X509_SIG *dinfo;dinfo100,3550
ASN1_OCTET_STRING *salt;salt101,3567
ASN1_INTEGER *iter;iter102,3592
} PKCS12_MAC_DATA;103,3632
ASN1_INTEGER *version;version106,3669
PKCS12_MAC_DATA *mac;mac107,3692
PKCS7 *authsafes;authsafes108,3714
} PKCS12;109,3732
ASN1_OBJECT *type;type112,3760
	struct pkcs12_bag_st *bag;bag114,3787
	struct pkcs8_priv_key_info_st	*keybag;keybag115,3845
	X509_SIG *shkeybag;shkeybag116,3898
	STACK_OF(117,3942
}value;value119,3995
STACK_OF(120,4003
typedef struct pkcs12_bag_st 127,4166
ASN1_OBJECT *type;type128,4197
	ASN1_OCTET_STRING *x509cert;x509cert130,4224
	ASN1_OCTET_STRING *x509crl;x509crl131,4254
	ASN1_OCTET_STRING *octet;octet132,4283
	ASN1_IA5STRING *sdsicert;sdsicert133,4310
	ASN1_TYPE *other;other134,4337
}value;value135,4382
} PKCS12_BAGS;136,4390
#define PKCS12_ERROR	138,4406
#define PKCS12_OK	139,4429
#define M_PKCS12_x5092certbag 143,4478
#define M_PKCS12_x509crl2certbag 144,4528
#define M_PKCS12_certbag2x509 146,4585
#define M_PKCS12_certbag2x509crl 147,4635
#define M_PKCS12_unpack_p7data 149,4693
#define M_PKCS12_pack_authsafes 150,4745
#define M_PKCS12_unpack_authsafes 151,4799
#define M_PKCS12_unpack_p7encdata 152,4857
#define M_PKCS12_decrypt_skey 154,4916
#define M_PKCS8_decrypt 155,4966
#define M_PKCS12_bag_type(157,5005
#define M_PKCS12_cert_bag_type(158,5059
#define M_PKCS12_crl_bag_type 159,5129
#define PKCS12_get_attr(161,5183
#define PKCS8_get_attr(164,5272
#define PKCS12_mac_present(167,5360
STACK_OF(190,6376
#define PKCS12_F_PARSE_BAG	274,10384
#define PKCS12_F_PARSE_BAGS	275,10419
#define PKCS12_F_PKCS12_ADD_FRIENDLYNAME	276,10455
#define PKCS12_F_PKCS12_ADD_FRIENDLYNAME_ASC	277,10502
#define PKCS12_F_PKCS12_ADD_FRIENDLYNAME_UNI	278,10553
#define PKCS12_F_PKCS12_ADD_LOCALKEYID	279,10604
#define PKCS12_F_PKCS12_CREATE	280,10650
#define PKCS12_F_PKCS12_GEN_MAC	281,10689
#define PKCS12_F_PKCS12_INIT	282,10729
#define PKCS12_F_PKCS12_ITEM_DECRYPT_D2I	283,10766
#define PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT	284,10813
#define PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG	285,10860
#define PKCS12_F_PKCS12_KEY_GEN_ASC	286,10908
#define PKCS12_F_PKCS12_KEY_GEN_UNI	287,10951
#define PKCS12_F_PKCS12_MAKE_KEYBAG	288,10994
#define PKCS12_F_PKCS12_MAKE_SHKEYBAG	289,11037
#define PKCS12_F_PKCS12_NEWPASS	290,11082
#define PKCS12_F_PKCS12_PACK_P7DATA	291,11122
#define PKCS12_F_PKCS12_PACK_P7ENCDATA	292,11165
#define PKCS12_F_PKCS12_PARSE	293,11211
#define PKCS12_F_PKCS12_PBE_CRYPT	294,11249
#define PKCS12_F_PKCS12_PBE_KEYIVGEN	295,11290
#define PKCS12_F_PKCS12_SETUP_MAC	296,11334
#define PKCS12_F_PKCS12_SET_MAC	297,11375
#define PKCS12_F_PKCS12_UNPACK_AUTHSAFES	298,11415
#define PKCS12_F_PKCS12_UNPACK_P7DATA	299,11462
#define PKCS12_F_PKCS12_VERIFY_MAC	300,11507
#define PKCS12_F_PKCS8_ADD_KEYUSAGE	301,11549
#define PKCS12_F_PKCS8_ENCRYPT	302,11592
#define PKCS12_R_CANT_PACK_STRUCTURE	305,11652
#define PKCS12_R_CONTENT_TYPE_NOT_DATA	306,11696
#define PKCS12_R_DECODE_ERROR	307,11742
#define PKCS12_R_ENCODE_ERROR	308,11780
#define PKCS12_R_ENCRYPT_ERROR	309,11818
#define PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE	310,11857
#define PKCS12_R_INVALID_NULL_ARGUMENT	311,11913
#define PKCS12_R_INVALID_NULL_PKCS12_POINTER	312,11959
#define PKCS12_R_IV_GEN_ERROR	313,12010
#define PKCS12_R_KEY_GEN_ERROR	314,12048
#define PKCS12_R_MAC_ABSENT	315,12087
#define PKCS12_R_MAC_GENERATION_ERROR	316,12123
#define PKCS12_R_MAC_SETUP_ERROR	317,12168
#define PKCS12_R_MAC_STRING_SET_ERROR	318,12208
#define PKCS12_R_MAC_VERIFY_ERROR	319,12253
#define PKCS12_R_MAC_VERIFY_FAILURE	320,12294
#define PKCS12_R_PARSE_ERROR	321,12337
#define PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR	322,12374
#define PKCS12_R_PKCS12_CIPHERFINAL_ERROR	323,12427
#define PKCS12_R_PKCS12_PBE_CRYPT_ERROR	324,12475
#define PKCS12_R_UNKNOWN_DIGEST_ALGORITHM	325,12522
#define PKCS12_R_UNSUPPORTED_PKCS12_MODE	326,12570

crypto/md2/md2.c,81
#define BUFSIZE	63,3258
int main(69,3385
void do_fp(98,3730
void pt(117,4023

crypto/md2/md2_one.c,32
unsigned char *MD2(MD266,3372

crypto/md2/md2_dgst.c,251
const char MD2_version[MD2_version66,3341
#define UCHAR	71,3462
static const MD2_INT S[S76,3655
const char *MD2_options(MD2_options111,5258
fips_md_init(119,5373
int MD2_Update(128,5527
static void md2_block(167,6268
int MD2_Final(203,6940

crypto/md2/md2.h,265
#define HEADER_MD2_H60,3213
#define MD2_DIGEST_LENGTH	68,3372
#define MD2_BLOCK 69,3401
typedef struct MD2state_st75,3471
	unsigned int num;77,3501
	unsigned char data[data78,3520
	MD2_INT cksm[cksm79,3552
	MD2_INT state[state80,3578
	} MD2_CTX;81,3605

crypto/md2/md2test.c,128
int main(66,3301
static char *test[test79,3500
static char *ret[ret90,3755
int main(101,4076
static char *pt(pt134,4620

crypto/cryptlib.c,2555
static double SSLeay_MSVC5_hack=121,6200
DECLARE_STACK_OF(124,6265
static STACK_OF(177,7134
int CRYPTO_num_locks(231,8903
int CRYPTO_get_new_dynlockid(236,8963
void CRYPTO_destroy_dynlockid(297,10672
struct CRYPTO_dynlock_value *CRYPTO_get_dynlock_value(CRYPTO_get_dynlock_value340,11513
struct CRYPTO_dynlock_value *(*CRYPTO_get_dynlock_create_callback(CRYPTO_get_dynlock_create_callback360,11920
void (*CRYPTO_get_dynlock_lock_callback(CRYPTO_get_dynlock_lock_callback366,12063
void (*CRYPTO_get_dynlock_destroy_callback(CRYPTO_get_dynlock_destroy_callback372,12219
void CRYPTO_set_dynlock_create_callback(378,12372
void CRYPTO_set_dynlock_lock_callback(384,12518
void CRYPTO_set_dynlock_destroy_callback(390,12677
void (*CRYPTO_get_locking_callback(CRYPTO_get_locking_callback397,12834
int (*CRYPTO_get_add_lock_callback(CRYPTO_get_add_lock_callback403,12958
void CRYPTO_set_locking_callback(409,13098
void CRYPTO_set_add_lock_callback(419,13336
void CRYPTO_THREADID_set_numeric(428,13701
static const unsigned char hash_coeffs[hash_coeffs434,13826
void CRYPTO_THREADID_set_pointer(435,13902
int CRYPTO_THREADID_set_callback(470,15195
void (*CRYPTO_THREADID_get_callback(CRYPTO_THREADID_get_callback478,15342
void CRYPTO_THREADID_current(483,15438
int CRYPTO_THREADID_cmp(511,16191
void CRYPTO_THREADID_cpy(516,16308
unsigned long CRYPTO_THREADID_hash(521,16425
unsigned long (*CRYPTO_get_id_callback(CRYPTO_get_id_callback527,16541
void CRYPTO_set_id_callback(532,16622
unsigned long CRYPTO_thread_id(537,16705
void CRYPTO_lock(561,17157
int CRYPTO_add_lock(607,18125
const char *CRYPTO_get_lock_name(CRYPTO_get_lock_name652,19051
unsigned int  OPENSSL_ia32cap_P[OPENSSL_ia32cap_P668,19539
unsigned long *OPENSSL_ia32cap_loc(OPENSSL_ia32cap_loc669,19575
#define OPENSSL_CPUID_SETUP681,19948
typedef unsigned __int64 IA32CAP;683,19996
typedef unsigned long long IA32CAP;685,20036
void OPENSSL_cpuid_setup(687,20079
unsigned long *OPENSSL_ia32cap_loc(OPENSSL_ia32cap_loc718,20889
int OPENSSL_NONPIC_relocated 720,20954
void OPENSSL_cpuid_setup(722,21053
BOOL WINAPI DllMain(736,21467
#define _vsntprintf 775,22351
#define _vsntprintf 777,22389
#define alloca 781,22450
int OPENSSL_isservice(785,22531
  static union { void *p;p789,22600
  static union { void *p; int (*f)f789,22600
int OPENSSL_isservice(831,23926
void OPENSSL_showfatal 834,23976
void OPENSSL_showfatal 902,25870
int OPENSSL_isservice 909,26005
void OpenSSLDie(912,26056
void *OPENSSL_stderr(OPENSSL_stderr926,26400

crypto/sha/sha1.c,81
#define BUFSIZE	63,3259
int main(71,3397
void do_fp(99,3728
void pt(119,4023

crypto/sha/sha.h,1482
#define HEADER_SHA_H60,3214
#define FIPS_SHA_SIZE_T 74,3469
#define SHA_LONG 85,3812
#define SHA_LONG 87,3897
#define SHA_LONG_LOG2 88,3928
#define SHA_LONG 90,3958
#define SHA_LBLOCK	93,3996
#define SHA_CBLOCK	94,4018
#define SHA_LAST_BLOCK 97,4152
#define SHA_DIGEST_LENGTH 98,4191
typedef struct SHAstate_st100,4221
	SHA_LONG h0,102,4251
	SHA_LONG h0,h1,102,4251
	SHA_LONG h0,h1,h2,102,4251
	SHA_LONG h0,h1,h2,h3,102,4251
	SHA_LONG h0,h1,h2,h3,h4;102,4251
	SHA_LONG Nl,103,4277
	SHA_LONG Nl,Nh;103,4277
	SHA_LONG data[data104,4294
	unsigned int num;105,4322
	} SHA_CTX;106,4341
#define SHA256_CBLOCK	129,5069
#define SHA224_DIGEST_LENGTH	132,5210
#define SHA256_DIGEST_LENGTH	133,5242
typedef struct SHA256state_st135,5275
	SHA_LONG h[h137,5308
	SHA_LONG Nl,138,5324
	SHA_LONG Nl,Nh;138,5324
	SHA_LONG data[data139,5341
	unsigned int num,140,5369
	unsigned int num,md_len;140,5369
	} SHA256_CTX;141,5395
#define SHA384_DIGEST_LENGTH	159,6063
#define SHA512_DIGEST_LENGTH	160,6095
#define SHA512_CBLOCK	168,6319
#define SHA_LONG64 172,6526
#define U64(173,6562
#define SHA_LONG64 175,6615
#define U64(176,6648
#define SHA_LONG64 178,6679
#define U64(179,6717
typedef struct SHA512state_st182,6751
	SHA_LONG64 h[h184,6784
	SHA_LONG64 Nl,185,6802
	SHA_LONG64 Nl,Nh;185,6802
		SHA_LONG64	d[d187,6830
		unsigned char	p[p188,6858
	} u;189,6892
	unsigned int num,190,6898
	unsigned int num,md_len;190,6898
	} SHA512_CTX;191,6924

crypto/sha/sha_dgst.c,88
#undef  SHA_163,3318
#define SHA_064,3332
const char SHA_version[SHA_version68,3378

crypto/sha/sha_one.c,32
unsigned char *SHA(SHA65,3314

crypto/sha/sha512t.c,255
int main(15,437
unsigned char app_c1[app_c122,531
unsigned char app_c2[app_c232,917
unsigned char app_c3[app_c342,1303
unsigned char app_d1[app_d152,1689
unsigned char app_d2[app_d260,1991
unsigned char app_d3[app_d368,2293
int main 76,2595

crypto/sha/sha.c,81
#define BUFSIZE	63,3258
int main(68,3369
void do_fp(96,3699
void pt(116,3991

crypto/sha/sha1test.c,277
int main(66,3302
#undef SHA_0 79,3501
#define  SHA_1 80,3529
static char *test[test82,3562
static char *ret[ret89,3678
static char *bigret=bigret93,3793
static char *ret[ret97,3879
static char *bigret=bigret101,3994
int main(106,4104
static char *pt(pt169,5297

crypto/sha/sha1dgst.c,90
#undef  SHA_063,3318
#define SHA_164,3332
const char SHA1_version[SHA1_version68,3378

crypto/sha/shatest.c,277
int main(66,3335
#define SHA_0 79,3535
#undef  SHA_1 80,3564
static char *test[test82,3596
static char *ret[ret89,3712
static char *bigret=bigret93,3827
static char *ret[ret97,3913
static char *bigret=bigret101,4028
int main(106,4138
static char *pt(pt169,5307

crypto/sha/sha1_one.c,34
unsigned char *SHA1(SHA165,3315

crypto/sha/sha256t.c,272
int main(14,409
unsigned char app_b1[app_b121,503
unsigned char app_b2[app_b227,721
unsigned char app_b3[app_b333,939
unsigned char addenum_1[addenum_139,1157
unsigned char addenum_2[addenum_245,1358
unsigned char addenum_3[addenum_351,1559
int main 57,1760

crypto/sha/sha_locl.h,1498
#define DATA_ORDER_IS_BIG_ENDIAN65,3298
#define HASH_LONG 67,3332
#define HASH_CTX 68,3373
#define HASH_CBLOCK 69,3413
#define HASH_MAKE_STRING(70,3456
# define HASH_UPDATE 81,3716
# define HASH_TRANSFORM 82,3761
# define HASH_FINAL 83,3809
# define HASH_INIT	84,3853
# define HASH_BLOCK_DATA_ORDER 85,3883
# define Xupdate(86,3938
# define HASH_UPDATE 92,4093
# define HASH_TRANSFORM 93,4139
# define HASH_FINAL 94,4188
# define HASH_INIT	95,4233
# define HASH_BLOCK_DATA_ORDER 96,4264
#  define Xupdate(99,4442
#  define Xupdate(103,4563
#define INIT_DATA_h0 119,4856
#define INIT_DATA_h1 120,4890
#define INIT_DATA_h2 121,4924
#define INIT_DATA_h3 122,4958
#define INIT_DATA_h4 123,4992
fips_md_init(126,5040
#define K_00_19	140,5248
#define K_20_39 141,5277
#define K_40_59 142,5306
#define K_60_79 143,5335
#define	F_00_19(152,5750
#define	F_20_39(153,5802
#define F_40_59(154,5843
#define	F_60_79(155,5901
#define BODY_00_15(159,5973
#define BODY_16_19(163,6092
#define BODY_20_31(168,6251
#define BODY_32_39(173,6410
#define BODY_40_59(178,6566
#define BODY_60_79(183,6722
#undef X189,6889
# define X(201,7343
# define X(208,7555
static void HASH_BLOCK_DATA_ORDER 212,7625
	const union { long one;231,8000
	const union { long one; char little;231,8000
#define BODY_00_15(367,13822
#define BODY_16_19(372,13956
#define BODY_20_39(378,14126
#define BODY_40_59(384,14296
#define BODY_60_79(390,14466
static void HASH_BLOCK_DATA_ORDER 397,14680

crypto/sha/sha512.c,1185
const char SHA512_version[SHA512_version53,2108
#define SHA512_BLOCK_CAN_MANAGE_UNALIGNED_DATA59,2376
fips_md_init_ctx(62,2431
fips_md_init(78,2851
int SHA512_Final 99,3369
int SHA384_Final 177,5641
int SHA512_Update 180,5729
int SHA384_Update 231,6821
void SHA512_Transform 234,6929
unsigned char *SHA384(SHA384237,7038
unsigned char *SHA512(SHA512250,7315
static const SHA_LONG64 K512[K512264,7611
#   define ROTR(309,10096
#    define PULL64(315,10253
#    define PULL64(322,10501
#    define PULL64(331,10850
#   define ROTR(339,11171
#   define ROTR(347,11416
    static SHA_LONG64 __fastcall __pull64be(351,11573
    static SHA_LONG64 __fastcall __pull64be(362,11804
#   define PULL64(369,11966
#define B(378,12104
#define PULL64(379,12186
#define ROTR(383,12283
#define Sigma0(386,12334
#define Sigma1(387,12397
#define sigma0(388,12460
#define sigma1(389,12519
#define Ch(391,12579
#define Maj(392,12628
static void sha512_block_data_order 400,12880
static void sha512_block_data_order 455,13963
#define	ROUND_00_15(501,14999
#define	ROUND_16_80(506,15158
static void sha512_block_data_order 512,15386
static void *dummy=dummy594,18492

crypto/sha/sha256.c,931
const char SHA256_version[SHA256_version17,519
fips_md_init_ctx(19,581
fips_md_init(30,871
unsigned char *SHA224(SHA22441,1149
unsigned char *SHA256(SHA25654,1426
int SHA224_Update(67,1703
int SHA224_Final 69,1809
#define	DATA_ORDER_IS_BIG_ENDIAN72,1898
#define	HASH_LONG	74,1932
#define	HASH_CTX	75,1960
#define	HASH_CBLOCK	76,1989
#define	HASH_MAKE_STRING(85,2447
#define	HASH_UPDATE	106,3030
#define	HASH_TRANSFORM	107,3065
#define	HASH_FINAL	108,3106
#define	HASH_BLOCK_DATA_ORDER	109,3139
static const SHA_LONG K256[K256118,3348
#define Sigma0(141,4459
#define Sigma1(142,4528
#define sigma0(143,4596
#define sigma1(144,4659
#define Ch(146,4724
#define Maj(147,4773
static void sha256_block_data_order 151,4867
#define	ROUND_00_15(192,5857
#define	ROUND_16_63(197,6016
static void sha256_block_data_order 203,6240
	const union { long one;209,6428
	const union { long one; char little;209,6428

crypto/des/read2pwd.c,66
int DES_read_password(117,5930
int DES_read_2passwords(129,6217

crypto/des/cfb64enc.c,32
void DES_cfb64_encrypt(66,3408

crypto/des/des_old.h,4320
#define HEADER_DES_H92,4244
# undef OPENSSL_EXTERN111,4632
# define OPENSSL_EXTERN 112,4655
#undef _120,4752
typedef unsigned char _ossl_old_des_cblock[_ossl_old_des_cblock123,4769
typedef struct _ossl_old_des_ks_struct124,4816
		_ossl_old_des_cblock _;127,4867
		DES_LONG pad[pad130,4970
		} ks;131,4989
	} _ossl_old_des_key_schedule[_ossl_old_des_key_schedule132,4997
#define des_cblock 135,5074
#define const_des_cblock 136,5104
#define des_key_schedule 137,5146
#define des_ecb3_encrypt(138,5188
#define des_ede3_cbc_encrypt(140,5279
#define des_ede3_cbcm_encrypt(142,5392
#define des_ede3_cfb64_encrypt(144,5519
#define des_ede3_ofb64_encrypt(146,5642
#define des_options(148,5759
#define des_cbc_cksum(150,5797
#define des_cbc_encrypt(152,5870
#define des_ncbc_encrypt(154,5953
#define des_xcbc_encrypt(156,6038
#define des_cfb_encrypt(158,6145
#define des_ecb_encrypt(160,6234
#define des_encrypt1(162,6303
#define des_encrypt2(164,6360
#define des_encrypt3(166,6417
#define des_decrypt3(168,6488
#define des_xwhite_in2out(170,6559
#define des_enc_read(172,6625
#define des_enc_write(174,6696
#define des_fcrypt(176,6769
#define des_crypt(179,6827
#define crypt(182,6959
#define des_ofb_encrypt(186,7013
#define des_pcbc_encrypt(188,7096
#define des_quad_cksum(190,7181
#define des_random_seed(192,7253
#define des_random_key(194,7313
#define des_read_password(196,7361
#define des_read_2passwords(198,7428
#define des_set_odd_parity(200,7509
#define des_check_key_parity(202,7565
#define des_is_weak_key(204,7625
#define des_set_key(206,7675
#define des_key_sched(208,7726
#define des_set_key_checked(210,7781
#define des_set_key_unchecked(212,7848
#define des_string_to_key(214,7919
#define des_string_to_2keys(216,7979
#define des_cfb64_encrypt(218,8053
#define des_ofb64_encrypt(220,8148
#define des_ecb2_encrypt(224,8241
#define des_ede2_cbc_encrypt(227,8328
#define des_ede2_cfb64_encrypt(230,8437
#define des_ede2_ofb64_encrypt(233,8556
#define des_check_key 236,8669
#define des_rw_mode 237,8705
#define des_cblock 241,8861
#define des_key_schedule 242,8901
#define des_ecb3_encrypt(243,8953
#define des_ede3_cbc_encrypt(245,9051
#define des_ede3_cfb64_encrypt(247,9171
#define des_ede3_ofb64_encrypt(249,9301
#define des_options(251,9425
#define des_cbc_cksum(253,9473
#define des_cbc_encrypt(255,9555
#define des_ncbc_encrypt(257,9647
#define des_xcbc_encrypt(259,9741
#define des_cfb_encrypt(261,9857
#define des_ecb_encrypt(263,9955
#define des_encrypt(265,10033
#define des_encrypt2(267,10097
#define des_encrypt3(269,10163
#define des_decrypt3(271,10241
#define des_xwhite_in2out(273,10319
#define des_enc_read(275,10395
#define des_enc_write(277,10475
#define des_fcrypt(279,10557
#define des_crypt(281,10619
#define crypt(284,10679
#define des_ofb_encrypt(287,10732
#define des_pcbc_encrypt(289,10824
#define des_quad_cksum(291,10918
#define des_random_seed(293,11000
#define des_random_key(295,11060
#define des_read_password(297,11118
#define des_read_2passwords(299,11195
#define des_set_odd_parity(301,11286
#define des_is_weak_key(303,11352
#define des_set_key(305,11412
#define des_key_sched(307,11472
#define des_string_to_key(309,11536
#define des_string_to_2keys(311,11606
#define des_cfb64_encrypt(313,11690
#define des_ofb64_encrypt(315,11794
#define des_ecb2_encrypt(319,11896
#define des_ede2_cbc_encrypt(322,11983
#define des_ede2_cfb64_encrypt(325,12092
#define des_ede2_ofb64_encrypt(328,12211
#define des_check_key 331,12324
#define des_rw_mode 332,12360
#define _KERBEROS_DES_H408,17286
#define KRBDES_ENCRYPT 410,17311
#define KRBDES_DECRYPT 411,17346
#  define ENCRYPT 414,17398
#  define DECRYPT 415,17428
#  define C_Block 419,17482
#  define Key_schedule 420,17511
#  define KEY_SZ 421,17551
#  define string_to_key 422,17579
#  define read_pw_string 423,17621
#  define random_key 424,17665
#  define pcbc_encrypt 425,17701
#  define set_key 426,17741
#  define key_sched 427,17771
#  define ecb_encrypt 428,17805
#  define cbc_encrypt 429,17843
#  define ncbc_encrypt 430,17881
#  define xcbc_encrypt 431,17921
#  define cbc_cksum 432,17961
#  define quad_cksum 433,17995
#  define check_parity 434,18031
#define des_fixup_key_parity 437,18083

crypto/des/str2key.c,67
void DES_string_to_key(62,3248
void DES_string_to_2keys(102,4105

crypto/des/enc_writ.c,27
int DES_enc_write(80,3811

crypto/des/qud_cksm.c,243
#define Q_B0(67,3553
#define Q_B1(68,3587
#define Q_B2(69,3624
#define Q_B3(70,3662
#define NOISE	74,3798
DES_LONG DES_quad_cksum(76,3835
	struct lp_st 84,4042
	struct lp_st { int a:a84,4042
	struct lp_st { int a:32; int b:b84,4042

crypto/des/ofb_enc.c,30
void DES_ofb_encrypt(67,3498

crypto/des/xcbc_enc.c,136
static const unsigned char desx_white_in2out[desx_white_in2out64,3322
void DES_xwhite_in2out(83,4675
void DES_xcbc_encrypt(112,5307

crypto/des/rand_key.c,28
int DES_random_key(59,2715

crypto/des/rpc_des.h,712
#define DES_MAXLEN 94,4659
#define DES_QUICKLEN	95,4722
#undef ENCRYPT98,4811
#undef DECRYPT99,4826
enum desdir 102,4849
enum desdir { ENCRYPT,102,4849
enum desdir { ENCRYPT, DECRYPT 102,4849
enum desmode 103,4883
enum desmode { CBC,103,4883
enum desmode { CBC, ECB 103,4883
struct desparams 108,4946
	unsigned char des_key[des_key109,4965
	enum desdir des_dir;110,5024
	enum desmode des_mode;111,5062
	unsigned char des_ivec[des_ivec112,5097
	unsigned des_len;113,5144
		unsigned char UDES_data[UDES_data115,5203
		unsigned char *UDES_buf;UDES_buf116,5244
	} UDES;117,5271
#	define des_data 118,5280
#	define des_buf	119,5345
#define	DESIOCBLOCK	125,5457
#define DESIOCQUICK	130,5562

crypto/des/speed.c,484
#define TIMES63,3457
#define crypt(74,3623
#undef TIMES90,4092
#define _POSIX_SOURCE98,4196
#   define HZ	109,4439
#   define HZ 111,4487
#  define HZ 114,4555
#define BUFSIZE	118,4602
long run=119,4631
#define SIGRETTYPE 124,4736
#define SIGRETTYPE 126,4766
SIGRETTYPE sig_done(130,4827
#define START	140,4934
#define STOP	141,4950
double Time_F(143,4966
int main(179,5519
#define COND(220,6532
#define COUNT(221,6563
#define COND(223,6590
#define COUNT(224,6612

crypto/des/fcrypt_b.c,177
#define DES_FCRYPT67,3406
#undef DES_FCRYPT69,3447
#undef PERM_OP71,3466
#define PERM_OP(72,3481
#undef HPERM_OP76,3569
#define HPERM_OP(77,3585
void fcrypt_body(80,3676

crypto/des/destest.c,2135
#define OPENSSL_SYS_MSDOS65,3383
int main(79,3616
#define crypt(87,3732
#define NUM_TESTS 91,3851
static unsigned char key_data[key_data92,3872
static unsigned char plain_data[plain_data128,5416
static unsigned char cipher_data[cipher_data164,6962
static unsigned char cipher_ecb2[cipher_ecb2200,8509
static unsigned char cbc_key 235,10014
static unsigned char cbc2_key[cbc2_key236,10090
static unsigned char cbc3_key[cbc3_key237,10166
static unsigned char cbc_iv 238,10242
static unsigned char cbc_data[cbc_data242,10480
static unsigned char cbc_ok[cbc_ok250,10731
static unsigned char cbc2_key[cbc2_key259,11072
static unsigned char xcbc_ok[xcbc_ok260,11148
static unsigned char xcbc_ok[xcbc_ok267,11361
static unsigned char cbc3_ok[cbc3_ok275,11576
static unsigned char pcbc_ok[pcbc_ok281,11781
static unsigned char cfb_key[cfb_key287,11986
static unsigned char cfb_iv[cfb_iv288,12061
static unsigned char cfb_buf1[cfb_buf1289,12135
static unsigned char cfb_buf1[40],cfb_buf2[cfb_buf2289,12135
static unsigned char cfb_buf1[40],cfb_buf2[40],cfb_tmp[cfb_tmp289,12135
static unsigned char plain[plain290,12194
static unsigned char cfb_cipher8[cfb_cipher8297,12360
static unsigned char cfb_cipher16[cfb_cipher16300,12528
static unsigned char cfb_cipher32[cfb_cipher32303,12696
static unsigned char cfb_cipher48[cfb_cipher48306,12864
static unsigned char cfb_cipher64[cfb_cipher64309,13032
static unsigned char ofb_key[ofb_key313,13201
static unsigned char ofb_iv[ofb_iv314,13276
static unsigned char ofb_buf1[ofb_buf1315,13350
static unsigned char ofb_buf1[24],ofb_buf2[ofb_buf2315,13350
static unsigned char ofb_buf1[24],ofb_buf2[24],ofb_tmp[ofb_tmp315,13350
static unsigned char ofb_cipher[ofb_cipher316,13409
static DES_LONG cbc_cksum_ret=324,13585
static DES_LONG cbc_cksum_ret=326,13634
static unsigned char cbc_cksum_data[cbc_cksum_data328,13684
int main(334,13964
            int a:a346,14218
            int b:b347,14240
static char *pt(pt831,26514
static int cfb_test(852,26829
static int cfb64_test(881,27566
static int ede_cfb64_test(914,28482

crypto/des/des_opts.c,5451
#define TIMES63,3461
#undef TIMES92,4106
#define _POSIX_SOURCE101,4211
#define DES_DEFAULT_OPTIONS109,4327
#define PART1112,4433
#define PART2113,4447
#define PART3114,4461
#define PART4115,4475
#undef DES_UNROLL120,4511
#undef DES_RISC1121,4529
#undef DES_RISC2122,4546
#undef DES_PTR123,4563
#undef D_ENCRYPT124,4578
#define DES_encrypt1 125,4595
#define DES_encrypt2 126,4640
#define DES_encrypt3 127,4686
#define DES_decrypt3 128,4732
#undef HEADER_DES_LOCL_H129,4778
#define DES_UNROLL132,4825
#undef DES_RISC1133,4844
#undef DES_RISC2134,4861
#undef DES_PTR135,4878
#undef D_ENCRYPT136,4893
#undef DES_encrypt1137,4910
#undef DES_encrypt2138,4930
#undef DES_encrypt3139,4950
#undef DES_decrypt3140,4970
#define DES_encrypt1 141,4990
#define DES_encrypt2 142,5036
#define DES_encrypt3 143,5083
#define DES_decrypt3 144,5130
#undef HEADER_DES_LOCL_H145,5177
#undef DES_UNROLL148,5224
#define DES_RISC1149,5242
#undef DES_RISC2150,5260
#undef DES_PTR151,5277
#undef D_ENCRYPT152,5292
#undef DES_encrypt1153,5309
#undef DES_encrypt2154,5329
#undef DES_encrypt3155,5349
#undef DES_decrypt3156,5369
#define DES_encrypt1 157,5389
#define DES_encrypt2 158,5435
#define DES_encrypt3 159,5482
#define DES_decrypt3 160,5529
#undef HEADER_DES_LOCL_H161,5576
#undef DES_UNROLL168,5645
#undef DES_RISC1169,5663
#define DES_RISC2170,5680
#undef DES_PTR171,5698
#undef D_ENCRYPT172,5713
#undef DES_encrypt1173,5730
#undef DES_encrypt2174,5750
#undef DES_encrypt3175,5770
#undef DES_decrypt3176,5790
#define DES_encrypt1 177,5810
#define DES_encrypt2 178,5856
#define DES_encrypt3 179,5903
#define DES_decrypt3 180,5950
#undef HEADER_DES_LOCL_H181,5997
#define DES_UNROLL184,6044
#define DES_RISC1185,6063
#undef DES_RISC2186,6081
#undef DES_PTR187,6098
#undef D_ENCRYPT188,6113
#undef DES_encrypt1189,6130
#undef DES_encrypt2190,6150
#undef DES_encrypt3191,6170
#undef DES_decrypt3192,6190
#define DES_encrypt1 193,6210
#define DES_encrypt2 194,6257
#define DES_encrypt3 195,6305
#define DES_decrypt3 196,6353
#undef HEADER_DES_LOCL_H197,6401
#define DES_UNROLL200,6448
#undef DES_RISC1201,6467
#define DES_RISC2202,6484
#undef DES_PTR203,6502
#undef D_ENCRYPT204,6517
#undef DES_encrypt1205,6534
#undef DES_encrypt2206,6554
#undef DES_encrypt3207,6574
#undef DES_decrypt3208,6594
#define DES_encrypt1 209,6614
#define DES_encrypt2 210,6661
#define DES_encrypt3 211,6709
#define DES_decrypt3 212,6757
#undef HEADER_DES_LOCL_H213,6805
#undef DES_UNROLL220,6874
#undef DES_RISC1221,6892
#undef DES_RISC2222,6909
#define DES_PTR223,6926
#undef D_ENCRYPT224,6942
#undef DES_encrypt1225,6959
#undef DES_encrypt2226,6979
#undef DES_encrypt3227,6999
#undef DES_decrypt3228,7019
#define DES_encrypt1 229,7039
#define DES_encrypt2 230,7084
#define DES_encrypt3 231,7130
#define DES_decrypt3 232,7176
#undef HEADER_DES_LOCL_H233,7222
#define DES_UNROLL236,7269
#undef DES_RISC1237,7288
#undef DES_RISC2238,7305
#define DES_PTR239,7322
#undef D_ENCRYPT240,7338
#undef DES_encrypt1241,7355
#undef DES_encrypt2242,7375
#undef DES_encrypt3243,7395
#undef DES_decrypt3244,7415
#define DES_encrypt1 245,7435
#define DES_encrypt2 246,7481
#define DES_encrypt3 247,7528
#define DES_decrypt3 248,7575
#undef HEADER_DES_LOCL_H249,7622
#undef DES_UNROLL252,7669
#define DES_RISC1253,7687
#undef DES_RISC2254,7705
#define DES_PTR255,7722
#undef D_ENCRYPT256,7738
#undef DES_encrypt1257,7755
#undef DES_encrypt2258,7775
#undef DES_encrypt3259,7795
#undef DES_decrypt3260,7815
#define DES_encrypt1 261,7835
#define DES_encrypt2 262,7881
#define DES_encrypt3 263,7928
#define DES_decrypt3 264,7975
#undef HEADER_DES_LOCL_H265,8022
#undef DES_UNROLL272,8091
#undef DES_RISC1273,8109
#define DES_RISC2274,8126
#define DES_PTR275,8144
#undef D_ENCRYPT276,8160
#undef DES_encrypt1277,8177
#undef DES_encrypt2278,8197
#undef DES_encrypt3279,8217
#undef DES_decrypt3280,8237
#define DES_encrypt1 281,8257
#define DES_encrypt2 282,8303
#define DES_encrypt3 283,8350
#define DES_decrypt3 284,8397
#undef HEADER_DES_LOCL_H285,8444
#define DES_UNROLL288,8491
#define DES_RISC1289,8510
#undef DES_RISC2290,8528
#define DES_PTR291,8545
#undef D_ENCRYPT292,8561
#undef DES_encrypt1293,8578
#undef DES_encrypt2294,8598
#undef DES_encrypt3295,8618
#undef DES_decrypt3296,8638
#define DES_encrypt1 297,8658
#define DES_encrypt2 298,8705
#define DES_encrypt3 299,8753
#define DES_decrypt3 300,8801
#undef HEADER_DES_LOCL_H301,8849
#define DES_UNROLL304,8896
#undef DES_RISC1305,8915
#define DES_RISC2306,8932
#define DES_PTR307,8950
#undef D_ENCRYPT308,8966
#undef DES_encrypt1309,8983
#undef DES_encrypt2310,9003
#undef DES_encrypt3311,9023
#undef DES_decrypt3312,9043
#define DES_encrypt1 313,9063
#define DES_encrypt2 314,9110
#define DES_encrypt3 315,9158
#define DES_decrypt3 316,9206
#undef HEADER_DES_LOCL_H317,9254
#   define HZ	326,9453
#   define HZ 328,9501
#  define HZ 331,9569
#define BUFSIZE	335,9616
long run=336,9645
#define SIGRETTYPE 341,9733
#define SIGRETTYPE 343,9763
SIGRETTYPE sig_done(347,9824
#define START	357,9931
#define STOP	358,9947
double Time_F(360,9963
#define print_name(397,10534
#define print_name(399,10628
#define time_it(402,10710
#define print_it(414,11031
int main(418,11159
#define COND(469,12320
#define COUNT(470,12351
#define COND(472,12378
#define COUNT(473,12400

crypto/des/ncbc_enc.c,30
void DES_cbc_encrypt(67,3349

crypto/des/des_old2.c,88
#undef OPENSSL_DES_LIBDES_COMPATIBILITY75,3414
void _ossl_096_des_random_seed(79,3506

crypto/des/ede_cbcm_enc.c,36
void DES_ede3_cbcm_encrypt(76,3197

crypto/des/des_ver.h,269
# undef OPENSSL_EXTERN62,3258
# define OPENSSL_EXTERN 63,3281
#define DES_version 67,3407
#define libdes_version 68,3444
OPENSSL_EXTERN const char OSSL_DES_version[OSSL_DES_version70,3488
OPENSSL_EXTERN const char OSSL_libdes_version[OSSL_libdes_version71,3562

crypto/des/rpw.c,18
int main(62,3238

crypto/des/fcrypt.c,210
#define CHARSET_EBCDIC 5,71
static unsigned const char con_salt[con_salt31,816
static unsigned const char cov_2char[cov_2char50,1519
char *DES_crypt(DES_crypt61,1893
char *DES_fcrypt(DES_fcrypt99,2775

crypto/des/ofb64enc.c,32
void DES_ofb64_encrypt(65,3407

crypto/des/des.c,1586
#define EXIT(104,4345
#define EXIT(106,4387
#define BUFSIZE 109,4419
#define VERIFY 110,4444
#define KEYSIZ	111,4462
#define KEYSIZB 112,4479
char key[key113,4542
int do_encrypt,114,4563
int do_encrypt,longk=114,4563
FILE *DES_IN,DES_IN115,4587
FILE *DES_IN,*DES_OUT,DES_OUT115,4587
FILE *DES_IN,*DES_OUT,*CKSUM_OUT;CKSUM_OUT115,4587
char uuname[uuname116,4621
unsigned char uubuf[uubuf117,4639
int uubufnum=118,4664
#define INUUBUFN	119,4680
#define OUTUUBUF	120,4706
unsigned char b[b121,4732
unsigned char bb[bb122,4759
DES_cblock cksum=123,4782
char cksumname[cksumname124,4842
int vflag,126,4867
int vflag,cflag,126,4867
int vflag,cflag,eflag,126,4867
int vflag,cflag,eflag,dflag,126,4867
int vflag,cflag,eflag,dflag,kflag,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,fflag,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,fflag,sflag,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,fflag,sflag,uflag,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,fflag,sflag,uflag,flag3,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,fflag,sflag,uflag,flag3,hflag,126,4867
int vflag,cflag,eflag,dflag,kflag,bflag,fflag,sflag,uflag,flag3,hflag,error;126,4867
int main(128,4945
void usage(322,8297
	for (u=(char **)Usage; *u;u351,9756
		fputs(*u,stderr)353,9793
		fputc('\n',stderr)354,9813
void doencryption(360,9854
int uufwrite(685,15965
void uufwriteEnd(738,16908
int uufread(755,17270
#define ccc2l(818,18377
#define l2ccc(822,18505
int uuencode(827,18702
int uudecode(857,19167

crypto/des/des.h,863
#define HEADER_NEW_DES_H60,3218
# undef OPENSSL_EXTERN70,3440
# define OPENSSL_EXTERN 71,3463
typedef unsigned char DES_cblock[DES_cblock78,3551
typedef /* const */ unsigned char const_DES_cblock[const_DES_cblock79,3588
typedef struct DES_ks83,3768
	DES_cblock cblock;87,3809
	DES_LONG deslong[deslong90,3904
	} ks[ks91,3926
    } DES_key_schedule;92,3937
#  define OPENSSL_ENABLE_OLD_DES_SUPPORT96,4042
#define DES_KEY_SZ 104,4175
#define DES_SCHEDULE_SZ 105,4216
#define DES_ENCRYPT	107,4268
#define DES_DECRYPT	108,4290
#define DES_CBC_MODE	110,4313
#define DES_PCBC_MODE	111,4336
#define DES_ecb2_encrypt(113,4361
#define DES_ede2_cbc_encrypt(116,4448
#define DES_ede2_cfb64_encrypt(119,4557
#define DES_ede2_ofb64_encrypt(122,4676
#define DES_check_key 126,4856
#define DES_rw_mode 128,4985
#define DES_fixup_key_parity 242,10763

crypto/des/des_enc.c,189
void DES_encrypt1(62,3237
void DES_encrypt2(156,5533
void DES_encrypt3(243,7772
void DES_decrypt3(263,8174
#undef CBC_ENC_C__DONT_UPDATE_IV285,8605
void DES_ede3_cbc_encrypt(288,8684

crypto/des/enc_read.c,34
OPENSSL_IMPLEMENT_GLOBAL(66,3370

crypto/des/des_old.c,1605
#define OPENSSL_DES_LIBDES_COMPATIBILITY75,3406
const char *_ossl_old_des_options(_ossl_old_des_options79,3499
void _ossl_old_des_ecb3_encrypt(83,3568
DES_LONG _ossl_old_des_cbc_cksum(91,3878
void _ossl_old_des_cbc_encrypt(97,4143
void _ossl_old_des_ncbc_encrypt(103,4431
void _ossl_old_des_xcbc_encrypt(109,4721
void _ossl_old_des_cfb_encrypt(116,5077
void _ossl_old_des_ecb_encrypt(122,5326
void _ossl_old_des_encrypt(127,5513
void _ossl_old_des_encrypt2(131,5641
void _ossl_old_des_encrypt3(135,5770
void _ossl_old_des_decrypt3(141,5985
void _ossl_old_des_ede3_cbc_encrypt(147,6200
void _ossl_old_des_ede3_cfb64_encrypt(155,6591
void _ossl_old_des_ede3_ofb64_encrypt(163,6939
void _ossl_old_des_xwhite_in2out(173,7357
int _ossl_old_des_enc_read(180,7557
int _ossl_old_des_enc_write(185,7733
char *_ossl_old_des_fcrypt(_ossl_old_des_fcrypt190,7911
char *_ossl_old_des_crypt(_ossl_old_des_crypt194,8025
char *_ossl_old_crypt(_ossl_old_crypt198,8121
void _ossl_old_des_ofb_encrypt(202,8213
void _ossl_old_des_pcbc_encrypt(208,8449
DES_LONG _ossl_old_des_quad_cksum(214,8739
void _ossl_old_des_random_seed(220,8975
void _ossl_old_des_random_key(224,9085
int _ossl_old_des_read_password(228,9183
int _ossl_old_des_read_2passwords(233,9332
void _ossl_old_des_set_odd_parity(238,9518
int _ossl_old_des_is_weak_key(242,9611
int _ossl_old_des_set_key(246,9704
int _ossl_old_des_key_sched(250,9845
void _ossl_old_des_string_to_key(254,9990
void _ossl_old_des_string_to_2keys(258,10096
void _ossl_old_des_cfb64_encrypt(262,10241
void _ossl_old_des_ofb64_encrypt(268,10492

crypto/des/cbc_cksm.c,32
DES_LONG DES_cbc_cksum(61,3221

crypto/des/read_pwd.c,1359
# define SIGACTION70,3546
# define TERMIOS72,3627
#undef OPENSSL_SYS_WIN1681,3751
#undef _WINDOWS82,3776
#define TERMIOS115,4398
#undef  TERMIO116,4414
#undef  SGTTY117,4429
#undef  TERMIOS121,4490
#define TERMIO122,4506
#undef  SGTTY123,4521
#undef  TERMIOS127,4556
#define TERMIO128,4572
#undef  SGTTY129,4587
#undef  TERMIOS133,4769
#undef  TERMIO134,4785
#define SGTTY135,4800
#undef TERMIOS139,4855
#undef TERMIO140,4870
#undef SGTTY141,4884
#define TTY_STRUCT	146,4941
#define TTY_FLAGS	147,4976
#define	TTY_get(148,5003
#define TTY_set(149,5049
#define TTY_STRUCT	154,5145
#define TTY_FLAGS	155,5179
#define TTY_get(156,5206
#define TTY_set(157,5255
#define TTY_STRUCT	162,5344
#define TTY_FLAGS	163,5378
#define TTY_get(164,5406
#define TTY_set(165,5457
#define fgets(174,5760
struct IOSB 182,5910
	short iosb$w_value;183,5924
	short iosb$w_count;184,5945
	long  iosb$l_info;185,5966
#define TTY_STRUCT 195,6210
#define NX509_SIG 199,6259
 static struct sigaction savsig[savsig210,6543
static jmp_buf save;214,6642
int des_read_pw_string(216,6664
int des_read_pw(229,6929
int des_read_pw(238,7107
static void read_till_nl(247,7299
#define SIZE 249,7337
int des_read_pw(259,7485
static void pushsig(416,10731
static void popsig(448,11158
static void recsig(470,11431
static int noecho_fgets(479,11532

crypto/des/cbc3_enc.c,31
void DES_3cbc_encrypt(62,3287

crypto/des/cfb_enc.c,30
void DES_cfb_encrypt(71,3685

crypto/des/ofb64ede.c,75
void DES_ede3_ofb64_encrypt(65,3407
void DES_ede2_ofb64_encrypt(119,4299

crypto/des/set_key.c,466
OPENSSL_IMPLEMENT_GLOBAL(70,3449
void DES_set_odd_parity(90,4607
int DES_check_key_parity(98,4738
#define NUM_WEAK_KEY	119,5173
static const DES_cblock weak_keys[weak_keys120,5197
int DES_is_weak_key(140,5992
#define HPERM_OP(162,6601
static const DES_LONG des_skb[des_skb165,6691
int DES_set_key(312,13654
int DES_set_key_checked(329,13983
void DES_set_key_unchecked(339,14203
void private_DES_set_key_unchecked(345,14379
int DES_key_sched(406,16169

crypto/des/ecb_enc.c,200
OPENSSL_GLOBAL const char libdes_version[libdes_version64,3296
OPENSSL_GLOBAL const char DES_version[DES_version65,3371
const char *DES_options(DES_options67,3441
void DES_ecb_encrypt(108,4033

crypto/des/des_locl.h,872
#define HEADER_DES_LOCL_H60,3224
#define OPENSSL_SYS_MSDOS66,3336
# undef OPENSSL_EXTERN97,3936
# define OPENSSL_EXTERN 98,3959
#define ITERATIONS 101,4006
#define HALF_ITERATIONS 102,4028
#define MAXWRITE	105,4092
#define BSIZE	106,4119
#define c2l(108,4148
#define c2ln(114,4357
#define l2c(129,4808
#define HDRSIZE 136,5135
#define n2l(138,5154
#define l2n(143,5314
#define l2cn(149,5568
#define	ROTATE(164,6167
#  define ROTATE(167,6440
#define	ROTATE(177,6628
#define LOAD_DATA_tmp(185,6816
#define LOAD_DATA(188,6905
#define LOAD_DATA_tmp(194,7056
#define LOAD_DATA(195,7116
#define D_ENCRYPT(214,7861
#define D_ENCRYPT(242,8585
#define D_ENCRYPT(270,9311
#define D_ENCRYPT(288,9932
#define D_ENCRYPT(317,10512
#define D_ENCRYPT(348,11089
#define PERM_OP(400,12962
#define IP(404,13050
#define FP(414,13277
#undef DES_UNROLL430,13670

crypto/des/spr.h,3359
OPENSSL_GLOBAL const DES_LONG DES_SPtrans[DES_SPtrans59,3193
0x40108010L,x40108010L80,4112
0x40108010L, 0x00000000L,x00000000L80,4112
0x40108010L, 0x00000000L, 0x00108000L,x00108000L80,4112
0x40108010L, 0x00000000L, 0x00108000L, 0x40100000L,x40100000L80,4112
0x40000010L,x40000010L81,4164
0x40000010L, 0x00008010L,x00008010L81,4164
0x40000010L, 0x00008010L, 0x40008000L,x40008000L81,4164
0x40000010L, 0x00008010L, 0x40008000L, 0x00108000L,x00108000L81,4164
0x00008000L,x00008000L82,4216
0x00008000L, 0x40100010L,x40100010L82,4216
0x00008000L, 0x40100010L, 0x00000010L,x00000010L82,4216
0x00008000L, 0x40100010L, 0x00000010L, 0x40008000L,x40008000L82,4216
0x00100010L,x00100010L83,4268
0x00100010L, 0x40108000L,x40108000L83,4268
0x00100010L, 0x40108000L, 0x40100000L,x40100000L83,4268
0x00100010L, 0x40108000L, 0x40100000L, 0x00000010L,x00000010L83,4268
0x00100000L,x00100000L84,4320
0x00100000L, 0x40008010L,x40008010L84,4320
0x00100000L, 0x40008010L, 0x40100010L,x40100010L84,4320
0x00100000L, 0x40008010L, 0x40100010L, 0x00008000L,x00008000L84,4320
0x00108010L,x00108010L85,4372
0x00108010L, 0x40000000L,x40000000L85,4372
0x00108010L, 0x40000000L, 0x00000000L,x00000000L85,4372
0x00108010L, 0x40000000L, 0x00000000L, 0x00100010L,x00100010L85,4372
0x40008010L,x40008010L86,4424
0x40008010L, 0x00108010L,x00108010L86,4424
0x40008010L, 0x00108010L, 0x40108000L,x40108000L86,4424
0x40008010L, 0x00108010L, 0x40108000L, 0x40000010L,x40000010L86,4424
0x40000000L,x40000000L87,4476
0x40000000L, 0x00100000L,x00100000L87,4476
0x40000000L, 0x00100000L, 0x00008010L,x00008010L87,4476
0x40000000L, 0x00100000L, 0x00008010L, 0x40108010L,x40108010L87,4476
0x00100010L,x00100010L88,4528
0x00100010L, 0x40108000L,x40108000L88,4528
0x00100010L, 0x40108000L, 0x40008000L,x40008000L88,4528
0x00100010L, 0x40108000L, 0x40008000L, 0x00108010L,x00108010L88,4528
0x40108010L,x40108010L89,4580
0x40108010L, 0x00100010L,x00100010L89,4580
0x40108010L, 0x00100010L, 0x40000010L,x40000010L89,4580
0x40108010L, 0x00100010L, 0x40000010L, 0x00000000L,x00000000L89,4580
0x40000000L,x40000000L90,4632
0x40000000L, 0x00008010L,x00008010L90,4632
0x40000000L, 0x00008010L, 0x00100000L,x00100000L90,4632
0x40000000L, 0x00008010L, 0x00100000L, 0x40100010L,x40100010L90,4632
0x00008000L,x00008000L91,4684
0x00008000L, 0x40000000L,x40000000L91,4684
0x00008000L, 0x40000000L, 0x00108010L,x00108010L91,4684
0x00008000L, 0x40000000L, 0x00108010L, 0x40008010L,x40008010L91,4684
0x40108000L,x40108000L92,4736
0x40108000L, 0x00008000L,x00008000L92,4736
0x40108000L, 0x00008000L, 0x00000000L,x00000000L92,4736
0x40108000L, 0x00008000L, 0x00000000L, 0x40000010L,x40000010L92,4736
0x00000010L,x00000010L93,4788
0x00000010L, 0x40108010L,x40108010L93,4788
0x00000010L, 0x40108010L, 0x00108000L,x00108000L93,4788
0x00000010L, 0x40108010L, 0x00108000L, 0x40100000L,x40100000L93,4788
0x40100010L,x40100010L94,4840
0x40100010L, 0x00100000L,x00100000L94,4840
0x40100010L, 0x00100000L, 0x00008010L,x00008010L94,4840
0x40100010L, 0x00100000L, 0x00008010L, 0x40008000L,x40008000L94,4840
0x40008010L,x40008010L95,4892
0x40008010L, 0x00000010L,x00000010L95,4892
0x40008010L, 0x00000010L, 0x40100000L,x40100000L95,4892
0x40008010L, 0x00000010L, 0x40100000L, 0x00108000L,x00108000L95,4892

crypto/des/pcbc_enc.c,31
void DES_pcbc_encrypt(61,3221

crypto/des/rpc_enc.c,24
int _des_crypt(64,3320

crypto/des/cbc_enc.c,42
#define CBC_ENC_C__DONT_UPDATE_IV59,3197

crypto/des/cfb64ede.c,111
void DES_ede3_cfb64_encrypt(67,3426
void DES_ede2_cfb64_encrypt(137,4516
void DES_ede3_cfb_encrypt(149,4875

crypto/des/ecb3_enc.c,31
void DES_ecb3_encrypt(61,3221

crypto/cversion.c,82
const char *SSLeay_version(SSLeay_version65,3277
unsigned long SSLeay(113,4182

crypto/ia64cpuid.S,635
.global	5,99
.proc	6,128
OPENSSL_cpuid_setup:OPENSSL_cpuid_setup7,155
.endp	9,209
.global	11,237
.proc	12,260
OPENSSL_rdtsc:OPENSSL_rdtsc13,281
.endp 16,346
.global	18,370
.proc	19,398
.align	20,424
OPENSSL_atomic_add:OPENSSL_atomic_add21,434
.Lspin:.Lspin25,501
.endp	38,745
.global	47,1168
.proc	48,1194
.align	49,1218
OPENSSL_wipe_cpu:OPENSSL_wipe_cpu50,1228
.L_wipe_top:.L_wipe_top68,1605
.L_wipe_end:.L_wipe_end75,1730
.endp	128,2688
.global	130,2713
.proc	131,2738
OPENSSL_cleanse:OPENSSL_cleanse132,2761
.Little:.Little142,3004
.Lot:.Lot149,3163
.Laligned:.Laligned157,3311
.endp	167,3574

crypto/conf/conf_api.h,52
#define HEADER_CONF_API_H60,3214
STACK_OF(74,3631

crypto/conf/cnf_save.c,46
main(65,3345
static void print_conf(81,3574

crypto/conf/test.c,14
main(64,3286

crypto/conf/conf_def.c,968
#define scan_esc(78,3827
const char CONF_def_version[CONF_def_version91,4371
static CONF_METHOD default_method 93,4436
static CONF_METHOD WIN32_method 106,4629
CONF_METHOD *NCONF_default(NCONF_default119,4808
CONF_METHOD *NCONF_WIN32(NCONF_WIN32123,4868
static CONF *def_create(def_create128,4925
static int def_init_default(142,5151
static int def_init_WIN32(154,5331
static int def_destroy(166,5513
static int def_destroy_data(176,5637
static int def_load(184,5750
static int def_load_bio(209,6210
#define CONFBUFSIZE	212,6335
static void clear_comments(458,11345
static int str_copy(503,11876
static char *eat_ws(eat_ws649,14756
static char *eat_alpha_numeric(eat_alpha_numeric656,14869
static char *scan_quote(scan_quote671,15076
static char *scan_dquote(scan_dquote690,15311
static void dump_value_doall_arg(714,15554
static IMPLEMENT_LHASH_DOALL_ARG_FN(722,15748
static int def_is_number(731,15964
static int def_to_int(736,16049

crypto/conf/conf_api.c,535
# undef NDEBUG 62,3285
# define NDEBUG63,3336
static IMPLEMENT_LHASH_DOALL_ARG_FN(76,3638
STACK_OF(93,4156
int _CONF_add_string(105,4396
char *_CONF_get_string(_CONF_get_string129,4857
long _CONF_get_number(164,5653
static unsigned long conf_value_hash(182,5962
static IMPLEMENT_LHASH_HASH_FN(186,6083
static IMPLEMENT_LHASH_COMP_FN(208,6495
void _CONF_free_data(224,6737
static void value_free_hash_doall_arg(242,7258
static void value_free_stack_doall(248,7406
CONF_VALUE *_CONF_new_section(_CONF_new_section270,7880

crypto/conf/conf_mall.c,43
void OPENSSL_load_builtin_modules(72,3005

crypto/conf/conf_sap.c,101
static int openssl_configured 75,3187
void OPENSSL_config(77,3223
void OPENSSL_no_config(108,3845

crypto/conf/conf_def.h,1264
#define CONF_NUMBER	62,3299
#define CONF_UPPER	63,3322
#define CONF_LOWER	64,3344
#define CONF_UNDER	65,3366
#define CONF_PUNCTUATION	66,3390
#define CONF_WS	67,3419
#define CONF_ESC	68,3440
#define CONF_QUOTE	69,3461
#define CONF_DQUOTE	70,3484
#define CONF_COMMENT	71,3510
#define CONF_FCOMMENT	72,3536
#define CONF_EOF	73,3564
#define CONF_HIGHBIT	74,3584
#define CONF_ALPHA	75,3611
#define CONF_ALPHA_NUMERIC	76,3655
#define CONF_ALPHA_NUMERIC_PUNCT 77,3718
#define KEYTYPES(80,3813
#define IS_COMMENT(82,3894
#define IS_FCOMMENT(83,3956
#define IS_EOF(84,4019
#define IS_ESC(85,4073
#define IS_NUMBER(86,4127
#define IS_WS(87,4187
#define IS_ALPHA_NUMERIC(88,4239
#define IS_ALPHA_NUMERIC_PUNCT(89,4312
#define IS_QUOTE(91,4403
#define IS_DQUOTE(92,4461
#define IS_HIGHBIT(93,4521
#define IS_COMMENT(97,4610
#define IS_FCOMMENT(98,4682
#define IS_EOF(99,4755
#define IS_ESC(100,4819
#define IS_NUMBER(101,4883
#define IS_WS(102,4953
#define IS_ALPHA_NUMERIC(103,5015
#define IS_ALPHA_NUMERIC_PUNCT(104,5098
#define IS_QUOTE(106,5199
#define IS_DQUOTE(107,5267
#define IS_HIGHBIT(108,5337
static unsigned short CONF_type_default[CONF_type_default111,5436
static unsigned short CONF_type_win32[CONF_type_win32146,7344

crypto/conf/conf_lib.c,781
const char CONF_version[CONF_version66,2889
static CONF_METHOD *default_CONF_method=default_CONF_method68,2946
void CONF_set_nconf(72,3042
int CONF_set_default_method(84,3356
LHASH_OF(90,3450
LHASH_OF(114,3872
LHASH_OF(129,4202
STACK_OF(143,4442
char *CONF_get_string(CONF_get_string158,4692
long CONF_get_number(173,4971
void CONF_free(198,5422
int CONF_dump_fp(206,5565
int CONF_dump_bio(221,5829
CONF *NCONF_new(NCONF_new234,6317
void NCONF_free(251,6551
void NCONF_free_data(258,6643
int NCONF_load(265,6745
int NCONF_load_fp(277,6966
int NCONF_load_bio(292,7236
STACK_OF(303,7431
char *NCONF_get_string(NCONF_get_string320,7761
int NCONF_get_number_e(340,8311
int NCONF_dump_fp(366,8780
int NCONF_dump_bio(380,9036
long NCONF_get_number(394,9261

crypto/conf/conf.h,2778
#define HEADER_CONF_H60,3218
	char *section;section76,3469
	char *name;name77,3485
	char *value;value78,3498
	} CONF_VALUE;79,3512
DECLARE_STACK_OF(81,3528
typedef struct conf_method_st CONF_METHOD;86,3627
struct conf_method_st88,3671
	const char *name;name90,3696
	CONF *(*create)create91,3715
	int (*init)init92,3752
	int (*destroy)destroy93,3778
	int (*destroy_data)destroy_data94,3807
	int (*load_bio)load_bio95,3841
	int (*dump)dump96,3893
	int (*is_number)is_number97,3934
	int (*to_int)to_int98,3979
	int (*load)load99,4021
typedef struct conf_imodule_st CONF_IMODULE;104,4109
typedef struct conf_module_st CONF_MODULE;105,4154
DECLARE_STACK_OF(107,4198
typedef int conf_init_func(111,4295
typedef void conf_finish_func(112,4358
#define	CONF_MFLAGS_IGNORE_ERRORS	114,4408
#define CONF_MFLAGS_IGNORE_RETURN_CODES	115,4446
#define CONF_MFLAGS_SILENT	116,4490
#define CONF_MFLAGS_NO_DSO	117,4522
#define CONF_MFLAGS_IGNORE_MISSING_FILE	118,4554
#define CONF_MFLAGS_DEFAULT_SECTION	119,4599
LHASH_OF(123,4749
struct conf_st146,5731
	CONF_METHOD *meth;meth148,5749
	void *meth_data;meth_data149,5769
	LHASH_OF(150,5787
#define NCONF_get_number(178,6789
#define CONF_F_CONF_DUMP_FP	219,8307
#define CONF_F_CONF_LOAD	220,8343
#define CONF_F_CONF_LOAD_BIO	221,8376
#define CONF_F_CONF_LOAD_FP	222,8413
#define CONF_F_CONF_MODULES_LOAD	223,8449
#define CONF_F_CONF_PARSE_LIST	224,8489
#define CONF_F_DEF_LOAD	225,8528
#define CONF_F_DEF_LOAD_BIO	226,8561
#define CONF_F_MODULE_INIT	227,8597
#define CONF_F_MODULE_LOAD_DSO	228,8632
#define CONF_F_MODULE_RUN	229,8671
#define CONF_F_NCONF_DUMP_BIO	230,8705
#define CONF_F_NCONF_DUMP_FP	231,8743
#define CONF_F_NCONF_GET_NUMBER	232,8780
#define CONF_F_NCONF_GET_NUMBER_E	233,8820
#define CONF_F_NCONF_GET_SECTION	234,8861
#define CONF_F_NCONF_GET_STRING	235,8901
#define CONF_F_NCONF_LOAD	236,8941
#define CONF_F_NCONF_LOAD_BIO	237,8975
#define CONF_F_NCONF_LOAD_FP	238,9013
#define CONF_F_NCONF_NEW	239,9050
#define CONF_F_STR_COPY	240,9083
#define CONF_R_ERROR_LOADING_DSO	243,9137
#define CONF_R_LIST_CANNOT_BE_NULL	244,9177
#define CONF_R_MISSING_CLOSE_SQUARE_BRACKET	245,9219
#define CONF_R_MISSING_EQUAL_SIGN	246,9269
#define CONF_R_MISSING_FINISH_FUNCTION	247,9310
#define CONF_R_MISSING_INIT_FUNCTION	248,9356
#define CONF_R_MODULE_INITIALIZATION_ERROR	249,9400
#define CONF_R_NO_CLOSE_BRACE	250,9449
#define CONF_R_NO_CONF	251,9487
#define CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE	252,9519
#define CONF_R_NO_SECTION	253,9572
#define CONF_R_NO_SUCH_FILE	254,9606
#define CONF_R_NO_VALUE	255,9642
#define CONF_R_UNABLE_TO_CREATE_NEW_SECTION	256,9675
#define CONF_R_UNKNOWN_MODULE_NAME	257,9725
#define CONF_R_VARIABLE_HAS_NO_VALUE	258,9767

crypto/conf/conf_mod.c,1597
#define DSO_mod_init_name 68,2897
#define DSO_mod_finish_name 69,2938
struct conf_module_st77,3125
	DSO *dso;dso80,3194
	char *name;name82,3231
	conf_init_func *init;init84,3265
	conf_finish_func *finish;finish86,3312
	int links;88,3389
	void *usr_data;usr_data89,3401
struct conf_imodule_st98,3582
	CONF_MODULE *pmod;pmod100,3608
	char *name;name101,3628
	char *value;value102,3641
	unsigned long flags;103,3655
	void *usr_data;usr_data104,3677
static STACK_OF(107,3699
int CONF_modules_load_file(166,5184
static int module_run(206,5882
static CONF_MODULE *module_load_dso(module_load_dso245,6747
static CONF_MODULE *module_add(module_add291,7749
static CONF_MODULE *module_find(module_find323,8509
static int module_init(347,8912
void CONF_modules_unload(422,10346
static void module_free(446,10993
void CONF_modules_finish(456,11168
static void module_finish(470,11468
int CONF_module_add(482,11710
void CONF_modules_free(491,11883
const char *CONF_imodule_get_name(CONF_imodule_get_name499,11993
const char *CONF_imodule_get_value(CONF_imodule_get_value504,12076
void *CONF_imodule_get_usr_data(CONF_imodule_get_usr_data509,12161
void CONF_imodule_set_usr_data(514,12246
CONF_MODULE *CONF_imodule_get_module(CONF_imodule_get_module519,12344
unsigned long CONF_imodule_get_flags(524,12430
void CONF_imodule_set_flags(529,12517
void *CONF_module_get_usr_data(CONF_module_get_usr_data534,12611
void CONF_module_set_usr_data(539,12692
char *CONF_get1_default_config_file(CONF_get1_default_config_file546,12831
int CONF_parse_list(580,13581

crypto/conf/conf_err.c,221
#define ERR_FUNC(68,2978
#define ERR_REASON(69,3031
static ERR_STRING_DATA CONF_str_functs[CONF_str_functs71,3091
static ERR_STRING_DATA CONF_str_reasons[CONF_str_reasons98,4264
void ERR_load_CONF_strings(121,5419

crypto/idea/i_skey.c,148
void idea_set_encrypt_key(64,3317
void private_idea_set_encrypt_key(70,3484
void idea_set_decrypt_key(105,4273
static IDEA_INT inverse(135,4833

crypto/idea/idea_lcl.h,504
#define idea_mul(62,3369
#define idea_mul(73,3572
#define n2ln(95,4319
#define l2nn(111,4849
#undef n2l125,5368
#define n2l(126,5379
#undef l2n131,5629
#define l2n(132,5640
#undef s2n137,5919
#define s2n(138,5930
#undef n2s141,6041
#define n2s(142,6052
#define c2ln(147,6200
#define l2cn(163,6730
#undef c2s177,7249
#define c2s(178,7260
#undef s2c181,7358
#define s2c(182,7369
#undef c2l185,7480
#define c2l(186,7491
#undef l2c191,7676
#define l2c(192,7687
#define E_IDEA(198,7903

crypto/idea/i_ofb64.c,33
void idea_ofb64_encrypt(66,3433

crypto/idea/idea.h,245
#define HEADER_IDEA_H60,3217
#define IDEA_ENCRYPT	68,3362
#define IDEA_DECRYPT	69,3385
#define IDEA_BLOCK	71,3409
#define IDEA_KEY_LENGTH	72,3430
typedef struct idea_key_st78,3499
	IDEA_INT data[data80,3529
	} IDEA_KEY_SCHEDULE;81,3551

crypto/idea/i_cfb64.c,33
void idea_cfb64_encrypt(67,3434

crypto/idea/i_ecb.c,124
const char IDEA_version[IDEA_version63,3275
const char *idea_options(idea_options65,3332
void idea_ecb_encrypt(73,3464

crypto/idea/ideatest.c,638
int main(66,3304
unsigned char k[k74,3422
unsigned char in[in78,3530
unsigned char  c[c79,3593
unsigned char out[out80,3656
char *text=text82,3680
static unsigned char cfb_key[cfb_key84,3725
static unsigned char cfb_iv[cfb_iv88,3848
static unsigned char cfb_buf1[cfb_buf189,3923
static unsigned char cfb_buf1[40],cfb_buf2[cfb_buf289,3923
static unsigned char cfb_buf1[40],cfb_buf2[40],cfb_tmp[cfb_tmp89,3923
#define CFB_TEST_SIZE 90,3982
static unsigned char plain[plain91,4007
static unsigned char cfb_cipher64[cfb_cipher6498,4226
int main(110,4624
static int cfb64_test(179,5978
static char *pt(pt217,7359

crypto/idea/i_cbc.c,59
void idea_cbc_encrypt(62,3246
void idea_encrypt(136,4638

crypto/idea/idea_spd.c,432
#define TIMES63,3461
#undef TIMES89,4056
#define _POSIX_SOURCE97,4160
#define HZ	107,4361
#define HZ 109,4398
#define BUFSIZE	113,4442
long run=114,4471
#define SIGRETTYPE 119,4576
#define SIGRETTYPE 121,4606
SIGRETTYPE sig_done(125,4667
#define START	135,4774
#define STOP	136,4790
double Time_F(138,4806
int main(174,5359
#define COND(212,6179
#define COUNT(213,6210
#define COND(215,6237
#define COUNT(216,6259

crypto/LPdir_wince.c,29
#define LP_SYS_WINCE28,1483

crypto/o_time.c,690
#  define VMS_GMTIME_OK69,3047
struct tm *OPENSSL_gmtime(OPENSSL_gmtime81,3285
			short buflen;106,4142
			short code;107,4159
			void *bufaddr;bufaddr108,4174
			unsigned int *reslen;reslen109,4192
		struct vms_vectime177,6291
			short year,179,6317
			short year, month,179,6317
			short year, month, day,179,6317
			short year, month, day, hour,179,6317
			short year, month, day, hour, minute,179,6317
			short year, month, day, hour, minute, second,179,6317
				centi_second;180,6366
#define SECS_PER_DAY 233,7846
int OPENSSL_gmtime_adj(238,7994
static long date_to_julian(301,9463
static void julian_to_date(309,9676
int main(334,10263
int check_time(346,10474

crypto/o_str.c,94
int OPENSSL_strncasecmp(69,2981
int OPENSSL_strcasecmp(94,3534
int OPENSSL_memcmp(103,3742

crypto/rc5/rc5test.c,551
int main(69,3433
static unsigned char RC5key[RC5key77,3549
static unsigned char RC5plain[RC5plain90,4026
static unsigned char RC5cipher[RC5cipher98,4289
#define RC5_CBC_NUM 106,4553
static unsigned char rc5_cbc_cipher[rc5_cbc_cipher107,4576
static unsigned char rc5_cbc_key[rc5_cbc_key137,5823
static unsigned char rc5_cbc_plain[rc5_cbc_plain170,6747
static int rc5_cbc_rounds[rc5_cbc_rounds200,7993
static unsigned char rc5_cbc_iv[rc5_cbc_iv207,8128
int main(237,9371
static int cfb64_test(328,11421
static char *pt(pt366,12802

crypto/rc5/rc5.h,381
#define HEADER_RC5_H60,3214
#define RC5_ENCRYPT	72,3386
#define RC5_DECRYPT	73,3408
#define RC5_32_INT 76,3478
#define RC5_32_BLOCK	78,3512
#define RC5_32_KEY_LENGTH	79,3536
#define RC5_8_ROUNDS	86,3745
#define RC5_12_ROUNDS	87,3768
#define RC5_16_ROUNDS	88,3793
typedef struct rc5_key_st90,3819
	int rounds;93,3872
	RC5_32_INT data[data94,3885
	} RC5_32_KEY;95,3924

crypto/rc5/rc5cfb64.c,35
void RC5_32_cfb64_encrypt(67,3433

crypto/rc5/rc5_locl.h,718
#undef c2l61,3219
#define c2l(62,3230
#undef c2ln68,3459
#define c2ln(69,3471
#undef l2c84,3962
#define l2c(85,3973
#undef l2cn91,4227
#define l2cn(92,4239
#define n2ln(107,4811
#define l2nn(123,5341
#undef n2l137,5860
#define n2l(138,5871
#undef l2n143,6121
#define l2n(144,6132
#define ROTATE_l32(150,6483
#define ROTATE_r32(151,6523
#  define ROTATE_l32(154,6802
#  define ROTATE_r32(161,6985
#define ROTATE_l32(171,7202
#define ROTATE_r32(174,7308
#define RC5_32_MASK	177,7396
#define RC5_16_P	179,7429
#define RC5_16_Q	180,7453
#define RC5_32_P	181,7477
#define RC5_32_Q	182,7506
#define RC5_64_P	183,7535
#define RC5_64_Q	184,7573
#define E_RC5_32(186,7612
#define D_RC5_32(196,7765

crypto/rc5/rc5_skey.c,29
void RC5_32_set_key(62,3246

crypto/rc5/rc5_ecb.c,77
const char RC5_version[RC5_version63,3275
void RC5_32_ecb_encrypt(65,3330

crypto/rc5/rc5speed.c,432
#define TIMES63,3460
#undef TIMES89,4055
#define _POSIX_SOURCE97,4159
#define HZ	107,4359
#define HZ 109,4396
#define BUFSIZE	113,4440
long run=114,4469
#define SIGRETTYPE 119,4574
#define SIGRETTYPE 121,4604
SIGRETTYPE sig_done(125,4665
#define START	135,4772
#define STOP	136,4788
double Time_F(138,4804
int main(174,5357
#define COND(211,6156
#define COUNT(212,6187
#define COND(214,6214
#define COUNT(215,6236

crypto/rc5/rc5_enc.c,93
void RC5_32_cbc_encrypt(63,3264
void RC5_32_encrypt(138,4659
void RC5_32_decrypt(177,5348

crypto/rc5/rc5ofb64.c,35
void RC5_32_ofb64_encrypt(66,3432

crypto/pkcs7/pkcs7err.c,227
#define ERR_FUNC(68,2980
#define ERR_REASON(69,3034
static ERR_STRING_DATA PKCS7_str_functs[PKCS7_str_functs71,3095
static ERR_STRING_DATA PKCS7_str_reasons[PKCS7_str_reasons116,5587
void ERR_load_PKCS7_strings(177,9546

crypto/pkcs7/bio_ber.c,866
#define BER_BUF_SIZE	73,3684
typedef struct ber_struct76,3779
	int tag;78,3808
	long length;80,3830
	int inf;81,3844
	int num_left;82,3854
	int depth;83,3869
	} BER_CTX;84,3881
typedef struct bio_ber_struct86,3894
	int tag;88,3927
	long length;90,3949
	int inf;91,3963
	long num_left;95,4054
	int depth;96,4121
	int finished;97,4170
	char *w_addr;w_addr100,4227
	int w_offset;101,4242
	int w_left;102,4257
	int buf_len;104,4271
	int buf_off;105,4285
	unsigned char buf[buf106,4299
	} BIO_BER_CTX;107,4333
static BIO_METHOD methods_ber=109,4350
BIO_METHOD *BIO_f_ber(BIO_f_ber122,4537
static int ber_new(127,4595
static int ber_free(142,4843
int bio_ber_get_header(156,5069
static int ber_read(226,6355
static int ber_write(273,7134
static long ber_ctrl(328,8101
static long ber_callback_ctrl(414,9825
void BIO_set_cipher(448,10418

crypto/pkcs7/pk7_smime.c,383
PKCS7 *PKCS7_sign(PKCS7_sign68,2948
int PKCS7_final(115,3814
static int add_cipher_smcap(147,4324
static int add_digest_smcap(154,4491
PKCS7_SIGNER_INFO *PKCS7_sign_add_signer(PKCS7_sign_add_signer161,4658
static int pkcs7_copy_existing_digest(235,6626
int PKCS7_verify(266,7394
STACK_OF(430,11418
PKCS7 *PKCS7_encrypt(PKCS7_encrypt492,12982
int PKCS7_decrypt(534,13776

crypto/pkcs7/pk7_mime.c,155
int i2d_PKCS7_bio_stream(64,2765
int PEM_write_bio_PKCS7_stream(70,2929
int SMIME_write_PKCS7(77,3122
PKCS7 *SMIME_read_PKCS7(SMIME_read_PKCS794,3510

crypto/pkcs7/pkcs7.h,8565
#define HEADER_PKCS7_H60,3220
#undef PKCS7_ISSUER_AND_SERIAL75,3499
#undef PKCS7_SIGNER_INFO76,3530
typedef struct pkcs7_issuer_and_serial_st86,3675
	X509_NAME *issuer;issuer88,3720
	ASN1_INTEGER *serial;serial89,3740
	} PKCS7_ISSUER_AND_SERIAL;90,3763
typedef struct pkcs7_signer_info_st92,3792
	ASN1_INTEGER 			*version;version94,3831
	PKCS7_ISSUER_AND_SERIAL		*issuer_and_serial;issuer_and_serial95,3874
	X509_ALGOR			*digest_alg;digest_alg96,3920
	STACK_OF(97,3947
	} PKCS7_SIGNER_INFO;104,4169
DECLARE_STACK_OF(106,4192
typedef struct pkcs7_recip_info_st109,4268
	ASN1_INTEGER			*version;version111,4306
	PKCS7_ISSUER_AND_SERIAL		*issuer_and_serial;issuer_and_serial112,4348
	X509_ALGOR			*key_enc_algor;key_enc_algor113,4394
	ASN1_OCTET_STRING		*enc_key;enc_key114,4424
	X509				*cert;cert115,4454
	} PKCS7_RECIP_INFO;116,4502
DECLARE_STACK_OF(118,4524
typedef struct pkcs7_signed_st121,4598
	ASN1_INTEGER			*version;version123,4632
	STACK_OF(124,4674
	} PKCS7_SIGNED;130,4873
typedef struct pkcs7_enc_content_st134,4991
	ASN1_OBJECT			*content_type;content_type136,5030
	X509_ALGOR			*algorithm;algorithm137,5060
	ASN1_OCTET_STRING		*enc_data;enc_data138,5086
	const EVP_CIPHER		*cipher;cipher139,5129
	} PKCS7_ENC_CONTENT;140,5157
typedef struct pkcs7_enveloped_st142,5180
	ASN1_INTEGER			*version;version144,5217
	STACK_OF(145,5259
	} PKCS7_ENVELOPE;147,5334
typedef struct pkcs7_signedandenveloped_st149,5354
	ASN1_INTEGER			*version;version151,5400
	STACK_OF(152,5442
	} PKCS7_SIGN_ENVELOPE;159,5686
typedef struct pkcs7_digest_st161,5711
	ASN1_INTEGER			*version;version163,5745
	X509_ALGOR			*md;md164,5787
	struct pkcs7_st 		*contents;contents165,5821
	ASN1_OCTET_STRING		*digest;digest166,5851
	} PKCS7_DIGEST;167,5880
typedef struct pkcs7_encrypted_st169,5898
	ASN1_INTEGER			*version;version171,5935
	PKCS7_ENC_CONTENT		*enc_data;enc_data172,5977
	} PKCS7_ENCRYPT;173,6008
typedef struct pkcs7_st175,6027
	unsigned char *asn1;asn1179,6138
	long length;180,6160
#define PKCS7_S_HEADER	182,6175
#define PKCS7_S_BODY	183,6200
#define PKCS7_S_TAIL	184,6223
	int state;185,6246
	int detached;187,6288
	ASN1_OBJECT *type;type189,6304
		char *ptr;ptr194,6474
		ASN1_OCTET_STRING *data;data197,6511
		PKCS7_SIGNED *sign;sign200,6564
		PKCS7_ENVELOPE *enveloped;enveloped203,6615
		PKCS7_SIGN_ENVELOPE *signed_and_enveloped;signed_and_enveloped206,6682
		PKCS7_DIGEST *digest;digest209,6753
		PKCS7_ENCRYPT *encrypted;encrypted212,6806
		ASN1_TYPE *other;other215,6857
		} d;216,6877
	} PKCS7;217,6884
DECLARE_STACK_OF(219,6895
#define PKCS7_OP_SET_DETACHED_SIGNATURE	223,6978
#define PKCS7_OP_GET_DETACHED_SIGNATURE	224,7020
#define PKCS7_get_signed_attributes(226,7063
#define PKCS7_get_attributes(227,7121
#define PKCS7_type_is_signed(229,7175
#define PKCS7_type_is_encrypted(230,7252
#define PKCS7_type_is_enveloped(231,7335
#define PKCS7_type_is_signedAndEnveloped(232,7418
#define PKCS7_type_is_data(234,7523
#define PKCS7_type_is_digest(235,7598
#define PKCS7_type_is_encrypted(236,7677
#define PKCS7_type_is_digest(239,7765
#define PKCS7_set_detached(241,7845
#define PKCS7_get_detached(243,7934
#define PKCS7_is_detached(246,8022
#define PKCS7_TEXT	250,8134
#define PKCS7_NOCERTS	251,8158
#define PKCS7_NOSIGS	252,8185
#define PKCS7_NOCHAIN	253,8211
#define PKCS7_NOINTERN	254,8238
#define PKCS7_NOVERIFY	255,8267
#define PKCS7_DETACHED	256,8296
#define PKCS7_BINARY	257,8325
#define PKCS7_NOATTR	258,8352
#define	PKCS7_NOSMIMECAP	259,8380
#define PKCS7_NOOLDMIMETYPE	260,8411
#define PKCS7_CRLFEOL	261,8445
#define PKCS7_STREAM	262,8474
#define PKCS7_NOCRL	263,8503
#define PKCS7_PARTIAL	264,8531
#define PKCS7_REUSE_DIGEST	265,8561
#define SMIME_TEXT	269,8644
#define SMIME_NOCERTS	270,8674
#define SMIME_NOSIGS	271,8710
#define SMIME_NOCHAIN	272,8744
#define SMIME_NOINTERN	273,8780
#define SMIME_NOVERIFY	274,8818
#define SMIME_DETACHED	275,8856
#define SMIME_BINARY	276,8894
#define SMIME_NOATTR	277,8928
#define PKCS7_F_B64_READ_PKCS7	399,13891
#define PKCS7_F_B64_WRITE_PKCS7	400,13930
#define PKCS7_F_DO_PKCS7_SIGNED_ATTRIB	401,13970
#define PKCS7_F_I2D_PKCS7_BIO_STREAM	402,14016
#define PKCS7_F_PKCS7_ADD0_ATTRIB_SIGNING_TIME	403,14060
#define PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP	404,14113
#define PKCS7_F_PKCS7_ADD_CERTIFICATE	405,14161
#define PKCS7_F_PKCS7_ADD_CRL	406,14206
#define PKCS7_F_PKCS7_ADD_RECIPIENT_INFO	407,14244
#define PKCS7_F_PKCS7_ADD_SIGNATURE	408,14291
#define PKCS7_F_PKCS7_ADD_SIGNER	409,14334
#define PKCS7_F_PKCS7_BIO_ADD_DIGEST	410,14374
#define PKCS7_F_PKCS7_COPY_EXISTING_DIGEST	411,14418
#define PKCS7_F_PKCS7_CTRL	412,14467
#define PKCS7_F_PKCS7_DATADECODE	413,14502
#define PKCS7_F_PKCS7_DATAFINAL	414,14542
#define PKCS7_F_PKCS7_DATAINIT	415,14582
#define PKCS7_F_PKCS7_DATASIGN	416,14621
#define PKCS7_F_PKCS7_DATAVERIFY	417,14660
#define PKCS7_F_PKCS7_DECRYPT	418,14700
#define PKCS7_F_PKCS7_DECRYPT_RINFO	419,14738
#define PKCS7_F_PKCS7_ENCODE_RINFO	420,14781
#define PKCS7_F_PKCS7_ENCRYPT	421,14823
#define PKCS7_F_PKCS7_FINAL	422,14861
#define PKCS7_F_PKCS7_FIND_DIGEST	423,14897
#define PKCS7_F_PKCS7_GET0_SIGNERS	424,14938
#define PKCS7_F_PKCS7_RECIP_INFO_SET	425,14980
#define PKCS7_F_PKCS7_SET_CIPHER	426,15024
#define PKCS7_F_PKCS7_SET_CONTENT	427,15064
#define PKCS7_F_PKCS7_SET_DIGEST	428,15105
#define PKCS7_F_PKCS7_SET_TYPE	429,15145
#define PKCS7_F_PKCS7_SIGN	430,15184
#define PKCS7_F_PKCS7_SIGNATUREVERIFY	431,15219
#define PKCS7_F_PKCS7_SIGNER_INFO_SET	432,15264
#define PKCS7_F_PKCS7_SIGNER_INFO_SIGN	433,15309
#define PKCS7_F_PKCS7_SIGN_ADD_SIGNER	434,15355
#define PKCS7_F_PKCS7_SIMPLE_SMIMECAP	435,15400
#define PKCS7_F_PKCS7_VERIFY	436,15445
#define PKCS7_F_SMIME_READ_PKCS7	437,15482
#define PKCS7_F_SMIME_TEXT	438,15522
#define PKCS7_R_CERTIFICATE_VERIFY_ERROR	441,15578
#define PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER	442,15625
#define PKCS7_R_CIPHER_NOT_INITIALIZED	443,15679
#define PKCS7_R_CONTENT_AND_DATA_PRESENT	444,15725
#define PKCS7_R_CTRL_ERROR	445,15772
#define PKCS7_R_DECODE_ERROR	446,15807
#define PKCS7_R_DECRYPTED_KEY_IS_WRONG_LENGTH	447,15844
#define PKCS7_R_DECRYPT_ERROR	448,15896
#define PKCS7_R_DIGEST_FAILURE	449,15934
#define PKCS7_R_ENCRYPTION_CTRL_FAILURE	450,15973
#define PKCS7_R_ENCRYPTION_NOT_SUPPORTED_FOR_THIS_KEY_TYPE 451,16020
#define PKCS7_R_ERROR_ADDING_RECIPIENT	452,16083
#define PKCS7_R_ERROR_SETTING_CIPHER	453,16129
#define PKCS7_R_INVALID_MIME_TYPE	454,16173
#define PKCS7_R_INVALID_NULL_POINTER	455,16214
#define PKCS7_R_MIME_NO_CONTENT_TYPE	456,16258
#define PKCS7_R_MIME_PARSE_ERROR	457,16302
#define PKCS7_R_MIME_SIG_PARSE_ERROR	458,16342
#define PKCS7_R_MISSING_CERIPEND_INFO	459,16386
#define PKCS7_R_NO_CONTENT	460,16431
#define PKCS7_R_NO_CONTENT_TYPE	461,16466
#define PKCS7_R_NO_DEFAULT_DIGEST	462,16506
#define PKCS7_R_NO_MATCHING_DIGEST_TYPE_FOUND	463,16547
#define PKCS7_R_NO_MULTIPART_BODY_FAILURE	464,16599
#define PKCS7_R_NO_MULTIPART_BOUNDARY	465,16647
#define PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE	466,16692
#define PKCS7_R_NO_RECIPIENT_MATCHES_KEY	467,16746
#define PKCS7_R_NO_SIGNATURES_ON_DATA	468,16793
#define PKCS7_R_NO_SIGNERS	469,16838
#define PKCS7_R_NO_SIG_CONTENT_TYPE	470,16873
#define PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE	471,16916
#define PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR	472,16974
#define PKCS7_R_PKCS7_ADD_SIGNER_ERROR	473,17022
#define PKCS7_R_PKCS7_DATAFINAL	474,17068
#define PKCS7_R_PKCS7_DATAFINAL_ERROR	475,17108
#define PKCS7_R_PKCS7_DATASIGN	476,17153
#define PKCS7_R_PKCS7_PARSE_ERROR	477,17192
#define PKCS7_R_PKCS7_SIG_PARSE_ERROR	478,17233
#define PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE	479,17278
#define PKCS7_R_SIGNATURE_FAILURE	480,17338
#define PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND	481,17379
#define PKCS7_R_SIGNING_CTRL_FAILURE	482,17430
#define PKCS7_R_SIGNING_NOT_SUPPORTED_FOR_THIS_KEY_TYPE	483,17474
#define PKCS7_R_SIG_INVALID_MIME_TYPE	484,17535
#define PKCS7_R_SMIME_TEXT_ERROR	485,17580
#define PKCS7_R_UNABLE_TO_FIND_CERTIFICATE	486,17620
#define PKCS7_R_UNABLE_TO_FIND_MEM_BIO	487,17669
#define PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST	488,17715
#define PKCS7_R_UNKNOWN_DIGEST_TYPE	489,17767
#define PKCS7_R_UNKNOWN_OPERATION	490,17810
#define PKCS7_R_UNSUPPORTED_CIPHER_TYPE	491,17851
#define PKCS7_R_UNSUPPORTED_CONTENT_TYPE	492,17898
#define PKCS7_R_WRONG_CONTENT_TYPE	493,17945
#define PKCS7_R_WRONG_PKCS7_TYPE	494,17987

crypto/pkcs7/pk7_lib.c,771
long PKCS7_ctrl(65,3319
int PKCS7_content_new(115,4293
int PKCS7_set_content(129,4554
int PKCS7_set_type(159,5182
int PKCS7_set0_type_other(229,6886
int PKCS7_add_signer(236,7022
int PKCS7_add_certificate(295,8305
int PKCS7_add_crl(330,8959
int PKCS7_SIGNER_INFO_set(366,9607
PKCS7_SIGNER_INFO *PKCS7_add_signature(PKCS7_add_signature413,10812
int PKCS7_set_digest(442,11452
STACK_OF(460,11888
void PKCS7_SIGNER_INFO_get0_algs(474,12160
void PKCS7_RECIP_INFO_get0_alg(485,12386
PKCS7_RECIP_INFO *PKCS7_add_recipient(PKCS7_add_recipient491,12505
int PKCS7_add_recipient_info(505,12814
int PKCS7_RECIP_INFO_set(529,13299
X509 *PKCS7_cert_from_signer_info(PKCS7_cert_from_signer_info581,14396
int PKCS7_set_cipher(591,14652
int PKCS7_stream(621,15270

crypto/pkcs7/pk7_attr.c,220
int PKCS7_add_attrib_smimecap(69,2961
STACK_OF(82,3374
int PKCS7_simple_smimecap(97,3824
int PKCS7_add_attrib_content_type(128,4631
int PKCS7_add0_attrib_signing_time(138,4924
int PKCS7_add1_attrib_digest(150,5230

crypto/pkcs7/example.c,561
int add_signed_time(8,143
ASN1_UTCTIME *get_signed_time(get_signed_time20,454
static int signed_string_nid=30,668
void add_signed_string(32,703
int get_signed_string(47,1177
static int signed_seq2string_nid=73,1689
int add_signed_seq2string(75,1777
int get_signed_seq2string(115,2917
X509_ATTRIBUTE *create_time(create_time167,4191
ASN1_UTCTIME *sk_get_time(sk_get_time180,4513
X509_ATTRIBUTE *create_string(create_string192,4772
int sk_get_string(209,5262
X509_ATTRIBUTE *add_seq2string(add_seq2string238,5820
int sk_get_seq2string(279,6985

crypto/pkcs7/verify.c,108
BIO *bio_err=bio_err69,3436
BIO *bio_out=bio_out70,3455
int main(72,3475
int verify_callback(215,6462

crypto/pkcs7/pk7_doit.c,1372
static int PKCS7_type_is_other(71,3545
static ASN1_OCTET_STRING *PKCS7_get_octet_string(PKCS7_get_octet_string95,3892
static int PKCS7_bio_add_digest(105,4160
static int pkcs7_encode_rinfo(141,4763
static int pkcs7_decrypt_rinfo(200,5790
BIO *PKCS7_dataInit(PKCS7_dataInit263,6922
static int pkcs7_cmp_ri(408,10260
BIO *PKCS7_dataDecode(PKCS7_dataDecode420,10549
static BIO *PKCS7_find_digest(PKCS7_find_digest680,16679
static int do_pkcs7_signed_attrib(703,17154
int PKCS7_dataFinal(739,17943
int PKCS7_SIGNER_INFO_sign(900,21713
int PKCS7_dataVerify(960,22991
int PKCS7_signatureVerify(1014,24188
			ret=1098,26329
			goto err;1099,26341
		alen 1105,26445
	os=1119,26736
	pkey 1120,26756
	i=1127,26832
		ret=1137,27036
	EVP_MD_CTX_cleanup(&mdc_tmp)mdc_tmp1139,27050
PKCS7_ISSUER_AND_SERIAL *PKCS7_get_issuer_and_serial(PKCS7_get_issuer_and_serial1143,27099
ASN1_TYPE *PKCS7_get_signed_attribute(PKCS7_get_signed_attribute1163,27629
ASN1_TYPE *PKCS7_get_attribute(PKCS7_get_attribute1168,27749
static ASN1_TYPE *get_attribute(get_attribute1173,27864
ASN1_OCTET_STRING *PKCS7_digest_from_attributes(PKCS7_digest_from_attributes1195,28318
int PKCS7_set_signed_attributes(1202,28530
int PKCS7_set_attributes(1222,29017
int PKCS7_add_signed_attribute(1242,29533
int PKCS7_add_attribute(1248,29699
static int add_attribute(1254,29860

crypto/pkcs7/pk7_asn1.c,396
static int pk7_cb(81,3689
}ASN1_NDEF_SEQUENCE_END_cb(ASN1_NDEF_SEQUENCE_END_cb112,4341
} ASN1_NDEF_SEQUENCE_END(125,4838
} ASN1_SEQUENCE_END_cb(153,5927
} ASN1_SEQUENCE_END(160,6195
} ASN1_NDEF_SEQUENCE_END(168,6505
} ASN1_SEQUENCE_END_cb(188,7154
} ASN1_NDEF_SEQUENCE_END(196,7486
} ASN1_NDEF_SEQUENCE_END(208,8051
} ASN1_NDEF_SEQUENCE_END(215,8292
} ASN1_NDEF_SEQUENCE_END(224,8605

crypto/pkcs7/bio_pk7.c,42
BIO *BIO_new_PKCS7(BIO_new_PKCS766,2755

crypto/pkcs7/enc.c,18
int main(65,3335

crypto/pkcs7/dec.c,78
BIO *bio_err=bio_err69,3435
int main(71,3455
int verify_callback(200,6326

crypto/pkcs7/sign.c,18
int main(65,3336

crypto/dso/dso_win32.c,1718
DSO_METHOD *DSO_METHOD_win32(DSO_METHOD_win3265,2880
static FARPROC GetProcAddressA(73,2982
# undef GetProcAddress86,3266
# define GetProcAddress 87,3289
static HINSTANCE LoadLibraryA(89,3330
#define DSO_MAX_TRANSLATED_SIZE 115,3914
static DSO_METHOD dso_meth_win32 136,4778
DSO_METHOD *DSO_METHOD_win32(DSO_METHOD_win32156,5158
static int win32_load(166,5380
static int win32_unload(210,6258
static void *win32_bind_var(win32_bind_var241,6960
static DSO_FUNC_TYPE win32_bind_func(272,7647
struct file_st303,8362
	const char *node;node305,8380
	const char *node; int nodelen;305,8380
	const char *device;device306,8412
	const char *device; int devicelen;306,8412
	const char *predir;predir307,8448
	const char *predir; int predirlen;307,8448
	const char *dir;dir308,8484
	const char *dir; int dirlen;308,8484
	const char *file;file309,8514
	const char *file; int filelen;309,8514
static struct file_st *win32_splitter(win32_splitter312,8551
	enum { IN_NODE,316,8681
	enum { IN_NODE, IN_DEVICE,316,8681
	enum { IN_NODE, IN_DEVICE, IN_FILE 316,8681
static char *win32_joiner(win32_joiner434,10901
static char *win32_merger(win32_merger546,13755
static char *win32_name_converter(win32_name_converter630,15790
static const char *openssl_strnchr(openssl_strnchr658,16487
# define DLLNAME 672,16735
# undef MODULEENTRY32	675,16795
# define DLLNAME 677,16857
typedef HANDLE (WINAPI *CREATETOOLHELP32SNAPSHOT)CREATETOOLHELP32SNAPSHOT680,16897
typedef BOOL (WINAPI *CLOSETOOLHELP32SNAPSHOT)CLOSETOOLHELP32SNAPSHOT681,16962
typedef BOOL (WINAPI *MODULE32)MODULE32682,17018
static int win32_pathbyaddr(684,17077
static void *win32_globallookup(win32_globallookup779,19324

crypto/dso/dso_beos.c,372
DSO_METHOD *DSO_METHOD_beos(DSO_METHOD_beos65,2852
static DSO_METHOD dso_meth_beos 86,3487
DSO_METHOD *DSO_METHOD_beos(DSO_METHOD_beos103,3806
static int beos_load(113,4013
static int beos_unload(148,4690
static void *beos_bind_var(beos_bind_var175,5234
static DSO_FUNC_TYPE beos_bind_func(205,5916
static char *beos_name_converter(beos_name_converter236,6673

crypto/dso/dso_openssl.c,59
DSO_METHOD *DSO_METHOD_openssl(DSO_METHOD_openssl65,2872

crypto/dso/dso_lib.c,924
static DSO_METHOD *default_DSO_meth default_DSO_meth64,2862
DSO *DSO_new(DSO_new66,2907
void DSO_set_default_method(71,2964
DSO_METHOD *DSO_get_default_method(DSO_get_default_method76,3043
DSO_METHOD *DSO_get_method(DSO_get_method81,3118
DSO_METHOD *DSO_set_method(DSO_set_method86,3182
DSO *DSO_new_method(DSO_new_method94,3316
int DSO_free(131,4205
int DSO_flags(176,5036
int DSO_up_ref(182,5109
DSO *DSO_load(DSO_load194,5298
void *DSO_bind_var(DSO_bind_var255,6538
DSO_FUNC_TYPE DSO_bind_func(278,7006
long DSO_ctrl(309,8013
int DSO_set_name_converter(340,8715
const char *DSO_get_filename(DSO_get_filename355,9015
int DSO_set_filename(365,9188
char *DSO_merge(DSO_merge393,9811
char *DSO_convert_filename(DSO_convert_filename413,10294
const char *DSO_get_loaded_filename(DSO_get_loaded_filename450,11156
int DSO_pathbyaddr(461,11355
void *DSO_global_lookup(DSO_global_lookup473,11642

crypto/dso/dso_null.c,94
static DSO_METHOD dso_meth_null 66,2925
DSO_METHOD *DSO_METHOD_null(DSO_METHOD_null86,3342

crypto/dso/dso.h,3868
#define HEADER_DSO_H60,2784
#define DSO_CTRL_GET_FLAGS	69,2929
#define DSO_CTRL_SET_FLAGS	70,2958
#define DSO_CTRL_OR_FLAGS	71,2987
#define DSO_FLAG_NO_NAME_TRANSLATION	84,3809
#define DSO_FLAG_NAME_TRANSLATION_EXT_ONLY	91,4211
#define DSO_FLAG_UPCASE_SYMBOL	96,4400
#define DSO_FLAG_GLOBAL_SYMBOLS	103,4645
typedef void (*DSO_FUNC_TYPE)DSO_FUNC_TYPE106,4686
typedef struct dso_st DSO;108,4724
typedef char* (*DSO_NAME_CONVERTER_FUNC)DSO_NAME_CONVERTER_FUNC116,5200
typedef char* (*DSO_MERGER_FUNC)DSO_MERGER_FUNC132,6240
typedef struct dso_meth_st134,6310
	const char *name;name136,6340
	int (*dso_load)dso_load140,6555
	int (*dso_unload)dso_unload142,6615
	void *(*dso_bind_var)dso_bind_var144,6669
	DSO_FUNC_TYPE (*dso_bind_func)dso_bind_func151,7085
	int (*dso_unbind_var)dso_unbind_var156,7252
	int (*dso_unbind_func)dso_unbind_func158,7341
	long (*dso_ctrl)dso_ctrl162,7532
	DSO_NAME_CONVERTER_FUNC dso_name_converter;165,7698
	DSO_MERGER_FUNC dso_merger;168,7848
	int (*init)init171,7914
	int (*finish)finish172,7938
	int (*pathbyaddr)pathbyaddr175,8022
	void *(*globallookup)globallookup177,8134
	} DSO_METHOD;178,8179
struct dso_st183,8342
	DSO_METHOD *meth;meth185,8359
	STACK_OF(191,8636
#define DSO_F_BEOS_BIND_FUNC	337,15618
#define DSO_F_BEOS_BIND_VAR	338,15655
#define DSO_F_BEOS_LOAD	339,15691
#define DSO_F_BEOS_NAME_CONVERTER	340,15724
#define DSO_F_BEOS_UNLOAD	341,15765
#define DSO_F_DLFCN_BIND_FUNC	342,15799
#define DSO_F_DLFCN_BIND_VAR	343,15837
#define DSO_F_DLFCN_LOAD	344,15874
#define DSO_F_DLFCN_MERGER	345,15907
#define DSO_F_DLFCN_NAME_CONVERTER	346,15942
#define DSO_F_DLFCN_UNLOAD	347,15984
#define DSO_F_DL_BIND_FUNC	348,16019
#define DSO_F_DL_BIND_VAR	349,16054
#define DSO_F_DL_LOAD	350,16088
#define DSO_F_DL_MERGER	351,16119
#define DSO_F_DL_NAME_CONVERTER	352,16152
#define DSO_F_DL_UNLOAD	353,16192
#define DSO_F_DSO_BIND_FUNC	354,16225
#define DSO_F_DSO_BIND_VAR	355,16261
#define DSO_F_DSO_CONVERT_FILENAME	356,16296
#define DSO_F_DSO_CTRL	357,16338
#define DSO_F_DSO_FREE	358,16370
#define DSO_F_DSO_GET_FILENAME	359,16402
#define DSO_F_DSO_GET_LOADED_FILENAME	360,16441
#define DSO_F_DSO_GLOBAL_LOOKUP	361,16486
#define DSO_F_DSO_LOAD	362,16526
#define DSO_F_DSO_MERGE	363,16558
#define DSO_F_DSO_NEW_METHOD	364,16591
#define DSO_F_DSO_PATHBYADDR	365,16628
#define DSO_F_DSO_SET_FILENAME	366,16665
#define DSO_F_DSO_SET_NAME_CONVERTER	367,16704
#define DSO_F_DSO_UP_REF	368,16748
#define DSO_F_GLOBAL_LOOKUP_FUNC	369,16781
#define DSO_F_PATHBYADDR	370,16821
#define DSO_F_VMS_BIND_SYM	371,16854
#define DSO_F_VMS_LOAD	372,16889
#define DSO_F_VMS_MERGER	373,16921
#define DSO_F_VMS_UNLOAD	374,16954
#define DSO_F_WIN32_BIND_FUNC	375,16987
#define DSO_F_WIN32_BIND_VAR	376,17025
#define DSO_F_WIN32_GLOBALLOOKUP	377,17062
#define DSO_F_WIN32_GLOBALLOOKUP_FUNC	378,17102
#define DSO_F_WIN32_JOINER	379,17147
#define DSO_F_WIN32_LOAD	380,17182
#define DSO_F_WIN32_MERGER	381,17215
#define DSO_F_WIN32_NAME_CONVERTER	382,17250
#define DSO_F_WIN32_PATHBYADDR	383,17292
#define DSO_F_WIN32_SPLITTER	384,17331
#define DSO_F_WIN32_UNLOAD	385,17368
#define DSO_R_CTRL_FAILED	388,17424
#define DSO_R_DSO_ALREADY_LOADED	389,17458
#define DSO_R_EMPTY_FILE_STRUCTURE	390,17498
#define DSO_R_FAILURE	391,17540
#define DSO_R_FILENAME_TOO_BIG	392,17571
#define DSO_R_FINISH_FAILED	393,17610
#define DSO_R_INCORRECT_FILE_SYNTAX	394,17646
#define DSO_R_LOAD_FAILED	395,17689
#define DSO_R_NAME_TRANSLATION_FAILED	396,17723
#define DSO_R_NO_FILENAME	397,17768
#define DSO_R_NO_FILE_SPECIFICATION	398,17802
#define DSO_R_NULL_HANDLE	399,17845
#define DSO_R_SET_FILENAME_FAILED	400,17879
#define DSO_R_STACK_ERROR	401,17920
#define DSO_R_SYM_FAILURE	402,17954
#define DSO_R_UNLOAD_FAILED	403,17988
#define DSO_R_UNSUPPORTED	404,18024

crypto/dso/dso_dl.c,620
DSO_METHOD *DSO_METHOD_dl(DSO_METHOD_dl64,2849
#define DSO_MAX_TRANSLATED_SIZE 73,2983
static DSO_METHOD dso_meth_dl 91,3730
DSO_METHOD *DSO_METHOD_dl(DSO_METHOD_dl111,4080
static int dl_load(122,4343
static int dl_unload(162,5408
static void *dl_bind_var(dl_bind_var186,5894
static DSO_FUNC_TYPE dl_bind_func(217,6579
static char *dl_merger(dl_merger248,7292
static const char extension[extension320,9258
static const char extension[extension322,9303
static char *dl_name_converter(dl_name_converter324,9349
static int dl_pathbyaddr(357,10210
static void *dl_globallookup(dl_globallookup386,10787

crypto/dso/dso_dlfcn.c,1529
#  define _GNU_SOURCE	65,3034
DSO_METHOD *DSO_METHOD_dlfcn(DSO_METHOD_dlfcn74,3192
#  define __EXTENSIONS__82,3290
# define HAVE_DLINFO 85,3343
#  undef HAVE_DLINFO91,3603
#define DSO_MAX_TRANSLATED_SIZE 96,3683
static DSO_METHOD dso_meth_dlfcn 114,4390
DSO_METHOD *DSO_METHOD_dlfcn(DSO_METHOD_dlfcn134,4770
#		define DLOPEN_FLAG 147,5295
#			define DLOPEN_FLAG 150,5350
#			define DLOPEN_FLAG 152,5390
#		define DLOPEN_FLAG 157,5464
#		define DLOPEN_FLAG 159,5495
static int dlfcn_load(167,5693
static int dlfcn_unload(208,6523
static void *dlfcn_bind_var(dlfcn_bind_var232,7052
static DSO_FUNC_TYPE dlfcn_bind_func(262,7731
		DSO_FUNC_TYPE sym;266,7823
		void *dlret;dlret267,7844
static char *dlfcn_merger(dlfcn_merger296,8477
#define DSO_ext	363,10111
#define DSO_extlen 364,10136
#define DSO_ext	366,10163
#define DSO_extlen 367,10185
static char *dlfcn_name_converter(dlfcn_name_converter371,10215
#define _RLD_INTERFACE_DLFCN_H_DLADDR421,11766
typedef struct Dl_info 422,11804
    const char * dli_fname;423,11829
    void       * dli_fbase;424,11857
    const char * dli_sname;425,11885
    void       * dli_saddr;426,11913
    int          dli_version;427,11941
    int          dli_reserved1;428,11971
    long         dli_reserved[dli_reserved429,12003
} Dl_info;430,12037
typedef struct Dl_info Dl_info;432,12054
#define _RLD_DLADDR 434,12093
static int dladdr(436,12129
static int dlfcn_pathbyaddr(444,12274
static void *dlfcn_globallookup(dlfcn_globallookup472,12769

crypto/dso/dso_vms.c,947
DSO_METHOD *DSO_METHOD_vms(DSO_METHOD_vms86,3469
static DSO_METHOD dso_meth_vms 108,4181
typedef struct dso_internal_st131,4819
	struct dsc$descriptor_s filename_dsc;135,4947
	char filename[filename136,4986
	struct dsc$descriptor_s imagename_dsc;139,5106
	char imagename[imagename140,5146
	} DSO_VMS_INTERNAL;141,5180
DSO_METHOD *DSO_METHOD_vms(DSO_METHOD_vms143,5202
static int vms_load(148,5266
# define DSO_MALLOC 156,5518
# define DSO_MALLOC 160,5641
static int vms_unload(266,8619
static int do_find_symbol(289,9131
void vms_bind_sym(308,9708
# define SYMNAME 322,10121
# define SYMNAME 329,10328
static void *vms_bind_var(vms_bind_var407,12201
static DSO_FUNC_TYPE vms_bind_func(414,12329
static char *vms_merger(vms_merger422,12484
# define FILESPEC1 433,12800
# define FILESPEC2 434,12834
# define FILESPEC1 443,13109
# define FILESPEC2 444,13149
static char *vms_name_converter(vms_name_converter517,15068

crypto/dso/dso_err.c,217
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA DSO_str_functs[DSO_str_functs71,3086
static ERR_STRING_DATA DSO_str_reasons[DSO_str_reasons125,5636
void ERR_load_DSO_strings(149,6916

crypto/symhacks.h,16911
#define HEADER_SYMHACKS_H56,2656
#undef CRYPTO_get_ex_data_implementation71,3258
#define CRYPTO_get_ex_data_implementation	72,3299
#undef CRYPTO_set_ex_data_implementation73,3365
#define CRYPTO_set_ex_data_implementation	74,3406
#undef ASN1_STRING_set_default_mask_asc77,3521
#define ASN1_STRING_set_default_mask_asc	78,3561
#undef i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO82,3776
#define i2d_ASN1_SET_OF_PKCS7_SIGNER_INFO	83,3817
#undef d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO84,3888
#define d2i_ASN1_SET_OF_PKCS7_SIGNER_INFO	85,3929
#undef i2d_ASN1_SET_OF_PKCS7_RECIP_INFO90,4151
#define i2d_ASN1_SET_OF_PKCS7_RECIP_INFO	91,4191
#undef d2i_ASN1_SET_OF_PKCS7_RECIP_INFO92,4261
#define d2i_ASN1_SET_OF_PKCS7_RECIP_INFO	93,4301
#undef i2d_ASN1_SET_OF_ACCESS_DESCRIPTION98,4524
#define i2d_ASN1_SET_OF_ACCESS_DESCRIPTION	99,4566
#undef d2i_ASN1_SET_OF_ACCESS_DESCRIPTION100,4634
#define d2i_ASN1_SET_OF_ACCESS_DESCRIPTION	101,4676
#undef PEM_read_NETSCAPE_CERT_SEQUENCE105,4825
#define PEM_read_NETSCAPE_CERT_SEQUENCE	106,4864
#undef PEM_write_NETSCAPE_CERT_SEQUENCE107,4926
#define PEM_write_NETSCAPE_CERT_SEQUENCE	108,4966
#undef PEM_read_bio_NETSCAPE_CERT_SEQUENCE109,5029
#define PEM_read_bio_NETSCAPE_CERT_SEQUENCE	110,5072
#undef PEM_write_bio_NETSCAPE_CERT_SEQUENCE111,5141
#define PEM_write_bio_NETSCAPE_CERT_SEQUENCE	112,5185
#undef PEM_write_cb_bio_NETSCAPE_CERT_SEQUENCE113,5256
#define PEM_write_cb_bio_NETSCAPE_CERT_SEQUENCE	114,5303
#undef PEM_read_PKCS8_PRIV_KEY_INFO117,5451
#define PEM_read_PKCS8_PRIV_KEY_INFO	118,5487
#undef PEM_write_PKCS8_PRIV_KEY_INFO119,5551
#define PEM_write_PKCS8_PRIV_KEY_INFO	120,5588
#undef PEM_read_bio_PKCS8_PRIV_KEY_INFO121,5654
#define PEM_read_bio_PKCS8_PRIV_KEY_INFO	122,5694
#undef PEM_write_bio_PKCS8_PRIV_KEY_INFO123,5765
#define PEM_write_bio_PKCS8_PRIV_KEY_INFO	124,5806
#undef PEM_write_cb_bio_PKCS8_PRIV_KEY_INFO125,5879
#define PEM_write_cb_bio_PKCS8_PRIV_KEY_INFO	126,5923
#undef PEM_write_bio_PKCS8PrivateKey_nid129,6028
#define PEM_write_bio_PKCS8PrivateKey_nid	130,6069
#undef X509_REVOKED_get_ext_by_critical133,6175
#define X509_REVOKED_get_ext_by_critical	134,6215
#undef X509_policy_tree_get0_user_policies135,6287
#define X509_policy_tree_get0_user_policies	136,6330
#undef X509_policy_node_get0_qualifiers137,6406
#define X509_policy_node_get0_qualifiers	138,6446
#undef X509_STORE_CTX_get_explicit_policy139,6517
#define X509_STORE_CTX_get_explicit_policy	140,6559
#undef X509_STORE_CTX_get0_current_issuer141,6633
#define X509_STORE_CTX_get0_current_issuer	142,6675
#undef CRYPTO_set_dynlock_destroy_callback145,6784
#define CRYPTO_set_dynlock_destroy_callback 146,6827
#undef CRYPTO_set_dynlock_create_callback147,6905
#define CRYPTO_set_dynlock_create_callback 148,6947
#undef CRYPTO_set_dynlock_lock_callback149,7024
#define CRYPTO_set_dynlock_lock_callback	150,7064
#undef CRYPTO_get_dynlock_lock_callback151,7132
#define CRYPTO_get_dynlock_lock_callback	152,7172
#undef CRYPTO_get_dynlock_destroy_callback153,7240
#define CRYPTO_get_dynlock_destroy_callback 154,7283
#undef CRYPTO_get_dynlock_create_callback155,7361
#define CRYPTO_get_dynlock_create_callback 156,7403
#undef CRYPTO_set_locked_mem_ex_functions157,7480
#define CRYPTO_set_locked_mem_ex_functions 158,7522
#undef CRYPTO_get_locked_mem_ex_functions159,7601
#define CRYPTO_get_locked_mem_ex_functions 160,7643
#undef SSL_CTX_set_default_verify_paths163,7754
#define SSL_CTX_set_default_verify_paths	164,7794
#undef SSL_get_ex_data_X509_STORE_CTX_idx165,7864
#define SSL_get_ex_data_X509_STORE_CTX_idx 166,7906
#undef SSL_add_file_cert_subjects_to_stack167,7986
#define SSL_add_file_cert_subjects_to_stack 168,8029
#undef SSL_add_dir_cert_subjects_to_stack169,8108
#define SSL_add_dir_cert_subjects_to_stack 170,8150
#undef SSL_CTX_use_certificate_chain_file171,8228
#define SSL_CTX_use_certificate_chain_file 172,8270
#undef SSL_CTX_set_cert_verify_callback173,8346
#define SSL_CTX_set_cert_verify_callback	174,8386
#undef SSL_CTX_set_default_passwd_cb_userdata175,8454
#define SSL_CTX_set_default_passwd_cb_userdata 176,8500
#undef SSL_COMP_get_compression_methods177,8577
#define SSL_COMP_get_compression_methods	178,8617
#undef ssl_add_clienthello_renegotiate_ext179,8688
#define ssl_add_clienthello_renegotiate_ext	180,8731
#undef ssl_add_serverhello_renegotiate_ext181,8805
#define ssl_add_serverhello_renegotiate_ext	182,8848
#undef ssl_parse_clienthello_renegotiate_ext183,8922
#define ssl_parse_clienthello_renegotiate_ext	184,8967
#undef ssl_parse_serverhello_renegotiate_ext185,9045
#define ssl_parse_serverhello_renegotiate_ext	186,9090
#undef SSL_srp_server_param_with_username187,9168
#define SSL_srp_server_param_with_username	188,9210
#undef SSL_CTX_set_srp_client_pwd_callback189,9282
#define SSL_CTX_set_srp_client_pwd_callback	190,9325
#undef SSL_CTX_set_srp_verify_param_callback191,9399
#define SSL_CTX_set_srp_verify_param_callback	192,9444
#undef SSL_CTX_set_srp_username_callback193,9519
#define SSL_CTX_set_srp_username_callback	194,9560
#undef ssl_add_clienthello_use_srtp_ext195,9624
#define ssl_add_clienthello_use_srtp_ext 196,9664
#undef ssl_add_serverhello_use_srtp_ext197,9735
#define ssl_add_serverhello_use_srtp_ext 198,9775
#undef ssl_parse_clienthello_use_srtp_ext199,9846
#define ssl_parse_clienthello_use_srtp_ext 200,9888
#undef ssl_parse_serverhello_use_srtp_ext201,9963
#define ssl_parse_serverhello_use_srtp_ext 202,10005
#undef SSL_CTX_set_next_protos_advertised_cb203,10080
#define SSL_CTX_set_next_protos_advertised_cb 204,10125
#undef SSL_CTX_set_next_proto_select_cb205,10202
#define SSL_CTX_set_next_proto_select_cb 206,10242
#undef ENGINE_get_default_BN_mod_exp_crt209,10348
#define ENGINE_get_default_BN_mod_exp_crt	210,10389
#undef ENGINE_set_default_BN_mod_exp_crt211,10461
#define ENGINE_set_default_BN_mod_exp_crt	212,10502
#undef ENGINE_set_load_privkey_function213,10574
#define ENGINE_set_load_privkey_function	214,10614
#undef ENGINE_get_load_privkey_function215,10682
#define ENGINE_get_load_privkey_function	216,10722
#undef ENGINE_unregister_pkey_asn1_meths217,10790
#define ENGINE_unregister_pkey_asn1_meths	218,10831
#undef ENGINE_register_all_pkey_asn1_meths219,10902
#define ENGINE_register_all_pkey_asn1_meths	220,10945
#undef ENGINE_set_default_pkey_asn1_meths221,11020
#define ENGINE_set_default_pkey_asn1_meths	222,11062
#undef ENGINE_get_pkey_asn1_meth_engine223,11136
#define ENGINE_get_pkey_asn1_meth_engine	224,11176
#undef ENGINE_set_load_ssl_client_cert_function225,11247
#define ENGINE_set_load_ssl_client_cert_function 226,11295
#undef ENGINE_get_ssl_client_cert_function228,11383
#define ENGINE_get_ssl_client_cert_function	229,11426
#undef OCSP_REQUEST_get_ext_by_critical232,11533
#define OCSP_REQUEST_get_ext_by_critical	233,11573
#undef OCSP_BASICRESP_get_ext_by_critical234,11643
#define OCSP_BASICRESP_get_ext_by_critical 235,11685
#undef OCSP_SINGLERESP_get_ext_by_critical236,11764
#define OCSP_SINGLERESP_get_ext_by_critical 237,11807
#undef _ossl_old_des_ede3_cfb64_encrypt240,11919
#define _ossl_old_des_ede3_cfb64_encrypt	241,11959
#undef _ossl_old_des_ede3_ofb64_encrypt242,12030
#define _ossl_old_des_ede3_ofb64_encrypt	243,12070
#undef OPENSSL_add_all_algorithms_noconf246,12173
#define OPENSSL_add_all_algorithms_noconf	247,12214
#undef OPENSSL_add_all_algorithms_conf248,12284
#define OPENSSL_add_all_algorithms_conf	249,12323
#undef EVP_PKEY_meth_set_verify_recover250,12390
#define EVP_PKEY_meth_set_verify_recover	251,12430
#undef EC_GROUP_set_point_conversion_form254,12533
#define EC_GROUP_set_point_conversion_form	255,12575
#undef EC_GROUP_get_point_conversion_form256,12647
#define EC_GROUP_get_point_conversion_form	257,12689
#undef EC_GROUP_clear_free_all_extra_data258,12761
#define EC_GROUP_clear_free_all_extra_data	259,12803
#undef EC_KEY_set_public_key_affine_coordinates260,12878
#define EC_KEY_set_public_key_affine_coordinates 261,12926
#undef EC_POINT_set_Jprojective_coordinates_GFp263,13013
#define EC_POINT_set_Jprojective_coordinates_GFp 264,13061
#undef EC_POINT_get_Jprojective_coordinates_GFp266,13190
#define EC_POINT_get_Jprojective_coordinates_GFp 267,13238
#undef EC_POINT_set_affine_coordinates_GFp269,13367
#define EC_POINT_set_affine_coordinates_GFp 270,13410
#undef EC_POINT_get_affine_coordinates_GFp271,13489
#define EC_POINT_get_affine_coordinates_GFp 272,13532
#undef EC_POINT_set_compressed_coordinates_GFp273,13611
#define EC_POINT_set_compressed_coordinates_GFp 274,13658
#undef EC_POINT_set_affine_coordinates_GF2m275,13736
#define EC_POINT_set_affine_coordinates_GF2m 276,13780
#undef EC_POINT_get_affine_coordinates_GF2m277,13860
#define EC_POINT_get_affine_coordinates_GF2m 278,13904
#undef EC_POINT_set_compressed_coordinates_GF2m279,13984
#define EC_POINT_set_compressed_coordinates_GF2m 280,14032
#undef ec_GF2m_simple_group_clear_finish282,14162
#define ec_GF2m_simple_group_clear_finish	283,14203
#undef ec_GF2m_simple_group_check_discriminant284,14275
#define ec_GF2m_simple_group_check_discriminant	285,14322
#undef ec_GF2m_simple_point_clear_finish286,14401
#define ec_GF2m_simple_point_clear_finish	287,14442
#undef ec_GF2m_simple_point_set_to_infinity288,14513
#define ec_GF2m_simple_point_set_to_infinity	289,14557
#undef ec_GF2m_simple_points_make_affine290,14631
#define ec_GF2m_simple_points_make_affine	291,14672
#undef ec_GF2m_simple_point_set_affine_coordinates292,14745
#define ec_GF2m_simple_point_set_affine_coordinates 293,14796
#undef ec_GF2m_simple_point_get_affine_coordinates295,14927
#define ec_GF2m_simple_point_get_affine_coordinates 296,14978
#undef ec_GF2m_simple_set_compressed_coordinates298,15109
#define ec_GF2m_simple_set_compressed_coordinates 299,15158
#undef ec_GFp_simple_group_set_curve_GFp301,15287
#define ec_GFp_simple_group_set_curve_GFp 302,15328
#undef ec_GFp_simple_group_get_curve_GFp303,15408
#define ec_GFp_simple_group_get_curve_GFp 304,15449
#undef ec_GFp_simple_group_clear_finish305,15529
#define ec_GFp_simple_group_clear_finish	306,15569
#undef ec_GFp_simple_group_set_generator307,15641
#define ec_GFp_simple_group_set_generator 308,15682
#undef ec_GFp_simple_group_get0_generator309,15762
#define ec_GFp_simple_group_get0_generator 310,15804
#undef ec_GFp_simple_group_get_cofactor311,15884
#define ec_GFp_simple_group_get_cofactor	312,15924
#undef ec_GFp_simple_point_clear_finish313,15996
#define ec_GFp_simple_point_clear_finish	314,16036
#undef ec_GFp_simple_point_set_to_infinity315,16107
#define ec_GFp_simple_point_set_to_infinity 316,16150
#undef ec_GFp_simple_points_make_affine317,16226
#define ec_GFp_simple_points_make_affine	318,16266
#undef ec_GFp_simple_group_get_curve_GFp319,16337
#define ec_GFp_simple_group_get_curve_GFp 320,16378
#undef ec_GFp_simple_set_Jprojective_coordinates_GFp321,16458
#define ec_GFp_simple_set_Jprojective_coordinates_GFp 322,16511
#undef ec_GFp_simple_get_Jprojective_coordinates_GFp324,16647
#define ec_GFp_simple_get_Jprojective_coordinates_GFp 325,16700
#undef ec_GFp_simple_point_set_affine_coordinates_GFp327,16836
#define ec_GFp_simple_point_set_affine_coordinates_GFp 328,16890
#undef ec_GFp_simple_point_get_affine_coordinates_GFp330,17027
#define ec_GFp_simple_point_get_affine_coordinates_GFp 331,17081
#undef ec_GFp_simple_set_compressed_coordinates_GFp333,17218
#define ec_GFp_simple_set_compressed_coordinates_GFp 334,17270
#undef ec_GFp_simple_point_set_affine_coordinates336,17405
#define ec_GFp_simple_point_set_affine_coordinates 337,17455
#undef ec_GFp_simple_point_get_affine_coordinates339,17584
#define ec_GFp_simple_point_get_affine_coordinates 340,17634
#undef ec_GFp_simple_set_compressed_coordinates342,17763
#define ec_GFp_simple_set_compressed_coordinates 343,17811
#undef ec_GFp_simple_group_check_discriminant345,17938
#define ec_GFp_simple_group_check_discriminant	346,17984
#undef STORE_method_set_initialise_function349,18094
#define STORE_method_set_initialise_function	350,18138
#undef STORE_method_set_cleanup_function351,18212
#define STORE_method_set_cleanup_function	352,18253
#undef STORE_method_set_generate_function353,18321
#define STORE_method_set_generate_function	354,18363
#undef STORE_method_set_modify_function355,18433
#define STORE_method_set_modify_function	356,18473
#undef STORE_method_set_revoke_function357,18539
#define STORE_method_set_revoke_function	358,18579
#undef STORE_method_set_delete_function359,18645
#define STORE_method_set_delete_function	360,18685
#undef STORE_method_set_list_start_function361,18751
#define STORE_method_set_list_start_function	362,18795
#undef STORE_method_set_list_next_function363,18869
#define STORE_method_set_list_next_function	364,18912
#undef STORE_method_set_list_end_function365,18984
#define STORE_method_set_list_end_function	366,19026
#undef STORE_method_set_update_store_function367,19096
#define STORE_method_set_update_store_function	368,19142
#undef STORE_method_set_lock_store_function369,19220
#define STORE_method_set_lock_store_function	370,19264
#undef STORE_method_set_unlock_store_function371,19338
#define STORE_method_set_unlock_store_function	372,19384
#undef STORE_method_get_initialise_function373,19462
#define STORE_method_get_initialise_function	374,19506
#undef STORE_method_get_cleanup_function375,19580
#define STORE_method_get_cleanup_function	376,19621
#undef STORE_method_get_generate_function377,19689
#define STORE_method_get_generate_function	378,19731
#undef STORE_method_get_modify_function379,19801
#define STORE_method_get_modify_function	380,19841
#undef STORE_method_get_revoke_function381,19907
#define STORE_method_get_revoke_function	382,19947
#undef STORE_method_get_delete_function383,20013
#define STORE_method_get_delete_function	384,20053
#undef STORE_method_get_list_start_function385,20119
#define STORE_method_get_list_start_function	386,20163
#undef STORE_method_get_list_next_function387,20237
#define STORE_method_get_list_next_function	388,20280
#undef STORE_method_get_list_end_function389,20352
#define STORE_method_get_list_end_function	390,20394
#undef STORE_method_get_update_store_function391,20464
#define STORE_method_get_update_store_function	392,20510
#undef STORE_method_get_lock_store_function393,20588
#define STORE_method_get_lock_store_function	394,20632
#undef STORE_method_get_unlock_store_function395,20706
#define STORE_method_get_unlock_store_function	396,20752
#undef TS_RESP_CTX_set_status_info_cond399,20861
#define TS_RESP_CTX_set_status_info_cond	400,20901
#undef TS_RESP_CTX_set_clock_precision_digits401,20973
#define TS_RESP_CTX_set_clock_precision_digits	402,21019
#undef TS_CONF_set_clock_precision_digits403,21098
#define TS_CONF_set_clock_precision_digits	404,21140
#undef CMS_RecipientInfo_ktri_get0_algs407,21243
#define CMS_RecipientInfo_ktri_get0_algs	408,21283
#undef CMS_RecipientInfo_ktri_get0_signer_id409,21353
#define CMS_RecipientInfo_ktri_get0_signer_id	410,21398
#undef CMS_OtherRevocationInfoFormat_it411,21476
#define CMS_OtherRevocationInfoFormat_it	412,21516
#undef CMS_KeyAgreeRecipientIdentifier_it413,21585
#define CMS_KeyAgreeRecipientIdentifier_it	414,21627
#undef CMS_OriginatorIdentifierOrKey_it415,21701
#define CMS_OriginatorIdentifierOrKey_it	416,21741
#undef cms_SignerIdentifier_get0_signer_id417,21807
#define cms_SignerIdentifier_get0_signer_id	418,21850
#undef dtls1_retransmit_buffered_messages421,21956
#define dtls1_retransmit_buffered_messages	422,21998
#undef SRP_generate_server_master_secret425,22104
#define SRP_generate_server_master_secret	426,22145
#undef SRP_generate_client_master_secret427,22216
#define SRP_generate_client_master_secret	428,22257
#undef UI_method_get_prompt_constructor431,22359
#define UI_method_get_prompt_constructor	432,22399
#undef UI_method_set_prompt_constructor433,22472
#define UI_method_set_prompt_constructor	434,22512
#undef ERR_load_CRYPTO_strings441,22733
#define ERR_load_CRYPTO_strings	442,22764
#undef OCSP_crlID_new443,22825
#define OCSP_crlID_new	444,22847
#undef d2i_ECPARAMETERS446,22890
#define d2i_ECPARAMETERS	447,22914
#undef i2d_ECPARAMETERS448,22961
#define i2d_ECPARAMETERS	449,22985
#undef d2i_ECPKPARAMETERS450,23032
#define d2i_ECPKPARAMETERS	451,23058
#undef i2d_ECPKPARAMETERS452,23109
#define i2d_ECPKPARAMETERS	453,23135
#undef X509v3_cleanup_extensions461,23496
#define X509v3_cleanup_extensions	462,23529
#undef X509v3_add_extension463,23591
#define X509v3_add_extension	464,23619
#undef X509v3_add_netscape_extensions465,23672
#define X509v3_add_netscape_extensions	466,23710
#undef X509v3_add_standard_extensions467,23782
#define X509v3_add_standard_extensions	468,23820
#undef cms_Data_create471,23937
#define cms_Data_create	472,23960

crypto/sparcv9cap.c,682
#define SPARCV9_TICK_PRIVILEGED	9,146
#define SPARCV9_PREFER_FPU	10,185
#define SPARCV9_VIS1	11,219
#define SPARCV9_VIS2	12,248
#define SPARCV9_FMADD	13,292
static int OPENSSL_sparcv9cap_P=15,352
int bn_mul_mont(17,410
unsigned long OPENSSL_rdtsc(36,1195
typedef di_node_t (*di_init_t)di_init_t57,1668
typedef void      (*di_fini_t)di_fini_t58,1721
typedef char *    (*di_node_name_t)di_node_name_t59,1764
typedef int       (*di_walk_node_t)di_walk_node_t60,1812
#define DLLINK(62,1917
static int walk_nodename(64,1975
void OPENSSL_cpuid_setup(91,2767
static sigjmp_buf common_jmp;165,4452
static void common_handler(166,4482
void OPENSSL_cpuid_setup(168,4551

crypto/LPdir_win.c,294
# define FindFirstFile 38,1840
# define FindNextFile 41,1938
#define NAME_MAX 45,1999
struct LP_dir_context_st48,2028
  WIN32_FIND_DATA ctx;50,2055
  HANDLE handle;51,2078
  char entry_name[entry_name52,2095
const char *LP_find_file(LP_find_file55,2130
int LP_find_file_end(142,4105

crypto/fips_err.h,223
#define ERR_FUNC(68,2973
#define ERR_REASON(69,3026
static ERR_STRING_DATA FIPS_str_functs[FIPS_str_functs71,3086
static ERR_STRING_DATA FIPS_str_reasons[FIPS_str_reasons139,6952
void ERR_load_FIPS_strings(199,10826

crypto/o_init.c,27
void OPENSSL_init(66,2782

crypto/ebcdic.h,141
#define HEADER_EBCDIC_H4,47
#define os_toascii 9,145
#define os_toebcdic 10,186
#define ebcdic2ascii 11,228
#define ascii2ebcdic 12,271

crypto/err/err_prn.c,160
void ERR_print_errors_cb(66,3347
static int print_fp(90,3992
void ERR_print_errors_fp(99,4169
static int print_bio(105,4254
void ERR_print_errors(109,4360

crypto/err/err.h,4721
#define HEADER_ERR_H113,5848
#define ERR_PUT_error(135,6179
#define ERR_PUT_error(137,6243
#define ERR_TXT_MALLOCED	142,6332
#define ERR_TXT_STRING	143,6362
#define ERR_FLAG_MARK	145,6392
#define ERR_NUM_ERRORS	147,6421
typedef struct err_state_st148,6447
	CRYPTO_THREADID tid;150,6478
	int err_flags[err_flags151,6500
	unsigned long err_buffer[err_buffer152,6532
	char *err_data[err_data153,6575
	int err_data_flags[err_data_flags154,6608
	const char *err_file[err_file155,6645
	int err_line[err_line156,6684
	int top,157,6715
	int top,bottom;157,6715
	} ERR_STATE;158,6732
#define ERR_LIB_NONE	161,6761
#define ERR_LIB_SYS	162,6785
#define ERR_LIB_BN	163,6808
#define ERR_LIB_RSA	164,6830
#define ERR_LIB_DH	165,6853
#define ERR_LIB_EVP	166,6875
#define ERR_LIB_BUF	167,6898
#define ERR_LIB_OBJ	168,6921
#define ERR_LIB_PEM	169,6944
#define ERR_LIB_DSA	170,6967
#define ERR_LIB_X509	171,6991
#define ERR_LIB_ASN1	173,7054
#define ERR_LIB_CONF	174,7079
#define ERR_LIB_CRYPTO	175,7104
#define ERR_LIB_EC	176,7131
#define ERR_LIB_SSL	177,7154
#define ERR_LIB_BIO	183,7368
#define ERR_LIB_PKCS7	184,7392
#define ERR_LIB_X509V3	185,7418
#define ERR_LIB_PKCS12	186,7445
#define ERR_LIB_RAND	187,7472
#define ERR_LIB_DSO	188,7497
#define ERR_LIB_ENGINE	189,7521
#define ERR_LIB_OCSP 190,7548
#define ERR_LIB_UI 191,7583
#define ERR_LIB_COMP 192,7618
#define ERR_LIB_ECDSA	193,7653
#define ERR_LIB_ECDH	194,7679
#define ERR_LIB_STORE 195,7704
#define ERR_LIB_FIPS	196,7739
#define ERR_LIB_CMS	197,7764
#define ERR_LIB_TS	198,7788
#define ERR_LIB_HMAC	199,7811
#define ERR_LIB_JPAKE	200,7836
#define ERR_LIB_USER	202,7863
#define SYSerr(204,7890
#define BNerr(205,7964
#define RSAerr(206,8037
#define DHerr(207,8111
#define EVPerr(208,8184
#define BUFerr(209,8258
#define OBJerr(210,8332
#define PEMerr(211,8406
#define DSAerr(212,8480
#define X509err(213,8554
#define ASN1err(214,8629
#define CONFerr(215,8704
#define CRYPTOerr(216,8779
#define ECerr(217,8858
#define SSLerr(218,8931
#define BIOerr(219,9005
#define PKCS7err(220,9079
#define X509V3err(221,9156
#define PKCS12err(222,9235
#define RANDerr(223,9314
#define DSOerr(224,9389
#define ENGINEerr(225,9462
#define OCSPerr(226,9541
#define UIerr(227,9616
#define COMPerr(228,9687
#define ECDSAerr(229,9762
#define ECDHerr(230,9840
#define STOREerr(231,9916
#define FIPSerr(232,9993
#define CMSerr(233,10068
#define TSerr(234,10141
#define HMACerr(235,10212
#define JPAKEerr(236,10287
#define ERR_PACK(240,10459
#define ERR_GET_LIB(243,10606
#define ERR_GET_FUNC(244,10669
#define ERR_GET_REASON(245,10734
#define ERR_FATAL_ERROR(246,10778
#define SYS_F_FOPEN	250,10849
#define SYS_F_CONNECT	251,10872
#define SYS_F_GETSERVBYNAME	252,10897
#define SYS_F_SOCKET	253,10927
#define SYS_F_IOCTLSOCKET	254,10951
#define SYS_F_BIND	255,10979
#define SYS_F_LISTEN	256,11001
#define SYS_F_ACCEPT	257,11025
#define SYS_F_WSASTARTUP	258,11049
#define SYS_F_OPENDIR	259,11096
#define SYS_F_FREAD	260,11122
#define ERR_R_SYS_LIB	264,11162
#define ERR_R_BN_LIB	265,11210
#define ERR_R_RSA_LIB	266,11257
#define ERR_R_DH_LIB	267,11305
#define ERR_R_EVP_LIB	268,11352
#define ERR_R_BUF_LIB	269,11400
#define ERR_R_OBJ_LIB	270,11448
#define ERR_R_PEM_LIB	271,11496
#define ERR_R_DSA_LIB	272,11544
#define ERR_R_X509_LIB	273,11592
#define ERR_R_ASN1_LIB	274,11641
#define ERR_R_CONF_LIB	275,11690
#define ERR_R_CRYPTO_LIB 276,11739
#define ERR_R_EC_LIB	277,11789
#define ERR_R_SSL_LIB	278,11836
#define ERR_R_BIO_LIB	279,11884
#define ERR_R_PKCS7_LIB	280,11932
#define ERR_R_X509V3_LIB 281,11982
#define ERR_R_PKCS12_LIB 282,12032
#define ERR_R_RAND_LIB	283,12082
#define ERR_R_DSO_LIB	284,12131
#define ERR_R_ENGINE_LIB 285,12179
#define ERR_R_OCSP_LIB 286,12229
#define ERR_R_UI_LIB 287,12279
#define ERR_R_COMP_LIB	288,12329
#define ERR_R_ECDSA_LIB 289,12378
#define ERR_R_ECDH_LIB 290,12426
#define ERR_R_STORE_LIB 291,12473
#define ERR_R_TS_LIB	292,12523
#define ERR_R_NESTED_ASN1_ERROR	294,12571
#define ERR_R_BAD_ASN1_OBJECT_HEADER	295,12608
#define ERR_R_BAD_GET_ASN1_OBJECT_CALL	296,12649
#define ERR_R_EXPECTING_AN_ASN1_SEQUENCE	297,12692
#define ERR_R_ASN1_LENGTH_MISMATCH	298,12736
#define ERR_R_MISSING_ASN1_EOS	299,12775
#define ERR_R_FATAL	302,12830
#define	ERR_R_MALLOC_FAILURE	303,12856
#define	ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED	304,12903
#define	ERR_R_PASSED_NULL_PARAMETER	305,12961
#define	ERR_R_INTERNAL_ERROR	306,13014
#define	ERR_R_DISABLED	307,13061
typedef struct ERR_string_data_st313,13214
	unsigned long error;315,13251
	const char *string;string316,13273
	} ERR_STRING_DATA;317,13294
LHASH_OF(363,15122

crypto/err/err_all.c,39
void ERR_load_crypto_strings(111,4271

crypto/err/err.c,3533
static ERR_STRING_DATA ERR_str_libraries[ERR_str_libraries129,6234
static ERR_STRING_DATA ERR_str_functs[ERR_str_functs162,7761
static ERR_STRING_DATA ERR_str_reasons[ERR_str_reasons180,8347
struct st_ERR_FNS227,9950
	LHASH_OF(230,10017
	void (*cb_err_del)cb_err_del231,10072
	ERR_STRING_DATA *(*cb_err_get_item)cb_err_get_item232,10099
	ERR_STRING_DATA *(*cb_err_set_item)cb_err_set_item233,10162
	ERR_STRING_DATA *(*cb_err_del_item)cb_err_del_item234,10219
	LHASH_OF(236,10328
	void (*cb_thread_release)cb_thread_release237,10380
	ERR_STATE *(*cb_thread_get_item)cb_thread_get_item238,10436
	ERR_STATE *(*cb_thread_set_item)cb_thread_set_item239,10490
	void (*cb_thread_del_item)cb_thread_del_item240,10538
	int (*cb_get_next_lib)cb_get_next_lib242,10644
static LHASH_OF(246,10734
static const ERR_FNS *err_fns err_fns274,11714
#define ERRFN(277,11818
static LHASH_OF(284,12206
const ERR_FNS *ERR_get_implementation(ERR_get_implementation303,12747
int ERR_set_implementation(309,12833
static unsigned long err_string_data_hash(333,13465
static IMPLEMENT_LHASH_HASH_FN(341,13638
static IMPLEMENT_LHASH_COMP_FN(348,13839
static void int_err_del(368,14287
static ERR_STRING_DATA *int_err_get_item(int_err_get_item379,14489
static ERR_STRING_DATA *int_err_set_item(int_err_set_item396,14815
static ERR_STRING_DATA *int_err_del_item(int_err_del_item413,15133
static unsigned long err_state_hash(430,15451
static IMPLEMENT_LHASH_HASH_FN(434,15557
static IMPLEMENT_LHASH_COMP_FN(440,15729
static void int_thread_release(462,16196
static ERR_STATE *int_thread_get_item(int_thread_get_item485,16634
static ERR_STATE *int_thread_set_item(int_thread_set_item503,16967
static void int_thread_del_item(521,17292
static int int_err_get_next_lib(547,17850
#define NUM_SYS_STR_REASONS 560,18045
#define LEN_SYS_STR_REASON 561,18077
static ERR_STRING_DATA SYS_str_reasons[SYS_str_reasons563,18108
static void build_SYS_str_reasons(573,18620
#define err_clear_data(624,19693
#define err_clear(635,19933
static void ERR_STATE_free(644,20103
void ERR_load_ERR_strings(658,20273
static void err_load_strings(670,20559
void ERR_load_strings(681,20736
void ERR_unload_strings(687,20850
void ERR_free_strings(698,21022
void ERR_put_error(706,21154
void ERR_clear_error(742,22128
unsigned long ERR_get_error(757,22294
unsigned long ERR_get_error_line(760,22385
unsigned long ERR_get_error_line_data(764,22511
unsigned long ERR_peek_error(769,22675
unsigned long ERR_peek_error_line(772,22767
unsigned long ERR_peek_error_line_data(775,22888
unsigned long ERR_peek_last_error(780,23053
unsigned long ERR_peek_last_error_line(783,23150
unsigned long ERR_peek_last_error_line_data(786,23276
static unsigned long get_error_values(791,23446
void ERR_error_string_n(860,24529
#define NUM_COLONS 887,25285
char *ERR_error_string(ERR_error_string912,25925
LHASH_OF(922,26082
LHASH_OF(928,26188
void ERR_release_err_state_table(934,26294
const char *ERR_lib_error_string(ERR_lib_error_string940,26410
const char *ERR_func_error_string(ERR_func_error_string952,26637
const char *ERR_reason_error_string(ERR_reason_error_string965,26887
void ERR_remove_thread_state(983,27219
void ERR_remove_state(998,27564
ERR_STATE *ERR_get_state(ERR_get_state1004,27651
int ERR_get_next_error_library(1044,28621
void ERR_set_error_data(1050,28714
void ERR_add_error_data(1066,28939
void ERR_add_error_vdata(1074,29069
int ERR_set_mark(1110,29648
int ERR_pop_to_mark(1121,29806

crypto/cpt_err.c,230
#define ERR_FUNC(68,2974
#define ERR_REASON(69,3029
static ERR_STRING_DATA CRYPTO_str_functs[CRYPTO_str_functs71,3091
static ERR_STRING_DATA CRYPTO_str_reasons[CRYPTO_str_reasons86,3764
void ERR_load_CRYPTO_strings(95,3988

crypto/md32_common.h,728
#undef ROTATE143,4903
#  define ROTATE(146,4975
#   define ROTATE(149,5063
#   define ROTATE(152,5190
#   define ROTATE(154,5259
#   define ROTATE(164,5688
#   define ROTATE(174,5995
#   define ROTATE(182,6186
#define ROTATE(193,6387
#   define HOST_c2l(209,7044
#   define HOST_l2c(212,7189
# define HOST_c2l(220,7409
# define HOST_l2c(221,7480
#define HOST_c2l(225,7570
#define HOST_l2c(232,7800
#   define HOST_c2l(244,8213
#   define HOST_l2c(247,8340
#  define HOST_c2l(256,8647
#  define HOST_l2c(257,8717
#define HOST_c2l(262,8814
#define HOST_l2c(269,9044
int HASH_UPDATE 282,9313
void HASH_TRANSFORM 341,10436
int HASH_FINAL 347,10540
#define MD32_REG_T 387,11362
#define MD32_REG_T 413,12457

crypto/bn/bn_recp.c,235
void BN_RECP_CTX_init(63,3258
BN_RECP_CTX *BN_RECP_CTX_new(BN_RECP_CTX_new71,3386
void BN_RECP_CTX_free(83,3603
int BN_RECP_CTX_set(94,3786
int BN_mod_mul_reciprocal(103,3984
int BN_div_recp(130,4472
int BN_reciprocal(217,6463

crypto/bn/bn_exp2.c,60
#define TABLE_SIZE	116,5892
int BN_mod_exp2_mont(118,5915

crypto/bn/bn_depr.c,147
static void *dummy=dummy65,2904
BIGNUM *BN_generate_prime(BN_generate_prime68,2962
int BN_is_prime(94,3498
int BN_is_prime_fasttest(102,3727

crypto/bn/bn_mont.c,453
#define MONT_WORD 123,6166
int BN_mod_mul_montgomery(129,6331
static int BN_from_montgomery_word(177,7248
#define BRANCH_FREE 239,8643
int BN_from_montgomery(280,9435
BN_MONT_CTX *BN_MONT_CTX_new(BN_MONT_CTX_new321,10291
void BN_MONT_CTX_init(333,10508
void BN_MONT_CTX_free(343,10677
int BN_MONT_CTX_set(355,10883
BN_MONT_CTX *BN_MONT_CTX_copy(BN_MONT_CTX_copy465,13822
BN_MONT_CTX *BN_MONT_CTX_set_locked(BN_MONT_CTX_set_locked478,14155

crypto/bn/bn_err.c,212
#define ERR_FUNC(68,2972
#define ERR_REASON(69,3023
static ERR_STRING_DATA BN_str_functs[BN_str_functs71,3081
static ERR_STRING_DATA BN_str_reasons[BN_str_reasons116,5222
void ERR_load_BN_strings(140,6369

crypto/bn/bn_mul.c,344
# undef NDEBUG 60,3212
# define NDEBUG61,3263
BN_ULONG bn_sub_part_words(80,4088
BN_ULONG bn_add_part_words(207,6123
void bn_mul_recursive(393,9260
void bn_mul_part_recursive(550,12758
void bn_mul_low_recursive(726,16711
void bn_mul_high(757,17561
int BN_mul(943,21042
void bn_mul_normal(1104,24185
void bn_mul_low_normal(1146,24909

crypto/bn/bn_kron.c,50
#define BN_lsw(60,2733
int BN_kronecker(63,2866

crypto/bn/bn_prime.c,282
int BN_GENCB_call(137,6701
int BN_generate_prime_ex(159,7083
int BN_is_prime_ex(238,8618
int BN_is_prime_fasttest_ex(243,8770
static int witness(352,10791
static int probable_prime(377,11615
static int probable_prime_dh(406,12293
static int probable_prime_dh_safe(444,13069

crypto/bn/bnspeed.c,459
#define BASENUM	63,3284
#undef PROG64,3308
#define PROG 65,3320
#define TIMES75,3594
#undef TIMES91,4037
#define _POSIX_SOURCE99,4141
#   define HZ	111,4410
#   define HZ 113,4458
#  define HZ 116,4526
#undef BUFSIZE120,4573
#define BUFSIZE	121,4588
int run=122,4619
#define START	125,4660
#define STOP	126,4676
static double Time_F(128,4692
#define NUM_SIZES	164,5257
static int sizes[sizes165,5277
int main(170,5444
void do_mul(183,5598

crypto/bn/bn_shift.c,96
int BN_lshift1(63,3259
int BN_rshift1(99,3749
int BN_lshift(135,4238
int BN_rshift(171,4846

crypto/bn/bn_exp.c,610
#  define alloca 120,5944
#  define alloca(124,6017
#define TABLE_SIZE	129,6146
int BN_exp(132,6209
int BN_mod_exp(176,7049
#define MONT_MUL_MOD215,8574
#define MONT_EXP_WORD216,8595
#define RECP_MUL_MOD217,8617
int BN_mod_exp_recp(251,9366
int BN_mod_exp_mont(384,12103
static int MOD_EXP_CTIME_COPY_TO_PREBUF(537,15508
static int MOD_EXP_CTIME_COPY_FROM_PREBUF(551,15842
#define MOD_EXP_CTIME_ALIGN(569,16250
int BN_mod_exp_mont_consttime(578,16722
int BN_mod_exp_mont_word(832,23954
#define BN_MOD_MUL_WORD(841,24223
#define BN_TO_MONTGOMERY_WORD(853,24758
int BN_mod_exp_simple(983,27212

crypto/bn/bn_prime.h,177
#define NUMPRIMES 60,3224
typedef unsigned short prime_t;61,3247
#define NUMPRIMES 63,3285
typedef unsigned char prime_t;64,3306
static const prime_t primes[primes66,3344

crypto/bn/bn_asm.c,1401
# undef NDEBUG 60,3212
# define NDEBUG61,3263
BN_ULONG bn_mul_add_words(71,3418
BN_ULONG bn_mul_words(97,3860
void bn_sqr_words(122,4276
BN_ULONG bn_mul_add_words(146,4679
BN_ULONG bn_mul_words(175,5187
void bn_sqr_words(204,5699
BN_ULONG bn_div_words(230,6157
BN_ULONG bn_div_words(239,6380
BN_ULONG bn_add_words(306,7371
BN_ULONG bn_add_words(341,8082
BN_ULONG bn_sub_words(393,8874
#undef bn_mul_comba8431,9632
#undef bn_mul_comba4432,9653
#undef bn_sqr_comba8433,9674
#undef bn_sqr_comba4434,9695
#define mul_add_c(442,10051
#define mul_add_c2(449,10241
#define sqr_add_c(459,10508
#define sqr_add_c2(466,10704
#define mul_add_c(471,10808
#define mul_add_c2(478,10971
#define sqr_add_c(487,11205
#define sqr_add_c2(494,11364
#define mul_add_c(499,11468
#define mul_add_c2(507,11649
#define sqr_add_c(517,11901
#define sqr_add_c2(525,12078
#define mul_add_c(529,12174
#define mul_add_c2(536,12378
#define sqr_add_c(548,12717
#define sqr_add_c2(553,12864
void bn_mul_comba8(557,12961
void bn_mul_comba4(666,15457
void bn_sqr_comba8(711,16275
void bn_sqr_comba4(792,17739
int bn_mul_mont(847,19142
int bn_mul_mont(941,20925
#undef bn_sqr_comba4949,21174
void bn_sqr_comba4(950,21195
#undef bn_sqr_comba8956,21294
void bn_sqr_comba8(957,21315
void bn_mul_comba4(963,21415
void bn_mul_comba8(971,21648
int bn_mul_mont(986,22126
int bn_mul_mont(1025,23002

crypto/bn/bn_sqr.c,81
int BN_sqr(65,3360
void bn_sqr_normal(158,5041
void bn_sqr_recursive(206,5834

crypto/bn/exptest.c,89
#define NUM_BITS	70,3379
static const char rnd_seed[rnd_seed72,3409
int main(74,3508

crypto/bn/bn_mod.c,332
int BN_mod(119,6011
int BN_nnmod(127,6201
int BN_mod_add(141,6545
int BN_mod_add_quick(150,6807
int BN_mod_sub(159,6995
int BN_mod_sub_quick(168,7257
int BN_mod_mul(178,7452
int BN_mod_sqr(203,7894
int BN_mod_lshift1(211,8089
int BN_mod_lshift1_quick(221,8347
int BN_mod_lshift(231,8538
int BN_mod_lshift_quick(256,9005

crypto/bn/bn_word.c,138
BN_ULONG BN_mod_word(63,3258
BN_ULONG BN_div_word(90,3729
int BN_add_word(126,4360
int BN_sub_word(171,5104
int BN_mul_word(224,5817

crypto/bn/bn.h,6464
#define HEADER_BN_H126,6387
#define BN_MUL_COMBA152,7205
#define BN_SQR_COMBA153,7226
#define BN_RECURSION154,7247
#  define BN_DIV2W171,8165
#define BN_ULLONG	179,8366
#define BN_ULONG	180,8403
#define BN_LONG	181,8434
#define BN_BITS	182,8456
#define BN_BYTES	183,8477
#define BN_BITS2	184,8496
#define BN_BITS4	185,8516
#define BN_MASK	186,8536
#define BN_MASK2	187,8592
#define BN_MASK2l	188,8631
#define BN_MASK2h	189,8663
#define BN_MASK2h1	190,8703
#define BN_TBIT	191,8744
#define BN_DEC_CONV	192,8783
#define BN_DEC_FMT1	193,8828
#define BN_DEC_FMT2	194,8854
#define BN_DEC_NUM	195,8883
#define BN_HEX_FMT1	196,8905
#define BN_HEX_FMT2	197,8931
#undef BN_LLONG206,9259
#undef BN_ULLONG207,9275
#define BN_ULONG	208,9292
#define BN_LONG	209,9328
#define BN_BITS	210,9355
#define BN_BYTES	211,9376
#define BN_BITS2	212,9395
#define BN_BITS4	213,9415
#define BN_MASK2	214,9435
#define BN_MASK2l	215,9475
#define BN_MASK2h	216,9507
#define BN_MASK2h1	217,9548
#define BN_TBIT	218,9590
#define BN_DEC_CONV	219,9630
#define BN_DEC_FMT1	220,9676
#define BN_DEC_FMT2	221,9703
#define BN_DEC_NUM	222,9733
#define BN_HEX_FMT1	223,9755
#define BN_HEX_FMT2	224,9782
#  define BN_ULLONG	230,9901
#  define BN_MASK	231,9938
#  define BN_ULLONG	233,9987
#  define BN_MASK	234,10026
#define BN_ULONG	237,10082
#define BN_LONG	238,10112
#define BN_BITS	239,10133
#define BN_BYTES	240,10153
#define BN_BITS2	241,10172
#define BN_BITS4	242,10192
#define BN_MASK2	243,10212
#define BN_MASK2l	244,10243
#define BN_MASK2h1	245,10270
#define BN_MASK2h	246,10303
#define BN_TBIT	247,10335
#define BN_DEC_CONV	248,10366
#define BN_DEC_FMT1	249,10400
#define BN_DEC_FMT2	250,10425
#define BN_DEC_NUM	251,10452
#define BN_HEX_FMT1	252,10473
#define BN_HEX_FMT2	253,10498
#  define PTR_SIZE_INT 266,11012
#  define PTR_SIZE_INT 268,11087
# define PTR_SIZE_INT 271,11201
#define BN_DEFAULT_BITS	274,11276
#define BN_FLG_MALLOCED	276,11306
#define BN_FLG_STATIC_DATA	277,11336
#define BN_FLG_CONSTTIME	278,11368
#define BN_FLG_EXP_CONSTTIME 285,11789
#define BN_FLG_FREE	291,12099
#define BN_set_flags(293,12158
#define BN_get_flags(294,12202
#define BN_with_flags(298,12374
typedef struct bignum_st BIGNUM;309,12950
typedef struct bignum_ctx BN_CTX;311,13046
typedef struct bn_blinding_st BN_BLINDING;312,13080
typedef struct bn_mont_ctx_st BN_MONT_CTX;313,13123
typedef struct bn_recp_ctx_st BN_RECP_CTX;314,13166
typedef struct bn_gencb_st BN_GENCB;315,13209
struct bignum_st318,13254
	BN_ULONG *d;d320,13274
	int top;321,13340
	int dmax;323,13438
	int neg;324,13476
	int flags;325,13522
struct bn_mont_ctx_st329,13580
	int ri;331,13605
	BIGNUM RR;332,13647
	BIGNUM N;333,13704
	BIGNUM Ni;334,13738
	BN_ULONG n0[n0336,13845
	int flags;338,13972
struct bn_recp_ctx_st344,14078
	BIGNUM N;346,14103
	BIGNUM Nr;347,14132
	int num_bits;348,14165
	int shift;349,14180
	int flags;350,14192
struct bn_gencb_st354,14253
	unsigned int ver;356,14275
	void *arg;arg357,14335
		void (*cb_1)cb_1361,14437
		int (*cb_2)cb_2363,14511
		} cb;364,14548
#define BN_GENCB_set_old(369,14736
#define BN_GENCB_set(375,14990
#define BN_prime_checks 381,15168
#define BN_prime_checks_for_size(389,15662
#define BN_num_bytes(402,16302
#define BN_abs_is_word(405,16425
#define BN_is_zero(407,16546
#define BN_is_one(408,16590
#define BN_is_word(409,16655
#define BN_is_odd(410,16732
#define BN_one(412,16794
#define BN_zero_ex(413,16833
#define BN_zero(420,16977
#define BN_zero(422,17016
#define BN_is_negative(465,18731
#define BN_mod(469,18859
#define BN_to_montgomery(576,23600
#define	BN_BLINDING_NO_UPDATE	587,24092
#define	BN_BLINDING_NO_RECREATE	588,24133
#define BN_GF2m_sub(638,26244
#define BN_GF2m_cmp(654,27157
#define bn_expand(697,29150
#define bn_wexpand(699,29276
#define BN_DEBUG_TRIX742,31510
#define bn_pollute(744,31539
#undef RAND_pseudo_bytes760,32127
#define bn_pollute(763,32165
#define bn_check_top(765,32194
#define bn_fix_top(775,32406
#define bn_pollute(779,32469
#define bn_check_top(780,32491
#define bn_fix_top(781,32515
#define bn_correct_top(785,32565
#define BN_F_BNRAND	828,34023
#define BN_F_BN_BLINDING_CONVERT_EX	829,34052
#define BN_F_BN_BLINDING_CREATE_PARAM	830,34095
#define BN_F_BN_BLINDING_INVERT_EX	831,34140
#define BN_F_BN_BLINDING_NEW	832,34182
#define BN_F_BN_BLINDING_UPDATE	833,34219
#define BN_F_BN_BN2DEC	834,34259
#define BN_F_BN_BN2HEX	835,34291
#define BN_F_BN_CTX_GET	836,34323
#define BN_F_BN_CTX_NEW	837,34356
#define BN_F_BN_CTX_START	838,34389
#define BN_F_BN_DIV	839,34423
#define BN_F_BN_DIV_NO_BRANCH	840,34452
#define BN_F_BN_DIV_RECP	841,34490
#define BN_F_BN_EXP	842,34523
#define BN_F_BN_EXPAND2	843,34552
#define BN_F_BN_EXPAND_INTERNAL	844,34585
#define BN_F_BN_GF2M_MOD	845,34625
#define BN_F_BN_GF2M_MOD_EXP	846,34658
#define BN_F_BN_GF2M_MOD_MUL	847,34695
#define BN_F_BN_GF2M_MOD_SOLVE_QUAD	848,34732
#define BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR	849,34775
#define BN_F_BN_GF2M_MOD_SQR	850,34822
#define BN_F_BN_GF2M_MOD_SQRT	851,34859
#define BN_F_BN_MOD_EXP2_MONT	852,34897
#define BN_F_BN_MOD_EXP_MONT	853,34935
#define BN_F_BN_MOD_EXP_MONT_CONSTTIME	854,34972
#define BN_F_BN_MOD_EXP_MONT_WORD	855,35018
#define BN_F_BN_MOD_EXP_RECP	856,35059
#define BN_F_BN_MOD_EXP_SIMPLE	857,35096
#define BN_F_BN_MOD_INVERSE	858,35135
#define BN_F_BN_MOD_INVERSE_NO_BRANCH	859,35171
#define BN_F_BN_MOD_LSHIFT_QUICK	860,35216
#define BN_F_BN_MOD_MUL_RECIPROCAL	861,35256
#define BN_F_BN_MOD_SQRT	862,35298
#define BN_F_BN_MPI2BN	863,35331
#define BN_F_BN_NEW	864,35363
#define BN_F_BN_RAND	865,35392
#define BN_F_BN_RAND_RANGE	866,35422
#define BN_F_BN_USUB	867,35457
#define BN_R_ARG2_LT_ARG3	870,35508
#define BN_R_BAD_RECIPROCAL	871,35542
#define BN_R_BIGNUM_TOO_LONG	872,35578
#define BN_R_CALLED_WITH_EVEN_MODULUS	873,35615
#define BN_R_DIV_BY_ZERO	874,35660
#define BN_R_ENCODING_ERROR	875,35693
#define BN_R_EXPAND_ON_STATIC_BIGNUM_DATA	876,35729
#define BN_R_INPUT_NOT_REDUCED	877,35777
#define BN_R_INVALID_LENGTH	878,35816
#define BN_R_INVALID_RANGE	879,35852
#define BN_R_NOT_A_SQUARE	880,35887
#define BN_R_NOT_INITIALIZED	881,35921
#define BN_R_NO_INVERSE	882,35958
#define BN_R_NO_SOLUTION	883,35991
#define BN_R_P_IS_NOT_PRIME	884,36024
#define BN_R_TOO_MANY_ITERATIONS	885,36060
#define BN_R_TOO_MANY_TEMPORARY_VARIABLES	886,36100

crypto/bn/bn_gf2m.c,945
#define MAX_ITERATIONS 100,4491
static const BN_ULONG SQR_tb[SQR_tb102,4518
#define SQR1(107,4790
#define SQR0(112,5078
#define SQR1(119,5395
#define SQR0(122,5543
static void bn_GF2m_mul_1x1(134,5975
static void bn_GF2m_mul_1x1(166,7145
static void bn_GF2m_mul_2x2(211,9011
int	BN_GF2m_add(229,9724
int BN_GF2m_mod_arr(267,10466
int	BN_GF2m_mod(365,12405
int	BN_GF2m_mod_mul_arr(386,12921
int	BN_GF2m_mod_mul(439,14142
int	BN_GF2m_mod_sqr_arr(463,14759
int	BN_GF2m_mod_sqr(495,15531
int BN_GF2m_mod_inv(523,16314
int BN_GF2m_mod_inv_arr(662,19378
int BN_GF2m_mod_div(685,19866
int BN_GF2m_mod_div(714,20567
int BN_GF2m_mod_div_arr(788,22233
int	BN_GF2m_mod_exp_arr(813,22793
int BN_GF2m_mod_exp(856,23780
int	BN_GF2m_mod_sqrt_arr(882,24482
int BN_GF2m_mod_sqrt(915,25206
int BN_GF2m_mod_solve_quad_arr(939,25848
int BN_GF2m_mod_solve_quad(1033,27995
int BN_GF2m_poly2arr(1061,28878
int BN_GF2m_arr2poly(1097,29462

crypto/bn/bn_lib.c,1298
# undef NDEBUG 60,3212
# define NDEBUG61,3263
const char BN_version[BN_version70,3389
static int bn_limit_bits=83,3708
static int bn_limit_num=84,3736
static int bn_limit_bits_low=85,3795
static int bn_limit_num_low=86,3827
static int bn_limit_bits_high=87,3890
static int bn_limit_num_high=88,3923
static int bn_limit_bits_mont=89,3987
static int bn_limit_num_mont=90,4020
void BN_set_params(92,4085
int BN_get_params(124,4701
const BIGNUM *BN_value_one(BN_value_one134,4955
int BN_num_bits_word(142,5134
int BN_num_bits(229,6976
void BN_clear_free(238,7138
void BN_free(256,7469
void BN_init(273,7769
BIGNUM *BN_new(BN_new279,7847
static BN_ULONG *bn_expand_internal(bn_expand_internal299,8264
BIGNUM *bn_dup_expand(bn_dup_expand375,10323
BIGNUM *bn_expand2(bn_expand2426,11396
BIGNUM *BN_dup(BN_dup460,12093
BIGNUM *BN_copy(BN_copy478,12323
void BN_swap(515,12965
void BN_clear(548,13603
BN_ULONG BN_get_word(557,13736
int BN_set_word(567,13888
BIGNUM *BN_bin2bn(BN_bin2bn578,14094
int BN_bn2bin(622,14820
int BN_ucmp(637,15049
int BN_cmp(659,15357
int BN_set_bit(700,15955
int BN_clear_bit(722,16250
int BN_is_bit_set(738,16469
int BN_mask_bits(750,16672
void BN_set_negative(771,16937
int bn_cmp_words(779,17043
int bn_cmp_part_words(803,17700

crypto/bn/bn_rand.c,218
static int bnrand(118,5936
int     BN_rand(211,7361
int     BN_pseudo_rand(216,7471
int     BN_bntest_rand(222,7594
static int bn_rand_range(230,7758
int	BN_rand_range(297,9196
int	BN_pseudo_rand_range(302,9289

crypto/bn/bntest.c,1188
#undef OPENSSL_NO_DEPRECATED75,3897
const int num0 90,4140
const int num1 91,4184
const int num2 92,4248
static int results=123,5362
static unsigned char lst[lst125,5385
static const char rnd_seed[rnd_seed128,5520
static void message(130,5619
int main(138,5778
int test_add(317,9536
int test_sub(361,10198
int test_div(412,10971
static void print_word(476,11985
int test_div_word(492,12293
int test_div_recp(548,13147
int test_mul(621,14435
int test_sqr(677,15323
int test_mont(719,15979
int test_mod(796,17340
int test_mod_mul(842,18056
int test_mod_exp(913,19424
int test_mod_exp_mont_consttime(964,20263
int test_exp(1015,21138
int test_gf2m_add(1065,21940
int test_gf2m_mod(1117,22934
int test_gf2m_mod_mul(1175,23945
int test_gf2m_mod_sqr(1246,25296
int test_gf2m_mod_inv(1305,26386
int test_gf2m_mod_div(1360,27384
int test_gf2m_mod_exp(1423,28559
int test_gf2m_mod_sqrt(1494,29954
int test_gf2m_mod_solve_quad(1553,31028
static int genprime_cb(1640,32815
int test_kron(1653,33015
int test_sqrt(1744,35162
int test_lshift(1822,36905
int test_lshift1(1880,37884
int test_rshift(1921,38467
int test_rshift1(1967,39154
int rand_neg(2007,39760

crypto/bn/expspeed.c,915
#define BASENUM	63,3285
#define NUM_START 64,3306
#define TEST_EXP69,3447
#undef TEST_MUL70,3464
#undef TEST_SQR71,3480
#undef TEST_GCD72,3496
#undef TEST_KRON73,3512
#undef TEST_INV74,3529
#undef TEST_SQRT75,3545
#define P_MOD_64 76,3562
#  define C_PRIME83,3881
#undef PROG89,3959
#define PROG 90,3971
#define TIMES101,4271
#undef TIMES117,4714
#define _POSIX_SOURCE125,4818
#   define HZ	137,5087
#   define HZ 139,5135
#  define HZ 142,5203
#undef BUFSIZE146,5250
#define BUFSIZE	147,5265
int run=148,5296
#define START	151,5337
#define STOP	152,5353
static double Time_F(154,5369
#define NUM_SIZES	190,5934
static int sizes[sizes194,6021
static int mul_c[mul_c195,6084
#define RAND_SEED(198,6215
int main(202,6376
void do_mul_exp(226,6726
#    define ADD 239,7005
#    define REM 240,7023
#    define ADD 242,7049
#    define REM 243,7070
static void genprime_cb(340,9301

crypto/bn/divtest.c,59
static int Rand(4,51
static void bug(11,155
main(21,346

crypto/bn/bn_sqrt.c,41
BIGNUM *BN_mod_sqrt(BN_mod_sqrt62,2815

crypto/bn/asm/s390x.S,1521
.ident 1,0
.globl	16,512
.type	17,536
.align	18,569
bn_mul_add_words:bn_mul_add_words19,578
.Loop4_madd:.Loop4_madd34,934
.Lend_madd:.Lend_madd69,1578
.Loop1_madd:.Loop1_madd75,1673
.size	88,1914
.globl	91,2029
.type	92,2049
.align	93,2078
bn_mul_words:bn_mul_words94,2087
.Loop4_mul:.Loop4_mul109,2438
.Lend_mul:.Lend_mul136,2923
.Loop1_mul:.Loop1_mul142,3017
.size	153,3208
.globl	156,3298
.type	157,3318
.align	158,3347
bn_sqr_words:bn_sqr_words159,3356
.Loop4_sqr:.Loop4_sqr167,3465
.Loop1_sqr:.Loop1_sqr196,3840
.Lend_sqr:.Lend_sqr206,3967
.size	209,4009
.globl	212,4104
.type	213,4124
.align	214,4153
bn_div_words:bn_div_words215,4162
.size	219,4212
.globl	222,4320
.type	223,4340
.align	224,4369
bn_add_words:bn_add_words225,4378
.Loop4_add:.Loop4_add238,4704
.Lexit_add:.Lexit_add258,5112
.Loop1_add:.Loop1_add264,5178
.size	273,5309
.globl	276,5417
.type	277,5437
.align	278,5466
bn_sub_words:bn_sub_words279,5475
.Loop1_sub:.Loop1_sub292,5804
.Loop4_sub:.Loop4_sub301,5935
.Lexit_sub:.Lexit_sub321,6343
.size	327,6422
.globl	341,6700
.type	342,6721
.align	343,6751
bn_mul_comba8:bn_mul_comba8344,6760
.size	464,8989
.globl	467,9089
.type	468,9110
.align	469,9140
bn_mul_comba4:bn_mul_comba4470,9149
.size	517,9892
.globl	537,10297
.type	538,10318
.align	539,10348
bn_sqr_comba8:bn_sqr_comba8540,10357
.size	631,11869
.globl 634,11956
.type	635,11977
.align	636,12007
bn_sqr_comba4:bn_sqr_comba4637,12016
.size	678,12600

crypto/bn/asm/ia64.S,2240
.ident	3,16
.ident	4,45
.global	168,7231
.proc	169,7253
.align	170,7273
.skip	171,7283
bn_add_words:bn_add_words172,7343
.L_bn_add_words_ctop:.L_bn_add_words_ctop195,7824
.L_bn_add_words_cend:.L_bn_add_words_cend208,8236
.endp	216,8384
.global	221,8486
.proc	222,8508
.align	223,8528
.skip	224,8538
bn_sub_words:bn_sub_words225,8598
.L_bn_sub_words_ctop:.L_bn_sub_words_ctop248,9079
.L_bn_sub_words_cend:.L_bn_sub_words_cend261,9491
.endp	269,9639
.global	280,9790
.proc	281,9812
.align	282,9832
.skip	283,9842
bn_mul_words:bn_mul_words284,9902
.L_bn_mul_words_ctop:.L_bn_mul_words_ctop328,11289
.L_bn_mul_words_cend:.L_bn_mul_words_cend342,11719
.pred.rel	345,11761
.L_bn_mul_words_ctop:.L_bn_mul_words_ctop369,12727
.L_bn_mul_words_cend:.L_bn_mul_words_cend375,12914
.endp	387,13130
.global	394,13248
.proc	395,13274
.align	396,13298
.skip	397,13308
bn_mul_add_words:bn_mul_add_words398,13368
.L_bn_mul_add_words_ctop:.L_bn_mul_add_words_ctop432,14508
.pred.rel	433,14534
.L_bn_mul_add_words_cend:.L_bn_mul_add_words_cend446,15045
.endp	455,15247
.global	462,15349
.proc	463,15371
.align	464,15391
.skip	465,15401
bn_sqr_words:bn_sqr_words466,15462
.L_bn_sqr_words_ctop:.L_bn_sqr_words_ctop499,16413
.L_bn_sqr_words_cend:.L_bn_sqr_words_cend512,16746
.endp	520,16897
.global	542,17977
.proc	543,18000
.align	544,18021
bn_sqr_comba8:bn_sqr_comba8545,18031
.endp	564,18393
.global	613,20390
.proc	614,20413
.align	615,20434
bn_mul_comba8:bn_mul_comba8616,20444
.L_cheat_entry_point8:.L_cheat_entry_point8633,20772
.endp	1156,35159
.global	1170,35539
.proc	1171,35562
.align	1172,35583
bn_sqr_comba4:bn_sqr_comba41173,35593
.endp	1192,35957
.global	1202,36168
.proc	1203,36191
.align	1204,36212
bn_mul_comba4:bn_mul_comba41205,36222
.L_cheat_entry_point4:.L_cheat_entry_point41222,36552
.endp	1372,40439
.global	1403,40967
.global	1404,40982
.proc	1405,41004
.align	1406,41024
bn_div_words:bn_div_words1407,41034
.L_divw_shift:.L_divw_shift1426,41379
.L_divw_1st_iter:.L_divw_1st_iter1471,42380
.L_divw_2nd_iter:.L_divw_2nd_iter1501,43164
.align	1537,44636
.skip	1538,44646
.L_udiv64_32_b6:.L_udiv64_32_b61539,44655
.endp	1554,45287

crypto/bn/asm/mips3.s,2104
.asciiz	2,7
.asciiz	3,38
.set	61,2183
.set	62,2193
.align	66,2226
.L_bn_mul_add_words_proceed:.L_bn_mul_add_words_proceed75,2361
.L_bn_mul_add_words_loop:.L_bn_mul_add_words_loop81,2473
.L_bn_mul_add_words_return:.L_bn_mul_add_words_return147,3435
.L_bn_mul_add_words_tail:.L_bn_mul_add_words_tail150,3471
.align	195,4072
.L_bn_mul_words_proceed:.L_bn_mul_words_proceed204,4199
.L_bn_mul_words_loop:.L_bn_mul_words_loop210,4303
.L_bn_mul_words_return:.L_bn_mul_words_return258,4924
.L_bn_mul_words_tail:.L_bn_mul_words_tail261,4956
.align	294,5387
.L_bn_sqr_words_proceed:.L_bn_sqr_words_proceed303,5514
.L_bn_sqr_words_loop:.L_bn_sqr_words_loop309,5618
.L_bn_sqr_words_return:.L_bn_sqr_words_return350,6124
.L_bn_sqr_words_tail:.L_bn_sqr_words_tail354,6170
.align	381,6511
.L_bn_add_words_proceed:.L_bn_add_words_proceed390,6638
.L_bn_add_words_loop:.L_bn_add_words_loop396,6740
.L_bn_add_words_return:.L_bn_add_words_return445,7427
.L_bn_add_words_tail:.L_bn_add_words_tail448,7459
.align	481,7933
.L_bn_sub_words_proceed:.L_bn_sub_words_proceed490,8060
.L_bn_sub_words_loop:.L_bn_sub_words_loop496,8162
.L_bn_sub_words_return:.L_bn_sub_words_return542,8808
.L_bn_sub_words_tail:.L_bn_sub_words_tail545,8840
.align 577,9299
.L_bn_div_3_words_proceed:.L_bn_div_3_words_proceed592,9644
.L_bn_div_3_words_inner_loop:.L_bn_div_3_words_inner_loop602,9793
.L_bn_div_3_words_inner_loop_done:.L_bn_div_3_words_inner_loop_done618,10085
.align	622,10148
.L_bn_div_words_proceed:.L_bn_div_words_proceed631,10335
.L_bn_div_words_body:.L_bn_div_words_body655,10667
.L_bn_div_words_skip_div1:.L_bn_div_words_skip_div1669,10897
.L_bn_div_words_inner_loop1:.L_bn_div_words_inner_loop1676,10996
.L_bn_div_words_inner_loop1_done:.L_bn_div_words_inner_loop1_done690,11246
.L_bn_div_words_skip_div2:.L_bn_div_words_skip_div2702,11445
.L_bn_div_words_inner_loop2:.L_bn_div_words_inner_loop2710,11554
.L_bn_div_words_inner_loop2_done:.L_bn_div_words_inner_loop2_done724,11804
.align	762,12447
.align	1390,24072
.align	1554,26887
.align	2068,35410

crypto/bn/asm/x86_64-gcc.c,722
#define BN_ULONG 59,2420
#define BN_ULONG 61,2462
#undef mul64,2501
#undef mul_add65,2512
#undef sqr66,2527
#define mul_add(73,2693
#define mul(90,3071
#define sqr(103,3359
BN_ULONG bn_mul_add_words(109,3454
BN_ULONG bn_mul_words(133,3933
void bn_sqr_words(156,4371
BN_ULONG bn_div_words(176,4727
BN_ULONG bn_add_words 187,4903
BN_ULONG bn_sub_words 210,5319
#define BN_MASK2 233,5762
BN_ULONG bn_sub_words(234,5799
#define mul_add_c(278,6783
#define mul_add_c2(286,6964
#define mul_add_c(296,7221
#define sqr_add_c(311,7537
#define mul_add_c2(326,7849
#define sqr_add_c2(350,8343
void bn_mul_comba8(353,8417
void bn_mul_comba4(457,10853
void bn_sqr_comba8(497,11611
void bn_sqr_comba4(573,13012

crypto/bn/asm/sparcv8plus.S,2291
.ident	1,0
.ident	2,36
.section	165,5476
.file	166,5511
.align	168,5543
.global 170,5554
bn_mul_add_words:bn_mul_add_words177,5676
.L_bn_mul_add_words_proceed:.L_bn_mul_add_words_proceed187,5810
.L_bn_mul_add_words_loop:.L_bn_mul_add_words_loop193,5933
.L_bn_mul_add_words_return:.L_bn_mul_add_words_return234,6624
.L_bn_mul_add_words_tail:.L_bn_mul_add_words_tail238,6672
.type	267,7150
.size	268,7183
.align	270,7228
.global 272,7239
bn_mul_words:bn_mul_words279,7353
.L_bn_mul_words_proceeed:.L_bn_mul_words_proceeed289,7480
.L_bn_mul_words_loop:.L_bn_mul_words_loop295,7596
.L_bn_mul_words_return:.L_bn_mul_words_return330,8147
.L_bn_mul_words_tail:.L_bn_mul_words_tail334,8191
.type	357,8554
.size	358,8583
.align 360,8620
.global	361,8631
bn_sqr_words:bn_sqr_words367,8716
.L_bn_sqr_words_proceeed:.L_bn_sqr_words_proceeed377,8843
.L_bn_sqr_words_loop:.L_bn_sqr_words_loop383,8931
.L_bn_sqr_words_return:.L_bn_sqr_words_return417,9484
.L_bn_sqr_words_tail:.L_bn_sqr_words_tail421,9524
.type	445,9902
.size	446,9931
.align	448,9968
.global 449,9978
bn_div_words:bn_div_words454,10057
.type	461,10159
.size	462,10188
.align	464,10225
.global 466,10236
bn_add_words:bn_add_words472,10336
.L_bn_add_words_proceed:.L_bn_add_words_proceed479,10447
.L_bn_add_words_loop:.L_bn_add_words_loop484,10560
.L_bn_add_words_return:.L_bn_add_words_return513,11050
.L_bn_add_words_tail:.L_bn_add_words_tail519,11113
.type	541,11459
.size	542,11488
.global 544,11525
bn_sub_words:bn_sub_words550,11625
.L_bn_sub_words_proceed:.L_bn_sub_words_proceed557,11736
.L_bn_sub_words_loop:.L_bn_sub_words_loop562,11849
.L_bn_sub_words_return:.L_bn_sub_words_return591,12338
.L_bn_sub_words_tail:.L_bn_sub_words_tail597,12401
.type	619,12767
.size	620,12796
.align	665,13815
.global 666,13825
bn_mul_comba8:bn_mul_comba8671,13905
.type	1017,22114
.size	1018,22144
.align	1020,22183
.global 1022,22194
bn_mul_comba4:bn_mul_comba41027,22274
.type	1133,24615
.size	1134,24645
.align	1136,24684
.global 1138,24695
bn_sqr_comba8:bn_sqr_comba81139,24717
.type	1449,31030
.size	1450,31060
.align	1452,31099
.global 1454,31110
bn_sqr_comba4:bn_sqr_comba41459,31185
.type	1555,33051
.size	1556,33081
.align	1558,33120

crypto/bn/asm/pa-risc2W.s,1698
r_ptr 52,1513
a_ptr 53,1535
b_ptr 54,1557
num 55,1579
w 56,1601
n 57,1623
top_overflow 64,1684
high_mask 65,1707
fm1 83,2048
fm 84,2072
ht_temp 85,2096
ht_temp_1 86,2120
lt_temp 87,2144
lt_temp_1 88,2168
fm1_1 89,2192
fm_1 90,2216
fw_h 92,2241
fw_l 93,2265
fw 94,2289
fht_0 96,2313
flt_0 97,2337
t_float_0 98,2361
fht_1 100,2385
flt_1 101,2409
t_float_1 102,2433
tmp_0 104,2457
tmp_1 105,2480
m_0 106,2503
m_1 107,2527
ht_0 108,2551
ht_1 109,2575
lt_0 110,2597
lt_1 111,2619
m1_0 112,2641
m1_1 113,2664
rp_val 114,2687
rp_val_1 115,2709
t 573,19095
b 574,19108
l 575,19121
t1 647,20828
t2 648,20847
sub_tmp1 649,20866
sub_tmp2 650,20885
a0 917,29165
a0L 918,29186
a0R 919,29208
a1 921,29231
a1L 922,29252
a1R 923,29274
a2 925,29297
a2L 926,29318
a2R 927,29340
a3 929,29363
a3L 930,29384
a3R 931,29406
a4 933,29429
a4L 934,29450
a4R 935,29472
a5 937,29495
a5L 938,29516
a5R 939,29538
a6 941,29561
a6L 942,29582
a6R 943,29604
a7 945,29627
a7L 946,29648
a7R 947,29670
b0 949,29693
b0L 950,29714
b0R 951,29736
b1 953,29759
b1L 954,29780
b1R 955,29802
ftemp1 961,29905
ftemp2 962,29925
ftemp3 963,29945
ftemp4 964,29965
b2 970,30027
b2L 971,30047
b2R 972,30068
b3 974,30090
b3L 975,30110
b3R 976,30131
b4 978,30153
b4L 979,30174
b4R 980,30196
b5 982,30219
b5L 983,30240
b5R 984,30262
b6 986,30285
b6L 987,30306
b6R 988,30328
b7 990,30351
b7L 991,30372
b7R 992,30394
c1 994,30417
temp1 995,30453
temp2 996,30489
temp3 997,30525
m1 999,30562
c2 1000,30588
high_one 1001,30614
ht 1002,30636
lt 1003,30658
m 1004,30680
c3 1005,30702
SQR_ADD_C 1007,30725
SQR_ADD_C2 1035,31583
MUL_ADD_C 1295,38565

crypto/bn/asm/sparcv8.S,2397
.ident	1,0
.ident	2,32
.section	35,1011
.file	36,1046
.align	38,1074
.global 40,1085
bn_mul_add_words:bn_mul_add_words47,1207
.L_bn_mul_add_words_proceed:.L_bn_mul_add_words_proceed54,1300
.L_bn_mul_add_words_loop:.L_bn_mul_add_words_loop59,1386
.L_bn_mul_add_words_return:.L_bn_mul_add_words_return108,2140
.L_bn_mul_add_words_tail:.L_bn_mul_add_words_tail113,2193
.type	148,2733
.size	149,2766
.align	151,2811
.global 153,2822
bn_mul_words:bn_mul_words160,2936
.L_bn_mul_words_proceeed:.L_bn_mul_words_proceeed167,3022
.L_bn_mul_words_loop:.L_bn_mul_words_loop172,3101
.L_bn_mul_words_return:.L_bn_mul_words_return210,3645
.L_bn_mul_words_tail:.L_bn_mul_words_tail215,3694
.type	242,4076
.size	243,4105
.align 245,4142
.global	246,4153
bn_sqr_words:bn_sqr_words252,4238
.L_bn_sqr_words_proceeed:.L_bn_sqr_words_proceeed259,4324
.L_bn_sqr_words_loop:.L_bn_sqr_words_loop264,4403
.L_bn_sqr_words_return:.L_bn_sqr_words_return299,4879
.L_bn_sqr_words_tail:.L_bn_sqr_words_tail303,4919
.type	328,5256
.size	329,5285
.align	331,5322
.global 333,5333
bn_div_words:bn_div_words338,5412
.type	344,5467
.size	345,5496
.align	347,5533
.global 349,5544
bn_add_words:bn_add_words355,5644
.L_bn_add_words_proceed:.L_bn_add_words_proceed362,5729
.L_bn_add_words_loop:.L_bn_add_words_loop369,5873
.L_bn_add_words_warn_loop:.L_bn_add_words_warn_loop371,5909
.L_bn_add_words_return:.L_bn_add_words_return402,6372
.L_bn_add_words_tail:.L_bn_add_words_tail406,6416
.type	432,6809
.size	433,6838
.align	435,6875
.global 437,6886
bn_sub_words:bn_sub_words443,6986
.L_bn_sub_words_proceed:.L_bn_sub_words_proceed450,7071
.L_bn_sub_words_loop:.L_bn_sub_words_loop457,7215
.L_bn_sub_words_warm_loop:.L_bn_sub_words_warm_loop459,7251
.L_bn_sub_words_return:.L_bn_sub_words_return491,7719
.L_bn_sub_words_tail:.L_bn_sub_words_tail495,7763
.type	522,8161
.size	523,8190
.align	558,8726
.global 559,8736
bn_mul_comba8:bn_mul_comba8564,8816
.type	933,17259
.size	934,17289
.align	936,17328
.global 938,17339
bn_mul_comba4:bn_mul_comba4943,17419
.type	1047,19678
.size	1048,19708
.align	1050,19747
.global 1052,19758
bn_sqr_comba8:bn_sqr_comba81053,19780
.type	1357,26225
.size	1358,26255
.align	1360,26294
.global 1362,26305
bn_sqr_comba4:bn_sqr_comba41367,26380
.type	1455,28166
.size	1456,28196
.align	1458,28235

crypto/bn/asm/pa-risc2.s,1703
r_ptr 56,1745
a_ptr 57,1767
b_ptr 58,1789
num 59,1811
n 60,1833
top_overflow 72,2059
high_mask 73,2082
fm1 91,2427
fm 92,2451
ht_temp 93,2475
ht_temp_1 94,2499
lt_temp 95,2523
lt_temp_1 96,2547
fm1_1 97,2571
fm_1 98,2595
fw_h 100,2620
fw_l 101,2644
fw 102,2668
fht_0 104,2692
flt_0 105,2716
t_float_0 106,2740
fht_1 108,2764
flt_1 109,2788
t_float_1 110,2812
tmp_0 112,2836
tmp_1 113,2859
m_0 114,2882
m_1 115,2906
ht_0 116,2930
ht_1 117,2954
lt_0 118,2976
lt_1 119,2998
m1_0 120,3020
m1_1 121,3043
rp_val 122,3066
rp_val_1 123,3088
t 584,19531
b 585,19544
l 586,19557
t1 658,21333
t2 659,21352
sub_tmp1 660,21371
sub_tmp2 661,21390
a0 930,30969
a0L 931,30990
a0R 932,31012
a1 934,31035
a1L 935,31056
a1R 936,31078
a2 938,31101
a2L 939,31122
a2R 940,31144
a3 942,31167
a3L 943,31188
a3R 944,31210
a4 946,31233
a4L 947,31254
a4R 948,31276
a5 950,31299
a5L 951,31320
a5R 952,31342
a6 954,31365
a6L 955,31386
a6R 956,31408
a7 958,31431
a7L 959,31452
a7R 960,31474
b0 962,31497
b0L 963,31518
b0R 964,31540
b1 966,31563
b1L 967,31584
b1R 968,31606
ftemp1 974,31709
ftemp2 975,31729
ftemp3 976,31749
ftemp4 977,31769
b2 983,31831
b2L 984,31851
b2R 985,31872
b3 987,31894
b3L 988,31914
b3R 989,31935
b4 991,31957
b4L 992,31978
b4R 993,32000
b5 995,32023
b5L 996,32044
b5R 997,32066
b6 999,32089
b6L 1000,32110
b6R 1001,32132
b7 1003,32155
b7L 1004,32176
b7R 1005,32198
c1 1007,32221
temp1 1008,32257
temp2 1009,32293
temp3 1010,32329
m1 1012,32366
c2 1013,32392
high_one 1014,32418
ht 1015,32440
lt 1016,32462
m 1017,32484
c3 1018,32506
SQR_ADD_C 1020,32529
SQR_ADD_C2 1048,33387
MUL_ADD_C 1308,40369

crypto/bn/bn_gcd.c,184
int BN_gcd(117,5918
static BIGNUM *euclid(euclid147,6469
BIGNUM *BN_mod_inverse(BN_mod_inverse208,7517
static BIGNUM *BN_mod_inverse_no_branch(BN_mod_inverse_no_branch506,14264

crypto/bn/exp.c,69
#define SIZE	7,82
#define NUM	8,99
#define MOD	9,119
main(11,144

crypto/bn/bn_div.c,209
int BN_div(67,3311
#  define bn_div_words(144,5173
#  define REMAINDER_IS_ALREADY_CALCULATED152,5340
#  define bn_div_words(158,5551
#  define REMAINDER_IS_ALREADY_CALCULATED166,5718
int BN_div(179,6185

crypto/bn/vms-helper.c,28
bn_div_words_abort(60,2711

crypto/bn/bn_x931p.c,150
static int bn_x931_derive_pi(69,2974
int BN_X931_derive_prime_ex(96,3615
int BN_X931_generate_Xpq(196,5313
int BN_X931_generate_prime_ex(243,6424

crypto/bn/bn_nist.c,3228
#define BN_NIST_192_TOP	63,2762
#define BN_NIST_224_TOP	64,2812
#define BN_NIST_256_TOP	65,2862
#define BN_NIST_384_TOP	66,2912
#define BN_NIST_521_TOP	67,2962
static const BN_ULONG _nist_p_192[_nist_p_19271,3099
static const BN_ULONG _nist_p_192_sqr[_nist_p_192_sqr76,3369
static const BN_ULONG _nist_p_224[_nist_p_22480,3552
static const BN_ULONG _nist_p_224_sqr[_nist_p_224_sqr86,3833
static const BN_ULONG _nist_p_256[_nist_p_25692,4042
static const BN_ULONG _nist_p_256_sqr[_nist_p_256_sqr104,4578
static const BN_ULONG _nist_p_384[_nist_p_384110,4809
static const BN_ULONG _nist_p_384_sqr[_nist_p_384_sqr122,5565
static const BN_ULONG _nist_p_521[_nist_p_521128,5884
static const BN_ULONG _nist_p_521_sqr[_nist_p_521_sqr134,6132
static const BN_ULONG _nist_p_192[_nist_p_192143,6586
static const BN_ULONG _nist_p_192_sqr[_nist_p_192_sqr148,6856
static const BN_ULONG _nist_p_224[_nist_p_224152,7039
static const BN_ULONG _nist_p_224_sqr[_nist_p_224_sqr158,7267
static const BN_ULONG _nist_p_256[_nist_p_256164,7476
static const BN_ULONG _nist_p_256_sqr[_nist_p_256_sqr176,8012
static const BN_ULONG _nist_p_384[_nist_p_384182,8243
static const BN_ULONG _nist_p_384_sqr[_nist_p_384_sqr194,8999
static const BN_ULONG _nist_p_521[_nist_p_521200,9318
static const BN_ULONG _nist_p_521_sqr[_nist_p_521_sqr204,9552
static const BIGNUM _bignum_nist_p_192 217,10019
static const BIGNUM _bignum_nist_p_224 226,10157
static const BIGNUM _bignum_nist_p_256 235,10295
static const BIGNUM _bignum_nist_p_384 244,10433
static const BIGNUM _bignum_nist_p_521 253,10571
const BIGNUM *BN_get0_nist_prime_192(BN_get0_nist_prime_192263,10707
const BIGNUM *BN_get0_nist_prime_224(BN_get0_nist_prime_224268,10786
const BIGNUM *BN_get0_nist_prime_256(BN_get0_nist_prime_256273,10865
const BIGNUM *BN_get0_nist_prime_384(BN_get0_nist_prime_384278,10944
const BIGNUM *BN_get0_nist_prime_521(BN_get0_nist_prime_521283,11023
static void nist_cp_bn_0(289,11103
static void nist_cp_bn(303,11400
#define bn_cp_64(312,11588
#define bn_64_set_0(313,11653
#define bn_cp_32_naked(318,11846
#define bn_32_set_0(320,12029
#define bn_cp_32(321,12105
#   define NIST_INT64 324,12240
#   define NIST_INT64 326,12275
#define bn_cp_64(330,12330
#define bn_64_set_0(335,12451
#define bn_cp_32(340,12544
#define bn_32_set_0(341,12609
#  define NIST_INT64 343,12703
#  define NIST_INT64 345,12757
#define nist_set_192(349,12825
int BN_nist_mod_192(356,12984
		BN_ULONG	bn[bn363,13161
typedef BN_ULONG (*bn_addsub_f)bn_addsub_f463,15859
#define nist_set_224(465,15943
int BN_nist_mod_224(476,16258
	union { bn_addsub_f f;486,16492
	union { bn_addsub_f f; PTR_SIZE_INT p;486,16492
#define nist_set_256(618,20212
int BN_nist_mod_256(630,20566
		BN_ULONG bn[bn637,20737
	union { bn_addsub_f f;643,20912
	union { bn_addsub_f f; PTR_SIZE_INT p;643,20912
#define nist_set_384(817,25346
int BN_nist_mod_384(833,25882
		BN_ULONG bn[bn840,26053
	union { bn_addsub_f f;846,26228
	union { bn_addsub_f f; PTR_SIZE_INT p;846,26228
#define BN_NIST_521_RSHIFT	1038,31271
#define BN_NIST_521_LSHIFT	1039,31313
#define BN_NIST_521_TOP_MASK	1040,31370
int BN_nist_mod_521(1042,31441

crypto/bn/bn_lcl.h,1657
#define HEADER_BN_LCL_H113,5853
#define BN_window_bits_for_exponent_size(148,6759
#define BN_window_bits_for_exponent_size(158,7061
#define MOD_EXP_CTIME_MIN_CACHE_LINE_WIDTH	170,7339
#define MOD_EXP_CTIME_MIN_CACHE_LINE_MASK	171,7389
#  define BN_window_bits_for_ctime_exponent_size(187,8052
#  define BN_MAX_WINDOW_BITS_FOR_CTIME_EXPONENT_SIZE	192,8191
#  define BN_window_bits_for_ctime_exponent_size(196,8297
#  define BN_MAX_WINDOW_BITS_FOR_CTIME_EXPONENT_SIZE	200,8415
#define BN_MULL_SIZE_NORMAL	207,8548
#define BN_MUL_RECURSIVE_SIZE_NORMAL	208,8592
#define BN_SQR_RECURSIVE_SIZE_NORMAL	209,8654
#define BN_MUL_LOW_RECURSIVE_SIZE_NORMAL	210,8706
#define BN_MONT_CTX_SET_SIZE_WORD	211,8761
#   define BN_UMULT_HIGH(240,10125
#   define BN_UMULT_HIGH(242,10239
#   define BN_UMULT_HIGH(251,10529
#   define BN_UMULT_HIGH(261,10860
#   define BN_UMULT_LOHI(268,11038
#   define BN_UMULT_HIGH(280,11487
#   define BN_UMULT_LOHI(281,11535
#   define BN_UMULT_HIGH(285,11740
#   define BN_UMULT_LOHI(291,11891
#define Lw(302,12165
#define Hw(303,12209
#define bn_clear_top2max(306,12287
#define bn_clear_top2max(314,12458
#define mul_add(318,12510
#define mul(325,12626
#define sqr(332,12732
#define mul_add(340,12861
#define mul(352,13101
#define sqr(361,13280
#define mul_add(367,13394
#define mul(380,13654
#define sqr(390,13852
#define LBITS(401,14055
#define HBITS(402,14088
#define	L2HBITS(403,14133
#define LLBITS(405,14180
#define LHBITS(406,14213
#define	LL2HBITS(407,14258
#define mul64(409,14317
#define sqr64(427,14627
#define mul_add(444,14888
#define mul(460,15164
#undef bn_div_words476,15477

crypto/bn/bn_mpi.c,60
int BN_bn2mpi(63,3257
BIGNUM *BN_mpi2bn(BN_mpi2bn91,3734

crypto/bn/bn_add.c,85
int BN_add(64,3279
int BN_uadd(105,3883
int BN_usub(166,4764
int BN_sub(263,6139

crypto/bn/bn_const.c,507
BIGNUM *get_rfc2409_prime_768(get_rfc2409_prime_76814,294
BIGNUM *get_rfc2409_prime_1024(get_rfc2409_prime_102437,1189
BIGNUM *get_rfc3526_prime_1536(get_rfc3526_prime_153663,2248
BIGNUM *get_rfc3526_prime_2048(get_rfc3526_prime_204893,3602
BIGNUM *get_rfc3526_prime_3072(get_rfc3526_prime_3072129,5295
BIGNUM *get_rfc3526_prime_4096(get_rfc3526_prime_4096175,7657
BIGNUM *get_rfc3526_prime_6144(get_rfc3526_prime_6144232,10692
BIGNUM *get_rfc3526_prime_8192(get_rfc3526_prime_8192310,15071

crypto/bn/bn_blind.c,940
#define BN_BLINDING_COUNTER	116,5893
struct bn_blinding_st118,5925
	BIGNUM *A;A120,5950
	BIGNUM *Ai;Ai121,5962
	BIGNUM *e;e122,5975
	BIGNUM *mod;mod123,5987
	unsigned long thread_id;125,6054
	CRYPTO_THREADID tid;128,6182
	int counter;129,6204
	unsigned long flags;130,6218
	BN_MONT_CTX *m_ctx;m_ctx131,6240
	int (*bn_mod_exp)bn_mod_exp132,6261
BN_BLINDING *BN_BLINDING_new(BN_BLINDING_new137,6391
void BN_BLINDING_free(174,7330
int BN_BLINDING_update(186,7569
int BN_BLINDING_convert(219,8280
int BN_BLINDING_convert_ex(224,8400
int BN_BLINDING_invert(252,8899
int BN_BLINDING_invert_ex(257,9017
unsigned long BN_BLINDING_get_thread_id(280,9422
void BN_BLINDING_set_thread_id(285,9513
CRYPTO_THREADID *BN_BLINDING_thread_id(BN_BLINDING_thread_id291,9610
unsigned long BN_BLINDING_get_flags(296,9689
void BN_BLINDING_set_flags(301,9772
BN_BLINDING *BN_BLINDING_create_param(BN_BLINDING_create_param306,9862

crypto/bn/bn_print.c,294
static const char Hex[Hex65,3306
char *BN_bn2hex(BN_bn2hex68,3395
char *BN_bn2dec(BN_bn2dec103,3984
#define BUF_REMAIN 127,4654
int BN_hex2bn(172,5423
int BN_dec2bn(239,6529
int BN_asc2bn(297,7482
int BN_print_fp(320,7823
int BN_print(334,8032
char *BN_options(BN_options361,8503

crypto/bn/bn_ctx.c,1691
#define NDEBUG59,2778
#define BN_CTX_POOL_SIZE	82,3411
#define BN_CTX_START_FRAMES	84,3512
typedef struct bignum_pool_item91,3651
	BIGNUM vals[vals94,3711
	struct bignum_pool_item *prev,prev96,3768
	struct bignum_pool_item *prev, *next;next96,3768
	} BN_POOL_ITEM;97,3807
typedef struct bignum_pool99,3874
	BN_POOL_ITEM *head,head102,3929
	BN_POOL_ITEM *head, *current,current102,3929
	BN_POOL_ITEM *head, *current, *tail;tail102,3929
	unsigned used,104,4006
	unsigned used, size;104,4006
	} BN_POOL;105,4028
typedef struct bignum_ctx_stack119,4382
	unsigned int *indexes;indexes122,4463
	unsigned int depth,124,4554
	unsigned int depth, size;124,4554
	} BN_STACK;125,4581
struct bignum_ctx139,4923
	BN_POOL pool;142,4970
	BN_STACK stack;144,5024
	unsigned int used;146,5089
	int err_stack;148,5140
	int too_many;150,5217
static const char *ctxdbg_cur ctxdbg_cur155,5295
static void ctxdbg(156,5333
#define CTXDBG_ENTRY(181,5931
#define CTXDBG_EXIT(186,6080
#define CTXDBG_RET(190,6195
#define CTXDBG_ENTRY(192,6229
#define CTXDBG_EXIT(193,6260
#define CTXDBG_RET(194,6285
void BN_CTX_init(200,6474
BN_CTX *BN_CTX_new(BN_CTX_new214,6861
void BN_CTX_free(231,7178
void BN_CTX_start(255,7692
void BN_CTX_end(270,8061
BIGNUM *BN_CTX_get(BN_CTX_get288,8465
static void BN_STACK_init(312,9009
static void BN_STACK_finish(318,9104
static void BN_STACK_reset(324,9224
static int BN_STACK_push(330,9295
static unsigned int BN_STACK_pop(351,9834
static void BN_POOL_init(360,9967
static void BN_POOL_finish(366,10075
static void BN_POOL_reset(384,10395
static BIGNUM *BN_POOL_get(BN_POOL_get403,10690
static void BN_POOL_release(438,11493

crypto/o_dir.h,89
#define O_DIR_H35,1678
  typedef struct OPENSSL_dir_context_st OPENSSL_DIR_CTX;41,1735

crypto/opensslv.h,263
#define HEADER_OPENSSLV_H2,26
#define OPENSSL_VERSION_NUMBER	28,1011
#define OPENSSL_VERSION_TEXT	30,1074
#define OPENSSL_VERSION_TEXT	32,1143
#define OPENSSL_VERSION_PTEXT	34,1208
#define SHLIB_VERSION_HISTORY 85,3649
#define SHLIB_VERSION_NUMBER 86,3682

crypto/buffer/buffer.h,351
#define HEADER_BUFFER_H60,3223
struct buf_mem_st77,3480
	size_t length;79,3501
	char *data;data80,3547
	size_t max;81,3560
#define BUF_F_BUF_MEMDUP	107,4379
#define BUF_F_BUF_MEM_GROW	108,4412
#define BUF_F_BUF_MEM_GROW_CLEAN	109,4447
#define BUF_F_BUF_MEM_NEW	110,4487
#define BUF_F_BUF_STRDUP	111,4521
#define BUF_F_BUF_STRNDUP	112,4554

crypto/buffer/buf_str.c,171
char *BUF_strdup(BUF_strdup63,3269
char *BUF_strndup(BUF_strndup69,3381
void *BUF_memdup(BUF_memdup85,3645
size_t BUF_strlcpy(100,3897
size_t BUF_strlcat(113,4097

crypto/buffer/buffer.c,195
#define LIMIT_BEFORE_EXPANSION 66,3464
BUF_MEM *BUF_MEM_new(BUF_MEM_new68,3507
void BUF_MEM_free(84,3747
int BUF_MEM_grow(97,3928
int BUF_MEM_grow_clean(139,4678
void BUF_reverse(182,5506

crypto/buffer/buf_err.c,215
#define ERR_FUNC(68,2981
#define ERR_REASON(69,3033
static ERR_STRING_DATA BUF_str_functs[BUF_str_functs71,3092
static ERR_STRING_DATA BUF_str_reasons[BUF_str_reasons82,3438
void ERR_load_BUF_strings(89,3505

crypto/hmac/hm_pmeth.c,488
	const EVP_MD *md;md70,2940
	ASN1_OCTET_STRING ktmp;71,2981
	HMAC_CTX ctx;72,3033
	} HMAC_PKEY_CTX;73,3048
static int pkey_hmac_init(75,3067
static int pkey_hmac_copy(94,3431
static void pkey_hmac_cleanup(114,3860
static int pkey_hmac_keygen(128,4172
static int int_update(142,4470
static int hmac_signctx_init(150,4653
static int hmac_signctx(159,4926
static int pkey_hmac_ctrl(178,5274
static int pkey_hmac_ctrl_str(210,5872
const EVP_PKEY_METHOD hmac_pkey_meth 238,6391

crypto/hmac/hmac.h,357
#define HEADER_HMAC_H59,3216
#define HMAC_MAX_MD_CBLOCK	69,3355
typedef struct hmac_ctx_st75,3458
	const EVP_MD *md;md77,3488
	EVP_MD_CTX md_ctx;78,3507
	EVP_MD_CTX i_ctx;79,3527
	EVP_MD_CTX o_ctx;80,3546
	unsigned int key_length;81,3565
	unsigned char key[key82,3591
	} HMAC_CTX;83,3631
#define HMAC_size(85,3645
#define HMAC_cleanup(91,3765

crypto/hmac/hmactest.c,268
int main(66,3304
static struct test_st82,3558
	unsigned char key[key84,3583
	int key_len;85,3607
	unsigned char data[data86,3621
	int data_len;87,3646
	unsigned char *digest;digest88,3661
	} test[test89,3685
int main(124,4610
static char *pt(pt165,5475

crypto/hmac/hm_ameth.c,271
#define HMAC_TEST_PRIVATE_KEY_FORMAT63,2808
static int hmac_size(70,2969
static void hmac_key_free(75,3044
static int hmac_pkey_ctrl(87,3261
static int old_hmac_decode(106,3698
static int old_hmac_encode(117,3969
const EVP_PKEY_ASN1_METHOD hmac_asn1_meth 141,4337

crypto/hmac/hmac.c,259
int HMAC_Init_ex(68,3356
int HMAC_Init(149,5183
int HMAC_Update(156,5347
int HMAC_Final(165,5583
void HMAC_CTX_init(187,6086
int HMAC_CTX_copy(194,6221
void HMAC_CTX_cleanup(210,6608
unsigned char *HMAC(HMAC225,6898
void HMAC_CTX_set_flags(246,7353

crypto/cast/cast_spd.c,432
#define TIMES63,3461
#undef TIMES89,4056
#define _POSIX_SOURCE97,4160
#define HZ	107,4361
#define HZ 109,4398
#define BUFSIZE	113,4442
long run=114,4471
#define SIGRETTYPE 119,4576
#define SIGRETTYPE 121,4606
SIGRETTYPE sig_done(125,4667
#define START	135,4774
#define STOP	136,4790
double Time_F(138,4806
int main(174,5359
#define COND(211,6143
#define COUNT(212,6174
#define COND(214,6201
#define COUNT(215,6223

crypto/cast/casttest.c,828
int main(67,3380
#define FULL_TEST75,3498
static unsigned char k[k77,3517
static unsigned char in[in82,3634
static int k_len[k_len84,3706
static unsigned char c[c85,3737
static unsigned char out[out90,3904
static unsigned char in_a[in_a92,3935
static unsigned char in_b[in_b95,4052
static unsigned char c_a[c_a99,4170
static unsigned char c_b[c_b102,4286
char *text=text107,4409
static unsigned char cfb_key[cfb_key109,4454
static unsigned char cfb_iv[cfb_iv113,4577
static unsigned char cfb_buf1[cfb_buf1114,4652
static unsigned char cfb_buf1[40],cfb_buf2[cfb_buf2114,4652
static unsigned char cfb_buf1[40],cfb_buf2[40],cfb_tmp[cfb_tmp114,4652
#define CFB_TEST_SIZE 115,4711
static unsigned char plain[plain116,4736
static unsigned char cfb_cipher64[cfb_cipher64123,4955
int main(134,5275

crypto/cast/c_ofb64.c,33
void CAST_ofb64_encrypt(66,3433

crypto/cast/c_ecb.c,77
const char CAST_version[CAST_version63,3275
void CAST_ecb_encrypt(65,3332

crypto/cast/c_skey.c,168
#define CAST_exp(64,3294
#define S4 71,3430
#define S5 72,3455
#define S6 73,3480
#define S7 74,3505
void CAST_set_key(75,3530
void private_CAST_set_key(81,3690

crypto/cast/c_enc.c,86
void CAST_encrypt(62,3245
void CAST_decrypt(95,3912
void CAST_cbc_encrypt(128,4579

crypto/cast/c_cfb64.c,33
void CAST_cfb64_encrypt(67,3434

crypto/cast/cast_s.h,556
OPENSSL_GLOBAL const CAST_LONG CAST_S_table0[CAST_S_table058,3196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table1[CAST_S_table1124,6196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table2[CAST_S_table2190,9196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table3[CAST_S_table3256,12196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table4[CAST_S_table4322,15196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table5[CAST_S_table5388,18196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table6[CAST_S_table6454,21196
OPENSSL_GLOBAL const CAST_LONG CAST_S_table7[CAST_S_table7520,24196

crypto/cast/cast.h,288
#define HEADER_CAST_H60,3217
#define CAST_ENCRYPT	72,3371
#define CAST_DECRYPT	73,3394
#define CAST_LONG 75,3418
#define CAST_BLOCK	77,3450
#define CAST_KEY_LENGTH	78,3471
typedef struct cast_key_st80,3499
	CAST_LONG data[data82,3529
	int short_key;83,3550
	} CAST_KEY;84,3605

crypto/cast/castopts.c,1361
#define TIMES63,3430
#undef TIMES89,4025
#define _POSIX_SOURCE97,4129
#define CAST_DEFAULT_OPTIONS104,4229
#undef E_CAST106,4259
#define CAST_encrypt 107,4273
#define CAST_decrypt 108,4315
#define CAST_cbc_encrypt 109,4357
#undef HEADER_CAST_LOCL_H110,4407
#define CAST_PTR113,4453
#undef CAST_PTR2114,4470
#undef E_CAST115,4487
#undef CAST_encrypt116,4501
#undef CAST_decrypt117,4521
#undef CAST_cbc_encrypt118,4541
#define CAST_encrypt 119,4565
#define CAST_decrypt 120,4604
#define CAST_cbc_encrypt 121,4643
#undef HEADER_CAST_LOCL_H122,4690
#undef CAST_PTR125,4736
#define CAST_PTR2126,4752
#undef E_CAST127,4770
#undef CAST_encrypt128,4784
#undef CAST_decrypt129,4804
#undef CAST_cbc_encrypt130,4824
#define CAST_encrypt 131,4848
#define CAST_decrypt 132,4888
#define CAST_cbc_encrypt 133,4928
#undef HEADER_CAST_LOCL_H134,4976
#   define HZ	141,5166
#   define HZ 143,5214
#  define HZ 146,5282
#define BUFSIZE	150,5329
long run=151,5358
#define SIGRETTYPE 156,5446
#define SIGRETTYPE 158,5476
SIGRETTYPE sig_done(162,5537
#define START	172,5644
#define STOP	173,5660
double Time_F(175,5676
#define print_name(212,6247
#define print_name(214,6341
#define time_it(217,6423
#define print_it(232,6787
int main(236,6915
#define COND(283,7835
#define COUNT(284,7866
#define COND(286,7893
#define COUNT(287,7915

crypto/cast/cast_lcl.h,525
#undef c2l67,3273
#define c2l(68,3284
#undef c2ln74,3513
#define c2ln(75,3525
#undef l2c90,4016
#define l2c(91,4027
#undef l2cn97,4281
#define l2cn(98,4293
#define n2ln(113,4865
#define l2nn(129,5395
#undef n2l143,5914
#define n2l(144,5925
#undef l2n149,6175
#define l2n(150,6186
#define ROTL(156,6517
#define ROTL(158,6559
#define C_M 161,6632
#define C_0 162,6653
#define C_1 163,6672
#define C_2 164,6691
#define C_3 165,6710
#define E_CAST(169,6834
#define E_CAST(185,7335
#define E_CAST(207,7883

crypto/md5/md5_locl.h,563
#define MD5_LONG_LOG2 65,3313
#  define md5_block_data_order 71,3560
#  define md5_block_data_order 73,3680
#define DATA_ORDER_IS_LITTLE_ENDIAN79,3819
#define HASH_LONG	81,3856
#define HASH_CTX	82,3884
#define HASH_CBLOCK	83,3910
#define HASH_UPDATE	84,3942
#define HASH_TRANSFORM	85,3974
#define HASH_FINAL	86,4012
#define	HASH_MAKE_STRING(87,4042
#define	HASH_BLOCK_DATA_ORDER	94,4242
#define	F(107,4640
#define	G(108,4685
#define	H(109,4730
#define	I(110,4765
#define R0(112,4806
#define R1(117,4898
#define R2(122,4989
#define R3(127,5080

crypto/md5/md5.h,493
#define HEADER_MD5_H60,3214
#define MD5_LONG 81,3667
#define MD5_LONG 83,3752
#define MD5_LONG_LOG2 84,3783
#define MD5_LONG 93,4085
#define MD5_CBLOCK	96,4123
#define MD5_LBLOCK	97,4145
#define MD5_DIGEST_LENGTH 98,4179
typedef struct MD5state_st100,4209
	MD5_LONG A,102,4239
	MD5_LONG A,B,102,4239
	MD5_LONG A,B,C,102,4239
	MD5_LONG A,B,C,D;102,4239
	MD5_LONG Nl,103,4258
	MD5_LONG Nl,Nh;103,4258
	MD5_LONG data[data104,4275
	unsigned int num;105,4303
	} MD5_CTX;106,4322

crypto/md5/md5_one.c,32
unsigned char *MD5(MD568,3348

crypto/md5/md5_dgst.c,274
const char MD5_version[MD5_version64,3298
#define INIT_DATA_A 69,3419
#define INIT_DATA_B 70,3466
#define INIT_DATA_C 71,3513
#define INIT_DATA_D 72,3560
fips_md_init(74,3608
#undef X86,3784
void md5_block_data_order 88,3800
# define X(96,4130
# define X(99,4182

crypto/md5/asm/md5-ia64.S,747
Permission 3,65
a 4,135
without 6,267
permit 8,402
the 9,472
The 11,499
included 12,562
THE 14,627
EXPRESS 15,691
NONINFRINGEMENT. 17,812
LIABLE 18,883
OF 19,954
WITH 20,1024
md5_block_asm_data_order:md5_block_asm_data_order266,6754
.md5_block:.md5_block267,6780
.md5_block_loop0:.md5_block_loop0312,7650
.md5_exit:.md5_exit348,8320
.md5_unaligned:.md5_unaligned416,9866
md5_digest_block0:md5_digest_block0625,14044
.md5_FF_round0:.md5_FF_round0639,14254
md5_digest_GHI:md5_digest_GHI655,14640
.md5_GG_round:.md5_GG_round709,15261
.md5_HH_round:.md5_HH_round762,15863
.md5_II_round:.md5_II_round815,16473
md5_constants:md5_constants925,18922
.md5_tbl_data_order:.md5_tbl_data_order926,18937
.size	992,21518

crypto/md5/md5.c,81
#define BUFSIZE	63,3258
int main(71,3425
void do_fp(99,3755
void pt(119,4054

crypto/md5/md5test.c,127
int main(66,3301
static char *test[test75,3442
static char *ret[ret86,3697
int main(97,4018
static char *pt(pt131,4569

crypto/LPdir_unix.c,299
# define LP_ENTRY_SIZE 44,1952
# define LP_ENTRY_SIZE 46,2008
# undef LP_ENTRY_SIZE55,2396
# define LP_ENTRY_SIZE 56,2418
struct LP_dir_context_st59,2453
  DIR *dir;dir61,2480
  char entry_name[entry_name62,2492
const char *LP_find_file(LP_find_file65,2532
int LP_find_file_end(108,3413

crypto/o_dir_test.c,68
#define CURRDIR 41,1866
#define CURRDIR 43,1916
int main(48,2000

crypto/rc2/tab.c,109
unsigned char ebits_to_num[ebits_to_num3,20
unsigned char num_to_ebits[num_to_ebits38,1403
main(73,2787

crypto/rc2/rc2_cbc.c,84
void RC2_cbc_encrypt(62,3245
void RC2_encrypt(136,4622
void RC2_decrypt(181,5482

crypto/rc2/rc2.h,228
#define HEADER_RC2_H60,3214
#define RC2_ENCRYPT	67,3353
#define RC2_DECRYPT	68,3375
#define RC2_BLOCK	70,3398
#define RC2_KEY_LENGTH	71,3418
typedef struct rc2_key_st77,3486
	RC2_INT data[data79,3515
	} RC2_KEY;80,3534

crypto/rc2/rc2_skey.c,117
static const unsigned char key_table[key_table63,3274
void RC2_set_key(98,5087
void private_RC2_set_key(104,5259

crypto/rc2/rc2cfb64.c,32
void RC2_cfb64_encrypt(67,3433

crypto/rc2/rc2speed.c,432
#define TIMES63,3460
#undef TIMES89,4055
#define _POSIX_SOURCE97,4159
#define HZ	107,4359
#define HZ 109,4396
#define BUFSIZE	113,4463
long run=114,4492
#define SIGRETTYPE 119,4597
#define SIGRETTYPE 121,4627
SIGRETTYPE sig_done(125,4688
#define START	135,4795
#define STOP	136,4811
double Time_F(138,4827
int main(174,5380
#define COND(211,6168
#define COUNT(212,6199
#define COND(214,6226
#define COUNT(215,6248

crypto/rc2/rc2_locl.h,318
#undef c2l59,3198
#define c2l(60,3209
#undef c2ln66,3438
#define c2ln(67,3450
#undef l2c82,3941
#define l2c(83,3952
#undef l2cn89,4206
#define l2cn(90,4218
#define n2ln(105,4790
#define l2nn(121,5320
#undef n2l135,5839
#define n2l(136,5850
#undef l2n141,6100
#define l2n(142,6111
#define C_RC2(147,6390

crypto/rc2/rc2_ecb.c,74
const char RC2_version[RC2_version63,3275
void RC2_ecb_encrypt(73,3588

crypto/rc2/rc2ofb64.c,32
void RC2_ofb64_encrypt(66,3432

crypto/rc2/rc2test.c,793
int main(69,3433
static unsigned char RC2key[RC2key77,3549
static unsigned char RC2plain[RC2plain88,3939
static unsigned char RC2cipher[RC2cipher95,4158
unsigned char k[k103,4405
unsigned char in[in107,4513
unsigned char  c[c108,4576
unsigned char out[out109,4639
char *text=text111,4663
static unsigned char cfb_key[cfb_key113,4708
static unsigned char cfb_iv[cfb_iv117,4831
static unsigned char cfb_buf1[cfb_buf1118,4906
static unsigned char cfb_buf1[40],cfb_buf2[cfb_buf2118,4906
static unsigned char cfb_buf1[40],cfb_buf2[40],cfb_tmp[cfb_tmp118,4906
#define CFB_TEST_SIZE 119,4965
static unsigned char plain[plain120,4990
static unsigned char cfb_cipher64[cfb_cipher64127,5209
int main(142,5620
static int cfb64_test(216,7139
static char *pt(pt254,8520

crypto/mem_clr.c,65
unsigned char cleanse_ctr 62,2826
void OPENSSL_cleanse(64,2858

crypto/o_str.h,31
#define HEADER_O_STR_H60,2796

crypto/bio/bss_file.c,568
#define HEADER_BSS_FILE_C66,3376
#define _FILE_OFFSET_BITS 82,4213
static BIO_METHOD methods_filep=105,4899
BIO *BIO_new_file(BIO_new_file119,5064
BIO *BIO_new_fp(BIO_new_fp188,7118
BIO_METHOD *BIO_s_file(BIO_s_file200,7378
static int MS_CALLBACK file_new(205,7439
static int MS_CALLBACK file_free(214,7592
static int MS_CALLBACK file_read(233,7899
static int MS_CALLBACK file_write(253,8364
static long MS_CALLBACK file_ctrl(273,8870
#define _IOB_ENTRIES 309,9644
static int MS_CALLBACK file_gets(443,12731
static int MS_CALLBACK file_puts(464,13044

crypto/bio/bss_fd.c,419
#define USE_SOCKETS61,3234
static BIO_METHOD methods_fdp=93,4419
BIO_METHOD *BIO_s_fd(BIO_s_fd106,4567
BIO *BIO_new_fd(BIO_new_fd111,4624
static int fd_new(120,4785
static int fd_free(129,4929
static int fd_read(144,5117
static int fd_write(162,5391
static long fd_ctrl(176,5634
static int fd_puts(229,6455
static int fd_gets(238,6575
int BIO_fd_should_retry(254,6848
int BIO_fd_non_fatal_error(272,7160

crypto/bio/bss_sock.c,505
#define USE_SOCKETS61,3236
#define sock_write 69,3344
#define sock_read 70,3404
#define sock_puts 71,3432
static BIO_METHOD methods_sockp=82,3783
BIO_METHOD *BIO_s_socket(BIO_s_socket96,3956
BIO *BIO_new_socket(BIO_new_socket101,4019
static int sock_new(111,4190
static int sock_free(120,4292
static int sock_read(135,4468
static int sock_write(153,4753
static long sock_ctrl(168,5008
static int sock_puts(208,5580
int BIO_sock_should_retry(217,5704
int BIO_sock_non_fatal_error(235,6023

crypto/bio/bio_err.c,217
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA BIO_str_functs[BIO_str_functs71,3086
static ERR_STRING_DATA BIO_str_reasons[BIO_str_reasons109,4682
void ERR_load_BIO_strings(145,6676

crypto/bio/bss_null.c,298
static BIO_METHOD null_method=71,3615
BIO_METHOD *BIO_s_null(BIO_s_null85,3770
static int null_new(90,3829
static int null_free(98,3919
static int null_read(104,3995
static int null_write(109,4064
static long null_ctrl(114,4140
static int null_gets(140,4549
static int null_puts(145,4619

crypto/bio/bss_conn.c,976
#define USE_SOCKETS61,3236
#define SOCKET_PROTOCOL 68,3354
#define SOCKET_PROTOCOL 70,3417
#undef FIONBIO75,3592
typedef struct bio_connect_st79,3616
	int state;81,3649
	char *param_hostname;param_hostname83,3662
	char *param_port;param_port84,3685
	int nbio;85,3704
	unsigned char ip[ip87,3716
	unsigned short port;88,3738
	struct sockaddr_in them;90,3761
	int (*info_callback)info_callback98,4066
	} BIO_CONNECT;99,4123
static BIO_METHOD methods_connectp=114,4651
static int conn_state(128,4853
BIO_CONNECT *BIO_CONNECT_new(BIO_CONNECT_new321,8955
void BIO_CONNECT_free(341,9362
BIO_METHOD *BIO_s_connect(BIO_s_connect353,9580
static int conn_new(358,9647
static void conn_close_socket(369,9817
static int conn_free(384,10115
static int conn_read(402,10362
static int conn_write(429,10799
static long conn_ctrl(452,11201
static long conn_callback_ctrl(606,14276
static int conn_puts(627,14590
BIO *BIO_new_connect(BIO_new_connect636,14714

crypto/bio/bio_cb.c,45
long MS_CALLBACK BIO_debug_callback(66,3328

crypto/bio/bss_rtcp.c,848
typedef unsigned short io_channel;74,3565
struct io_status 76,3676
struct io_status { short status,76,3676
struct io_status { short status, count;76,3676
struct io_status { short status, count; long flags;76,3676
struct rpc_msg 78,3732
   char channel;79,3795
   char function;80,3862
   unsigned short int length;81,3928
   char data[data82,4005
#define RPC_HDR_SIZE 84,4049
struct rpc_ctx 86,4103
    int filled,87,4120
    int filled, pos;87,4120
    struct rpc_msg msg;88,4141
static BIO_METHOD rtcp_method=99,4491
BIO_METHOD *BIO_s_rtcp(BIO_s_rtcp113,4644
static int get 126,4887
static int put 137,5217
static int rtcp_new(153,5611
static int rtcp_free(166,5840
static int rtcp_read(174,5970
static int rtcp_write(221,7148
static long rtcp_ctrl(250,8106
static int rtcp_gets(281,8572
static int rtcp_puts(286,8642

crypto/bio/bss_acpt.c,989
#define USE_SOCKETS61,3236
#define SOCKET_PROTOCOL 68,3354
#define SOCKET_PROTOCOL 70,3417
#undef FIONBIO75,3592
typedef struct bio_accept_st78,3615
	int state;80,3647
	char *param_addr;param_addr81,3659
	int accept_sock;83,3679
	int accept_nbio;84,3697
	char *addr;addr86,3716
	int nbio;87,3729
	int bind_mode;91,3903
	BIO *bio_chain;bio_chain92,3919
	} BIO_ACCEPT;93,3936
#define ACPT_S_BEFORE	106,4407
#define ACPT_S_GET_ACCEPT_SOCKET	107,4433
#define ACPT_S_OK	108,4468
static BIO_METHOD methods_acceptp=110,4491
BIO_METHOD *BIO_s_accept(BIO_s_accept124,4676
static int acpt_new(129,4741
static BIO_ACCEPT *BIO_ACCEPT_new(BIO_ACCEPT_new144,4972
static void BIO_ACCEPT_free(157,5240
static void acpt_close_socket(168,5490
static int acpt_free(182,5749
static int acpt_state(200,5993
static int acpt_read(303,7929
static int acpt_write(322,8243
static long acpt_ctrl(341,8559
static int acpt_puts(454,10555
BIO *BIO_new_accept(BIO_new_accept463,10679

crypto/bio/bio_lib.c,1269
BIO *BIO_new(BIO_new66,3338
int BIO_set(84,3606
int BIO_free(111,4140
void BIO_vfree(141,4718
void BIO_clear_flags(144,4763
int	BIO_test_flags(149,4831
void	BIO_set_flags(154,4910
long (*BIO_get_callback(BIO_get_callback159,4975
void BIO_set_callback(164,5091
void BIO_set_callback_arg(169,5208
char * BIO_get_callback_arg(174,5278
const char * BIO_method_name(179,5346
int BIO_method_type(184,5421
int BIO_read(190,5488
int BIO_write(222,6104
int BIO_puts(257,6741
int BIO_gets(290,7340
int BIO_indent(321,7905
long BIO_int_ctrl(333,8082
char *BIO_ptr_ctrl(BIO_ptr_ctrl341,8205
long BIO_ctrl(351,8353
long BIO_callback_ctrl(378,8872
size_t BIO_ctrl_pending(408,9703
size_t BIO_ctrl_wpending(413,9794
BIO *BIO_push(BIO_push420,9944
BIO *BIO_pop(BIO_pop437,10264
BIO *BIO_get_retry_BIO(BIO_get_retry_BIO456,10564
int BIO_get_retry_reason(472,10814
BIO *BIO_find_type(BIO_find_type477,10884
BIO *BIO_next(BIO_next500,11214
void BIO_free_all(506,11285
BIO *BIO_dup_chain(BIO_dup_chain522,11510
void BIO_copy_next_retry(567,12336
int BIO_get_ex_new_index(573,12472
int BIO_set_ex_data(580,12711
void *BIO_get_ex_data(BIO_get_ex_data585,12824
unsigned long BIO_number_read(590,12922
unsigned long BIO_number_written(596,13009

crypto/bio/b_dump.c,323
#define TRUNCATE67,3310
#define DUMP_WIDTH	68,3327
#define DUMP_WIDTH_LESS_INDENT(69,3349
int BIO_dump_cb(71,3417
int BIO_dump_indent_cb(77,3570
static int write_fp(161,5483
int BIO_dump_fp(165,5586
int BIO_dump_indent_fp(169,5685
static int write_bio(175,5826
int BIO_dump(179,5948
int BIO_dump_indent(183,6044

crypto/bio/bss_dgram.c,3067
#define USE_SOCKETS63,2825
#define OPENSSL_SCTP_DATA_CHUNK_TYPE 76,3078
#define OPENSSL_SCTP_FORWARD_CUM_TSN_CHUNK_TYPE 77,3131
#define IP_MTU 81,3217
#define sock_write 85,3282
#define sock_read 86,3342
#define sock_puts 87,3370
static BIO_METHOD methods_dgramp=114,4297
static BIO_METHOD methods_dgramp_sctp=129,4510
typedef struct bio_dgram_data_st144,4751
		struct sockaddr sa;147,4796
		struct sockaddr_in sa_in;148,4818
		struct sockaddr_in6 sa_in6;150,4867
	} peer;152,4904
	unsigned int connected;153,4913
	unsigned int _errno;154,4938
	unsigned int mtu;155,4960
	struct timeval next_timeout;156,4979
	struct timeval socket_timeout;157,5009
	} bio_dgram_data;158,5041
typedef struct bio_dgram_sctp_save_message_st161,5085
        BIO *bio;bio163,5134
        char *data;data164,5152
        int length;165,5172
	} bio_dgram_sctp_save_message;166,5192
typedef struct bio_dgram_sctp_data_st168,5225
		struct sockaddr sa;171,5275
		struct sockaddr_in sa_in;172,5297
		struct sockaddr_in6 sa_in6;174,5346
	} peer;176,5383
	unsigned int connected;177,5392
	unsigned int _errno;178,5417
	unsigned int mtu;179,5439
	struct bio_dgram_sctp_sndinfo sndinfo;180,5458
	struct bio_dgram_sctp_rcvinfo rcvinfo;181,5498
	struct bio_dgram_sctp_prinfo prinfo;182,5538
	void (*handle_notifications)handle_notifications183,5576
	void* notification_context;184,5643
	int in_handshake;185,5672
	int ccs_rcvd;186,5691
	int ccs_sent;187,5706
	int save_shutdown;188,5721
	int peer_auth_tested;189,5741
	bio_dgram_sctp_save_message saved_message;190,5764
	} bio_dgram_sctp_data;191,5808
BIO_METHOD *BIO_s_datagram(BIO_s_datagram194,5840
BIO *BIO_new_dgram(BIO_new_dgram199,5906
static int dgram_new(209,6078
static int dgram_free(225,6342
static int dgram_clear(239,6552
static void dgram_adjust_rcv_timeout(254,6729
static void dgram_reset_rcv_timeout(324,8622
static int dgram_read(347,9263
	union	{ size_t s;356,9439
	union	{ size_t s; int i;356,9439
	union	{ size_t s; int i; } len;356,9439
		struct sockaddr sa;358,9481
		struct sockaddr_in sa_in;359,9503
		struct sockaddr_in6 sa_in6;361,9552
		} peer;363,9589
static int dgram_write(399,10293
static long dgram_ctrl(442,11319
		struct sockaddr	sa;455,11629
		struct sockaddr_in s4;456,11651
		struct sockaddr_in6 s6;458,11697
static int dgram_puts(822,19358
BIO_METHOD *BIO_s_datagram_sctp(BIO_s_datagram_sctp832,19508
BIO *BIO_new_dgram_sctp(BIO_new_dgram_sctp837,19584
int BIO_dgram_is_sctp(917,22183
static int dgram_sctp_new(922,22277
static int dgram_sctp_free(941,22638
void dgram_sctp_handle_auth_free_key_event(956,22896
static int dgram_sctp_read(975,23422
static int dgram_sctp_write(1189,29448
static long dgram_sctp_ctrl(1297,32931
int BIO_dgram_sctp_notification_cb(1499,38806
int BIO_dgram_sctp_wait_for_dry(1516,39236
int BIO_dgram_sctp_msg_waiting(1667,43080
static int dgram_sctp_puts(1727,44689
static int BIO_dgram_should_retry(1737,44832
int BIO_dgram_non_fatal_error(1759,45249
static void get_current_time(1815,45962

crypto/bio/bss_mem.c,336
static BIO_METHOD mem_method=71,3607
BIO_METHOD *BIO_s_mem(BIO_s_mem88,3865
BIO *BIO_new_mem_buf(BIO_new_mem_buf93,3922
static int mem_new(115,4372
static int mem_free(128,4542
static int mem_read(145,4822
static int mem_write(169,5339
static long mem_ctrl(197,5833
static int mem_gets(274,7109
static int mem_puts(310,7621

crypto/bio/bf_nbio.c,455
typedef struct nbio_test_st76,3784
	int lrn;79,3865
	int lwn;80,3875
	} NBIO_TEST;81,3885
static BIO_METHOD methods_nbiof=83,3900
BIO_METHOD *BIO_f_nbio_test(BIO_f_nbio_test97,4107
static int nbiof_new(102,4173
static int nbiof_free(115,4385
static int nbiof_read(126,4546
static int nbiof_write(159,5002
static long nbiof_ctrl(204,5598
static long nbiof_callback_ctrl(226,5991
static int nbiof_gets(240,6215
static int nbiof_puts(247,6355

crypto/bio/bss_bio.c,1086
#  define BIO_PAIR_DEBUG66,3152
#  define NDEBUG73,3294
# undef SSIZE_MAX90,3614
# define SSIZE_MAX 93,3657
static BIO_METHOD methods_biop 106,4063
BIO_METHOD *BIO_s_bio(BIO_s_bio120,4254
struct bio_bio_st125,4312
	BIO *peer;peer127,4332
	int closed;133,4636
	size_t len;134,4682
	size_t offset;135,4746
	size_t size;136,4806
	char *buf;buf137,4820
	size_t request;139,4873
static int bio_new(145,5125
static int bio_free(162,5377
static int bio_read(187,5632
static ossl_ssize_t bio_nread0(280,7661
static ossl_ssize_t bio_nread(318,8422
static int bio_write(352,8999
static ossl_ssize_t bio_nwrite0(431,10540
static ossl_ssize_t bio_nwrite(479,11472
static long bio_ctrl(503,11860
static int bio_puts(698,15316
static int bio_make_pair(704,15413
static void bio_destroy_pair(757,16249
int BIO_new_bio_pair(789,16785
size_t BIO_ctrl_get_write_guarantee(841,17549
size_t BIO_ctrl_get_read_request(846,17661
int BIO_ctrl_reset_read_request(851,17767
int BIO_nread0(860,18041
int BIO_nread(877,18293
int BIO_nwrite0(893,18545
int BIO_nwrite(910,18800

crypto/bio/b_print.c,1039
#  define NDEBUG62,3288
#  define HAVE_LONG_LONG 84,3715
#define LDOUBLE 113,4761
#define LDOUBLE 115,4795
# define LLONG 120,4891
# define LLONG 122,4921
#define LLONG 125,4960
#define DP_S_DEFAULT 140,5500
#define DP_S_FLAGS 141,5526
#define DP_S_MIN 142,5552
#define DP_S_DOT 143,5578
#define DP_S_MAX 144,5604
#define DP_S_MOD 145,5630
#define DP_S_CONV 146,5656
#define DP_S_DONE 147,5682
#define DP_F_MINUS 150,5735
#define DP_F_PLUS 151,5768
#define DP_F_SPACE 152,5801
#define DP_F_NUM 153,5834
#define DP_F_ZERO 154,5867
#define DP_F_UP 155,5900
#define DP_F_UNSIGNED 156,5933
#define DP_C_SHORT 159,5990
#define DP_C_LONG 160,6016
#define DP_C_LDOUBLE 161,6042
#define DP_C_LLONG 162,6068
#define char_to_int(165,6119
#define OSSL_MAX(166,6152
_dopr(169,6206
fmtstr(433,14224
fmtint(473,15058
abs_val(570,17338
pow_10(579,17472
roundv(590,17618
fmtfp(601,17793
doapr_outch(726,20981
int BIO_printf 768,21900
int BIO_vprintf 781,22079
int BIO_snprintf(814,22984
int BIO_vsnprintf(827,23180

crypto/bio/bf_buff.c,403
#define DEFAULT_BUFFER_SIZE	72,3695
static BIO_METHOD methods_buffer=74,3729
BIO_METHOD *BIO_f_buffer(BIO_f_buffer88,3921
static int buffer_new(93,3985
static int buffer_free(116,4605
static int buffer_read(131,4889
static int buffer_write(197,6241
static long buffer_ctrl(270,7835
static long buffer_callback_ctrl(442,11225
static int buffer_gets(456,11450
static int buffer_puts(508,12323

crypto/bio/bio.h,14340
#define HEADER_BIO_H60,3214
#define BIO_TYPE_NONE	84,3560
#define BIO_TYPE_MEM	85,3585
#define BIO_TYPE_FILE	86,3618
#define BIO_TYPE_FD	88,3653
#define BIO_TYPE_SOCKET	89,3692
#define BIO_TYPE_NULL	90,3735
#define BIO_TYPE_SSL	91,3769
#define BIO_TYPE_MD	92,3802
#define BIO_TYPE_BUFFER	93,3856
#define BIO_TYPE_CIPHER	94,3906
#define BIO_TYPE_BASE64	95,3957
#define BIO_TYPE_CONNECT	96,4008
#define BIO_TYPE_ACCEPT	97,4075
#define BIO_TYPE_PROXY_CLIENT	98,4143
#define BIO_TYPE_PROXY_SERVER	99,4209
#define BIO_TYPE_NBIO_TEST	100,4275
#define BIO_TYPE_NULL_FILTER	101,4338
#define BIO_TYPE_BER	102,4379
#define BIO_TYPE_BIO	103,4438
#define BIO_TYPE_LINEBUFFER	104,4497
#define BIO_TYPE_DGRAM	105,4551
#define BIO_TYPE_DGRAM_SCTP	107,4618
#define BIO_TYPE_ASN1 109,4672
#define BIO_TYPE_COMP 110,4722
#define BIO_TYPE_DESCRIPTOR	112,4773
#define BIO_TYPE_FILTER	113,4844
#define BIO_TYPE_SOURCE_SINK	114,4876
#define BIO_NOCLOSE	118,5010
#define BIO_CLOSE	119,5036
#define BIO_CTRL_RESET	123,5138
#define BIO_CTRL_EOF	124,5193
#define BIO_CTRL_INFO	125,5248
#define BIO_CTRL_SET	126,5301
#define BIO_CTRL_GET	127,5356
#define BIO_CTRL_PUSH	128,5411
#define BIO_CTRL_POP	129,5482
#define BIO_CTRL_GET_CLOSE	130,5552
#define BIO_CTRL_SET_CLOSE	131,5618
#define BIO_CTRL_PENDING	132,5684
#define BIO_CTRL_FLUSH	133,5753
#define BIO_CTRL_DUP	134,5817
#define BIO_CTRL_WPENDING	135,5883
#define BIO_CTRL_SET_CALLBACK	137,6002
#define BIO_CTRL_GET_CALLBACK	138,6070
#define BIO_CTRL_SET_FILENAME	140,6139
#define BIO_CTRL_DGRAM_CONNECT 143,6220
#define BIO_CTRL_DGRAM_SET_CONNECTED 144,6285
#define BIO_CTRL_DGRAM_SET_RECV_TIMEOUT 147,6408
#define BIO_CTRL_DGRAM_GET_RECV_TIMEOUT 148,6481
#define BIO_CTRL_DGRAM_SET_SEND_TIMEOUT 149,6554
#define BIO_CTRL_DGRAM_GET_SEND_TIMEOUT 150,6627
#define BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP 152,6701
#define BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP 153,6774
#define BIO_CTRL_DGRAM_MTU_DISCOVER 156,6884
#define BIO_CTRL_DGRAM_QUERY_MTU 159,6978
#define BIO_CTRL_DGRAM_GET_FALLBACK_MTU 160,7055
#define BIO_CTRL_DGRAM_GET_MTU 161,7100
#define BIO_CTRL_DGRAM_SET_MTU 162,7176
#define BIO_CTRL_DGRAM_MTU_EXCEEDED 167,7337
#define BIO_CTRL_DGRAM_GET_PEER 172,7493
#define BIO_CTRL_DGRAM_SET_PEER 173,7538
#define BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT 175,7615
#define BIO_CTRL_DGRAM_SCTP_SET_IN_HANDSHAKE	180,7810
#define BIO_CTRL_DGRAM_SCTP_ADD_AUTH_KEY	181,7858
#define BIO_CTRL_DGRAM_SCTP_NEXT_AUTH_KEY	182,7903
#define BIO_CTRL_DGRAM_SCTP_AUTH_CCS_RCVD	183,7949
#define BIO_CTRL_DGRAM_SCTP_GET_SNDINFO	184,7995
#define BIO_CTRL_DGRAM_SCTP_SET_SNDINFO	185,8039
#define BIO_CTRL_DGRAM_SCTP_GET_RCVINFO	186,8083
#define BIO_CTRL_DGRAM_SCTP_SET_RCVINFO	187,8127
#define BIO_CTRL_DGRAM_SCTP_GET_PRINFO	188,8171
#define BIO_CTRL_DGRAM_SCTP_SET_PRINFO	189,8215
#define BIO_CTRL_DGRAM_SCTP_SAVE_SHUTDOWN	190,8259
#define BIO_FP_READ	194,8329
#define BIO_FP_WRITE	195,8355
#define BIO_FP_APPEND	196,8382
#define BIO_FP_TEXT	197,8410
#define BIO_FLAGS_READ	199,8437
#define BIO_FLAGS_WRITE	200,8466
#define BIO_FLAGS_IO_SPECIAL	201,8496
#define BIO_FLAGS_RWS 202,8530
#define BIO_FLAGS_SHOULD_RETRY	203,8606
#define	BIO_FLAGS_UPLINK	207,8808
#define BIO_GHBN_CTRL_HITS	211,8877
#define BIO_GHBN_CTRL_MISSES	212,8907
#define BIO_GHBN_CTRL_CACHE_SIZE	213,8939
#define BIO_GHBN_CTRL_GET_ENTRY	214,8974
#define BIO_GHBN_CTRL_FLUSH	215,9009
#define BIO_FLAGS_BASE64_NO_NL	224,9239
#define BIO_FLAGS_MEM_RDONLY	229,9379
typedef struct bio_st BIO;231,9415
#define BIO_get_flags(237,9570
#define BIO_set_retry_special(238,9621
#define BIO_set_retry_read(240,9722
#define BIO_set_retry_write(242,9814
#define BIO_clear_retry_flags(246,9958
#define BIO_get_retry_flags(248,10054
#define BIO_should_read(252,10222
#define BIO_should_write(253,10284
#define BIO_should_io_special(254,10348
#define BIO_retry_type(255,10421
#define BIO_should_retry(256,10481
#define BIO_RR_SSL_X509_LOOKUP	264,10957
#define BIO_RR_CONNECT	266,11064
#define BIO_RR_ACCEPT	268,11163
#define BIO_CB_FREE	271,11236
#define BIO_CB_READ	272,11261
#define BIO_CB_WRITE	273,11286
#define BIO_CB_PUTS	274,11312
#define BIO_CB_GETS	275,11337
#define BIO_CB_CTRL	276,11362
#define BIO_CB_RETURN	280,11519
#define BIO_CB_return(281,11546
#define BIO_cb_pre(282,11592
#define BIO_cb_post(283,11637
typedef void bio_info_cb(294,12040
typedef struct bio_method_st296,12120
	int type;298,12152
	const char *name;name299,12163
	int (*bwrite)bwrite300,12182
	int (*bread)bread301,12224
	int (*bputs)bputs302,12259
	int (*bgets)bgets303,12295
	long (*ctrl)ctrl304,12330
	int (*create)create305,12371
	int (*destroy)destroy306,12394
        long (*callback_ctrl)callback_ctrl307,12418
	} BIO_METHOD;308,12476
struct bio_st310,12492
	BIO_METHOD *method;method312,12509
	long (*callback)callback314,12570
	char *cb_arg;cb_arg315,12638
	int init;317,12692
	int shutdown;318,12703
	int flags;319,12718
	int retry_reason;320,12750
	int num;321,12769
	void *ptr;ptr322,12779
	struct bio_st *next_bio;next_bio323,12791
	struct bio_st *prev_bio;prev_bio324,12843
	int references;325,12895
	unsigned long num_read;326,12912
	unsigned long num_write;327,12937
	CRYPTO_EX_DATA ex_data;329,12964
DECLARE_STACK_OF(332,12994
typedef struct bio_f_buffer_ctx_struct334,13017
	int ibuf_size;346,13424
	int obuf_size;347,13474
	char *ibuf;ibuf349,13526
	int ibuf_len;350,13561
	int ibuf_off;351,13608
	char *obuf;obuf353,13649
	int obuf_len;354,13684
	int obuf_off;355,13731
	} BIO_F_BUFFER_CTX;356,13771
typedef int asn1_ps_func(359,13838
struct bio_dgram_sctp_sndinfo363,13971
	uint16_t snd_sid;365,14004
	uint16_t snd_flags;366,14023
	uint32_t snd_ppid;367,14044
	uint32_t snd_context;368,14064
struct bio_dgram_sctp_rcvinfo371,14092
	uint16_t rcv_sid;373,14125
	uint16_t rcv_ssn;374,14144
	uint16_t rcv_flags;375,14163
	uint32_t rcv_ppid;376,14184
	uint32_t rcv_tsn;377,14204
	uint32_t rcv_cumtsn;378,14223
	uint32_t rcv_context;379,14245
struct bio_dgram_sctp_prinfo382,14273
	uint16_t pr_policy;384,14305
	uint32_t pr_value;385,14326
#define BIO_CONN_S_BEFORE	390,14382
#define BIO_CONN_S_GET_IP	391,14411
#define BIO_CONN_S_GET_PORT	392,14440
#define BIO_CONN_S_CREATE_SOCKET	393,14471
#define BIO_CONN_S_CONNECT	394,14506
#define BIO_CONN_S_OK	395,14536
#define BIO_CONN_S_BLOCKED_CONNECT	396,14562
#define BIO_CONN_S_NBIO	397,14599
#define BIO_C_SET_CONNECT	400,14678
#define BIO_C_DO_STATE_MACHINE	401,14710
#define BIO_C_SET_NBIO	402,14747
#define BIO_C_SET_PROXY_PARAM	403,14777
#define BIO_C_SET_FD	404,14813
#define BIO_C_GET_FD	405,14841
#define BIO_C_SET_FILE_PTR	406,14869
#define BIO_C_GET_FILE_PTR	407,14902
#define BIO_C_SET_FILENAME	408,14935
#define BIO_C_SET_SSL	409,14968
#define BIO_C_GET_SSL	410,14997
#define BIO_C_SET_MD	411,15026
#define BIO_C_GET_MD	412,15054
#define BIO_C_GET_CIPHER_STATUS	413,15082
#define BIO_C_SET_BUF_MEM	414,15120
#define BIO_C_GET_BUF_MEM_PTR	415,15152
#define BIO_C_GET_BUFF_NUM_LINES	416,15188
#define BIO_C_SET_BUFF_SIZE	417,15226
#define BIO_C_SET_ACCEPT	418,15260
#define BIO_C_SSL_MODE	419,15291
#define BIO_C_GET_MD_CTX	420,15321
#define BIO_C_GET_PROXY_PARAM	421,15352
#define BIO_C_SET_BUFF_READ_DATA	422,15388
#define BIO_C_GET_CONNECT	423,15451
#define BIO_C_GET_ACCEPT	424,15483
#define BIO_C_SET_SSL_RENEGOTIATE_BYTES	425,15514
#define BIO_C_GET_SSL_NUM_RENEGOTIATES	426,15559
#define BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT	427,15603
#define BIO_C_FILE_SEEK	428,15649
#define BIO_C_GET_CIPHER_CTX	429,15680
#define BIO_C_SET_BUF_MEM_EOF_RETURN	430,15715
#define BIO_C_SET_BIND_MODE	431,15786
#define BIO_C_GET_BIND_MODE	432,15820
#define BIO_C_FILE_TELL	433,15854
#define BIO_C_GET_SOCKS	434,15885
#define BIO_C_SET_SOCKS	435,15916
#define BIO_C_SET_WRITE_BUF_SIZE	437,15948
#define BIO_C_GET_WRITE_BUF_SIZE	438,16005
#define BIO_C_MAKE_BIO_PAIR	439,16043
#define BIO_C_DESTROY_BIO_PAIR	440,16077
#define BIO_C_GET_WRITE_GUARANTEE	441,16114
#define BIO_C_GET_READ_REQUEST	442,16153
#define BIO_C_SHUTDOWN_WR	443,16190
#define BIO_C_NREAD0	444,16222
#define BIO_C_NREAD	445,16250
#define BIO_C_NWRITE0	446,16277
#define BIO_C_NWRITE	447,16306
#define BIO_C_RESET_READ_REQUEST	448,16334
#define BIO_C_SET_MD_CTX	449,16372
#define BIO_C_SET_PREFIX	451,16404
#define BIO_C_GET_PREFIX	452,16435
#define BIO_C_SET_SUFFIX	453,16466
#define BIO_C_GET_SUFFIX	454,16497
#define BIO_C_SET_EX_ARG	456,16529
#define BIO_C_GET_EX_ARG	457,16560
#define BIO_set_app_data(459,16592
#define BIO_get_app_data(460,16650
#define BIO_set_conn_hostname(463,16751
#define BIO_set_conn_port(464,16834
#define BIO_set_conn_ip(465,16913
#define BIO_set_conn_int_port(466,16988
#define BIO_get_conn_hostname(467,17071
#define BIO_get_conn_port(468,17141
#define BIO_get_conn_ip(469,17211
#define BIO_get_conn_int_port(470,17277
#define BIO_set_nbio(473,17350
#define BIO_set_accept_port(476,17441
#define BIO_get_accept_port(477,17521
#define BIO_set_nbio_accept(479,17655
#define BIO_set_accept_bios(480,17740
#define BIO_BIND_NORMAL	482,17819
#define BIO_BIND_REUSEADDR_IF_UNUSED	483,17847
#define BIO_BIND_REUSEADDR	484,17886
#define BIO_set_bind_mode(485,17916
#define BIO_get_bind_mode(486,17992
#define BIO_do_connect(488,18066
#define BIO_do_accept(489,18112
#define BIO_do_handshake(490,18157
#define BIO_set_url(493,18255
#define BIO_set_proxies(494,18332
#define BIO_set_filter_bio(496,18433
#define BIO_set_proxy_cb(498,18554
#define BIO_set_proxy_header(499,18646
#define BIO_set_no_connect_return(500,18728
#define BIO_get_proxy_header(502,18816
#define BIO_get_proxies(503,18900
#define BIO_get_url(504,18985
#define BIO_get_no_connect_return(505,19062
#define BIO_set_fd(507,19141
#define BIO_get_fd(508,19202
#define BIO_set_fp(510,19265
#define BIO_get_fp(511,19336
#define BIO_seek(513,19408
#define BIO_tell(514,19474
#define BIO_read_filename(524,19859
#define BIO_write_filename(527,19971
#define BIO_append_filename(529,20070
#define BIO_rw_filename(531,20171
#define BIO_set_ssl(538,20562
#define BIO_get_ssl(539,20631
#define BIO_set_ssl_mode(540,20700
#define BIO_set_ssl_renegotiate_bytes(541,20774
#define BIO_get_num_renegotiates(543,20876
#define BIO_set_ssl_renegotiate_timeout(545,20966
#define BIO_get_mem_data(551,21174
#define BIO_set_mem_buf(552,21244
#define BIO_get_mem_ptr(553,21319
#define BIO_set_mem_eof_return(554,21396
#define BIO_get_buffer_num_lines(558,21521
#define BIO_set_buffer_size(559,21601
#define BIO_set_read_buffer_size(560,21679
#define BIO_set_write_buffer_size(561,21763
#define BIO_set_buffer_read_data(562,21848
#define BIO_dup_state(565,22006
#define BIO_reset(567,22077
#define BIO_eof(568,22138
#define BIO_set_close(569,22195
#define BIO_get_close(570,22267
#define BIO_pending(571,22335
#define BIO_wpending(572,22400
#define BIO_flush(576,22589
#define BIO_get_info_callback(577,22650
#define BIO_set_info_callback(579,22744
#define BIO_buffer_get_num_lines(582,22866
#define BIO_set_write_buf_size(585,22957
#define BIO_get_write_buf_size(586,23048
#define BIO_make_bio_pair(587,23142
#define BIO_destroy_bio_pair(588,23220
#define BIO_shutdown_wr(589,23302
#define BIO_get_write_guarantee(591,23449
#define BIO_get_read_request(592,23534
#define BIO_ctrl_dgram_connect(598,23773
#define BIO_ctrl_set_connected(600,23892
#define BIO_dgram_recv_timedout(602,24018
#define BIO_dgram_send_timedout(604,24125
#define BIO_dgram_get_peer(606,24232
#define BIO_dgram_set_peer(608,24337
# define BIO_s_file_internal	635,25436
#  define __bio_h__attr__ 756,29794
#  define __bio_h__attr__(758,29840
int BIO_printf(760,29876
#undef __bio_h__attr__768,30314
#define BIO_F_ACPT_STATE	779,30615
#define BIO_F_BIO_ACCEPT	780,30648
#define BIO_F_BIO_BER_GET_HEADER	781,30681
#define BIO_F_BIO_CALLBACK_CTRL	782,30721
#define BIO_F_BIO_CTRL	783,30761
#define BIO_F_BIO_GETHOSTBYNAME	784,30793
#define BIO_F_BIO_GETS	785,30833
#define BIO_F_BIO_GET_ACCEPT_SOCKET	786,30865
#define BIO_F_BIO_GET_HOST_IP	787,30908
#define BIO_F_BIO_GET_PORT	788,30946
#define BIO_F_BIO_MAKE_PAIR	789,30981
#define BIO_F_BIO_NEW	790,31017
#define BIO_F_BIO_NEW_FILE	791,31048
#define BIO_F_BIO_NEW_MEM_BUF	792,31083
#define BIO_F_BIO_NREAD	793,31121
#define BIO_F_BIO_NREAD0	794,31154
#define BIO_F_BIO_NWRITE	795,31187
#define BIO_F_BIO_NWRITE0	796,31220
#define BIO_F_BIO_PUTS	797,31254
#define BIO_F_BIO_READ	798,31286
#define BIO_F_BIO_SOCK_INIT	799,31318
#define BIO_F_BIO_WRITE	800,31354
#define BIO_F_BUFFER_CTRL	801,31387
#define BIO_F_CONN_CTRL	802,31421
#define BIO_F_CONN_STATE	803,31454
#define BIO_F_DGRAM_SCTP_READ	804,31487
#define BIO_F_FILE_CTRL	805,31525
#define BIO_F_FILE_READ	806,31558
#define BIO_F_LINEBUFFER_CTRL	807,31591
#define BIO_F_MEM_READ	808,31629
#define BIO_F_MEM_WRITE	809,31661
#define BIO_F_SSL_NEW	810,31694
#define BIO_F_WSASTARTUP	811,31725
#define BIO_R_ACCEPT_ERROR	814,31779
#define BIO_R_BAD_FOPEN_MODE	815,31814
#define BIO_R_BAD_HOSTNAME_LOOKUP	816,31851
#define BIO_R_BROKEN_PIPE	817,31892
#define BIO_R_CONNECT_ERROR	818,31926
#define BIO_R_EOF_ON_MEMORY_BIO	819,31962
#define BIO_R_ERROR_SETTING_NBIO	820,32002
#define BIO_R_ERROR_SETTING_NBIO_ON_ACCEPTED_SOCKET	821,32042
#define BIO_R_ERROR_SETTING_NBIO_ON_ACCEPT_SOCKET	822,32099
#define BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET	823,32154
#define BIO_R_INVALID_ARGUMENT	824,32208
#define BIO_R_INVALID_IP_ADDRESS	825,32247
#define BIO_R_IN_USE	826,32287
#define BIO_R_KEEPALIVE	827,32317
#define BIO_R_NBIO_CONNECT_ERROR	828,32350
#define BIO_R_NO_ACCEPT_PORT_SPECIFIED	829,32390
#define BIO_R_NO_HOSTNAME_SPECIFIED	830,32436
#define BIO_R_NO_PORT_DEFINED	831,32479
#define BIO_R_NO_PORT_SPECIFIED	832,32517
#define BIO_R_NO_SUCH_FILE	833,32557
#define BIO_R_NULL_PARAMETER	834,32592
#define BIO_R_TAG_MISMATCH	835,32629
#define BIO_R_UNABLE_TO_BIND_SOCKET	836,32664
#define BIO_R_UNABLE_TO_CREATE_SOCKET	837,32707
#define BIO_R_UNABLE_TO_LISTEN_SOCKET	838,32752
#define BIO_R_UNINITIALIZED	839,32797
#define BIO_R_UNSUPPORTED_METHOD	840,32833
#define BIO_R_WRITE_TO_READ_ONLY_BIO	841,32873
#define BIO_R_WSASTARTUP	842,32917

crypto/bio/b_sock.c,1586
#define USE_SOCKETS62,3254
#define SOCKET_PROTOCOL 77,3537
#define MAX_LISTEN 80,3592
#define MAX_LISTEN 82,3648
#define MAX_LISTEN 84,3684
static int wsa_init_done=88,3811
#define WSAAPI99,4196
static unsigned long BIO_ghbn_hits=103,4225
static unsigned long BIO_ghbn_miss=104,4264
#define GHBN_NUM	106,4304
static struct ghbn_cache_st107,4323
	char name[name109,4354
	struct hostent *ent;ent110,4371
	unsigned long order;111,4393
	} ghbn_cache[ghbn_cache112,4415
int BIO_get_host_ip(120,4609
int BIO_get_port(175,5762
int BIO_sock_error(233,7030
long BIO_ghbn_ctrl(256,7529
static struct hostent *ghbn_dup(ghbn_dup296,8239
static void ghbn_free(350,9552
struct hostent *BIO_gethostbyname(BIO_gethostbyname375,10003
int BIO_sock_init(471,12134
void BIO_sock_cleanup(525,13385
int BIO_socket_ioctl(547,13818
#   define ARG 562,14236
#   define ARG 571,14494
#  define ARG 574,14602
static int get_ip(587,14969
int BIO_get_accept_socket(622,15503
		struct sockaddr sa;626,15580
		struct sockaddr_in sa_in;627,15602
		struct sockaddr_in6 sa_in6;629,15651
	static union {	void *p;p663,16222
			int 664,16247
	static union {	void *p;p668,16378
			void 669,16403
int BIO_accept(827,20083
	union { size_t s;856,21376
	union { size_t s; int i;856,21376
	union { size_t s; int i; } len;856,21376
		struct sockaddr sa;858,21418
		struct sockaddr_in sa_in;859,21440
		struct sockaddr_in6 sa_in6;861,21489
		} from;863,21526
	static union {	void *p;p890,22133
			int 891,22158
int BIO_set_tcp_ndelay(945,23606
int BIO_socket_nbio(964,23918

crypto/bio/bss_log.c,1342
#  define NO_SYSLOG90,3616
#define LOG_EMERG	101,3869
#define LOG_ALERT	102,3889
#define LOG_CRIT	103,3909
#define LOG_ERR	104,3928
#define LOG_WARNING	105,3947
#define LOG_NOTICE	106,3969
#define LOG_INFO	107,3990
#define LOG_DEBUG	108,4009
#define LOG_DAEMON	110,4030
#define LOG_EMERG	113,4163
#define LOG_ALERT	114,4183
#define LOG_CRIT	115,4203
#define LOG_ERR	116,4222
#define LOG_WARNING	117,4241
#define LOG_NOTICE	118,4263
#define LOG_INFO	119,4284
#define LOG_DEBUG	120,4303
#define LOG_DAEMON	122,4324
static BIO_METHOD methods_slg=134,4802
BIO_METHOD *BIO_s_log(BIO_s_log147,4941
static int MS_CALLBACK slg_new(152,4999
static int MS_CALLBACK slg_free(161,5140
static int MS_CALLBACK slg_write(168,5242
		int strl;176,5392
		char str[str177,5404
		int log_level;178,5420
static long MS_CALLBACK slg_ctrl(221,6369
static int MS_CALLBACK slg_puts(235,6570
static void xopenlog(246,6736
static void xsyslog(254,6895
static void xcloselog(293,7681
static int VMS_OPC_target 302,7822
static void xopenlog(304,7863
static void xsyslog(309,7947
# define OPCDEF_TYPE 317,8203
# define OPCDEF_MALLOC 318,8237
# define OPCDEF_TYPE 320,8311
# define OPCDEF_MALLOC 321,8339
static void xcloselog(372,9837
static void xopenlog(378,9898
static void xsyslog(387,10094
static void xcloselog(392,10195

crypto/bio/bf_null.c,350
static BIO_METHOD methods_nullf=75,3770
BIO_METHOD *BIO_f_null(BIO_f_null89,3963
static int nullf_new(94,4024
static int nullf_free(102,4115
static int nullf_read(111,4235
static int nullf_write(123,4476
static long nullf_ctrl(135,4735
static long nullf_callback_ctrl(156,5118
static int nullf_gets(170,5342
static int nullf_puts(177,5482

crypto/bio/bio_lcl.h,674
#define	UP_stdin	5,99
#define	UP_stdout	6,122
#define	UP_stderr	7,147
#define	UP_fprintf	8,172
#define	UP_fgets	9,199
#define	UP_fread	10,222
#define	UP_fwrite	11,245
#undef	UP_fsetmod12,270
#define	UP_feof	13,288
#define	UP_fclose	14,310
#define	UP_fopen	16,336
#define	UP_fseek	17,359
#define	UP_ftell	18,382
#define	UP_fflush	19,405
#define	UP_ferror	20,430
#define	UP_fileno	22,469
#define	UP_open	23,495
#define	UP_read	24,518
#define	UP_write	25,541
#define	UP_lseek	26,565
#define	UP_close	27,589
#define	UP_fileno	29,619
#define	UP_open	30,644
#define	UP_read	31,666
#define	UP_write	32,688
#define	UP_lseek	33,711
#define	UP_close	34,734

crypto/bio/bf_lbuf.c,608
#define DEFAULT_LINEBUFFER_SIZE	75,3808
static BIO_METHOD methods_linebuffer=79,3870
BIO_METHOD *BIO_f_linebuffer(BIO_f_linebuffer93,4106
typedef struct bio_linebuffer_ctx_struct98,4178
	char *obuf;obuf100,4222
	int obuf_size;101,4264
	int obuf_len;102,4316
	} BIO_LINEBUFFER_CTX;103,4363
static int linebuffer_new(105,4387
static int linebuffer_free(122,4795
static int linebuffer_read(136,5042
static int linebuffer_write(148,5288
static long linebuffer_ctrl(266,7681
static long linebuffer_callback_ctrl(373,9804
static int linebuffer_gets(387,10033
static int linebuffer_puts(393,10174

crypto/sparccpuid.S,1404
.align	18,375
.global	19,385
.type	20,410
OPENSSL_wipe_cpu:OPENSSL_wipe_cpu25,711
.v8:.v869,1813
.zero:.zero131,2660
.PIC.zero.up:.PIC.zero.up132,2681
.global	136,2731
.type	137,2753
walk_reg_wins:walk_reg_wins138,2783
.walk.reg.wins:.walk.reg.wins140,2805
.size	166,3162
.global	168,3205
.type	169,3232
.align	170,3267
OPENSSL_atomic_add:OPENSSL_atomic_add171,3277
.spin:.spin190,3769
.enter:.enter192,3796
.v9:.v9205,3961
.size	216,4264
.global	218,4311
.align	219,4335
_sparcv9_rdtick:_sparcv9_rdtick220,4345
.notick:.notick229,4527
.type	232,4559
.size	233,4591
.global	235,4632
.align	236,4660
_sparcv9_vis1_probe:_sparcv9_vis1_probe237,4669
.type	242,4796
.size	243,4832
.global	260,5505
.align	261,5538
_sparcv9_vis1_instrument:_sparcv9_vis1_instrument262,5547
.type	296,6328
.size	297,6369
.global	299,6428
.align	300,6456
_sparcv9_vis2_probe:_sparcv9_vis2_probe301,6465
.type	304,6532
.size	305,6568
.global	307,6617
.align	308,6646
_sparcv9_fmadd_probe:_sparcv9_fmadd_probe309,6655
.type	314,6797
.size	315,6834
.global	317,6885
.align	318,6909
OPENSSL_cleanse:OPENSSL_cleanse319,6919
.Little:.Little333,7045
.align	340,7125
.Lot:.Lot341,7135
.v9lot:.v9lot351,7271
.align	358,7371
.v9aligned:.v9aligned359,7392
.v8lot:.v8lot376,7644
.v8aligned:.v8aligned384,7749
.type	397,7887
.size	398,7919
.section	400,7960

crypto/rsa/rsa_eay.c,549
static RSA_METHOD rsa_pkcs1_eay_meth=131,6580
const RSA_METHOD *RSA_PKCS1_SSLeay(RSA_PKCS1_SSLeay148,7010
static int RSA_eay_public_encrypt(153,7088
static BN_BLINDING *rsa_get_blinding(rsa_get_blinding255,9404
static int rsa_blinding_convert(317,10739
static int rsa_blinding_invert(336,11239
static int RSA_eay_private_encrypt(350,11798
static int RSA_eay_private_decrypt(492,14932
static int RSA_eay_public_decrypt(633,18237
static int RSA_eay_mod_exp(737,20591
static int RSA_eay_init(898,24811
static int RSA_eay_finish(904,24923

crypto/rsa/rsa_err.c,218
#define ERR_FUNC(68,2975
#define ERR_REASON(69,3027
static ERR_STRING_DATA RSA_str_functs[RSA_str_functs71,3086
static ERR_STRING_DATA RSA_str_reasons[RSA_str_reasons133,6710
void ERR_load_RSA_strings(199,10923

crypto/rsa/rsa.h,8824
#define HEADER_RSA_H60,3214
struct rsa_meth_st85,3649
	const char *name;name87,3671
	int (*rsa_pub_enc)rsa_pub_enc88,3690
	int (*rsa_pub_dec)rsa_pub_dec91,3800
	int (*rsa_priv_enc)rsa_priv_enc94,3910
	int (*rsa_priv_dec)rsa_priv_dec97,4023
	int (*rsa_mod_exp)rsa_mod_exp100,4136
	int (*bn_mod_exp)bn_mod_exp101,4224
	int (*init)init104,4367
	int (*finish)finish105,4412
	int flags;106,4459
	char *app_data;app_data107,4504
	int (*rsa_sign)rsa_sign115,4955
	int (*rsa_verify)rsa_verify118,5095
	int (*rsa_keygen)rsa_keygen126,5510
struct rsa_st129,5580
	int pad;133,5711
	long version;134,5721
	const RSA_METHOD *meth;meth135,5736
	ENGINE *engine;engine137,5818
	BIGNUM *n;n138,5835
	BIGNUM *e;e139,5847
	BIGNUM *d;d140,5859
	BIGNUM *p;p141,5871
	BIGNUM *q;q142,5883
	BIGNUM *dmp1;dmp1143,5895
	BIGNUM *dmq1;dmq1144,5910
	BIGNUM *iqmp;iqmp145,5925
	CRYPTO_EX_DATA ex_data;147,6000
	int references;148,6025
	int flags;149,6042
	BN_MONT_CTX *_method_mod_n;_method_mod_n152,6094
	BN_MONT_CTX *_method_mod_p;_method_mod_p153,6123
	BN_MONT_CTX *_method_mod_q;_method_mod_q154,6152
	char *bignum_data;bignum_data158,6265
	BN_BLINDING *blinding;blinding159,6285
	BN_BLINDING *mt_blinding;mt_blinding160,6309
# define OPENSSL_RSA_MAX_MODULUS_BITS	164,6378
# define OPENSSL_RSA_SMALL_MODULUS_BITS	168,6469
# define OPENSSL_RSA_MAX_PUBEXP_BITS	171,6557
#define RSA_3	174,6660
#define RSA_F4	175,6679
#define RSA_METHOD_FLAG_NO_CHECK	177,6704
#define RSA_FLAG_CACHE_PUBLIC	179,6781
#define RSA_FLAG_CACHE_PRIVATE	180,6819
#define RSA_FLAG_BLINDING	181,6858
#define RSA_FLAG_THREAD_SAFE	182,6892
#define RSA_FLAG_EXT_PKEY	188,7220
#define RSA_FLAG_SIGN_VER	192,7338
#define RSA_FLAG_NO_BLINDING	194,7373
#define RSA_FLAG_NO_CONSTTIME	199,7769
#define RSA_FLAG_NO_EXP_CONSTTIME 210,8513
#define EVP_PKEY_CTX_set_rsa_padding(221,9181
#define EVP_PKEY_CTX_get_rsa_padding(225,9317
#define EVP_PKEY_CTX_set_rsa_pss_saltlen(229,9456
#define EVP_PKEY_CTX_get_rsa_pss_saltlen(235,9647
#define EVP_PKEY_CTX_set_rsa_keygen_bits(241,9841
#define EVP_PKEY_CTX_set_rsa_keygen_pubexp(245,10003
#define	 EVP_PKEY_CTX_set_rsa_mgf1_md(249,10170
#define	 EVP_PKEY_CTX_get_rsa_mgf1_md(253,10330
#define EVP_PKEY_CTRL_RSA_PADDING	257,10496
#define EVP_PKEY_CTRL_RSA_PSS_SALTLEN	258,10554
#define EVP_PKEY_CTRL_RSA_KEYGEN_BITS	260,10617
#define EVP_PKEY_CTRL_RSA_KEYGEN_PUBEXP	261,10679
#define EVP_PKEY_CTRL_RSA_MGF1_MD	262,10743
#define EVP_PKEY_CTRL_GET_RSA_PADDING	264,10802
#define EVP_PKEY_CTRL_GET_RSA_PSS_SALTLEN	265,10865
#define EVP_PKEY_CTRL_GET_RSA_MGF1_MD	266,10931
#define RSA_PKCS1_PADDING	268,10995
#define RSA_SSLV23_PADDING	269,11023
#define RSA_NO_PADDING	270,11052
#define RSA_PKCS1_OAEP_PADDING	271,11078
#define RSA_X931_PADDING	272,11111
#define RSA_PKCS1_PSS_PADDING	274,11159
#define RSA_PKCS1_PADDING_SIZE	276,11192
#define RSA_set_app_data(278,11227
#define RSA_get_app_data(279,11292
DECLARE_ASN1_ENCODE_FUNCTIONS_const(323,12785
typedef struct rsa_pss_params_st326,12897
	X509_ALGOR *hashAlgorithm;hashAlgorithm328,12933
	X509_ALGOR *maskGenAlgorithm;maskGenAlgorithm329,12961
	ASN1_INTEGER *saltLength;saltLength330,12992
	ASN1_INTEGER *trailerField;trailerField331,13019
	} RSA_PSS_PARAMS;332,13048
DECLARE_ASN1_FUNCTIONS(334,13068
#define RSA_FLAG_FIPS_METHOD	438,17250
#define RSA_FLAG_NON_FIPS_ALLOW	445,17465
#define RSA_FLAG_CHECKED	449,17592
#define RSA_F_CHECK_PADDING_MD	460,17904
#define RSA_F_DO_RSA_PRINT	461,17943
#define RSA_F_INT_RSA_VERIFY	462,17978
#define RSA_F_MEMORY_LOCK	463,18015
#define RSA_F_OLD_RSA_PRIV_DECODE	464,18049
#define RSA_F_PKEY_RSA_CTRL	465,18090
#define RSA_F_PKEY_RSA_CTRL_STR	466,18126
#define RSA_F_PKEY_RSA_SIGN	467,18166
#define RSA_F_PKEY_RSA_VERIFY	468,18202
#define RSA_F_PKEY_RSA_VERIFYRECOVER	469,18240
#define RSA_F_RSA_BUILTIN_KEYGEN	470,18284
#define RSA_F_RSA_CHECK_KEY	471,18324
#define RSA_F_RSA_EAY_PRIVATE_DECRYPT	472,18360
#define RSA_F_RSA_EAY_PRIVATE_ENCRYPT	473,18405
#define RSA_F_RSA_EAY_PUBLIC_DECRYPT	474,18450
#define RSA_F_RSA_EAY_PUBLIC_ENCRYPT	475,18494
#define RSA_F_RSA_GENERATE_KEY	476,18538
#define RSA_F_RSA_GENERATE_KEY_EX	477,18577
#define RSA_F_RSA_ITEM_VERIFY	478,18618
#define RSA_F_RSA_MEMORY_LOCK	479,18656
#define RSA_F_RSA_NEW_METHOD	480,18694
#define RSA_F_RSA_NULL	481,18731
#define RSA_F_RSA_NULL_MOD_EXP	482,18763
#define RSA_F_RSA_NULL_PRIVATE_DECRYPT	483,18802
#define RSA_F_RSA_NULL_PRIVATE_ENCRYPT	484,18848
#define RSA_F_RSA_NULL_PUBLIC_DECRYPT	485,18894
#define RSA_F_RSA_NULL_PUBLIC_ENCRYPT	486,18939
#define RSA_F_RSA_PADDING_ADD_NONE	487,18984
#define RSA_F_RSA_PADDING_ADD_PKCS1_OAEP	488,19026
#define RSA_F_RSA_PADDING_ADD_PKCS1_PSS	489,19073
#define RSA_F_RSA_PADDING_ADD_PKCS1_PSS_MGF1	490,19120
#define RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1	491,19171
#define RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2	492,19220
#define RSA_F_RSA_PADDING_ADD_SSLV23	493,19269
#define RSA_F_RSA_PADDING_ADD_X931	494,19313
#define RSA_F_RSA_PADDING_CHECK_NONE	495,19355
#define RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP	496,19399
#define RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1	497,19448
#define RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2	498,19499
#define RSA_F_RSA_PADDING_CHECK_SSLV23	499,19550
#define RSA_F_RSA_PADDING_CHECK_X931	500,19596
#define RSA_F_RSA_PRINT	501,19640
#define RSA_F_RSA_PRINT_FP	502,19673
#define RSA_F_RSA_PRIVATE_DECRYPT	503,19708
#define RSA_F_RSA_PRIVATE_ENCRYPT	504,19749
#define RSA_F_RSA_PRIV_DECODE	505,19790
#define RSA_F_RSA_PRIV_ENCODE	506,19828
#define RSA_F_RSA_PUBLIC_DECRYPT	507,19866
#define RSA_F_RSA_PUBLIC_ENCRYPT	508,19906
#define RSA_F_RSA_PUB_DECODE	509,19946
#define RSA_F_RSA_SETUP_BLINDING	510,19983
#define RSA_F_RSA_SIGN	511,20023
#define RSA_F_RSA_SIGN_ASN1_OCTET_STRING	512,20055
#define RSA_F_RSA_VERIFY	513,20102
#define RSA_F_RSA_VERIFY_ASN1_OCTET_STRING	514,20135
#define RSA_F_RSA_VERIFY_PKCS1_PSS	515,20184
#define RSA_F_RSA_VERIFY_PKCS1_PSS_MGF1	516,20226
#define RSA_R_ALGORITHM_MISMATCH	519,20294
#define RSA_R_BAD_E_VALUE	520,20334
#define RSA_R_BAD_FIXED_HEADER_DECRYPT	521,20368
#define RSA_R_BAD_PAD_BYTE_COUNT	522,20414
#define RSA_R_BAD_SIGNATURE	523,20454
#define RSA_R_BLOCK_TYPE_IS_NOT_01	524,20490
#define RSA_R_BLOCK_TYPE_IS_NOT_02	525,20532
#define RSA_R_DATA_GREATER_THAN_MOD_LEN	526,20574
#define RSA_R_DATA_TOO_LARGE	527,20621
#define RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE	528,20658
#define RSA_R_DATA_TOO_LARGE_FOR_MODULUS	529,20706
#define RSA_R_DATA_TOO_SMALL	530,20753
#define RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE	531,20790
#define RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY	532,20838
#define RSA_R_DMP1_NOT_CONGRUENT_TO_D	533,20885
#define RSA_R_DMQ1_NOT_CONGRUENT_TO_D	534,20930
#define RSA_R_D_E_NOT_CONGRUENT_TO_1	535,20975
#define RSA_R_FIRST_OCTET_INVALID	536,21019
#define RSA_R_ILLEGAL_OR_UNSUPPORTED_PADDING_MODE	537,21060
#define RSA_R_INVALID_DIGEST_LENGTH	538,21115
#define RSA_R_INVALID_HEADER	539,21158
#define RSA_R_INVALID_KEYBITS	540,21195
#define RSA_R_INVALID_MESSAGE_LENGTH	541,21233
#define RSA_R_INVALID_MGF1_MD	542,21277
#define RSA_R_INVALID_PADDING	543,21315
#define RSA_R_INVALID_PADDING_MODE	544,21353
#define RSA_R_INVALID_PSS_PARAMETERS	545,21395
#define RSA_R_INVALID_PSS_SALTLEN	546,21439
#define RSA_R_INVALID_SALT_LENGTH	547,21480
#define RSA_R_INVALID_TRAILER	548,21521
#define RSA_R_INVALID_X931_DIGEST	549,21559
#define RSA_R_IQMP_NOT_INVERSE_OF_Q	550,21600
#define RSA_R_KEY_SIZE_TOO_SMALL	551,21643
#define RSA_R_LAST_OCTET_INVALID	552,21683
#define RSA_R_MODULUS_TOO_LARGE	553,21723
#define RSA_R_NON_FIPS_RSA_METHOD	554,21763
#define RSA_R_NO_PUBLIC_EXPONENT	555,21804
#define RSA_R_NULL_BEFORE_BLOCK_MISSING	556,21844
#define RSA_R_N_DOES_NOT_EQUAL_P_Q	557,21891
#define RSA_R_OAEP_DECODING_ERROR	558,21933
#define RSA_R_OPERATION_NOT_ALLOWED_IN_FIPS_MODE	559,21974
#define RSA_R_OPERATION_NOT_SUPPORTED_FOR_THIS_KEYTYPE	560,22028
#define RSA_R_PADDING_CHECK_FAILED	561,22088
#define RSA_R_P_NOT_PRIME	562,22130
#define RSA_R_Q_NOT_PRIME	563,22164
#define RSA_R_RSA_OPERATIONS_NOT_SUPPORTED	564,22198
#define RSA_R_SLEN_CHECK_FAILED	565,22247
#define RSA_R_SLEN_RECOVERY_FAILED	566,22287
#define RSA_R_SSLV3_ROLLBACK_ATTACK	567,22329
#define RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD 568,22372
#define RSA_R_UNKNOWN_ALGORITHM_TYPE	569,22442
#define RSA_R_UNKNOWN_MASK_DIGEST	570,22486
#define RSA_R_UNKNOWN_PADDING_TYPE	571,22527
#define RSA_R_UNKNOWN_PSS_DIGEST	572,22569
#define RSA_R_UNSUPPORTED_MASK_ALGORITHM	573,22609
#define RSA_R_UNSUPPORTED_MASK_PARAMETER	574,22656
#define RSA_R_UNSUPPORTED_SIGNATURE_TYPE	575,22703
#define RSA_R_VALUE_MISSING	576,22750
#define RSA_R_WRONG_SIGNATURE_LENGTH	577,22786

crypto/rsa/rsa_gen.c,73
int RSA_generate_key_ex(81,3978
static int rsa_builtin_keygen(100,4520

crypto/rsa/rsa_lib.c,576
const char RSA_version[RSA_version74,3484
static const RSA_METHOD *default_RSA_meth=default_RSA_meth76,3539
RSA *RSA_new(RSA_new78,3588
void RSA_set_default_method(85,3656
const RSA_METHOD *RSA_get_default_method(RSA_get_default_method90,3741
const RSA_METHOD *RSA_get_method(RSA_get_method111,4091
int RSA_set_method(116,4166
RSA *RSA_new_method(RSA_new_method135,4605
void RSA_free(215,6136
int RSA_up_ref(257,7147
int RSA_get_ex_new_index(273,7417
int RSA_set_ex_data(280,7670
void *RSA_get_ex_data(RSA_get_ex_data285,7775
int RSA_memory_lock(290,7873

crypto/rsa/rsa_ssl.c,75
int RSA_padding_add_SSLv23(65,3314
int RSA_padding_check_SSLv23(105,3968

crypto/rsa/rsa_asn1.c,172
static int rsa_cb(67,2932
} ASN1_SEQUENCE_END_cb(92,3574
} ASN1_SEQUENCE_END_cb(98,3722
} ASN1_SEQUENCE_END(105,4041
RSA *RSAPrivateKey_dup(RSAPrivateKey_dup118,4375

crypto/rsa/rsa_ameth.c,816
static int rsa_pub_encode(70,2969
static int rsa_pub_decode(85,3310
static int rsa_pub_cmp(101,3670
static int old_rsa_priv_decode(109,3859
static int old_rsa_priv_encode(122,4139
static int rsa_priv_encode(127,4270
static int rsa_priv_decode(149,4714
static int int_rsa_size(158,4935
static int rsa_bits(163,5022
static void int_rsa_free(168,5111
static void update_buflen(174,5187
static int do_rsa_print(183,5348
static int rsa_pub_print(255,6880
static int rsa_priv_print(262,7032
static RSA_PSS_PARAMS *rsa_pss_decode(rsa_pss_decode268,7184
static int rsa_pss_param_print(301,7946
static int rsa_sig_print(385,9614
static int rsa_pkey_ctrl(410,10194
static int rsa_item_verify(460,11184
static int rsa_item_sign(567,13645
const EVP_PKEY_ASN1_METHOD rsa_asn1_meths[rsa_asn1_meths660,16047

crypto/rsa/rsa_saos.c,83
int RSA_sign_ASN1_OCTET_STRING(66,3344
int RSA_verify_ASN1_OCTET_STRING(104,4194

crypto/rsa/rsa_pss.c,208
static const unsigned char zeroes[zeroes67,2901
int RSA_verify_PKCS1_PSS(73,3034
int RSA_verify_PKCS1_PSS_mgf1(79,3231
int RSA_padding_add_PKCS1_PSS(187,5654
int RSA_padding_add_PKCS1_PSS_mgf1(194,5858

crypto/rsa/rsa_depr.c,82
static void *dummy=dummy67,2904
RSA *RSA_generate_key(RSA_generate_key71,2939

crypto/rsa/rsa_chk.c,27
int RSA_check_key(56,2593

crypto/rsa/rsa_x931.c,102
int RSA_padding_add_X931(66,2881
int RSA_padding_check_X931(105,3579
int RSA_X931_hash_id(158,4458

crypto/rsa/rsa_sign.c,108
#define SSL_SIG_LENGTH	68,3407
int RSA_sign(70,3434
int int_rsa_verify(154,5454
int RSA_verify(306,9007

crypto/rsa/rsa_pk1.c,174
int RSA_padding_add_PKCS1_type_1(65,3314
int RSA_padding_check_PKCS1_type_1(91,3816
int RSA_padding_add_PKCS1_type_2(143,4839
int RSA_padding_check_PKCS1_type_2(181,5485

crypto/rsa/rsa_pmeth.c,830
	int nbits;80,3146
	BIGNUM *pub_exp;pub_exp81,3158
	int gentmp[gentmp83,3204
	int pad_mode;85,3244
	const EVP_MD *md;md87,3281
	const EVP_MD *mgf1md;mgf1md89,3331
	int saltlen;91,3382
	unsigned char *tbuf;tbuf93,3415
	} RSA_PKEY_CTX;94,3437
static int pkey_rsa_init(96,3455
static int pkey_rsa_copy(118,3856
static int setup_tbuf(137,4236
static void pkey_rsa_cleanup(147,4424
static int pkey_fips_check_ctx(166,4839
static int pkey_rsa_sign(185,5292
static int pkey_rsa_verifyrecover(282,7403
static int pkey_rsa_verify(339,8632
static int pkey_rsa_encrypt(416,10209
static int pkey_rsa_decrypt(430,10533
static int check_padding_md(444,10858
static int pkey_rsa_ctrl(470,11270
static int pkey_rsa_ctrl_str(595,14044
static int pkey_rsa_keygen(656,15347
const EVP_PKEY_METHOD rsa_pkey_meth 686,15921

crypto/rsa/rsa_none.c,70
int RSA_padding_add_none(65,3315
int RSA_padding_check_none(84,3688

crypto/rsa/rsa_test.c,213
int main(13,222
#define SetKey 21,338
static int key1(33,856
static int key2(82,2751
static int key3(127,4333
static int pad_unknown(199,7709
static const char rnd_seed[rnd_seed208,7889
int main(210,7988

crypto/rsa/rsa_crpt.c,364
int RSA_size(70,3430
int RSA_public_encrypt(75,3493
int RSA_private_encrypt(89,3892
int RSA_private_decrypt(103,4294
int RSA_public_decrypt(117,4696
int RSA_flags(131,5095
void RSA_blinding_off(136,5169
int RSA_blinding_on(147,5373
static BIGNUM *rsa_get_public_exp(rsa_get_public_exp165,5677
BN_BLINDING *RSA_setup_blinding(RSA_setup_blinding190,6208

crypto/rsa/rsa_prn.c,49
int RSA_print_fp(65,2863
int RSA_print(82,3136

crypto/rsa/rsa_null.c,393
static RSA_METHOD rsa_null_meth=85,3864
const RSA_METHOD *RSA_null_method(RSA_null_method102,4101
static int RSA_null_public_encrypt(107,4173
static int RSA_null_private_encrypt(114,4388
static int RSA_null_private_decrypt(121,4605
static int RSA_null_public_decrypt(128,4822
static int RSA_null_mod_exp(136,5068
static int RSA_null_init(143,5224
static int RSA_null_finish(148,5278

crypto/rsa/rsa_oaep.c,133
int RSA_padding_add_PKCS1_OAEP(34,1102
int RSA_padding_check_PKCS1_OAEP(94,2691
int PKCS1_MGF1(186,5148
static int MGF1(230,6119

crypto/camellia/cmll_ctr.c,38
void Camellia_ctr128_encrypt(55,2586

crypto/camellia/cmll_ecb.c,60
#  define NDEBUG54,2567
void Camellia_ecb_encrypt(62,2674

crypto/camellia/camellia.h,461
#define HEADER_CAMELLIA_H53,2550
#define CAMELLIA_ENCRYPT	63,2696
#define CAMELLIA_DECRYPT	64,2723
#define CAMELLIA_BLOCK_SIZE 75,2976
#define CAMELLIA_TABLE_BYTE_LEN 76,3007
#define CAMELLIA_TABLE_WORD_LEN 77,3043
typedef unsigned int KEY_TABLE_TYPE[KEY_TABLE_TYPE79,3106
struct camellia_key_st 81,3194
		double d;84,3230
		KEY_TABLE_TYPE rd_key;85,3269
		} u;86,3294
	int grand_rounds;87,3301
typedef struct camellia_key_st CAMELLIA_KEY;89,3324

crypto/camellia/camellia.c,1119
#  define RightRotate(92,4194
#  define LeftRotate(93,4235
#   define SWAP(95,4299
#   define SWAP(97,4345
#  define GETU32(99,4429
#  define PUTU32(100,4471
#   define RightRotate(103,4604
#   define LeftRotate(104,4700
#    define GETU32(106,4847
#    define PUTU32(107,4885
#    define GETU32(109,4936
#    define PUTU32(110,5026
#   define LeftRotate(114,5253
#   define RightRotate(115,5354
#   define LeftRotate(117,5430
#   define RightRotate(118,5523
#   define GETU32(119,5572
#   define PUTU32(120,5609
# define RightRotate(126,5725
# define LeftRotate(127,5789
# define GETU32(131,5902
# define PUTU32(132,6005
#define SBOX1_1110 136,6148
#define SBOX4_4404 137,6184
#define SBOX2_0222 138,6220
#define SBOX3_3033 139,6256
static const u32 Camellia_SBOX[Camellia_SBOX140,6292
static const u32 SIGMA[SIGMA316,19520
#define Camellia_Feistel(329,20117
#define RotLeft128(354,20837
int Camellia_Ekeygen(362,21052
void Camellia_EncryptBlock_Rounds(486,25386
void Camellia_EncryptBlock(528,26511
void Camellia_DecryptBlock_Rounds(535,26724
void Camellia_DecryptBlock(577,27842

crypto/camellia/cmll_cfb.c,113
void Camellia_cfb128_encrypt(117,5945
void Camellia_cfb1_encrypt(126,6261
void Camellia_cfb8_encrypt(133,6515

crypto/camellia/cmll_locl.h,108
#define HEADER_CAMELLIA_LOCL_H69,3216
typedef unsigned int  u32;71,3248
typedef unsigned char u8;72,3275

crypto/camellia/cmll_cbc.c,35
void Camellia_cbc_encrypt(55,2586

crypto/camellia/cmll_ofb.c,39
void Camellia_ofb128_encrypt(115,5943

crypto/camellia/cmll_utl.c,30
int Camellia_set_key(57,2637

crypto/camellia/cmll_misc.c,154
const char CAMELLIA_version[CAMELLIA_version57,2642
int private_Camellia_set_key(59,2707
void Camellia_encrypt(70,2985
void Camellia_decrypt(76,3161

crypto/cryptlib.h,453
#define HEADER_CRYPTLIB_H60,3220
#define BIO_FLAGS_UPLINK 68,3334
#define X509_CERT_AREA	83,3604
#define X509_CERT_DIR	84,3639
#define X509_CERT_FILE	85,3682
#define X509_PRIVATE_DIR	86,3729
#define X509_CERT_AREA	88,3782
#define X509_CERT_DIR	89,3825
#define X509_CERT_FILE	90,3860
#define X509_PRIVATE_DIR 91,3904
#define X509_CERT_DIR_EVP 94,3958
#define X509_CERT_FILE_EVP 95,4006
#define DECIMAL_SIZE(98,4093
#define HEX_SIZE(99,4145

crypto/s390xcap.c,98
static sigjmp_buf ill_jmp;9,144
static void ill_handler 10,171
void OPENSSL_cpuid_setup(14,282

crypto/ecdsa/ecs_asn1.c,29
} ASN1_SEQUENCE_END(63,2839

crypto/ecdsa/ecs_err.c,225
#define ERR_FUNC(68,2979
#define ERR_REASON(69,3033
static ERR_STRING_DATA ECDSA_str_functs[ECDSA_str_functs71,3094
static ERR_STRING_DATA ECDSA_str_reasons[ECDSA_str_reasons81,3436
void ERR_load_ECDSA_strings(96,4061

crypto/ecdsa/ecdsa.h,728
#define HEADER_ECDSA_H60,2824
typedef struct ECDSA_SIG_st78,3096
	BIGNUM *r;r80,3127
	BIGNUM *s;s81,3139
	} ECDSA_SIG;82,3151
#define ECDSA_F_ECDSA_CHECK	241,9902
#define ECDSA_F_ECDSA_DATA_NEW_METHOD	242,9938
#define ECDSA_F_ECDSA_DO_SIGN	243,9983
#define ECDSA_F_ECDSA_DO_VERIFY	244,10021
#define ECDSA_F_ECDSA_SIGN_SETUP	245,10061
#define ECDSA_R_BAD_SIGNATURE	248,10122
#define ECDSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE	249,10160
#define ECDSA_R_ERR_EC_LIB	250,10210
#define ECDSA_R_MISSING_PARAMETERS	251,10245
#define ECDSA_R_NEED_NEW_SETUP_VALUES	252,10287
#define ECDSA_R_NON_FIPS_METHOD	253,10332
#define ECDSA_R_RANDOM_NUMBER_GENERATION_FAILED	254,10372
#define ECDSA_R_SIGNATURE_MALLOC_FAILED	255,10426

crypto/ecdsa/ecs_lib.c,683
const char ECDSA_version[ECDSA_version67,2870
static const ECDSA_METHOD *default_ECDSA_method default_ECDSA_method69,2929
void ECDSA_set_default_method(75,3097
const ECDSA_METHOD *ECDSA_get_default_method(ECDSA_get_default_method80,3188
int ECDSA_set_method(96,3470
static ECDSA_DATA *ECDSA_DATA_new_method(ECDSA_DATA_new_method117,3783
static void *ecdsa_data_new(ecdsa_data_new161,4718
static void *ecdsa_data_dup(ecdsa_data_dup166,4802
static void ecdsa_data_free(177,4971
ECDSA_DATA *ecdsa_check(ecdsa_check192,5261
int ECDSA_size(220,5950
int ECDSA_get_ex_new_index(255,6600
int ECDSA_set_ex_data(262,6841
void *ECDSA_get_ex_data(ECDSA_get_ex_data271,7030

crypto/ecdsa/ecs_vrf.c,55
int ECDSA_do_verify(69,2899
int ECDSA_verify(83,3238

crypto/ecdsa/ecdsatest.c,404
int main(79,3426
static const char rnd_seed[rnd_seed97,3766
RAND_METHOD	fake_rand;110,4164
const RAND_METHOD *old_rand;old_rand111,4187
int change_rand(113,4217
int restore_rand(132,4683
static int fbytes_counter 140,4781
static const char *numbers[numbers141,4812
int fbytes(155,5423
int x9_62_test_internal(181,5845
int x9_62_tests(245,7494
int test_builtin(284,8620
int main(526,14884

crypto/ecdsa/ecs_ossl.c,235
static ECDSA_METHOD openssl_ecdsa_meth 71,3145
const ECDSA_METHOD *ECDSA_OpenSSL(ECDSA_OpenSSL84,3371
static int ecdsa_sign_setup(89,3445
static ECDSA_SIG *ecdsa_do_sign(ecdsa_do_sign222,6414
static int ecdsa_do_verify(353,9197

crypto/ecdsa/ecs_locl.h,607
#define HEADER_ECS_LOCL_H60,2745
struct ecdsa_method 68,2841
	const char *name;name70,2865
	ECDSA_SIG *(*ecdsa_do_sign)ecdsa_do_sign71,2884
	int (*ecdsa_sign_setup)ecdsa_sign_setup73,3011
	int (*ecdsa_do_verify)ecdsa_do_verify75,3096
	int (*init)init78,3209
	int (*finish)finish79,3238
	int flags;81,3276
	char *app_data;app_data82,3288
#define ECDSA_FLAG_FIPS_METHOD	91,3568
typedef struct ecdsa_data_st 93,3604
	int (*init)init95,3664
	ENGINE	*engine;engine97,3724
	int	flags;98,3741
	const ECDSA_METHOD *meth;meth99,3753
	CRYPTO_EX_DATA ex_data;100,3780
} ECDSA_DATA;101,3805

crypto/ecdsa/ecs_sign.c,183
ECDSA_SIG *ECDSA_do_sign(ECDSA_do_sign62,2777
ECDSA_SIG *ECDSA_do_sign_ex(ECDSA_do_sign_ex67,2916
int ECDSA_sign(76,3181
int ECDSA_sign_ex(82,3381
int ECDSA_sign_setup(99,3752

crypto/opensslconf.h,1879
# define OPENSSL_NO_EC_NISTP_64_GCC_1289,227
# define OPENSSL_NO_GMP12,297
# define OPENSSL_NO_JPAKE15,353
# define OPENSSL_NO_KRB518,410
# define OPENSSL_NO_MD221,465
# define OPENSSL_NO_RC524,519
# define OPENSSL_NO_RFC377927,577
# define OPENSSL_NO_SCTP30,636
# define OPENSSL_NO_STORE33,693
# define OPENSSL_THREADS39,790
# define OPENSSL_NO_DYNAMIC_ENGINE42,856
#  define NO_EC_NISTP_64_GCC_12851,1244
#  define NO_GMP54,1334
#  define NO_JPAKE57,1412
#  define NO_KRB560,1490
#  define NO_MD263,1565
#  define NO_RC566,1639
#  define NO_RFC377969,1721
#  define NO_SCTP72,1801
#  define NO_STORE75,1880
#define OPENSSL_CPUID_OBJ79,1915
#undef I386_ONLY84,2000
#define ENGINESDIR 88,2148
#define OPENSSLDIR 89,2196
#undef OPENSSL_UNISTD93,2247
#define OPENSSL_UNISTD 94,2269
#undef OPENSSL_EXPORT_VAR_AS_FUNCTION96,2304
#define IDEA_INT 99,2392
#define MD2_INT 103,2477
#define RC2_INT 108,2610
#define RC4_INT 120,3029
#define RC4_CHUNK 127,3218
#define DES_LONG 135,3485
#define CONFIG_HEADER_BN_H140,3587
#undef BN_LLONG141,3614
#define SIXTY_FOUR_BIT_LONG146,3721
#undef SIXTY_FOUR_BIT147,3749
#undef THIRTY_TWO_BIT148,3771
#define CONFIG_HEADER_RC4_LOCL_H152,3870
#undef RC4_INDEX155,3994
#define CONFIG_HEADER_BF_LOCL_H159,4086
#undef BF_PTR160,4118
#define CONFIG_HEADER_DES_LOCL_H164,4232
#undef DES_PTR169,4408
#undef DES_RISC1176,4609
#undef DES_RISC2180,4652
#define DES_UNROLL190,4908
#  define DES_PTR204,5578
#  define DES_RISC1205,5596
#  define DES_UNROLL206,5616
#  define DES_PTR208,5680
#  define DES_RISC2209,5698
#  define DES_UNROLL210,5718
#  define DES_PTR212,5777
#  define DES_RISC2213,5795
#  define DES_UNROLL221,6031
#  define DES_PTR223,6093
#  define DES_RISC2224,6111
#  define DES_UNROLL225,6131
#  define DES_PTR227,6224
#  define DES_RISC1228,6242
#  define DES_UNROLL229,6262

crypto/modes/modes_lcl.h,2013
typedef __int64 i64;12,370
typedef unsigned __int64 u64;13,391
#define U64(14,421
typedef long i64;16,470
typedef unsigned long u64;17,488
#define U64(18,515
typedef long long i64;20,542
typedef unsigned long long u64;21,565
#define U64(22,597
typedef unsigned int u32;25,627
typedef unsigned char u8;26,653
#define STRICT_ALIGNMENT 28,680
# undef STRICT_ALIGNMENT36,1093
#  define BSWAP8(42,1295
#  define BSWAP4(45,1384
#  define BSWAP8(49,1542
#  define BSWAP4(53,1680
#  define BSWAP8(57,1843
#  define BSWAP4(61,1981
#  define BSWAP8(69,2195
#  define BSWAP4(70,2242
   __inline u32 _bswap4(72,2312
#  define BSWAP4(76,2386
#define GETU32(82,2490
#define PUTU32(83,2534
#define GETU32(85,2584
#define PUTU32(86,2663
typedef struct { u64 hi,91,2793
typedef struct { u64 hi,lo;91,2793
typedef struct { u64 hi,lo; } u128;91,2793
#undef	TABLE_BITS94,2848
#define	TABLE_BITS 100,3020
struct gcm128_context 102,3042
	union { u64 u[u104,3125
	union { u64 u[2]; u32 d[d104,3125
	union { u64 u[2]; u32 d[4]; u8 c[c104,3125
	union { u64 u[2]; u32 d[4]; u8 c[16]; }	Yi,104,3125
	union { u64 u[2]; u32 d[4]; u8 c[16]; }	Yi,EKi,104,3125
	union { u64 u[2]; u32 d[4]; u8 c[16]; }	Yi,EKi,EK0,104,3125
	union { u64 u[2]; u32 d[4]; u8 c[16]; }	Yi,EKi,EK0,len,104,3125
						Xi,105,3182
						Xi,H;105,3182
	u128 Htable[Htable109,3338
	u128 Htable[Htable111,3363
	void (*gmult)gmult112,3381
	void (*ghash)ghash113,3430
	unsigned int mres,115,3511
	unsigned int mres, ares;115,3511
	block128_f block;116,3537
	void *key;key117,3556
struct xts128_context 120,3572
	void      *key1,key1121,3596
	void      *key1, *key2;key2121,3596
	block128_f block1,122,3621
	block128_f block1,block2;122,3621
struct ccm128_context 125,3652
	union { u64 u[u126,3676
	union { u64 u[2]; u8 c[c126,3676
	union { u64 u[2]; u8 c[16]; } nonce,126,3676
	union { u64 u[2]; u8 c[16]; } nonce, cmac;126,3676
	u64 blocks;127,3720
	block128_f block;128,3733
	void *key;key129,3752

crypto/modes/ccm128.c,635
#  define NDEBUG56,2560
void CRYPTO_ccm128_init(63,2725
int CRYPTO_ccm128_setiv(76,3138
void CRYPTO_ccm128_aad(104,3963
static void ctr64_inc(156,5360
int CRYPTO_ccm128_encrypt(170,5541
	union { u64 u[u179,5779
	union { u64 u[2]; u8 c[c179,5779
int CRYPTO_ccm128_decrypt(245,7268
	union { u64 u[u254,7506
	union { u64 u[2]; u8 c[c254,7506
static void ctr64_add 311,8775
int CRYPTO_ccm128_encrypt_ccm64(324,9026
	union { u64 u[u333,9286
	union { u64 u[2]; u8 c[c333,9286
int CRYPTO_ccm128_decrypt_ccm64(381,10307
	union { u64 u[u390,10567
	union { u64 u[2]; u8 c[c390,10567
size_t CRYPTO_ccm128_tag(434,11424

crypto/modes/cbc128.c,217
#  define NDEBUG57,2563
#  define STRICT_ALIGNMENT 63,2641
void CRYPTO_cbc128_encrypt(66,2678
void CRYPTO_cbc128_decrypt(115,3664
	union { size_t align;120,3826
	union { size_t align; unsigned char c[c120,3826

crypto/modes/xts128.c,311
#  define NDEBUG56,2560
int CRYPTO_xts128_encrypt(61,2613
	const union { long one;65,2765
	const union { long one; char little;65,2765
	union { u64 u[u66,2822
	union { u64 u[2]; u32 d[d66,2822
	union { u64 u[2]; u32 d[4]; u8 c[c66,2822
		union { u64 u[u135,4355
		union { u64 u[2]; u8 c[c135,4355

crypto/modes/cts128.c,1526
#  define NDEBUG14,367
size_t CRYPTO_cts128_encrypt_block(32,1090
size_t CRYPTO_nistcts128_encrypt_block(59,1626
size_t CRYPTO_cts128_encrypt(87,2148
	union { size_t align;91,2313
	union { size_t align; unsigned char c[c91,2313
size_t CRYPTO_nistcts128_encrypt(123,2892
	union { size_t align;127,3061
	union { size_t align; unsigned char c[c127,3061
size_t CRYPTO_cts128_decrypt_block(158,3577
	union { size_t align;162,3755
	union { size_t align; unsigned char c[c162,3755
size_t CRYPTO_nistcts128_decrypt_block(196,4393
	union { size_t align;200,4575
	union { size_t align; unsigned char c[c200,4575
size_t CRYPTO_cts128_decrypt(240,5315
	union { size_t align;244,5483
	union { size_t align; unsigned char c[c244,5483
size_t CRYPTO_nistcts128_decrypt(275,6131
	union { size_t align;279,6303
	union { size_t align; unsigned char c[c279,6303
static const unsigned char test_key[test_key320,7100
static const unsigned char test_input[test_input321,7162
static const unsigned char test_iv[test_iv324,7287
static const unsigned char vector_17[vector_17326,7364
static const unsigned char vector_31[vector_31329,7498
static const unsigned char vector_32[vector_32332,7703
static const unsigned char vector_47[vector_47335,7913
static const unsigned char vector_48[vector_48339,8201
static const unsigned char vector_64[vector_64343,8494
static AES_KEY encks,349,8871
static AES_KEY encks, decks;349,8871
void test_vector(351,8901
void test_nistvector(394,10540
int main(444,12428

crypto/modes/gcm128.c,4851
#define OPENSSL_FIPSAPI50,2452
#  define NDEBUG58,2585
#undef	GETU3265,2732
#define	GETU32(66,2746
#undef	PUTU3267,2790
#define	PUTU32(68,2804
#define	PACK(71,2856
#define REDUCE1BIT(72,2910
static void gcm_init_8bit(121,5237
static void gcm_gmult_8bit(145,5623
	const union { long one;150,5763
	const union { long one; char little;150,5763
#define GCM_MUL(252,10176
static void gcm_init_4bit(256,10262
	const union { long one;310,11799
	const union { long one; char little;310,11799
static const size_t rem_4bit[rem_4bit329,12129
static void gcm_gmult_4bit(335,12397
	const union { long one;340,12507
	const union { long one; char little;340,12507
static void gcm_ghash_4bit(406,13878
    const union { long one;412,14021
    const union { long one; char little;412,14021
#define GCM_MUL(574,18941
#define GHASH(576,19065
#define GHASH_CHUNK 580,19321
static void gcm_gmult_1bit(585,19388
	const union { long one;591,19520
	const union { long one; char little;591,19520
#define GCM_MUL(641,20467
#  define GHASH_ASM_X86_OR_64650,20759
#  define GCM_FUNCREF_4BIT651,20789
#   define GHASH_ASM_X86659,21112
#   define GHASH_ASM_ARM669,21517
#   define GCM_FUNCREF_4BIT670,21542
# undef  GCM_MUL678,21752
# define GCM_MUL(679,21769
#  undef  GHASH681,21846
#  define GHASH(682,21862
void CRYPTO_gcm128_init(686,21951
	const union { long one;688,22025
	const union { long one; char little;688,22025
void CRYPTO_gcm128_setiv(756,23718
	const union { long one;758,23801
	const union { long one; char little;758,23801
int CRYPTO_gcm128_aad(826,25152
int CRYPTO_gcm128_encrypt(883,26169
	const union { long one;887,26279
	const union { long one; char little;887,26279
int CRYPTO_gcm128_decrypt(1033,29347
	const union { long one;1037,29457
	const union { long one; char little;1037,29457
int CRYPTO_gcm128_encrypt_ctr32(1186,32507
	const union { long one;1190,32640
	const union { long one; char little;1190,32640
int CRYPTO_gcm128_decrypt_ctr32(1285,34508
	const union { long one;1289,34640
	const union { long one; char little;1289,34640
int CRYPTO_gcm128_finish(1391,36581
	const union { long one;1394,36669
	const union { long one; char little;1394,36669
void CRYPTO_gcm128_tag(1432,37405
GCM128_CONTEXT *CRYPTO_gcm128_new(CRYPTO_gcm128_new1438,37594
void CRYPTO_gcm128_release(1448,37807
static const u8	K1[K11461,38018
		*P1=P11462,38042
#define K2 1469,38200
#define A2 1470,38214
#define IV2 1471,38228
static const u8	P2[P21472,38244
		C2[C21473,38268
		T2[T21474,38360
#define A3 1477,38471
static const u8	K3[K31478,38485
		P3[P31479,38591
		IV3[IV31483,38935
		C3[C31484,39007
		T3[T31488,39351
#define K4 1491,39462
#define IV4 1492,39476
static const u8	P4[P41493,39492
		A4[A41497,39830
		C4[C41499,39946
		T4[T41503,40270
#define K5 1506,40381
#define P5 1507,40395
#define A5 1508,40409
static const u8	IV5[IV51509,40423
		C5[C51510,40489
		T5[T51514,40813
#define K6 1517,40924
#define P6 1518,40938
#define A6 1519,40952
static const u8	IV6[IV61520,40966
		C6[C61524,41304
		T6[T61528,41628
static const u8 K7[K71531,41739
		*P7=P71532,41763
#define K8 1539,41921
#define IV8 1540,41935
#define A8 1541,41951
static const u8	P8[P81542,41965
		C8[C81543,41989
		T8[T81544,42081
#define A9 1547,42192
static const u8	K9[K91548,42206
		P9[P91550,42356
		IV9[IV91554,42700
		C9[C91555,42772
		T9[T91559,43116
#define K10 1562,43228
#define IV10 1563,43243
static const u8	P10[P101564,43260
		A10[A101568,43598
		C10[C101570,43714
		T10[T101574,44038
#define K11 1577,44150
#define P11 1578,44166
#define A11 1579,44182
static const u8	IV11[IV111580,44198
		C11[C111581,44264
		T11[T111585,44588
#define K12 1588,44700
#define P12 1589,44716
#define A12 1590,44732
static const u8	IV12[IV121591,44748
		C12[C121595,45086
		T12[T121599,45410
static const u8	K13[K131602,45522
		*P13=P131603,45547
#define K14 1610,45709
#define A14 1611,45725
static const u8	P14[P141612,45741
		IV14[IV141613,45766
		C14[C141614,45778
		T14[T141615,45870
#define A15 1618,45982
static const u8	K15[K151619,45998
		P15[P151621,46188
		IV15[IV151625,46532
		C15[C151626,46604
		T15[T151630,46948
#define K16 1633,47060
#define IV16 1634,47076
static const u8	P16[P161635,47094
		A16[A161639,47432
		C16[C161641,47548
		T16[T161645,47872
#define K17 1648,47984
#define P17 1649,48000
#define A17 1650,48016
static const u8	IV17[IV171651,48032
		C17[C171652,48098
		T17[T171656,48422
#define K18 1659,48534
#define P18 1660,48550
#define A18 1661,48566
static const u8	IV18[IV181662,48582
		C18[C181666,48920
		T18[T181670,49244
#define TEST_CASE(1672,49337
int main(1692,50216
	union { u64 u;1720,50633
	union { u64 u; u8 c[c1720,50633

crypto/modes/cfb128.c,180
#  define NDEBUG57,2563
void CRYPTO_cfb128_encrypt(66,2804
static void cfbr_encrypt_block(175,5134
void CRYPTO_cfb128_1_encrypt(209,6175
void CRYPTO_cfb128_8_encrypt(229,6686

crypto/modes/ctr128.c,288
#  define NDEBUG57,2563
static void ctr128_inc(66,2750
static void ctr128_inc_aligned(80,2947
	const union { long one;82,3023
	const union { long one; char little;82,3023
void CRYPTO_ctr128_encrypt(114,3944
static void ctr96_inc(177,5294
void CRYPTO_ctr128_encrypt_ctr32(190,5452

crypto/modes/ofb128.c,61
#  define NDEBUG57,2563
void CRYPTO_ofb128_encrypt(66,2804

crypto/modes/modes.h,332
typedef void (*block128_f)block128_f10,280
typedef void (*cbc128_f)cbc128_f14,383
typedef void (*ctr128_f)ctr128_f18,523
typedef void (*ccm128_f)ccm128_f22,663
typedef struct gcm128_context GCM128_CONTEXT;87,3466
typedef struct ccm128_context CCM128_CONTEXT;112,4526
typedef struct xts128_context XTS128_CONTEXT;132,5422

crypto/mem.c,1171
static int allow_customize 65,3280
static int allow_customize_debug 66,3357
static void *default_malloc_ex(default_malloc_ex78,3923
static void *default_realloc_ex(default_realloc_ex84,4176
static void *default_malloc_locked_ex(default_malloc_locked_ex93,4516
int CRYPTO_set_mem_functions(125,5773
int CRYPTO_set_mem_ex_functions(141,6200
int CRYPTO_set_locked_mem_functions(158,6608
int CRYPTO_set_locked_mem_ex_functions(169,6873
int CRYPTO_set_mem_debug_functions(182,7145
void CRYPTO_get_mem_functions(200,7560
void CRYPTO_get_mem_ex_functions(210,7903
void CRYPTO_get_locked_mem_functions(222,8302
void CRYPTO_get_locked_mem_ex_functions(229,8546
void CRYPTO_get_mem_debug_functions(238,8828
void *CRYPTO_malloc_locked(CRYPTO_malloc_locked252,9266
void CRYPTO_free_locked(284,10124
void *CRYPTO_malloc(CRYPTO_malloc296,10399
char *CRYPTO_strdup(CRYPTO_strdup327,11256
void *CRYPTO_realloc(CRYPTO_realloc335,11416
void *CRYPTO_realloc_clean(CRYPTO_realloc_clean356,11946
void CRYPTO_free(390,12746
void *CRYPTO_remalloc(CRYPTO_remalloc402,13007
void CRYPTO_set_mem_debug_options(409,13159
long CRYPTO_get_mem_debug_options(415,13280

crypto/pqueue/pq_test.c,14
main(63,2812

crypto/pqueue/pqueue.h,282
#define HEADER_PQUEUE_H61,2810
typedef struct _pqueue *pqueue;pqueue67,2895
typedef struct _pitem69,2928
	unsigned char priority[priority71,2953
	void *data;data72,3023
	struct _pitem *next;next73,3036
	} pitem;74,3058
typedef struct _pitem *piterator;piterator76,3069

crypto/pqueue/pqueue.c,364
typedef struct _pqueue64,2853
	pitem *items;items66,2879
	int count;67,2894
	} pqueue_s;68,2906
pitem_new(71,2928
pitem_free(85,3189
pqueue_new(93,3280
pqueue_free(103,3448
pqueue_insert(111,3534
pqueue_peek(151,4194
pqueue_pop(157,4254
pqueue_find(168,4391
pqueue_print(203,4954
pqueue_iterator(219,5287
pqueue_next(225,5357
pqueue_size(241,5535

crypto/s390xcpuid.S,696
.globl	3,7
.type	4,39
.align	5,80
OPENSSL_s390x_facilities:OPENSSL_s390x_facilities6,90
.Ldone:.Ldone14,265
.size	17,297
.globl	19,356
.type	20,377
.align	21,407
OPENSSL_rdtsc:OPENSSL_rdtsc22,417
.size	26,473
.globl	28,510
.type	29,536
.align	30,571
OPENSSL_atomic_add:OPENSSL_atomic_add31,581
.Lspin:.Lspin33,615
.size	39,735
.globl	41,782
.type	42,806
.align	43,839
OPENSSL_wipe_cpu:OPENSSL_wipe_cpu44,849
.size	59,1022
.globl	61,1065
.type	62,1088
.align	63,1120
OPENSSL_cleanse:OPENSSL_cleanse64,1130
.Little:.Little74,1288
.align	79,1356
.Lot:.Lot80,1365
.Laligned:.Laligned85,1443
.Loop:.Loop87,1470
.size	94,1571
.section	96,1612
.comm	99,1660

crypto/seed/seed_cfb.c,35
void SEED_cfb128_encrypt(111,5748

crypto/seed/seed.h,269
#define HEADER_SEED_H82,4004
#  define SEED_LONG 94,4256
#define SEED_BLOCK_SIZE 102,4355
#define SEED_KEY_LENGTH	103,4382
typedef struct seed_key_st 111,4453
    unsigned long data[data113,4499
    unsigned int data[data115,4533
} SEED_KEY_SCHEDULE;117,4567

crypto/seed/seed_ecb.c,31
void SEED_ecb_encrypt(54,2547

crypto/seed/seed_cbc.c,31
void SEED_cbc_encrypt(55,2579

crypto/seed/seed.c,19238
#undef SS40,1619
static const seed_word SS[SS43,1637
	0x38380830,x3838083077,4785
	0x38380830, 0xe828c8e0,xe828c8e077,4785
	0x38380830, 0xe828c8e0, 0x2c2d0d21,x2c2d0d2177,4785
	0x38380830, 0xe828c8e0, 0x2c2d0d21, 0xa42686a2,xa42686a277,4785
	0x38380830, 0xe828c8e0, 0x2c2d0d21, 0xa42686a2, 0xcc0fcfc3,xcc0fcfc377,4785
	0x38380830, 0xe828c8e0, 0x2c2d0d21, 0xa42686a2, 0xcc0fcfc3, 0xdc1eced2,xdc1eced277,4785
	0x38380830, 0xe828c8e0, 0x2c2d0d21, 0xa42686a2, 0xcc0fcfc3, 0xdc1eced2, 0xb03383b3,xb03383b377,4785
	0x38380830, 0xe828c8e0, 0x2c2d0d21, 0xa42686a2, 0xcc0fcfc3, 0xdc1eced2, 0xb03383b3, 0xb83888b0,xb83888b077,4785
	0xac2f8fa3,xac2f8fa378,4882
	0xac2f8fa3, 0x60204060,x6020406078,4882
	0xac2f8fa3, 0x60204060, 0x54154551,x5415455178,4882
	0xac2f8fa3, 0x60204060, 0x54154551, 0xc407c7c3,xc407c7c378,4882
	0xac2f8fa3, 0x60204060, 0x54154551, 0xc407c7c3, 0x44044440,x4404444078,4882
	0xac2f8fa3, 0x60204060, 0x54154551, 0xc407c7c3, 0x44044440, 0x6c2f4f63,x6c2f4f6378,4882
	0xac2f8fa3, 0x60204060, 0x54154551, 0xc407c7c3, 0x44044440, 0x6c2f4f63, 0x682b4b63,x682b4b6378,4882
	0xac2f8fa3, 0x60204060, 0x54154551, 0xc407c7c3, 0x44044440, 0x6c2f4f63, 0x682b4b63, 0x581b4b53,x581b4b5378,4882
	0xc003c3c3,xc003c3c379,4979
	0xc003c3c3, 0x60224262,x6022426279,4979
	0xc003c3c3, 0x60224262, 0x30330333,x3033033379,4979
	0xc003c3c3, 0x60224262, 0x30330333, 0xb43585b1,xb43585b179,4979
	0xc003c3c3, 0x60224262, 0x30330333, 0xb43585b1, 0x28290921,x2829092179,4979
	0xc003c3c3, 0x60224262, 0x30330333, 0xb43585b1, 0x28290921, 0xa02080a0,xa02080a079,4979
	0xc003c3c3, 0x60224262, 0x30330333, 0xb43585b1, 0x28290921, 0xa02080a0, 0xe022c2e2,xe022c2e279,4979
	0xc003c3c3, 0x60224262, 0x30330333, 0xb43585b1, 0x28290921, 0xa02080a0, 0xe022c2e2, 0xa42787a3,xa42787a379,4979
	0xd013c3d3,xd013c3d380,5076
	0xd013c3d3, 0x90118191,x9011819180,5076
	0xd013c3d3, 0x90118191, 0x10110111,x1011011180,5076
	0xd013c3d3, 0x90118191, 0x10110111, 0x04060602,x0406060280,5076
	0xd013c3d3, 0x90118191, 0x10110111, 0x04060602, 0x1c1c0c10,x1c1c0c1080,5076
	0xd013c3d3, 0x90118191, 0x10110111, 0x04060602, 0x1c1c0c10, 0xbc3c8cb0,xbc3c8cb080,5076
	0xd013c3d3, 0x90118191, 0x10110111, 0x04060602, 0x1c1c0c10, 0xbc3c8cb0, 0x34360632,x3436063280,5076
	0xd013c3d3, 0x90118191, 0x10110111, 0x04060602, 0x1c1c0c10, 0xbc3c8cb0, 0x34360632, 0x480b4b43,x480b4b4380,5076
	0xec2fcfe3,xec2fcfe381,5173
	0xec2fcfe3, 0x88088880,x8808888081,5173
	0xec2fcfe3, 0x88088880, 0x6c2c4c60,x6c2c4c6081,5173
	0xec2fcfe3, 0x88088880, 0x6c2c4c60, 0xa82888a0,xa82888a081,5173
	0xec2fcfe3, 0x88088880, 0x6c2c4c60, 0xa82888a0, 0x14170713,x1417071381,5173
	0xec2fcfe3, 0x88088880, 0x6c2c4c60, 0xa82888a0, 0x14170713, 0xc404c4c0,xc404c4c081,5173
	0xec2fcfe3, 0x88088880, 0x6c2c4c60, 0xa82888a0, 0x14170713, 0xc404c4c0, 0x14160612,x1416061281,5173
	0xec2fcfe3, 0x88088880, 0x6c2c4c60, 0xa82888a0, 0x14170713, 0xc404c4c0, 0x14160612, 0xf434c4f0,xf434c4f081,5173
	0xc002c2c2,xc002c2c282,5270
	0xc002c2c2, 0x44054541,x4405454182,5270
	0xc002c2c2, 0x44054541, 0xe021c1e1,xe021c1e182,5270
	0xc002c2c2, 0x44054541, 0xe021c1e1, 0xd416c6d2,xd416c6d282,5270
	0xc002c2c2, 0x44054541, 0xe021c1e1, 0xd416c6d2, 0x3c3f0f33,x3c3f0f3382,5270
	0xc002c2c2, 0x44054541, 0xe021c1e1, 0xd416c6d2, 0x3c3f0f33, 0x3c3d0d31,x3c3d0d3182,5270
	0xc002c2c2, 0x44054541, 0xe021c1e1, 0xd416c6d2, 0x3c3f0f33, 0x3c3d0d31, 0x8c0e8e82,x8c0e8e8282,5270
	0xc002c2c2, 0x44054541, 0xe021c1e1, 0xd416c6d2, 0x3c3f0f33, 0x3c3d0d31, 0x8c0e8e82, 0x98188890,x9818889082,5270
	0x28280820,x2828082083,5367
	0x28280820, 0x4c0e4e42,x4c0e4e4283,5367
	0x28280820, 0x4c0e4e42, 0xf436c6f2,xf436c6f283,5367
	0x28280820, 0x4c0e4e42, 0xf436c6f2, 0x3c3e0e32,x3c3e0e3283,5367
	0x28280820, 0x4c0e4e42, 0xf436c6f2, 0x3c3e0e32, 0xa42585a1,xa42585a183,5367
	0x28280820, 0x4c0e4e42, 0xf436c6f2, 0x3c3e0e32, 0xa42585a1, 0xf839c9f1,xf839c9f183,5367
	0x28280820, 0x4c0e4e42, 0xf436c6f2, 0x3c3e0e32, 0xa42585a1, 0xf839c9f1, 0x0c0d0d01,x0c0d0d0183,5367
	0x28280820, 0x4c0e4e42, 0xf436c6f2, 0x3c3e0e32, 0xa42585a1, 0xf839c9f1, 0x0c0d0d01, 0xdc1fcfd3,xdc1fcfd383,5367
	0xd818c8d0,xd818c8d084,5464
	0xd818c8d0, 0x282b0b23,x282b0b2384,5464
	0xd818c8d0, 0x282b0b23, 0x64264662,x6426466284,5464
	0xd818c8d0, 0x282b0b23, 0x64264662, 0x783a4a72,x783a4a7284,5464
	0xd818c8d0, 0x282b0b23, 0x64264662, 0x783a4a72, 0x24270723,x2427072384,5464
	0xd818c8d0, 0x282b0b23, 0x64264662, 0x783a4a72, 0x24270723, 0x2c2f0f23,x2c2f0f2384,5464
	0xd818c8d0, 0x282b0b23, 0x64264662, 0x783a4a72, 0x24270723, 0x2c2f0f23, 0xf031c1f1,xf031c1f184,5464
	0xd818c8d0, 0x282b0b23, 0x64264662, 0x783a4a72, 0x24270723, 0x2c2f0f23, 0xf031c1f1, 0x70324272,x7032427284,5464
	0x40024242,x4002424285,5561
	0x40024242, 0xd414c4d0,xd414c4d085,5561
	0x40024242, 0xd414c4d0, 0x40014141,x4001414185,5561
	0x40024242, 0xd414c4d0, 0x40014141, 0xc000c0c0,xc000c0c085,5561
	0x40024242, 0xd414c4d0, 0x40014141, 0xc000c0c0, 0x70334373,x7033437385,5561
	0x40024242, 0xd414c4d0, 0x40014141, 0xc000c0c0, 0x70334373, 0x64274763,x6427476385,5561
	0x40024242, 0xd414c4d0, 0x40014141, 0xc000c0c0, 0x70334373, 0x64274763, 0xac2c8ca0,xac2c8ca085,5561
	0x40024242, 0xd414c4d0, 0x40014141, 0xc000c0c0, 0x70334373, 0x64274763, 0xac2c8ca0, 0x880b8b83,x880b8b8385,5561
	0xf437c7f3,xf437c7f386,5658
	0xf437c7f3, 0xac2d8da1,xac2d8da186,5658
	0xf437c7f3, 0xac2d8da1, 0x80008080,x8000808086,5658
	0xf437c7f3, 0xac2d8da1, 0x80008080, 0x1c1f0f13,x1c1f0f1386,5658
	0xf437c7f3, 0xac2d8da1, 0x80008080, 0x1c1f0f13, 0xc80acac2,xc80acac286,5658
	0xf437c7f3, 0xac2d8da1, 0x80008080, 0x1c1f0f13, 0xc80acac2, 0x2c2c0c20,x2c2c0c2086,5658
	0xf437c7f3, 0xac2d8da1, 0x80008080, 0x1c1f0f13, 0xc80acac2, 0x2c2c0c20, 0xa82a8aa2,xa82a8aa286,5658
	0xf437c7f3, 0xac2d8da1, 0x80008080, 0x1c1f0f13, 0xc80acac2, 0x2c2c0c20, 0xa82a8aa2, 0x34340430,x3434043086,5658
	0xd012c2d2,xd012c2d287,5755
	0xd012c2d2, 0x080b0b03,x080b0b0387,5755
	0xd012c2d2, 0x080b0b03, 0xec2ecee2,xec2ecee287,5755
	0xd012c2d2, 0x080b0b03, 0xec2ecee2, 0xe829c9e1,xe829c9e187,5755
	0xd012c2d2, 0x080b0b03, 0xec2ecee2, 0xe829c9e1, 0x5c1d4d51,x5c1d4d5187,5755
	0xd012c2d2, 0x080b0b03, 0xec2ecee2, 0xe829c9e1, 0x5c1d4d51, 0x94148490,x9414849087,5755
	0xd012c2d2, 0x080b0b03, 0xec2ecee2, 0xe829c9e1, 0x5c1d4d51, 0x94148490, 0x18180810,x1818081087,5755
	0xd012c2d2, 0x080b0b03, 0xec2ecee2, 0xe829c9e1, 0x5c1d4d51, 0x94148490, 0x18180810, 0xf838c8f0,xf838c8f087,5755
	0x54174753,x5417475388,5852
	0x54174753, 0xac2e8ea2,xac2e8ea288,5852
	0x54174753, 0xac2e8ea2, 0x08080800,x0808080088,5852
	0x54174753, 0xac2e8ea2, 0x08080800, 0xc405c5c1,xc405c5c188,5852
	0x54174753, 0xac2e8ea2, 0x08080800, 0xc405c5c1, 0x10130313,x1013031388,5852
	0x54174753, 0xac2e8ea2, 0x08080800, 0xc405c5c1, 0x10130313, 0xcc0dcdc1,xcc0dcdc188,5852
	0x54174753, 0xac2e8ea2, 0x08080800, 0xc405c5c1, 0x10130313, 0xcc0dcdc1, 0x84068682,x8406868288,5852
	0x54174753, 0xac2e8ea2, 0x08080800, 0xc405c5c1, 0x10130313, 0xcc0dcdc1, 0x84068682, 0xb83989b1,xb83989b188,5852
	0xfc3fcff3,xfc3fcff389,5949
	0xfc3fcff3, 0x7c3d4d71,x7c3d4d7189,5949
	0xfc3fcff3, 0x7c3d4d71, 0xc001c1c1,xc001c1c189,5949
	0xfc3fcff3, 0x7c3d4d71, 0xc001c1c1, 0x30310131,x3031013189,5949
	0xfc3fcff3, 0x7c3d4d71, 0xc001c1c1, 0x30310131, 0xf435c5f1,xf435c5f189,5949
	0xfc3fcff3, 0x7c3d4d71, 0xc001c1c1, 0x30310131, 0xf435c5f1, 0x880a8a82,x880a8a8289,5949
	0xfc3fcff3, 0x7c3d4d71, 0xc001c1c1, 0x30310131, 0xf435c5f1, 0x880a8a82, 0x682a4a62,x682a4a6289,5949
	0xfc3fcff3, 0x7c3d4d71, 0xc001c1c1, 0x30310131, 0xf435c5f1, 0x880a8a82, 0x682a4a62, 0xb03181b1,xb03181b189,5949
	0xd011c1d1,xd011c1d190,6046
	0xd011c1d1, 0x20200020,x2020002090,6046
	0xd011c1d1, 0x20200020, 0xd417c7d3,xd417c7d390,6046
	0xd011c1d1, 0x20200020, 0xd417c7d3, 0x00020202,x0002020290,6046
	0xd011c1d1, 0x20200020, 0xd417c7d3, 0x00020202, 0x20220222,x2022022290,6046
	0xd011c1d1, 0x20200020, 0xd417c7d3, 0x00020202, 0x20220222, 0x04040400,x0404040090,6046
	0xd011c1d1, 0x20200020, 0xd417c7d3, 0x00020202, 0x20220222, 0x04040400, 0x68284860,x6828486090,6046
	0xd011c1d1, 0x20200020, 0xd417c7d3, 0x00020202, 0x20220222, 0x04040400, 0x68284860, 0x70314171,x7031417190,6046
	0x04070703,x0407070391,6143
	0x04070703, 0xd81bcbd3,xd81bcbd391,6143
	0x04070703, 0xd81bcbd3, 0x9c1d8d91,x9c1d8d9191,6143
	0x04070703, 0xd81bcbd3, 0x9c1d8d91, 0x98198991,x9819899191,6143
	0x04070703, 0xd81bcbd3, 0x9c1d8d91, 0x98198991, 0x60214161,x6021416191,6143
	0x04070703, 0xd81bcbd3, 0x9c1d8d91, 0x98198991, 0x60214161, 0xbc3e8eb2,xbc3e8eb291,6143
	0x04070703, 0xd81bcbd3, 0x9c1d8d91, 0x98198991, 0x60214161, 0xbc3e8eb2, 0xe426c6e2,xe426c6e291,6143
	0x04070703, 0xd81bcbd3, 0x9c1d8d91, 0x98198991, 0x60214161, 0xbc3e8eb2, 0xe426c6e2, 0x58194951,x5819495191,6143
	0xdc1dcdd1,xdc1dcdd192,6240
	0xdc1dcdd1, 0x50114151,x5011415192,6240
	0xdc1dcdd1, 0x50114151, 0x90108090,x9010809092,6240
	0xdc1dcdd1, 0x50114151, 0x90108090, 0xdc1cccd0,xdc1cccd092,6240
	0xdc1dcdd1, 0x50114151, 0x90108090, 0xdc1cccd0, 0x981a8a92,x981a8a9292,6240
	0xdc1dcdd1, 0x50114151, 0x90108090, 0xdc1cccd0, 0x981a8a92, 0xa02383a3,xa02383a392,6240
	0xdc1dcdd1, 0x50114151, 0x90108090, 0xdc1cccd0, 0x981a8a92, 0xa02383a3, 0xa82b8ba3,xa82b8ba392,6240
	0xdc1dcdd1, 0x50114151, 0x90108090, 0xdc1cccd0, 0x981a8a92, 0xa02383a3, 0xa82b8ba3, 0xd010c0d0,xd010c0d092,6240
	0x80018181,x8001818193,6337
	0x80018181, 0x0c0f0f03,x0c0f0f0393,6337
	0x80018181, 0x0c0f0f03, 0x44074743,x4407474393,6337
	0x80018181, 0x0c0f0f03, 0x44074743, 0x181a0a12,x181a0a1293,6337
	0x80018181, 0x0c0f0f03, 0x44074743, 0x181a0a12, 0xe023c3e3,xe023c3e393,6337
	0x80018181, 0x0c0f0f03, 0x44074743, 0x181a0a12, 0xe023c3e3, 0xec2ccce0,xec2ccce093,6337
	0x80018181, 0x0c0f0f03, 0x44074743, 0x181a0a12, 0xe023c3e3, 0xec2ccce0, 0x8c0d8d81,x8c0d8d8193,6337
	0x80018181, 0x0c0f0f03, 0x44074743, 0x181a0a12, 0xe023c3e3, 0xec2ccce0, 0x8c0d8d81, 0xbc3f8fb3,xbc3f8fb393,6337
	0x94168692,x9416869294,6434
	0x94168692, 0x783b4b73,x783b4b7394,6434
	0x94168692, 0x783b4b73, 0x5c1c4c50,x5c1c4c5094,6434
	0x94168692, 0x783b4b73, 0x5c1c4c50, 0xa02282a2,xa02282a294,6434
	0x94168692, 0x783b4b73, 0x5c1c4c50, 0xa02282a2, 0xa02181a1,xa02181a194,6434
	0x94168692, 0x783b4b73, 0x5c1c4c50, 0xa02282a2, 0xa02181a1, 0x60234363,x6023436394,6434
	0x94168692, 0x783b4b73, 0x5c1c4c50, 0xa02282a2, 0xa02181a1, 0x60234363, 0x20230323,x2023032394,6434
	0x94168692, 0x783b4b73, 0x5c1c4c50, 0xa02282a2, 0xa02181a1, 0x60234363, 0x20230323, 0x4c0d4d41,x4c0d4d4194,6434
	0xc808c8c0,xc808c8c095,6531
	0xc808c8c0, 0x9c1e8e92,x9c1e8e9295,6531
	0xc808c8c0, 0x9c1e8e92, 0x9c1c8c90,x9c1c8c9095,6531
	0xc808c8c0, 0x9c1e8e92, 0x9c1c8c90, 0x383a0a32,x383a0a3295,6531
	0xc808c8c0, 0x9c1e8e92, 0x9c1c8c90, 0x383a0a32, 0x0c0c0c00,x0c0c0c0095,6531
	0xc808c8c0, 0x9c1e8e92, 0x9c1c8c90, 0x383a0a32, 0x0c0c0c00, 0x2c2e0e22,x2c2e0e2295,6531
	0xc808c8c0, 0x9c1e8e92, 0x9c1c8c90, 0x383a0a32, 0x0c0c0c00, 0x2c2e0e22, 0xb83a8ab2,xb83a8ab295,6531
	0xc808c8c0, 0x9c1e8e92, 0x9c1c8c90, 0x383a0a32, 0x0c0c0c00, 0x2c2e0e22, 0xb83a8ab2, 0x6c2e4e62,x6c2e4e6295,6531
	0x9c1f8f93,x9c1f8f9396,6628
	0x9c1f8f93, 0x581a4a52,x581a4a5296,6628
	0x9c1f8f93, 0x581a4a52, 0xf032c2f2,xf032c2f296,6628
	0x9c1f8f93, 0x581a4a52, 0xf032c2f2, 0x90128292,x9012829296,6628
	0x9c1f8f93, 0x581a4a52, 0xf032c2f2, 0x90128292, 0xf033c3f3,xf033c3f396,6628
	0x9c1f8f93, 0x581a4a52, 0xf032c2f2, 0x90128292, 0xf033c3f3, 0x48094941,x4809494196,6628
	0x9c1f8f93, 0x581a4a52, 0xf032c2f2, 0x90128292, 0xf033c3f3, 0x48094941, 0x78384870,x7838487096,6628
	0x9c1f8f93, 0x581a4a52, 0xf032c2f2, 0x90128292, 0xf033c3f3, 0x48094941, 0x78384870, 0xcc0cccc0,xcc0cccc096,6628
	0x14150511,x1415051197,6725
	0x14150511, 0xf83bcbf3,xf83bcbf397,6725
	0x14150511, 0xf83bcbf3, 0x70304070,x7030407097,6725
	0x14150511, 0xf83bcbf3, 0x70304070, 0x74354571,x7435457197,6725
	0x14150511, 0xf83bcbf3, 0x70304070, 0x74354571, 0x7c3f4f73,x7c3f4f7397,6725
	0x14150511, 0xf83bcbf3, 0x70304070, 0x74354571, 0x7c3f4f73, 0x34350531,x3435053197,6725
	0x14150511, 0xf83bcbf3, 0x70304070, 0x74354571, 0x7c3f4f73, 0x34350531, 0x10100010,x1010001097,6725
	0x14150511, 0xf83bcbf3, 0x70304070, 0x74354571, 0x7c3f4f73, 0x34350531, 0x10100010, 0x00030303,x0003030397,6725
	0x64244460,x6424446098,6822
	0x64244460, 0x6c2d4d61,x6c2d4d6198,6822
	0x64244460, 0x6c2d4d61, 0xc406c6c2,xc406c6c298,6822
	0x64244460, 0x6c2d4d61, 0xc406c6c2, 0x74344470,x7434447098,6822
	0x64244460, 0x6c2d4d61, 0xc406c6c2, 0x74344470, 0xd415c5d1,xd415c5d198,6822
	0x64244460, 0x6c2d4d61, 0xc406c6c2, 0x74344470, 0xd415c5d1, 0xb43484b0,xb43484b098,6822
	0x64244460, 0x6c2d4d61, 0xc406c6c2, 0x74344470, 0xd415c5d1, 0xb43484b0, 0xe82acae2,xe82acae298,6822
	0x64244460, 0x6c2d4d61, 0xc406c6c2, 0x74344470, 0xd415c5d1, 0xb43484b0, 0xe82acae2, 0x08090901,x0809090198,6822
	0x74364672,x7436467299,6919
	0x74364672, 0x18190911,x1819091199,6919
	0x74364672, 0x18190911, 0xfc3ecef2,xfc3ecef299,6919
	0x74364672, 0x18190911, 0xfc3ecef2, 0x40004040,x4000404099,6919
	0x74364672, 0x18190911, 0xfc3ecef2, 0x40004040, 0x10120212,x1012021299,6919
	0x74364672, 0x18190911, 0xfc3ecef2, 0x40004040, 0x10120212, 0xe020c0e0,xe020c0e099,6919
	0x74364672, 0x18190911, 0xfc3ecef2, 0x40004040, 0x10120212, 0xe020c0e0, 0xbc3d8db1,xbc3d8db199,6919
	0x74364672, 0x18190911, 0xfc3ecef2, 0x40004040, 0x10120212, 0xe020c0e0, 0xbc3d8db1, 0x04050501,x0405050199,6919
	0xf83acaf2,xf83acaf2100,7016
	0xf83acaf2, 0x00010101,x00010101100,7016
	0xf83acaf2, 0x00010101, 0xf030c0f0,xf030c0f0100,7016
	0xf83acaf2, 0x00010101, 0xf030c0f0, 0x282a0a22,x282a0a22100,7016
	0xf83acaf2, 0x00010101, 0xf030c0f0, 0x282a0a22, 0x5c1e4e52,x5c1e4e52100,7016
	0xf83acaf2, 0x00010101, 0xf030c0f0, 0x282a0a22, 0x5c1e4e52, 0xa82989a1,xa82989a1100,7016
	0xf83acaf2, 0x00010101, 0xf030c0f0, 0x282a0a22, 0x5c1e4e52, 0xa82989a1, 0x54164652,x54164652100,7016
	0xf83acaf2, 0x00010101, 0xf030c0f0, 0x282a0a22, 0x5c1e4e52, 0xa82989a1, 0x54164652, 0x40034343,x40034343100,7016
	0x84058581,x84058581101,7113
	0x84058581, 0x14140410,x14140410101,7113
	0x84058581, 0x14140410, 0x88098981,x88098981101,7113
	0x84058581, 0x14140410, 0x88098981, 0x981b8b93,x981b8b93101,7113
	0x84058581, 0x14140410, 0x88098981, 0x981b8b93, 0xb03080b0,xb03080b0101,7113
	0x84058581, 0x14140410, 0x88098981, 0x981b8b93, 0xb03080b0, 0xe425c5e1,xe425c5e1101,7113
	0x84058581, 0x14140410, 0x88098981, 0x981b8b93, 0xb03080b0, 0xe425c5e1, 0x48084840,x48084840101,7113
	0x84058581, 0x14140410, 0x88098981, 0x981b8b93, 0xb03080b0, 0xe425c5e1, 0x48084840, 0x78394971,x78394971101,7113
	0x94178793,x94178793102,7210
	0x94178793, 0xfc3cccf0,xfc3cccf0102,7210
	0x94178793, 0xfc3cccf0, 0x1c1e0e12,x1c1e0e12102,7210
	0x94178793, 0xfc3cccf0, 0x1c1e0e12, 0x80028282,x80028282102,7210
	0x94178793, 0xfc3cccf0, 0x1c1e0e12, 0x80028282, 0x20210121,x20210121102,7210
	0x94178793, 0xfc3cccf0, 0x1c1e0e12, 0x80028282, 0x20210121, 0x8c0c8c80,x8c0c8c80102,7210
	0x94178793, 0xfc3cccf0, 0x1c1e0e12, 0x80028282, 0x20210121, 0x8c0c8c80, 0x181b0b13,x181b0b13102,7210
	0x94178793, 0xfc3cccf0, 0x1c1e0e12, 0x80028282, 0x20210121, 0x8c0c8c80, 0x181b0b13, 0x5c1f4f53,x5c1f4f53102,7210
	0x74374773,x74374773103,7307
	0x74374773, 0x54144450,x54144450103,7307
	0x74374773, 0x54144450, 0xb03282b2,xb03282b2103,7307
	0x74374773, 0x54144450, 0xb03282b2, 0x1c1d0d11,x1c1d0d11103,7307
	0x74374773, 0x54144450, 0xb03282b2, 0x1c1d0d11, 0x24250521,x24250521103,7307
	0x74374773, 0x54144450, 0xb03282b2, 0x1c1d0d11, 0x24250521, 0x4c0f4f43,x4c0f4f43103,7307
	0x74374773, 0x54144450, 0xb03282b2, 0x1c1d0d11, 0x24250521, 0x4c0f4f43, 0x00000000,x00000000103,7307
	0x74374773, 0x54144450, 0xb03282b2, 0x1c1d0d11, 0x24250521, 0x4c0f4f43, 0x00000000, 0x44064642,x44064642103,7307
	0xec2dcde1,xec2dcde1104,7404
	0xec2dcde1, 0x58184850,x58184850104,7404
	0xec2dcde1, 0x58184850, 0x50124252,x50124252104,7404
	0xec2dcde1, 0x58184850, 0x50124252, 0xe82bcbe3,xe82bcbe3104,7404
	0xec2dcde1, 0x58184850, 0x50124252, 0xe82bcbe3, 0x7c3e4e72,x7c3e4e72104,7404
	0xec2dcde1, 0x58184850, 0x50124252, 0xe82bcbe3, 0x7c3e4e72, 0xd81acad2,xd81acad2104,7404
	0xec2dcde1, 0x58184850, 0x50124252, 0xe82bcbe3, 0x7c3e4e72, 0xd81acad2, 0xc809c9c1,xc809c9c1104,7404
	0xec2dcde1, 0x58184850, 0x50124252, 0xe82bcbe3, 0x7c3e4e72, 0xd81acad2, 0xc809c9c1, 0xfc3dcdf1,xfc3dcdf1104,7404
	0x30300030,x30300030105,7501
	0x30300030, 0x94158591,x94158591105,7501
	0x30300030, 0x94158591, 0x64254561,x64254561105,7501
	0x30300030, 0x94158591, 0x64254561, 0x3c3c0c30,x3c3c0c30105,7501
	0x30300030, 0x94158591, 0x64254561, 0x3c3c0c30, 0xb43686b2,xb43686b2105,7501
	0x30300030, 0x94158591, 0x64254561, 0x3c3c0c30, 0xb43686b2, 0xe424c4e0,xe424c4e0105,7501
	0x30300030, 0x94158591, 0x64254561, 0x3c3c0c30, 0xb43686b2, 0xe424c4e0, 0xb83b8bb3,xb83b8bb3105,7501
	0x30300030, 0x94158591, 0x64254561, 0x3c3c0c30, 0xb43686b2, 0xe424c4e0, 0xb83b8bb3, 0x7c3c4c70,x7c3c4c70105,7501
	0x0c0e0e02,x0c0e0e02106,7598
	0x0c0e0e02, 0x50104050,x50104050106,7598
	0x0c0e0e02, 0x50104050, 0x38390931,x38390931106,7598
	0x0c0e0e02, 0x50104050, 0x38390931, 0x24260622,x24260622106,7598
	0x0c0e0e02, 0x50104050, 0x38390931, 0x24260622, 0x30320232,x30320232106,7598
	0x0c0e0e02, 0x50104050, 0x38390931, 0x24260622, 0x30320232, 0x84048480,x84048480106,7598
	0x0c0e0e02, 0x50104050, 0x38390931, 0x24260622, 0x30320232, 0x84048480, 0x68294961,x68294961106,7598
	0x0c0e0e02, 0x50104050, 0x38390931, 0x24260622, 0x30320232, 0x84048480, 0x68294961, 0x90138393,x90138393106,7598
	0x34370733,x34370733107,7695
	0x34370733, 0xe427c7e3,xe427c7e3107,7695
	0x34370733, 0xe427c7e3, 0x24240420,x24240420107,7695
	0x34370733, 0xe427c7e3, 0x24240420, 0xa42484a0,xa42484a0107,7695
	0x34370733, 0xe427c7e3, 0x24240420, 0xa42484a0, 0xc80bcbc3,xc80bcbc3107,7695
	0x34370733, 0xe427c7e3, 0x24240420, 0xa42484a0, 0xc80bcbc3, 0x50134353,x50134353107,7695
	0x34370733, 0xe427c7e3, 0x24240420, 0xa42484a0, 0xc80bcbc3, 0x50134353, 0x080a0a02,x080a0a02107,7695
	0x34370733, 0xe427c7e3, 0x24240420, 0xa42484a0, 0xc80bcbc3, 0x50134353, 0x080a0a02, 0x84078783,x84078783107,7695
	0xd819c9d1,xd819c9d1108,7792
	0xd819c9d1, 0x4c0c4c40,x4c0c4c40108,7792
	0xd819c9d1, 0x4c0c4c40, 0x80038383,x80038383108,7792
	0xd819c9d1, 0x4c0c4c40, 0x80038383, 0x8c0f8f83,x8c0f8f83108,7792
	0xd819c9d1, 0x4c0c4c40, 0x80038383, 0x8c0f8f83, 0xcc0ecec2,xcc0ecec2108,7792
	0xd819c9d1, 0x4c0c4c40, 0x80038383, 0x8c0f8f83, 0xcc0ecec2, 0x383b0b33,x383b0b33108,7792
	0xd819c9d1, 0x4c0c4c40, 0x80038383, 0x8c0f8f83, 0xcc0ecec2, 0x383b0b33, 0x480a4a42,x480a4a42108,7792
#define KC0 178,14154
#define KC1 179,14181
#define KC2 180,14208
#define KC3 181,14235
#define KC4 182,14262
#define KC5 183,14289
#define KC6 184,14316
#define KC7 185,14343
#define KC8 186,14370
#define KC9 187,14397
#define KC10 188,14424
#define KC11 189,14451
#define KC12 190,14478
#define KC13 191,14505
#define KC14 192,14532
#define KC15 193,14559
static const seed_word KC[KC196,14624
void SEED_set_key(200,14753
void private_SEED_set_key(206,14926
void SEED_encrypt(249,17041
void SEED_decrypt(292,18142

crypto/seed/seed_ofb.c,35
void SEED_ofb128_encrypt(111,5748

crypto/seed/seed_locl.h,443
#define HEADER_SEED_LOCL_H27,1373
typedef unsigned long seed_word;34,1496
typedef unsigned int seed_word;36,1535
#define G_FUNC(44,1617
#define char2word(48,1824
#define word2char(51,1977
#define KEYSCHEDULE_UPDATE0(57,2218
#define KEYSCHEDULE_UPDATE1(64,2567
#define KEYUPDATE_TEMP(71,2917
#define XOR_SEEDBLOCK(75,3024
#define MOV_SEEDBLOCK(81,3214
# define CHAR2WORD(87,3403
# define WORD2CHAR(93,3598
# define E_SEED(99,3793

crypto/LPdir_vms.c,396
# define EVMSERR	47,1859
struct LP_dir_context_st50,1935
  unsigned long VMS_context;52,1962
  char filespec[filespec53,1991
  char result[result54,2025
  struct dsc$descriptor_d filespec_dsc;55,2057
  struct dsc$descriptor_d result_dsc;56,2097
const char *LP_find_file(LP_find_file59,2139
# define CTX_FILESPEC 121,3552
# define CTX_FILESPEC 126,3796
int LP_find_file_end(187,5213

crypto/whrlpool/wp_dgst.c,161
fips_md_init(58,2204
int WHIRLPOOL_Update	64,2273
void WHIRLPOOL_BitUpdate(85,2795
int WHIRLPOOL_Final	216,5751
unsigned char *WHIRLPOOL(WHIRLPOOL255,6775

crypto/whrlpool/wp_block.c,1564
typedef unsigned char		u8;41,1588
typedef unsigned __int64	u64;43,1679
typedef unsigned long		u64;45,1735
typedef unsigned long long	u64;47,1769
#define ROUNDS	50,1809
#define STRICT_ALIGNMENT52,1828
#  undef STRICT_ALIGNMENT59,2173
#undef SMALL_REGISTER_BANK62,2207
#  define SMALL_REGISTER_BANK64,2295
#      define OPENSSL_SMALL_FOOTPRINT	67,2390
#    define GO_FOR_MMX(70,2517
#undef ROTATE79,2806
#    define ROTATE(83,2933
#      define ROTATE(88,3093
#      define ROTATE(96,3550
#      define ROTATE(101,3742
#      define ROTATE(104,3884
#      define ROTATE(113,4148
#      define ROTATE(115,4266
#    define STRICT_ALIGNMENT	119,4389
#    define N	148,5786
#    define LL(149,5802
#    define C0(150,5866
#    define C1(151,5907
#    define C2(152,5956
#    define C3(153,6006
#    define C4(154,6056
#    define C5(155,6106
#    define C6(156,6156
#    define C7(157,6206
#    define N	159,6264
#    define LL(160,6280
#    define C0(168,6568
#    define C1(169,6613
#    define C2(170,6658
#    define C3(171,6703
#    define C4(172,6748
#    define C5(173,6793
#    define C6(174,6838
#    define C7(175,6883
#  define N	178,6943
#  define LL(179,6957
#  define C0(181,7051
#  define C1(182,7104
#  define C2(183,7157
#  define C3(184,7210
#  define C4(185,7263
#  define C5(186,7316
#  define C6(187,7369
#  define C7(188,7422
	u8	c[c193,7504
	u64	q[q194,7539
	} Cx 195,7563
#define RC	453,19396
void whirlpool_block(467,19867
	union	{ u64 q[q471,19962
	union	{ u64 q[8]; u8 c[c471,19962

crypto/whrlpool/wp_test.c,440
int main(13,366
unsigned char iso_test_1[iso_test_121,501
unsigned char iso_test_2[iso_test_231,894
unsigned char iso_test_3[iso_test_341,1287
unsigned char iso_test_4[iso_test_451,1680
unsigned char iso_test_5[iso_test_561,2073
unsigned char iso_test_6[iso_test_671,2466
unsigned char iso_test_7[iso_test_781,2859
unsigned char iso_test_8[iso_test_891,3252
unsigned char iso_test_9[iso_test_9101,3645
int main 111,4038

crypto/whrlpool/whrlpool.h,234
#define HEADER_WHRLPOOL_H2,26
#define WHIRLPOOL_DIGEST_LENGTH	11,141
#define WHIRLPOOL_BBLOCK	12,181
#define WHIRLPOOL_COUNTER	13,210
		unsigned char	c[c17,271
		}	H;20,420
	unsigned int	bitoff;22,468
	} WHIRLPOOL_CTX;24,541

crypto/engine/eng_ctrl.c,357
static const char *int_no_description int_no_description60,2828
static int int_ctrl_cmd_is_null(66,3076
static int int_ctrl_cmd_by_name(73,3221
static int int_ctrl_cmd_by_num(87,3511
static int int_ctrl_helper(103,3928
int ENGINE_ctrl(182,6354
int ENGINE_cmd_is_executable(235,7868
int ENGINE_ctrl_cmd(251,8259
int ENGINE_ctrl_cmd_string(288,9356

crypto/engine/eng_lib.c,1346
ENGINE *ENGINE_new(ENGINE_new64,2834
void engine_set_all_null(84,3353
int engine_free_util(105,3734
int ENGINE_free(140,4561
static STACK_OF(151,4945
static ENGINE_CLEANUP_ITEM *int_cleanup_item(int_cleanup_item159,5189
void engine_cleanup_add_first(167,5397
void engine_cleanup_add_last(175,5616
static void engine_cleanup_cb_free(184,5878
void ENGINE_cleanup(189,5985
int ENGINE_get_ex_new_index(204,6322
int ENGINE_set_ex_data(211,6562
void *ENGINE_get_ex_data(ENGINE_get_ex_data216,6675
int ENGINE_set_id(224,6888
int ENGINE_set_name(236,7069
int ENGINE_set_destroy_function(248,7262
int ENGINE_set_init_function(254,7383
int ENGINE_set_finish_function(260,7492
int ENGINE_set_ctrl_function(266,7609
int ENGINE_set_flags(272,7715
int ENGINE_set_cmd_defns(278,7795
const char *ENGINE_get_id(ENGINE_get_id284,7902
const char *ENGINE_get_name(ENGINE_get_name289,7967
ENGINE_GEN_INT_FUNC_PTR ENGINE_get_destroy_function(294,8036
ENGINE_GEN_INT_FUNC_PTR ENGINE_get_init_function(299,8132
ENGINE_GEN_INT_FUNC_PTR ENGINE_get_finish_function(304,8222
ENGINE_CTRL_FUNC_PTR ENGINE_get_ctrl_function(309,8316
int ENGINE_get_flags(314,8403
const ENGINE_CMD_DEFN *ENGINE_get_cmd_defns(ENGINE_get_cmd_defns319,8466
static int internal_static_hack 327,8678
void *ENGINE_get_static_state(ENGINE_get_static_state329,8716

crypto/engine/eng_rdrand.c,435
static int get_random_bytes 64,2833
static int random_status 84,3185
static RAND_METHOD rdrand_meth 87,3232
static int rdrand_init(97,3383
static const char *engine_e_rdrand_id engine_e_rdrand_id100,3432
static const char *engine_e_rdrand_name engine_e_rdrand_name101,3482
static int bind_helper(103,3548
static ENGINE *ENGINE_rdrand(ENGINE_rdrand114,3800
void ENGINE_load_rdrand 127,3975
void ENGINE_load_rdrand 141,4231

crypto/engine/eng_int.h,1579
#define HEADER_ENGINE_INT_H65,3035
#define engine_ref_debug(83,3665
#define engine_ref_debug(92,3988
typedef void (ENGINE_CLEANUP_CB)100,4303
typedef struct st_engine_cleanup_item101,4343
	ENGINE_CLEANUP_CB *cb;cb103,4384
	} ENGINE_CLEANUP_ITEM;104,4408
DECLARE_STACK_OF(105,4432
typedef struct st_engine_table ENGINE_TABLE;119,5076
#define engine_table_select(128,5549
typedef void (engine_table_doall_cb)130,5636
struct engine_st155,6797
	const char *id;id157,6817
	const char *name;name158,6834
	const RSA_METHOD *rsa_meth;rsa_meth159,6853
	const DSA_METHOD *dsa_meth;dsa_meth160,6882
	const DH_METHOD *dh_meth;dh_meth161,6911
	const ECDH_METHOD *ecdh_meth;ecdh_meth162,6938
	const ECDSA_METHOD *ecdsa_meth;ecdsa_meth163,6969
	const RAND_METHOD *rand_meth;rand_meth164,7002
	const STORE_METHOD *store_meth;store_meth165,7033
	ENGINE_CIPHERS_PTR ciphers;167,7110
	ENGINE_DIGESTS_PTR digests;169,7183
	ENGINE_PKEY_METHS_PTR pkey_meths;171,7257
	ENGINE_PKEY_ASN1_METHS_PTR pkey_asn1_meths;173,7342
	ENGINE_GEN_INT_FUNC_PTR	destroy;175,7388
	ENGINE_GEN_INT_FUNC_PTR init;177,7423
	ENGINE_GEN_INT_FUNC_PTR finish;178,7454
	ENGINE_CTRL_FUNC_PTR ctrl;179,7487
	ENGINE_LOAD_KEY_PTR load_privkey;180,7515
	ENGINE_LOAD_KEY_PTR load_pubkey;181,7550
	ENGINE_SSL_CLIENT_CERT_PTR load_ssl_client_cert;183,7585
	const ENGINE_CMD_DEFN *cmd_defns;cmd_defns185,7636
	int flags;186,7671
	int struct_ref;188,7730
	int funct_ref;194,8044
	CRYPTO_EX_DATA ex_data;196,8100
	struct engine_st *prev;prev198,8177
	struct engine_st *next;next199,8202

crypto/engine/eng_fat.c,186
int ENGINE_set_default(64,2967
static int int_def_cb(103,4054
int ENGINE_set_default_string(137,5098
int ENGINE_register_complete(150,5433
int ENGINE_register_all_complete(174,5886

crypto/engine/eng_err.c,232
#define ERR_FUNC(68,2981
#define ERR_REASON(69,3036
static ERR_STRING_DATA ENGINE_str_functs[ENGINE_str_functs71,3098
static ERR_STRING_DATA ENGINE_str_reasons[ENGINE_str_reasons115,5562
void ERR_load_ENGINE_strings(163,8393

crypto/engine/tb_store.c,453
static ENGINE_TABLE *store_table store_table62,2911
static const int dummy_nid 63,2952
void ENGINE_unregister_STORE(65,2985
static void engine_unregister_all_STORE(70,3075
int ENGINE_register_STORE(75,3165
void ENGINE_register_all_STORE(83,3339
int ENGINE_set_default_STORE(93,3551
ENGINE *ENGINE_get_default_STORE(ENGINE_get_default_STORE106,3913
const STORE_METHOD *ENGINE_get_STORE(ENGINE_get_STORE113,4094
int ENGINE_set_STORE(119,4236

crypto/engine/engine.h,8080
#define HEADER_ENGINE_H65,3024
#define ENGINE_METHOD_RSA	106,3785
#define ENGINE_METHOD_DSA	107,3833
#define ENGINE_METHOD_DH	108,3881
#define ENGINE_METHOD_RAND	109,3928
#define ENGINE_METHOD_ECDH	110,3977
#define ENGINE_METHOD_ECDSA	111,4026
#define ENGINE_METHOD_CIPHERS	112,4076
#define ENGINE_METHOD_DIGESTS	113,4128
#define ENGINE_METHOD_STORE	114,4180
#define ENGINE_METHOD_PKEY_METHS	115,4230
#define ENGINE_METHOD_PKEY_ASN1_METHS	116,4284
#define ENGINE_METHOD_ALL	118,4379
#define ENGINE_METHOD_NONE	119,4427
#define ENGINE_TABLE_FLAG_NOINIT	125,4776
#define ENGINE_FLAGS_MANUAL_CMD_CTRL	133,5180
#define ENGINE_FLAGS_BY_ID_COPY	142,5750
#define ENGINE_FLAGS_NO_REGISTER_ALL	149,5984
#define ENGINE_CMD_FLAG_NUMERIC	162,6769
#define ENGINE_CMD_FLAG_STRING	165,6921
#define ENGINE_CMD_FLAG_NO_INPUT	168,7080
#define ENGINE_CMD_FLAG_INTERNAL	172,7304
#define ENGINE_CTRL_SET_LOGSTREAM	187,8193
#define ENGINE_CTRL_SET_PASSWORD_CALLBACK	188,8230
#define ENGINE_CTRL_HUP	189,8274
#define ENGINE_CTRL_SET_USER_INTERFACE 191,8372
#define ENGINE_CTRL_SET_CALLBACK_DATA 192,8452
#define ENGINE_CTRL_LOAD_CONFIGURATION	196,8624
#define ENGINE_CTRL_LOAD_SECTION	199,8765
#define ENGINE_CTRL_HAS_CTRL_FUNCTION	220,9977
#define ENGINE_CTRL_GET_FIRST_CMD_TYPE	223,10157
#define ENGINE_CTRL_GET_NEXT_CMD_TYPE	226,10358
#define ENGINE_CTRL_GET_CMD_FROM_NAME	229,10536
#define ENGINE_CTRL_GET_NAME_LEN_FROM_CMD	236,10994
#define ENGINE_CTRL_GET_NAME_FROM_CMD	237,11039
#define ENGINE_CTRL_GET_DESC_LEN_FROM_CMD	239,11157
#define ENGINE_CTRL_GET_DESC_FROM_CMD	240,11202
#define ENGINE_CTRL_GET_CMD_FLAGS	244,11425
#define ENGINE_CMD_BASE	248,11619
#define ENGINE_CTRL_CHIL_SET_FORKCHECK	257,12026
#define ENGINE_CTRL_CHIL_NO_LOCKING	262,12272
typedef struct ENGINE_CMD_DEFN_st274,13007
	unsigned int cmd_num;276,13044
	const char *cmd_name;cmd_name277,13092
	const char *cmd_desc;cmd_desc278,13145
	unsigned int cmd_flags;279,13209
	} ENGINE_CMD_DEFN;280,13270
typedef int (*ENGINE_GEN_FUNC_PTR)ENGINE_GEN_FUNC_PTR283,13322
typedef int (*ENGINE_GEN_INT_FUNC_PTR)ENGINE_GEN_INT_FUNC_PTR285,13415
typedef int (*ENGINE_CTRL_FUNC_PTR)ENGINE_CTRL_FUNC_PTR287,13505
typedef EVP_PKEY * (*ENGINE_LOAD_KEY_PTR)ENGINE_LOAD_KEY_PTR289,13628
typedef int (*ENGINE_SSL_CLIENT_CERT_PTR)ENGINE_SSL_CLIENT_CERT_PTR291,13739
typedef int (*ENGINE_CIPHERS_PTR)ENGINE_CIPHERS_PTR306,14716
typedef int (*ENGINE_DIGESTS_PTR)ENGINE_DIGESTS_PTR307,14801
typedef int (*ENGINE_PKEY_METHS_PTR)ENGINE_PKEY_METHS_PTR308,14882
typedef int (*ENGINE_PKEY_ASN1_METHS_PTR)ENGINE_PKEY_ASN1_METHS_PTR309,14969
#define OSSL_DYNAMIC_VERSION	630,30643
#define OSSL_DYNAMIC_OLDEST	633,30796
typedef void *(*dyn_MEM_malloc_cb)dyn_MEM_malloc_cb644,31497
typedef void *(*dyn_MEM_realloc_cb)dyn_MEM_realloc_cb645,31541
typedef void (*dyn_MEM_free_cb)dyn_MEM_free_cb646,31594
typedef struct st_dynamic_MEM_fns 647,31635
	dyn_MEM_malloc_cb			malloc_cb;648,31671
	dyn_MEM_realloc_cb			realloc_cb;649,31703
	dyn_MEM_free_cb				free_cb;650,31737
	} dynamic_MEM_fns;651,31766
typedef void (*dyn_lock_locking_cb)dyn_lock_locking_cb654,31942
typedef int (*dyn_lock_add_lock_cb)dyn_lock_add_lock_cb655,32005
typedef struct CRYPTO_dynlock_value *(*dyn_dynlock_create_cb)dyn_dynlock_create_cb656,32073
typedef void (*dyn_dynlock_lock_cb)dyn_dynlock_lock_cb658,32161
typedef void (*dyn_dynlock_destroy_cb)dyn_dynlock_destroy_cb660,32257
typedef struct st_dynamic_LOCK_fns 662,32352
	dyn_lock_locking_cb			lock_locking_cb;663,32389
	dyn_lock_add_lock_cb			lock_add_lock_cb;664,32429
	dyn_dynlock_create_cb			dynlock_create_cb;665,32471
	dyn_dynlock_lock_cb			dynlock_lock_cb;666,32515
	dyn_dynlock_destroy_cb			dynlock_destroy_cb;667,32555
	} dynamic_LOCK_fns;668,32601
typedef struct st_dynamic_fns 670,32652
	void 					*static_state;static_state671,32684
	const ERR_FNS				*err_fns;err_fns672,32710
	const CRYPTO_EX_DATA_IMPL		*ex_data_fns;ex_data_fns673,32738
	dynamic_MEM_fns				mem_fns;674,32780
	dynamic_LOCK_fns			lock_fns;675,32809
	} dynamic_fns;676,32839
typedef unsigned long (*dynamic_v_check_fn)dynamic_v_check_fn687,33523
#define IMPLEMENT_DYNAMIC_CHECK_FN(688,33596
typedef int (*dynamic_bind_engine)dynamic_bind_engine709,34979
#define IMPLEMENT_DYNAMIC_BIND_FN(711,35070
#define ENGINE_F_DYNAMIC_CTRL	756,37096
#define ENGINE_F_DYNAMIC_GET_DATA_CTX	757,37134
#define ENGINE_F_DYNAMIC_LOAD	758,37179
#define ENGINE_F_DYNAMIC_SET_DATA_CTX	759,37217
#define ENGINE_F_ENGINE_ADD	760,37262
#define ENGINE_F_ENGINE_BY_ID	761,37298
#define ENGINE_F_ENGINE_CMD_IS_EXECUTABLE	762,37336
#define ENGINE_F_ENGINE_CTRL	763,37384
#define ENGINE_F_ENGINE_CTRL_CMD	764,37421
#define ENGINE_F_ENGINE_CTRL_CMD_STRING	765,37461
#define ENGINE_F_ENGINE_FINISH	766,37508
#define ENGINE_F_ENGINE_FREE_UTIL	767,37547
#define ENGINE_F_ENGINE_GET_CIPHER	768,37588
#define ENGINE_F_ENGINE_GET_DEFAULT_TYPE	769,37630
#define ENGINE_F_ENGINE_GET_DIGEST	770,37677
#define ENGINE_F_ENGINE_GET_NEXT	771,37719
#define ENGINE_F_ENGINE_GET_PKEY_ASN1_METH	772,37759
#define ENGINE_F_ENGINE_GET_PKEY_METH	773,37808
#define ENGINE_F_ENGINE_GET_PREV	774,37853
#define ENGINE_F_ENGINE_INIT	775,37893
#define ENGINE_F_ENGINE_LIST_ADD	776,37930
#define ENGINE_F_ENGINE_LIST_REMOVE	777,37970
#define ENGINE_F_ENGINE_LOAD_PRIVATE_KEY	778,38013
#define ENGINE_F_ENGINE_LOAD_PUBLIC_KEY	779,38060
#define ENGINE_F_ENGINE_LOAD_SSL_CLIENT_CERT	780,38107
#define ENGINE_F_ENGINE_NEW	781,38158
#define ENGINE_F_ENGINE_REMOVE	782,38194
#define ENGINE_F_ENGINE_SET_DEFAULT_STRING	783,38233
#define ENGINE_F_ENGINE_SET_DEFAULT_TYPE	784,38282
#define ENGINE_F_ENGINE_SET_ID	785,38329
#define ENGINE_F_ENGINE_SET_NAME	786,38368
#define ENGINE_F_ENGINE_TABLE_REGISTER	787,38408
#define ENGINE_F_ENGINE_UNLOAD_KEY	788,38454
#define ENGINE_F_ENGINE_UNLOCKED_FINISH	789,38496
#define ENGINE_F_ENGINE_UP_REF	790,38543
#define ENGINE_F_INT_CTRL_HELPER	791,38582
#define ENGINE_F_INT_ENGINE_CONFIGURE	792,38622
#define ENGINE_F_INT_ENGINE_MODULE_INIT	793,38667
#define ENGINE_F_LOG_MESSAGE	794,38714
#define ENGINE_R_ALREADY_LOADED	797,38772
#define ENGINE_R_ARGUMENT_IS_NOT_A_NUMBER	798,38812
#define ENGINE_R_CMD_NOT_EXECUTABLE	799,38860
#define ENGINE_R_COMMAND_TAKES_INPUT	800,38903
#define ENGINE_R_COMMAND_TAKES_NO_INPUT	801,38947
#define ENGINE_R_CONFLICTING_ENGINE_ID	802,38994
#define ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED	803,39040
#define ENGINE_R_DH_NOT_IMPLEMENTED	804,39092
#define ENGINE_R_DSA_NOT_IMPLEMENTED	805,39135
#define ENGINE_R_DSO_FAILURE	806,39179
#define ENGINE_R_DSO_NOT_FOUND	807,39216
#define ENGINE_R_ENGINES_SECTION_ERROR	808,39255
#define ENGINE_R_ENGINE_CONFIGURATION_ERROR	809,39301
#define ENGINE_R_ENGINE_IS_NOT_IN_LIST	810,39351
#define ENGINE_R_ENGINE_SECTION_ERROR	811,39397
#define ENGINE_R_FAILED_LOADING_PRIVATE_KEY	812,39442
#define ENGINE_R_FAILED_LOADING_PUBLIC_KEY	813,39492
#define ENGINE_R_FINISH_FAILED	814,39541
#define ENGINE_R_GET_HANDLE_FAILED	815,39580
#define ENGINE_R_ID_OR_NAME_MISSING	816,39622
#define ENGINE_R_INIT_FAILED	817,39665
#define ENGINE_R_INTERNAL_LIST_ERROR	818,39702
#define ENGINE_R_INVALID_ARGUMENT	819,39746
#define ENGINE_R_INVALID_CMD_NAME	820,39787
#define ENGINE_R_INVALID_CMD_NUMBER	821,39828
#define ENGINE_R_INVALID_INIT_VALUE	822,39871
#define ENGINE_R_INVALID_STRING	823,39914
#define ENGINE_R_NOT_INITIALISED	824,39954
#define ENGINE_R_NOT_LOADED	825,39994
#define ENGINE_R_NO_CONTROL_FUNCTION	826,40030
#define ENGINE_R_NO_INDEX	827,40074
#define ENGINE_R_NO_LOAD_FUNCTION	828,40108
#define ENGINE_R_NO_REFERENCE	829,40149
#define ENGINE_R_NO_SUCH_ENGINE	830,40187
#define ENGINE_R_NO_UNLOAD_FUNCTION	831,40227
#define ENGINE_R_PROVIDE_PARAMETERS	832,40270
#define ENGINE_R_RSA_NOT_IMPLEMENTED	833,40313
#define ENGINE_R_UNIMPLEMENTED_CIPHER	834,40357
#define ENGINE_R_UNIMPLEMENTED_DIGEST	835,40402
#define ENGINE_R_UNIMPLEMENTED_PUBLIC_KEY_METHOD	836,40447
#define ENGINE_R_VERSION_INCOMPATIBILITY	837,40501

crypto/engine/tb_rand.c,440
static ENGINE_TABLE *rand_table rand_table62,2908
static const int dummy_nid 63,2948
void ENGINE_unregister_RAND(65,2981
static void engine_unregister_all_RAND(70,3069
int ENGINE_register_RAND(75,3157
void ENGINE_register_all_RAND(83,3327
int ENGINE_set_default_RAND(91,3460
ENGINE *ENGINE_get_default_RAND(ENGINE_get_default_RAND102,3805
const RAND_METHOD *ENGINE_get_RAND(ENGINE_get_RAND108,3976
int ENGINE_set_RAND(114,4114

crypto/engine/tb_rsa.c,427
static ENGINE_TABLE *rsa_table rsa_table62,2905
static const int dummy_nid 63,2944
void ENGINE_unregister_RSA(65,2977
static void engine_unregister_all_RSA(70,3063
int ENGINE_register_RSA(75,3149
void ENGINE_register_all_RSA(83,3315
int ENGINE_set_default_RSA(91,3446
ENGINE *ENGINE_get_default_RSA(ENGINE_get_default_RSA102,3787
const RSA_METHOD *ENGINE_get_RSA(ENGINE_get_RSA108,3955
int ENGINE_set_RSA(114,4089

crypto/engine/eng_cnf.c,235
static char *skip_dot(skip_dot66,2838
static STACK_OF(75,2951
static int int_engine_configure(92,3280
static int int_engine_module_init(216,6057
static void int_engine_module_finish(244,6755
void ENGINE_add_conf_module(254,6968

crypto/engine/tb_pkmeth.c,564
static ENGINE_TABLE *pkey_meth_table pkey_meth_table63,2936
void ENGINE_unregister_pkey_meths(65,2982
static void engine_unregister_all_pkey_meths(70,3081
int ENGINE_register_pkey_meths(75,3180
void ENGINE_register_all_pkey_meths(89,3472
int ENGINE_set_default_pkey_meths(97,3617
ENGINE *ENGINE_get_pkey_meth_engine(ENGINE_get_pkey_meth_engine114,4111
const EVP_PKEY_METHOD *ENGINE_get_pkey_meth(ENGINE_get_pkey_meth120,4292
ENGINE_PKEY_METHS_PTR ENGINE_get_pkey_meths(134,4661
int ENGINE_set_pkey_meths(140,4809
void engine_pkey_meths_free(150,5006

crypto/engine/tb_cipher.c,479
static ENGINE_TABLE *cipher_table cipher_table62,2902
void ENGINE_unregister_ciphers(64,2945
static void engine_unregister_all_ciphers(69,3038
int ENGINE_register_ciphers(74,3131
void ENGINE_register_all_ciphers(88,3409
int ENGINE_set_default_ciphers(96,3548
ENGINE *ENGINE_get_cipher_engine(ENGINE_get_cipher_engine113,4025
const EVP_CIPHER *ENGINE_get_cipher(ENGINE_get_cipher119,4197
ENGINE_CIPHERS_PTR ENGINE_get_ciphers(133,4536
int ENGINE_set_ciphers(139,4672

crypto/engine/tb_dsa.c,427
static ENGINE_TABLE *dsa_table dsa_table62,2905
static const int dummy_nid 63,2944
void ENGINE_unregister_DSA(65,2977
static void engine_unregister_all_DSA(70,3063
int ENGINE_register_DSA(75,3149
void ENGINE_register_all_DSA(83,3315
int ENGINE_set_default_DSA(91,3446
ENGINE *ENGINE_get_default_DSA(ENGINE_get_default_DSA102,3787
const DSA_METHOD *ENGINE_get_DSA(ENGINE_get_DSA108,3955
int ENGINE_set_DSA(114,4089

crypto/engine/eng_pkey.c,515
int ENGINE_set_load_privkey_function(60,2712
int ENGINE_set_load_pubkey_function(66,2841
int ENGINE_set_load_ssl_client_cert_function(72,2966
ENGINE_LOAD_KEY_PTR ENGINE_get_load_privkey_function(79,3120
ENGINE_LOAD_KEY_PTR ENGINE_get_load_pubkey_function(84,3222
ENGINE_SSL_CLIENT_CERT_PTR ENGINE_get_ssl_client_cert_function(89,3322
EVP_PKEY *ENGINE_load_private_key(ENGINE_load_private_key96,3491
EVP_PKEY *ENGINE_load_public_key(ENGINE_load_public_key132,4286
int ENGINE_load_ssl_client_cert(168,5073

crypto/engine/eng_rsax.c,1384
#undef COMPILE_RSAX79,3314
#define COMPILE_RSAX83,3458
void ENGINE_load_rsax 87,3522
#define E_RSAX_LIB_NAME 100,3757
static const ENGINE_CMD_DEFN e_rsax_cmd_defns[e_rsax_cmd_defns113,4152
static RSA_METHOD e_rsax_rsa 119,4310
static const char *engine_e_rsax_id engine_e_rsax_id138,4575
static const char *engine_e_rsax_name engine_e_rsax_name139,4621
static int bind_helper(142,4739
static ENGINE *ENGINE_rsax(ENGINE_rsax170,5557
static int rsax_ex_data_idx 185,5811
static int e_rsax_destroy(188,5853
static int e_rsax_init(194,5944
static int e_rsax_finish(207,6173
static int e_rsax_ctrl(212,6227
typedef unsigned __int64 UINT64;231,6499
typedef unsigned long long UINT64;233,6538
typedef unsigned short UINT16;235,6580
struct mod_ctx_512 252,7207
    UINT64 t[t253,7228
    UINT64 m[m254,7248
    UINT64 m1[m1255,7265
    UINT64 m2[m2256,7299
    UINT64 k1[k1257,7333
typedef struct st_e_rsax_mod_ctx267,7633
  UINT64 type;269,7668
    struct mod_ctx_512 b512;271,7693
  } ctx;272,7722
} E_RSAX_MOD_CTX;274,7732
static E_RSAX_MOD_CTX *e_rsax_get_ctx(e_rsax_get_ctx276,7751
static int e_rsax_rsa_finish(305,8542
static int e_rsax_bn_mod_exp(323,8947
static int bn_extract_to_array_512(356,9998
static int interleaved_array_to_bn_512(379,10619
static int mod_exp_pre_compute_data_512(393,10917
static int e_rsax_rsa_mod_exp(490,13328

crypto/engine/eng_dyn.c,1486
typedef struct st_dynamic_data_ctx dynamic_data_ctx;71,3168
#define DYNAMIC_CMD_SO_PATH	75,3340
#define DYNAMIC_CMD_NO_VCHECK	76,3385
#define DYNAMIC_CMD_ID	77,3438
#define DYNAMIC_CMD_LIST_ADD	78,3485
#define DYNAMIC_CMD_DIR_LOAD	79,3537
#define DYNAMIC_CMD_DIR_ADD	80,3589
#define DYNAMIC_CMD_LOAD	81,3640
static const char *engine_dynamic_id engine_dynamic_id84,3739
static const char *engine_dynamic_name engine_dynamic_name85,3789
static const ENGINE_CMD_DEFN dynamic_cmd_defns[dynamic_cmd_defns86,3864
static const ENGINE_CMD_DEFN dynamic_cmd_defns_empty[dynamic_cmd_defns_empty117,4821
struct st_dynamic_data_ctx124,5101
	DSO *dynamic_dso;dynamic_dso127,5191
	dynamic_v_check_fn v_check;129,5286
	dynamic_bind_engine bind_engine;131,5389
	const char *DYNAMIC_LIBNAME;DYNAMIC_LIBNAME133,5483
	int no_vcheck;135,5575
	const char *engine_id;engine_id137,5658
	int list_add_value;140,5839
	const char *DYNAMIC_F1;DYNAMIC_F1142,5917
	const char *DYNAMIC_F2;DYNAMIC_F2144,6012
	int dir_load;147,6175
	STACK_OF(149,6255
static void dynamic_data_ctx_free_func(164,7013
static int dynamic_set_data_ctx(186,7753
static dynamic_data_ctx *dynamic_get_data_ctx(dynamic_get_data_ctx232,8975
static ENGINE *engine_dynamic(engine_dynamic268,10136
void ENGINE_load_dynamic(287,10645
static int dynamic_init(301,11105
static int dynamic_finish(308,11253
static int dynamic_ctrl(315,11392
static int int_load(406,13576
static int dynamic_load(433,14311

crypto/engine/eng_init.c,124
int engine_unlocked_init(60,2828
int engine_unlocked_finish(82,3378
int ENGINE_init(121,4508
int ENGINE_finish(136,4812

crypto/engine/tb_digest.c,475
static ENGINE_TABLE *digest_table digest_table62,2902
void ENGINE_unregister_digests(64,2945
static void engine_unregister_all_digests(69,3038
int ENGINE_register_digests(74,3131
void ENGINE_register_all_digests(88,3409
int ENGINE_set_default_digests(96,3548
ENGINE *ENGINE_get_digest_engine(ENGINE_get_digest_engine113,4025
const EVP_MD *ENGINE_get_digest(ENGINE_get_digest119,4197
ENGINE_DIGESTS_PTR ENGINE_get_digests(133,4528
int ENGINE_set_digests(139,4664

crypto/engine/tb_dh.c,414
static ENGINE_TABLE *dh_table dh_table62,2902
static const int dummy_nid 63,2940
void ENGINE_unregister_DH(65,2973
static void engine_unregister_all_DH(70,3057
int ENGINE_register_DH(75,3141
void ENGINE_register_all_DH(83,3303
int ENGINE_set_default_DH(91,3432
ENGINE *ENGINE_get_default_DH(ENGINE_get_default_DH102,3769
const DH_METHOD *ENGINE_get_DH(ENGINE_get_DH108,3934
int ENGINE_set_DH(114,4064

crypto/engine/tb_asnmth.c,1019
static ENGINE_TABLE *pkey_asn1_meth_table pkey_asn1_meth_table65,2977
void ENGINE_unregister_pkey_asn1_meths(67,3028
static void engine_unregister_all_pkey_asn1_meths(72,3137
int ENGINE_register_pkey_asn1_meths(77,3246
void ENGINE_register_all_pkey_asn1_meths(91,3563
int ENGINE_set_default_pkey_asn1_meths(99,3722
ENGINE *ENGINE_get_pkey_asn1_meth_engine(ENGINE_get_pkey_asn1_meth_engine116,4246
const EVP_PKEY_ASN1_METHOD *ENGINE_get_pkey_asn1_meth(ENGINE_get_pkey_asn1_meth122,4442
ENGINE_PKEY_ASN1_METHS_PTR ENGINE_get_pkey_asn1_meths(136,4846
int ENGINE_set_pkey_asn1_meths(142,5014
void engine_pkey_asn1_meths_free(152,5231
const EVP_PKEY_ASN1_METHOD *ENGINE_get_pkey_asn1_meth_str(ENGINE_get_pkey_asn1_meth_str177,5845
	ENGINE *e;e200,6377
	const EVP_PKEY_ASN1_METHOD *ameth;ameth201,6389
	const char *str;str202,6425
	int len;203,6443
	} ENGINE_FIND_STR;204,6453
static void look_str_cb(206,6474
const EVP_PKEY_ASN1_METHOD *ENGINE_pkey_asn1_find_str(ENGINE_pkey_asn1_find_str227,6944

crypto/engine/eng_list.c,594
static ENGINE *engine_list_head engine_list_head76,3660
static ENGINE *engine_list_tail engine_list_tail77,3700
static void engine_list_cleanup(82,3902
static int engine_list_add(96,4217
static int engine_list_remove(157,5566
ENGINE *ENGINE_get_first(ENGINE_get_first192,6367
ENGINE *ENGINE_get_last(ENGINE_get_last207,6600
ENGINE *ENGINE_get_next(ENGINE_get_next223,6907
ENGINE *ENGINE_get_prev(ENGINE_get_prev246,7389
int ENGINE_add(270,7919
int ENGINE_remove(296,8454
static void engine_cpy(316,8830
ENGINE *ENGINE_by_id(ENGINE_by_id350,9683
int ENGINE_up_ref(424,11583

crypto/engine/eng_all.c,84
void ENGINE_load_builtin_engines(62,2832
void ENGINE_setup_bsd_cryptodev(127,4392

crypto/engine/enginetest.c,77
int main(64,2845
static void display_engine_list(75,3048
int main(95,3510

crypto/engine/eng_openssl.c,1629
#define TEST_ENG_OPENSSL_RC486,3590
#define TEST_ENG_OPENSSL_PKEY87,3619
#define TEST_ENG_OPENSSL_RC4_P_INIT89,3691
#define TEST_ENG_OPENSSL_SHA91,3771
#undef TEST_ENG_OPENSSL_RC499,4056
#undef TEST_ENG_OPENSSL_RC4_OTHERS100,4084
#undef TEST_ENG_OPENSSL_RC4_P_INIT101,4119
#undef TEST_ENG_OPENSSL_RC4_P_CIPHER102,4154
#undef TEST_ENG_OPENSSL_SHA105,4282
#undef TEST_ENG_OPENSSL_SHA_OTHERS106,4310
#undef TEST_ENG_OPENSSL_SHA_P_INIT107,4345
#undef TEST_ENG_OPENSSL_SHA_P_UPDATE108,4380
#undef TEST_ENG_OPENSSL_SHA_P_FINAL 109,4417
static const char *engine_openssl_id engine_openssl_id127,4926
static const char *engine_openssl_name engine_openssl_name128,4976
static int bind_helper(132,5154
static ENGINE *engine_openssl(engine_openssl170,6167
void ENGINE_load_openssl(183,6343
static int bind_fn(197,6746
IMPLEMENT_DYNAMIC_CHECK_FN(205,6902
#define TEST_RC4_KEY_SIZE	221,7708
static int test_cipher_nids_number 223,7792
	unsigned char key[key225,7849
	RC4_KEY ks;226,7888
	} TEST_RC4_KEY;227,7901
#define test(228,7918
static int test_rc4_init_key(229,7973
static int test_rc4_cipher(240,8357
static const EVP_CIPHER test_r4_cipher=249,8631
static const EVP_CIPHER test_r4_40_cipher=263,8834
static int openssl_ciphers(277,9041
static int test_digest_nids[test_digest_nids307,9739
static int test_digest_nids_number 308,9783
static int test_sha1_init(309,9823
static int test_sha1_update(316,10017
static int test_sha1_final(323,10260
static const EVP_MD test_sha_md=330,10479
static int openssl_digests(345,10720
static EVP_PKEY *openssl_load_privkey(openssl_load_privkey371,11264

crypto/engine/eng_table.c,895
typedef struct st_engine_pile61,2764
	int nid;64,2837
	STACK_OF(66,2898
	} ENGINE_PILE;71,3083
struct st_engine_table76,3168
	LHASH_OF(78,3194
typedef struct st_engine_pile_doall82,3249
	engine_table_doall_cb *cb;cb84,3288
	void *arg;arg85,3316
	} ENGINE_PILE_DOALL;86,3328
static unsigned int table_flags 90,3397
unsigned int ENGINE_get_table_flags(93,3481
void ENGINE_set_table_flags(98,3551
static unsigned long engine_pile_hash(104,3680
static int engine_pile_cmp(109,3763
static IMPLEMENT_LHASH_HASH_FN(113,3865
int engine_table_register(130,4322
static void int_unregister_cb_doall_arg(189,5742
static IMPLEMENT_LHASH_DOALL_ARG_FN(204,6089
static void int_cleanup_cb_doall(216,6448
static IMPLEMENT_LHASH_DOALL_FN(223,6598
ENGINE *engine_table_select(engine_table_select240,7031
static void int_cb_doall_arg(337,9659
static IMPLEMENT_LHASH_DOALL_ARG_FN(341,9794

crypto/engine/tb_ecdsa.c,453
static ENGINE_TABLE *ecdsa_table ecdsa_table62,2916
static const int dummy_nid 63,2957
void ENGINE_unregister_ECDSA(65,2990
static void engine_unregister_all_ECDSA(70,3080
int ENGINE_register_ECDSA(75,3170
void ENGINE_register_all_ECDSA(83,3344
int ENGINE_set_default_ECDSA(91,3479
ENGINE *ENGINE_get_default_ECDSA(ENGINE_get_default_ECDSA102,3828
const ECDSA_METHOD *ENGINE_get_ECDSA(ENGINE_get_ECDSA108,4002
int ENGINE_set_ECDSA(114,4144

crypto/engine/tb_ecdh.c,441
static ENGINE_TABLE *ecdh_table ecdh_table77,3468
static const int dummy_nid 78,3508
void ENGINE_unregister_ECDH(80,3541
static void engine_unregister_all_ECDH(85,3629
int ENGINE_register_ECDH(90,3717
void ENGINE_register_all_ECDH(98,3887
int ENGINE_set_default_ECDH(106,4020
ENGINE *ENGINE_get_default_ECDH(ENGINE_get_default_ECDH117,4365
const ECDH_METHOD *ENGINE_get_ECDH(ENGINE_get_ECDH123,4536
int ENGINE_set_ECDH(129,4674

crypto/engine/eng_cryptodev.c,2392
#  define HAVE_CRYPTODEV38,1799
#  define HAVE_SYSLOG_R41,1857
ENGINE_load_cryptodev(48,1926
struct dev_crypto_state 72,2374
	struct session_op d_sess;73,2400
	int d_fd;74,2427
	char dummy_mac_key[dummy_mac_key77,2468
	unsigned char digest_res[digest_res79,2504
	char *mac_data;mac_data80,2545
	int mac_len;81,2562
static u_int32_t cryptodev_asymfeat 85,2587
static const ENGINE_CMD_DEFN cryptodev_defns[cryptodev_defns134,4902
	int	id;139,4995
	int	nid;140,5004
	int	ivmax;141,5014
	int	keylen;142,5026
} ciphers[ciphers143,5039
	int	id;158,5547
	int	nid;159,5556
	int 	keylen;160,5566
} digests[digests161,5580
open_dev_crypto(177,5988
get_dev_crypto(195,6254
static void put_dev_crypto(216,6575
get_asym_dev_crypto(225,6714
get_cryptodev_ciphers(241,7099
get_cryptodev_digests(281,8120
cryptodev_usable_ciphers(335,9852
cryptodev_usable_digests(341,9950
cryptodev_cipher(364,10753
cryptodev_init_key(418,11923
cryptodev_cleanup(460,12848
const EVP_CIPHER cryptodev_rc4 497,13825
const EVP_CIPHER cryptodev_des_cbc 511,14044
const EVP_CIPHER cryptodev_3des_cbc 525,14300
const EVP_CIPHER cryptodev_bf_cbc 538,14544
const EVP_CIPHER cryptodev_cast_cbc 551,14780
const EVP_CIPHER cryptodev_aes_cbc 564,15021
const EVP_CIPHER cryptodev_aes_192_cbc 577,15265
const EVP_CIPHER cryptodev_aes_256_cbc 590,15513
cryptodev_engine_ciphers(609,15980
digest_nid_to_cryptodev(652,16800
digest_key_length(664,16961
static int cryptodev_digest_init(675,17107
static int cryptodev_digest_update(707,17892
static int cryptodev_digest_final(754,18938
static int cryptodev_digest_cleanup(790,19735
static int cryptodev_digest_copy(822,20362
const EVP_MD cryptodev_sha1 864,21405
const EVP_MD cryptodev_md5 879,21704
cryptodev_engine_digests(898,22067
bn2crparam(926,22639
crparam2bn(959,23214
zapparams(982,23556
cryptodev_asym(995,23812
cryptodev_bn_mod_exp(1025,24508
cryptodev_rsa_nocrt_mod_exp(1069,25652
cryptodev_rsa_mod_exp(1079,25870
static RSA_METHOD cryptodev_rsa 1123,27109
cryptodev_dsa_bn_mod_exp(1140,27452
cryptodev_dsa_dsa_mod_exp(1147,27652
cryptodev_dsa_do_sign(1179,28279
cryptodev_dsa_verify(1226,29348
static DSA_METHOD cryptodev_dsa 1266,30394
cryptodev_mod_exp_dh(1280,30631
cryptodev_dh_compute_key(1288,30841
static DH_METHOD cryptodev_dh 1329,31764
cryptodev_ctrl(1345,32054
ENGINE_load_cryptodev(1365,32427

crypto/ossl_typ.h,4874
#define HEADER_OPENSSL_TYPES_H56,2666
#define ASN1_INTEGER	61,2750
#define ASN1_ENUMERATED	62,2784
#define ASN1_BIT_STRING	63,2821
#define ASN1_OCTET_STRING	64,2858
#define ASN1_PRINTABLESTRING	65,2896
#define ASN1_T61STRING	66,2937
#define ASN1_IA5STRING	67,2973
#define ASN1_UTCTIME	68,3009
#define ASN1_GENERALIZEDTIME	69,3043
#define ASN1_TIME	70,3084
#define ASN1_GENERALSTRING	71,3115
#define ASN1_UNIVERSALSTRING	72,3154
#define ASN1_BMPSTRING	73,3195
#define ASN1_VISIBLESTRING	74,3231
#define ASN1_UTF8STRING	75,3270
#define ASN1_BOOLEAN	76,3307
#define ASN1_NULL	77,3333
typedef struct asn1_string_st ASN1_INTEGER;79,3362
typedef struct asn1_string_st ASN1_ENUMERATED;80,3406
typedef struct asn1_string_st ASN1_BIT_STRING;81,3453
typedef struct asn1_string_st ASN1_OCTET_STRING;82,3500
typedef struct asn1_string_st ASN1_PRINTABLESTRING;83,3549
typedef struct asn1_string_st ASN1_T61STRING;84,3601
typedef struct asn1_string_st ASN1_IA5STRING;85,3647
typedef struct asn1_string_st ASN1_GENERALSTRING;86,3693
typedef struct asn1_string_st ASN1_UNIVERSALSTRING;87,3743
typedef struct asn1_string_st ASN1_BMPSTRING;88,3795
typedef struct asn1_string_st ASN1_UTCTIME;89,3841
typedef struct asn1_string_st ASN1_TIME;90,3885
typedef struct asn1_string_st ASN1_GENERALIZEDTIME;91,3926
typedef struct asn1_string_st ASN1_VISIBLESTRING;92,3978
typedef struct asn1_string_st ASN1_UTF8STRING;93,4028
typedef struct asn1_string_st ASN1_STRING;94,4075
typedef int ASN1_BOOLEAN;95,4118
typedef int ASN1_NULL;96,4144
typedef struct ASN1_ITEM_st ASN1_ITEM;99,4175
typedef struct asn1_pctx_st ASN1_PCTX;100,4214
#undef X509_NAME103,4279
#undef X509_EXTENSIONS104,4296
#undef X509_CERT_PAIR105,4319
#undef PKCS7_ISSUER_AND_SERIAL106,4341
#undef OCSP_REQUEST107,4372
#undef OCSP_RESPONSE108,4392
#undef BIGNUM112,4435
typedef struct bignum_st BIGNUM;114,4456
typedef struct bignum_ctx BN_CTX;115,4489
typedef struct bn_blinding_st BN_BLINDING;116,4523
typedef struct bn_mont_ctx_st BN_MONT_CTX;117,4566
typedef struct bn_recp_ctx_st BN_RECP_CTX;118,4609
typedef struct bn_gencb_st BN_GENCB;119,4652
typedef struct buf_mem_st BUF_MEM;121,4690
typedef struct evp_cipher_st EVP_CIPHER;123,4726
typedef struct evp_cipher_ctx_st EVP_CIPHER_CTX;124,4767
typedef struct env_md_st EVP_MD;125,4816
typedef struct env_md_ctx_st EVP_MD_CTX;126,4849
typedef struct evp_pkey_st EVP_PKEY;127,4890
typedef struct evp_pkey_asn1_method_st EVP_PKEY_ASN1_METHOD;129,4928
typedef struct evp_pkey_method_st EVP_PKEY_METHOD;131,4990
typedef struct evp_pkey_ctx_st EVP_PKEY_CTX;132,5041
typedef struct dh_st DH;134,5087
typedef struct dh_method DH_METHOD;135,5112
typedef struct dsa_st DSA;137,5149
typedef struct dsa_method DSA_METHOD;138,5176
typedef struct rsa_st RSA;140,5215
typedef struct rsa_meth_st RSA_METHOD;141,5242
typedef struct rand_meth_st RAND_METHOD;143,5282
typedef struct ecdh_method ECDH_METHOD;145,5324
typedef struct ecdsa_method ECDSA_METHOD;146,5364
typedef struct x509_st X509;148,5407
typedef struct X509_algor_st X509_ALGOR;149,5436
typedef struct X509_crl_st X509_CRL;150,5477
typedef struct x509_crl_method_st X509_CRL_METHOD;151,5514
typedef struct x509_revoked_st X509_REVOKED;152,5565
typedef struct X509_name_st X509_NAME;153,5610
typedef struct X509_pubkey_st X509_PUBKEY;154,5649
typedef struct x509_store_st X509_STORE;155,5692
typedef struct x509_store_ctx_st X509_STORE_CTX;156,5733
typedef struct pkcs8_priv_key_info_st PKCS8_PRIV_KEY_INFO;158,5783
typedef struct v3_ext_ctx X509V3_CTX;160,5843
typedef struct conf_st CONF;161,5881
typedef struct store_st STORE;163,5911
typedef struct store_method_st STORE_METHOD;164,5942
typedef struct ui_st UI;166,5988
typedef struct ui_method_st UI_METHOD;167,6013
typedef struct st_ERR_FNS ERR_FNS;169,6053
typedef struct engine_st ENGINE;171,6089
typedef struct ssl_st SSL;172,6122
typedef struct ssl_ctx_st SSL_CTX;173,6149
typedef struct X509_POLICY_NODE_st X509_POLICY_NODE;175,6185
typedef struct X509_POLICY_LEVEL_st X509_POLICY_LEVEL;176,6238
typedef struct X509_POLICY_TREE_st X509_POLICY_TREE;177,6293
typedef struct X509_POLICY_CACHE_st X509_POLICY_CACHE;178,6346
typedef struct AUTHORITY_KEYID_st AUTHORITY_KEYID;180,6402
typedef struct DIST_POINT_st DIST_POINT;181,6453
typedef struct ISSUING_DIST_POINT_st ISSUING_DIST_POINT;182,6494
typedef struct NAME_CONSTRAINTS_st NAME_CONSTRAINTS;183,6551
#define DECLARE_PKCS12_STACK_OF(186,6683
#define IMPLEMENT_PKCS12_STACK_OF(187,6735
typedef struct crypto_ex_data_st CRYPTO_EX_DATA;189,6790
typedef int CRYPTO_EX_new(191,6873
typedef void CRYPTO_EX_free(193,6982
typedef int CRYPTO_EX_dup(195,7093
typedef struct ocsp_req_ctx_st OCSP_REQ_CTX;198,7215
typedef struct ocsp_response_st OCSP_RESPONSE;199,7260
typedef struct ocsp_responder_id_st OCSP_RESPID;200,7307

crypto/lhash/lh_stats.c,274
void lh_stats(73,3504
void lh_node_stats(99,4829
void lh_node_usage_stats(112,5055
void lh_stats(142,5699
void lh_node_stats(154,5888
void lh_node_usage_stats(166,6087
void lh_stats_bio(180,6306
void lh_node_stats_bio(208,7713
void lh_node_usage_stats_bio(221,7952

crypto/lhash/lhash.h,2451
#define HEADER_LHASH_H64,3290
typedef struct lhash_node_st79,3491
	void *data;data81,3523
	struct lhash_node_st *next;next82,3536
	unsigned long hash;84,3594
	} LHASH_NODE;86,3622
typedef int (*LHASH_COMP_FN_TYPE)LHASH_COMP_FN_TYPE88,3638
typedef unsigned long (*LHASH_HASH_FN_TYPE)LHASH_HASH_FN_TYPE89,3701
typedef void (*LHASH_DOALL_FN_TYPE)LHASH_DOALL_FN_TYPE90,3760
typedef void (*LHASH_DOALL_ARG_FN_TYPE)LHASH_DOALL_ARG_FN_TYPE91,3805
#define DECLARE_LHASH_HASH_FN(101,4332
#define IMPLEMENT_LHASH_HASH_FN(103,4426
#define LHASH_HASH_FN(107,4582
#define DECLARE_LHASH_COMP_FN(110,4663
#define IMPLEMENT_LHASH_COMP_FN(112,4761
#define LHASH_COMP_FN(117,4961
#define DECLARE_LHASH_DOALL_FN(120,5039
#define IMPLEMENT_LHASH_DOALL_FN(122,5120
#define LHASH_DOALL_FN(126,5251
#define DECLARE_LHASH_DOALL_ARG_FN(129,5336
#define IMPLEMENT_LHASH_DOALL_ARG_FN(131,5441
#define LHASH_DOALL_ARG_FN(136,5631
typedef struct lhash_st138,5688
	LHASH_NODE **b;b140,5715
	LHASH_COMP_FN_TYPE comp;141,5732
	LHASH_HASH_FN_TYPE hash;142,5758
	unsigned int num_nodes;143,5784
	unsigned int num_alloc_nodes;144,5809
	unsigned int p;145,5840
	unsigned int pmax;146,5857
	unsigned long up_load;147,5877
	unsigned long down_load;148,5922
	unsigned long num_items;149,5969
	unsigned long num_expands;151,5996
	unsigned long num_expand_reallocs;152,6024
	unsigned long num_contracts;153,6060
	unsigned long num_contract_reallocs;154,6090
	unsigned long num_hash_calls;155,6128
	unsigned long num_comp_calls;156,6159
	unsigned long num_insert;157,6190
	unsigned long num_replace;158,6217
	unsigned long num_delete;159,6245
	unsigned long num_no_delete;160,6272
	unsigned long num_retrieve;161,6302
	unsigned long num_retrieve_miss;162,6331
	unsigned long num_hash_comps;163,6365
	int error;165,6397
	} _LHASH;166,6409
#define LH_LOAD_MULT	169,6486
#define lh_error(173,6599
#define LHASH_OF(199,7465
#define DECLARE_LHASH_OF(201,7512
#define CHECKED_LHASH_OF(203,7574
#define LHM_lh_new(207,7691
#define LHM_lh_error(209,7795
#define LHM_lh_insert(211,7866
#define LHM_lh_retrieve(214,7993
#define LHM_lh_delete(217,8126
#define LHM_lh_doall(220,8255
#define LHM_lh_doall_arg(221,8330
#define LHM_lh_num_items(223,8464
#define LHM_lh_down_load(224,8540
#define LHM_lh_node_stats_bio(225,8615
#define LHM_lh_node_usage_stats_bio(227,8715
#define LHM_lh_stats_bio(229,8827
#define LHM_lh_free(231,8917

crypto/lhash/lh_test.c,14
main(64,3286

crypto/lhash/lhash.c,584
const char lh_version[lh_version103,4612
#undef MIN_NODES 105,4668
#define MIN_NODES	106,4686
#define UP_LOAD	107,4707
#define DOWN_LOAD	108,4775
_LHASH *lh_new(lh_new114,4991
void lh_free(157,5941
void *lh_insert(lh_insert179,6212
void *lh_delete(lh_delete217,6833
void *lh_retrieve(lh_retrieve248,7296
static void doall_util_fn(270,7583
void lh_doall(300,8215
void lh_doall_arg(305,8337
static void expand(310,8473
static void contract(366,9549
static LHASH_NODE **getrn(getrn405,10230
unsigned long lh_strhash(443,11020
unsigned long lh_num_items(472,11446

crypto/rc4/rc4.h,153
#define HEADER_RC4_H60,3214
typedef struct rc4_key_st73,3415
	RC4_INT x,75,3444
	RC4_INT x,y;75,3444
	RC4_INT data[data76,3458
	} RC4_KEY;77,3478

crypto/rc4/rc4_utl.c,26
void RC4_set_key(56,2602

crypto/rc4/rc4_skey.c,149
const char RC4_version[RC4_version63,3276
const char *RC4_options(RC4_options65,3331
void private_RC4_set_key(88,3809
#define SK_LOOP(100,4112

crypto/rc4/rc4test.c,210
int main(66,3301
static unsigned char keys[keys75,3442
static unsigned char data_len[data_len84,3718
static unsigned char data[data85,3769
static unsigned char output[output100,4304
int main(115,4831

crypto/rc4/rc4_enc.c,258
void RC4(70,3484
# define RC4_STEP	113,5123
		const union { long one;127,5418
		const union { long one; char little;127,5418
# define BESHFT(159,6681
# define LESHFT(212,8106
#define LOOP(265,9444
#define RC4_LOOP(274,9602
#define RC4_LOOP(276,9656

crypto/rc4/rc4_locl.h,31
#define HEADER_RC4_LOCL_H2,26

crypto/rc4/rc4.c,45
char *usage[usage65,3303
int main(74,3492

crypto/rc4/rc4speed.c,432
#define TIMES63,3460
#undef TIMES89,4055
#define _POSIX_SOURCE97,4159
#define HZ	107,4359
#define HZ 109,4396
#define BUFSIZE	113,4440
long run=114,4469
#define SIGRETTYPE 119,4574
#define SIGRETTYPE 121,4604
SIGRETTYPE sig_done(125,4665
#define START	135,4772
#define STOP	136,4788
double Time_F(138,4804
int main(174,5357
#define COND(210,6127
#define COUNT(211,6158
#define COND(213,6185
#define COUNT(214,6207

crypto/cmac/cm_ameth.c,116
static int cmac_size(64,2778
static void cmac_key_free(69,2858
const EVP_PKEY_ASN1_METHOD cmac_asn1_meth 76,2990

crypto/cmac/cmac.c,561
struct CMAC_CTX_st64,2722
	EVP_CIPHER_CTX cctx;67,2773
	unsigned char k1[k169,2817
	unsigned char k2[k270,2858
	unsigned char tbl[tbl72,2922
	unsigned char last_block[last_block74,3001
	int nlast_block;76,3121
static void make_kn(82,3182
CMAC_CTX *CMAC_CTX_new(CMAC_CTX_new97,3502
void CMAC_CTX_cleanup(108,3692
EVP_CIPHER_CTX *CMAC_CTX_get0_cipher_ctx(CMAC_CTX_get0_cipher_ctx125,4116
void CMAC_CTX_free(130,4199
int CMAC_CTX_copy(136,4284
int CMAC_Init(152,4685
int CMAC_Update(215,6476
int CMAC_Final(261,7578
int CMAC_resume(297,8354

crypto/cmac/cmac.h,75
#define HEADER_CMAC_H56,2583
typedef struct CMAC_CTX_st CMAC_CTX;65,2685

crypto/cmac/cm_pmeth.c,374
static int pkey_cmac_init(63,2769
static int pkey_cmac_copy(72,2919
static void pkey_cmac_cleanup(81,3095
static int pkey_cmac_keygen(86,3178
static int int_update(102,3476
static int cmac_signctx_init(109,3624
static int cmac_signctx(116,3790
static int pkey_cmac_ctrl(122,3943
static int pkey_cmac_ctrl_str(155,4543
const EVP_PKEY_METHOD cmac_pkey_meth 191,5259

crypto/arm_arch.h,298
#define __ARM_ARCH_H__2,23
#  define __ARM_ARCH__ 6,97
#   define __ARMEB__8,166
#   define __ARMEL__10,195
#   define __ARM_ARCH__ 22,633
#   define __ARM_ARCH__ 27,868
#   define __ARM_ARCH__ 31,1046
#   define __ARM_ARCH__ 33,1132
#define ARMV7_NEON 47,1393
#define ARMV7_TICK 48,1424

crypto/txt_db/txt_db.c,322
#undef BUFSIZE66,3337
#define BUFSIZE	67,3352
const char TXT_DB_version[TXT_DB_version69,3373
TXT_DB *TXT_DB_read(TXT_DB_read71,3434
OPENSSL_STRING *TXT_DB_get_by_index(TXT_DB_get_by_index196,6012
int TXT_DB_create_index(217,6419
long TXT_DB_write(255,7371
int TXT_DB_insert(303,8182
void TXT_DB_free(345,8981

crypto/txt_db/txt_db.h,452
#define HEADER_TXT_DB_H60,3223
#define DB_ERROR_OK	69,3391
#define DB_ERROR_MALLOC	70,3415
#define DB_ERROR_INDEX_CLASH 71,3443
#define DB_ERROR_INDEX_OUT_OF_RANGE	72,3478
#define DB_ERROR_NO_INDEX	73,3516
#define DB_ERROR_INSERT_INDEX_CLASH 74,3545
typedef OPENSSL_STRING *OPENSSL_PSTRING;OPENSSL_PSTRING80,3629
DECLARE_SPECIAL_STACK_OF(81,3670
typedef struct txt_db_st83,3729
	int num_fields;85,3757
	STACK_OF(86,3774
	} TXT_DB;93,3939

crypto/ppccap.c,250
#define PPC_FPU64	9,144
#define PPC_ALTIVEC	10,169
static int OPENSSL_ppccap_P 12,197
static sigset_t all_masked;14,231
int bn_mul_mont(17,287
static sigjmp_buf ill_jmp;52,1459
static void ill_handler 53,1486
void OPENSSL_cpuid_setup(57,1583

apps/rand.c,60
#undef PROG66,2808
#define PROG 67,2820
int MAIN(78,3076

apps/pkey.c,40
#define PROG 65,2867
int MAIN(69,2916

apps/pkcs8.c,40
#define PROG 66,2897
int MAIN(70,2947

apps/srp.c,690
#undef PROG73,3073
#define PROG 74,3085
#define BASE_SECTION	76,3108
#define CONFIG_FILE 77,3135
#define ENV_RANDFILE	79,3170
#define ENV_DATABASE	81,3204
#define ENV_DEFAULT_SRP	82,3237
static char *srp_usage[srp_usage84,3277
static CONF *conf=conf111,4179
static char *section=section112,4203
#define VERBOSE 114,4231
#define VVERBOSE 115,4261
static int get_index(120,4321
static void print_entry(143,4901
static void print_index(157,5245
static void print_user(162,5384
static int update_index(177,5747
static void lookup_fail(205,6275
static char *srp_verify_user(srp_verify_user211,6405
static char *srp_create_user(srp_create_user242,7276
int MAIN(268,8040

apps/progs.h,339
#define FUNC_TYPE_GENERAL	51,2205
#define FUNC_TYPE_MD	52,2233
#define FUNC_TYPE_CIPHER	53,2257
#define FUNC_TYPE_PKEY	54,2284
#define FUNC_TYPE_MD_ALG	55,2310
#define FUNC_TYPE_CIPHER_ALG	56,2337
	int type;59,2386
	const char *name;name60,2397
	int (*func)func61,2416
	} FUNCTION;62,2453
FUNCTION functions[functions65,2495

apps/s_server.c,3906
#undef OPENSSL_NO_DEPRECATED146,7475
#define APPS_WIN16157,7662
#define __U_INT169,8153
typedef unsigned int u_int;170,8169
#define USE_SOCKETS175,8256
#undef FIONBIO197,8784
static unsigned char dh512_p[dh512_p225,9537
static unsigned char dh512_g[dh512_g233,9906
static DH *get_dh512(get_dh512237,9951
#undef BUFSIZZ253,10268
#define BUFSIZZ	254,10283
static int bufsize=255,10307
static int accept_socket=256,10335
#define TEST_CERT	258,10366
#define TEST_CERT2	260,10423
#undef PROG262,10463
#define PROG	263,10475
static char *cipher=cipher267,10551
static int s_server_verify=268,10577
static int s_server_session_id_context 269,10621
static const char *s_cert_file=s_cert_file270,10688
static const char *s_cert_file2=s_cert_file2272,10773
static char *s_dcert_file=s_dcert_file274,10842
static int s_nbio=276,10907
static int s_nbio_test=278,10935
int s_crlf=279,10961
static SSL_CTX *ctx=ctx280,10975
static SSL_CTX *ctx2=ctx2282,11027
static int www=284,11061
static BIO *bio_s_out=bio_s_out286,11080
static int s_debug=287,11108
static int s_tlsextdebug=289,11156
static int s_tlsextstatus=290,11184
static int s_msg=293,11266
static int s_quiet=294,11286
static char *keymatexportlabel=keymatexportlabel296,11309
static int keymatexportlen=297,11346
static int hack=299,11378
static char *engine_id=engine_id301,11423
static const char *session_id_prefix=session_id_prefix303,11459
static int enable_timeouts 305,11503
static long socket_mtu;306,11535
static int cert_chain 308,11584
static char *psk_identity=psk_identity313,11643
char *psk_key=psk_key314,11688
static unsigned int psk_server_cb(316,11742
typedef struct srpsrvparm_st381,13347
	char *login;login383,13379
	SRP_VBASE *vb;vb384,13393
	SRP_user_pwd *user;user385,13409
	} srpsrvparm;386,13430
static int MS_CALLBACK ssl_srp_server_param_cb(395,13844
static void s_server_init(426,14652
static void sv_usage(458,15115
static int local_argc=565,22012
static char **local_argv;local_argv566,22037
#define BIO_TYPE_EBCDIC_FILTER	577,22429
static BIO_METHOD methods_ebcdic=578,22472
	size_t	alloced;593,22678
	char	buff[buff594,22695
} EBCDIC_OUTBUFF;595,22710
BIO_METHOD *BIO_f_ebcdic_filter(BIO_f_ebcdic_filter597,22729
static int ebcdic_new(602,22794
static int ebcdic_free(616,23036
static int ebcdic_read(627,23196
static int ebcdic_write(640,23440
static long ebcdic_ctrl(673,24058
static int ebcdic_gets(690,24307
static int ebcdic_puts(711,24681
typedef struct tlsextctx_st 721,24901
   char * servername;722,24931
   BIO * biodebug;723,24953
   int extension_error;724,24972
} tlsextctx;725,24996
static int MS_CALLBACK ssl_servername_cb(728,25011
typedef struct tlsextstatusctx_st 753,25666
   char *host,host755,25736
   char *host, *path,path755,25736
   char *host, *path, *port;port755,25736
   int use_ssl;756,25765
   int timeout;757,25781
   BIO *err;err758,25797
   int verbose;759,25810
} tlsextstatusctx;760,25826
static tlsextstatusctx tlscstatp 762,25846
static int cert_status_cb(775,26339
typedef struct tlsextnextprotoctx_st 899,29370
	unsigned char *data;data900,29409
	unsigned int len;901,29431
} tlsextnextprotoctx;902,29450
static int next_proto_cb(904,29473
static char *jpake_secret jpake_secret921,29794
	static srpsrvparm srp_callback_parm;924,29858
static char *srtp_profiles srtp_profiles926,29903
int MAIN(928,29939
static void print_stats(1912,52641
static int sv_body(1937,53815
static void close_accept_socket(2359,64201
static int init_ssl_connection(2368,64356
static DH *load_dh_param(load_dh_param2501,68219
	char *client_princ;client_princ2515,68485
static int load_CA(2519,68520
static int www_body(2539,68811
static RSA MS_CALLBACK *tmp_rsa_cb(tmp_rsa_cb2936,77677
#define MAX_SESSION_ID_ATTEMPTS 2967,78382
static int generate_session_id(2968,78417

apps/testdsa.h,961
static unsigned char dsa512_priv[dsa512_priv6,112
static unsigned char dsa512_pub[dsa512_pub10,259
static unsigned char dsa512_p[dsa512_p18,638
static unsigned char dsa512_q[dsa512_q26,1008
static unsigned char dsa512_g[dsa512_g30,1150
DSA *get_dsa512(get_dsa51239,1521
static unsigned char dsa1024_priv[dsa1024_priv55,2030
static unsigned char dsa1024_pub[dsa1024_pub59,2176
static unsigned char dsa1024_p[dsa1024_p72,2878
static unsigned char dsa1024_q[dsa1024_q85,3579
static unsigned char dsa1024_g[dsa1024_g89,3722
DSA *get_dsa1024(get_dsa1024103,4424
static unsigned char dsa2048_priv[dsa2048_priv119,4944
static unsigned char dsa2048_pub[dsa2048_pub123,5090
static unsigned char dsa2048_p[dsa2048_p147,6455
static unsigned char dsa2048_q[dsa2048_q171,7818
static unsigned char dsa2048_g[dsa2048_g175,7961
DSA *get_dsa2048(get_dsa2048200,9326
static const char rnd_seed[rnd_seed216,9847
static int rnd_fake 217,9945

apps/gendh.c,196
#undef OPENSSL_NO_DEPRECATED64,3411
#define DEFBITS	81,3748
#undef PROG82,3768
#define PROG 83,3780
int MAIN(89,3889
static int MS_CALLBACK dh_cb(220,6916
static void *dummy=dummy238,7205

apps/speed.c,3918
#undef SECONDS76,3830
#define SECONDS	77,3845
#define RSA_SECONDS	78,3865
#define DSA_SECONDS	79,3888
#define ECDSA_SECONDS 80,3911
#define ECDH_SECONDS 81,3938
#undef PROG86,4114
#define PROG 87,4126
#define APPS_WIN1696,4271
#  define _WIN32116,4780
#undef AES_set_encrypt_key196,6332
#undef AES_set_decrypt_key197,6359
#undef DES_set_key_unchecked198,6386
#define BF_set_key	200,6422
#define CAST_set_key	201,6460
#define idea_set_encrypt_key	202,6502
#define SEED_set_key	203,6560
#define RC2_set_key	204,6602
#define RC4_set_key	205,6642
#define DES_set_key_unchecked	206,6682
#define AES_set_encrypt_key	207,6742
#define AES_set_decrypt_key	208,6798
#define Camellia_set_key	209,6854
#  define HAVE_FORK 214,7094
#  define HAVE_FORK 216,7123
#undef NO_FORK221,7175
#define NO_FORK223,7196
#undef BUFSIZE226,7220
#define BUFSIZE	227,7235
int run=228,7268
static int mr=230,7280
static int usertime=231,7297
#define ALGOR_NUM	242,7638
#define SIZE_NUM	243,7659
#define RSA_NUM	244,7678
#define DSA_NUM	245,7697
#define EC_NUM 247,7717
#define MAX_ECDH_SIZE 248,7741
static const char *names[names250,7768
static double results[results258,8167
static int lengths[lengths259,8211
static double rsa_results[rsa_results261,8288
static double dsa_results[dsa_results264,8357
static double ecdsa_results[ecdsa_results267,8428
static double ecdh_results[ecdh_results270,8499
static const char rnd_seed[rnd_seed274,8634
static int rnd_fake 275,8732
#define SIGRETTYPE 280,8835
#define SIGRETTYPE 282,8865
static SIGRETTYPE sig_done(286,8934
#define START	296,9048
#define STOP	297,9064
#define SIGALRM302,9123
static unsigned int lapse,304,9146
static unsigned int lapse,schlock;304,9146
static void alarm_win32(305,9181
#define alarm 306,9247
static DWORD WINAPI sleepy(308,9274
static double Time_F(316,9369
static double Time_F(337,9787
static const int KDF1_SHA1_len 345,9890
static void *KDF1_SHA1(KDF1_SHA1346,9927
int MAIN(363,10256
#define MAX_BLOCK_SIZE 451,12609
#define MAX_BLOCK_SIZE 453,12642
#define	D_MD2	471,13199
#define	D_MDC2	472,13216
#define	D_MD4	473,13234
#define	D_MD5	474,13251
#define	D_HMAC	475,13268
#define	D_SHA1	476,13286
#define D_RMD160	477,13304
#define	D_RC4	478,13323
#define	D_CBC_DES	479,13340
#define	D_EDE3_DES	480,13360
#define	D_CBC_IDEA	481,13381
#define	D_CBC_SEED	482,13403
#define	D_CBC_RC2	483,13425
#define	D_CBC_RC5	484,13446
#define	D_CBC_BF	485,13467
#define	D_CBC_CAST	486,13487
#define D_CBC_128_AES	487,13509
#define D_CBC_192_AES	488,13534
#define D_CBC_256_AES	489,13559
#define D_CBC_128_CML 490,13584
#define D_CBC_192_CML 491,13612
#define D_CBC_256_CML 492,13639
#define D_EVP	493,13667
#define D_SHA256	494,13685
#define D_SHA512	495,13706
#define D_WHIRLPOOL	496,13726
#define D_IGE_128_AES 497,13749
#define D_IGE_192_AES 498,13776
#define D_IGE_256_AES 499,13803
#define D_GHASH	500,13830
#define	R_DSA_512	503,13895
#define	R_DSA_1024	504,13915
#define	R_DSA_2048	505,13936
#define	R_RSA_512	506,13957
#define	R_RSA_1024	507,13977
#define	R_RSA_2048	508,13998
#define	R_RSA_4096	509,14019
#define R_EC_P160 511,14041
#define R_EC_P192 512,14064
#define R_EC_P224 513,14088
#define R_EC_P256 514,14111
#define R_EC_P384 515,14134
#define R_EC_P521 516,14157
#define R_EC_K163 517,14180
#define R_EC_K233 518,14203
#define R_EC_K283 519,14226
#define R_EC_K409 520,14249
#define R_EC_K571 521,14272
#define R_EC_B163 522,14296
#define R_EC_B233 523,14320
#define R_EC_B283 524,14344
#define R_EC_B409 525,14368
#define R_EC_B571 526,14392
#define COND(1488,38956
#define COUNT(1489,38986
#define COND(1495,39131
#define COUNT(1496,39173
static void print_message(2576,64785
static void pkey_print_message(2593,65196
static void print_result(2611,65631
static char *sstrsep(sstrsep2619,65889
static int do_multi(2650,66407

apps/sess_id.c,172
#undef PROG69,3395
#define PROG	70,3407
static const char *sess_id_usage[sess_id_usage72,3434
int MAIN(90,4001
static SSL_SESSION *load_sess_id(load_sess_id281,7585

apps/errstr.c,60
#undef PROG68,3370
#define PROG	69,3382
int MAIN(73,3433

apps/testrsa.h,193
static unsigned char test512[test51260,3218
static unsigned char test1024[test102495,4910
static unsigned char test2048[test2048159,8111
static unsigned char test4096[test4096282,14345

apps/apps.h,2087
#define HEADER_APPS_H113,5844
#define MAIN(142,6698
CONF *config=config145,6744
BIO *bio_err=bio_err146,6763
#define MAIN(154,6845
#define do_pipe_sig(166,7029
#define do_pipe_sig(168,7081
#define zlib_cleanup(172,7134
#define zlib_cleanup(174,7164
#  define apps_startup(178,7260
#  define apps_shutdown(180,7303
#    define apps_startup(183,7363
#    define apps_shutdown(187,7565
#    define apps_startup(193,7826
#    define apps_shutdown(197,7997
#  define openssl_fdset(206,8279
#  define openssl_fdset(208,8341
typedef struct args_st212,8392
	char **data;data214,8418
	int count;215,8432
	} ARGS;216,8444
#define PW_MIN_LENGTH 218,8454
typedef struct pw_cb_data219,8478
	const void *password;password221,8507
	const char *prompt_info;prompt_info222,8530
	} PW_CB_DATA;223,8556
STACK_OF(252,9802
#define DB_type 275,10666
#define DB_exp_date 276,10692
#define DB_rev_date 277,10718
#define DB_serial 278,10744
#define DB_file 279,10797
#define DB_name 280,10830
#define DB_NUMBER 281,10912
#define DB_TYPE_REV	283,10939
#define DB_TYPE_EXP	284,10963
#define DB_TYPE_VAL	285,10987
typedef struct db_attr_st287,11012
	int unique_subject;289,11041
	} DB_ATTR;290,11062
typedef struct ca_db_st291,11074
	DB_ATTR attributes;293,11101
	TXT_DB *db;db294,11122
	} CA_DB;295,11135
#define index_name_cmp_noconst(306,11684
#define FORMAT_UNDEF 338,13158
#define FORMAT_ASN1 339,13184
#define FORMAT_TEXT 340,13210
#define FORMAT_PEM 341,13236
#define FORMAT_NETSCAPE 342,13262
#define FORMAT_PKCS12 343,13288
#define FORMAT_SMIME 344,13314
#define FORMAT_ENGINE 345,13340
#define FORMAT_IISSGC	346,13366
#define FORMAT_PEMRSA	348,13483
#define FORMAT_ASN1RSA	349,13536
#define FORMAT_MSBLOB	350,13591
#define FORMAT_PVK	351,13641
#define EXT_COPY_NONE	353,13689
#define EXT_COPY_ADD	354,13713
#define EXT_COPY_ALL	355,13736
#define NETSCAPE_CERT_HDR	357,13760
#define APP_PASS_LEN	359,13801
#define SERIAL_RAND_BITS	361,13828
#define TM_START	367,13959
#define TM_STOP	368,13978
#define OPENSSL_NO_SSL_INTERN371,14045

apps/engine.c,343
#define APPS_WIN1664,2857
#undef PROG72,3006
#define PROG	73,3018
static const char *engine_usage[engine_usage75,3044
static void identity(95,4138
static int append_buf(100,4186
static int util_flags(132,4699
static int util_verbose(194,6241
static void util_do_cmds(293,10243
int MAIN(341,11322
static void *dummy=dummy546,16211

apps/dgst.c,195
#undef BUFSIZE71,3447
#define BUFSIZE	72,3462
#undef PROG74,3486
#define PROG	75,3498
static void list_md_fn(82,3722
int MAIN(104,4210
#define PROG_NAME_SIZE 113,4385
int do_fp(558,14529

apps/genpkey.c,138
#define PROG 72,3067
int MAIN(76,3119
static int init_keygen_file(315,8118
int init_gen_str(363,8960
static int genpkey_cb(424,10034

apps/gendsa.c,120
#define DEFBITS	73,3524
#undef PROG74,3544
#define PROG 75,3556
int MAIN(79,3607
static void *dummy=dummy282,8708

apps/ocsp.c,640
#define _XOPEN_SOURCE_EXTENDED	61,2778
#define USE_SOCKETS65,2884
#define MAX_VALIDITY_PERIOD	96,3581
#undef PROG120,4668
#define PROG 121,4680
int MAIN(125,4729
static int add_ocsp_cert(933,23738
static int add_ocsp_serial(954,24275
static int print_ocsp_summary(987,25129
static int make_ocsp_response(1053,26670
static char **lookup_serial(lookup_serial1158,29444
static BIO *init_responder(init_responder1179,30007
static int do_responder(1210,30596
static int send_ocsp_response(1263,31546
static OCSP_RESPONSE *query_responder(query_responder1276,31891
OCSP_RESPONSE *process_responder(process_responder1373,33749

apps/apps.c,3742
#define _POSIX_C_SOURCE 113,5880
#define NON_MAIN146,6704
#undef NON_MAIN148,6739
#define rename(152,6829
	const char *name;name156,6904
	unsigned long flag;157,6923
	unsigned long mask;158,6944
} NAME_EX_TBL;159,6965
static UI_METHOD *ui_method ui_method161,6981
int args_from_file(175,7542
int str2fmt(258,8898
void program_name(290,9800
void program_name(339,10774
void program_name(366,11123
int chopup_args(380,11287
int app_init(452,12583
int dump_cert_text 459,12637
static int ui_open(477,12962
static int ui_read(481,13043
static int ui_write(505,13534
static int ui_close(526,13976
int setup_ui_method(530,14058
void destroy_ui_method(539,14344
int password_callback(547,14454
int app_passwd(632,16154
static char *app_get_pass(app_get_pass648,16556
int add_oid_section(715,18398
static int load_pkcs12(741,18994
X509 *load_cert(load_cert786,20043
EVP_PKEY *load_key(load_key862,21631
EVP_PKEY *load_pubkey(load_pubkey960,23924
load_netscape_key(1071,26356
static int load_certs_crls(1115,27222
STACK_OF(1214,28978
STACK_OF(1223,29226
#define X509V3_EXT_UNKNOWN_MASK	1232,29478
#define X509V3_EXT_DEFAULT	1234,29566
#define X509V3_EXT_ERROR_UNKNOWN	1236,29637
#define X509V3_EXT_PARSE_UNKNOWN	1238,29717
#define X509V3_EXT_DUMP_UNKNOWN	1240,29795
#define X509_FLAG_CA 1242,29840
int set_cert_ex(1245,29957
int set_name_ex(1271,31016
int set_ext_copy(1306,32472
int copy_extensions(1319,32750
static int set_multi_opts(1362,33724
static int set_table_opts(1378,34150
void print_name(1403,34586
X509_STORE *setup_verify(setup_verify1426,35094
static ENGINE *try_load_engine(try_load_engine1458,36020
ENGINE *setup_engine(setup_engine1473,36312
int load_config(1515,37288
char *make_config_name(make_config_name1537,37664
static unsigned long index_serial_hash(1554,37953
static int index_serial_cmp(1563,38107
static int index_name_qual(1572,38324
static unsigned long index_name_hash(1575,38391
int index_name_cmp(1578,38492
static IMPLEMENT_LHASH_HASH_FN(1581,38609
#undef BSIZE1586,38854
#define BSIZE 1587,38867
int save_serial(1646,39877
int rotate_serial(1708,41094
int rand_serial(1769,42437
CA_DB *load_index(load_index1796,42774
int index_index(1875,44334
int save_index(1899,44935
int rotate_index(1966,46446
void free_index(2078,48989
int parse_yesno(2087,49095
X509_NAME *parse_name(parse_name2120,49643
int args_verify(2252,52355
int bio_to_mem(2407,55581
int pkey_ctrl_string(2440,56150
static void nodes_print(2458,56446
void policies_print(2477,56847
static JPAKE_CTX *jpake_init(jpake_init2501,57485
static void jpake_send_part(2528,58282
static void jpake_send_step1(2538,58504
static void jpake_send_step2(2550,58761
static void jpake_send_step3a(2561,58982
static void jpake_send_step3b(2572,59226
static void readbn(2583,59468
static void jpake_receive_part(2595,59667
static void jpake_receive_step1(2602,59818
static void jpake_receive_step2(2617,60110
static void jpake_receive_step3a(2631,60363
static void jpake_receive_step3b(2647,60677
void jpake_client_auth(2663,60988
void jpake_server_auth(2692,61617
unsigned char *next_protos_parse(next_protos_parse2732,62742
#  undef fileno2772,63393
#  define fileno(2773,63409
static int WIN32_rename(2779,63497
double app_tminterval(2830,64747
double app_tminterval(2887,65854
double app_tminterval(2909,66289
double app_tminterval(2945,67062
double app_tminterval(2976,67697
double app_tminterval(2999,68074
int app_isdir(3019,68506
#  define S_ISDIR(3047,69269
#  define S_ISDIR(3049,69330
int app_isdir(3053,69399
int raw_read_stdin(3068,69658
int raw_read_stdin(3076,69814
int raw_write_stdout(3081,69951
int raw_write_stdout(3089,70117

apps/pkeyutl.c,285
#define KEY_PRIVKEY	65,2833
#define KEY_PUBKEY	66,2855
#define KEY_CERT	67,2876
#undef PROG71,2922
#define PROG 73,2935
int MAIN(88,3350
static void usage(388,9525
static EVP_PKEY_CTX *init_ctx(init_ctx413,10794
static int setup_peer(513,12532
static int do_keyop(541,13062

apps/crl2p7.c,101
#undef PROG75,3664
#define PROG	76,3676
int MAIN(86,3921
static int add_certs_from_file(295,8660

apps/prime.c,60
#undef PROG56,2448
#define PROG 57,2460
int MAIN(61,2510

apps/app_rand.c,253
#define NON_MAIN112,5826
#undef NON_MAIN114,5861
static int seeded 119,5930
static int egdsocket 120,5953
int app_RAND_load_file(122,5980
long app_RAND_load_files(165,7178
int app_RAND_write_file(194,7616
void app_RAND_allow_write_file(215,8125

apps/version.c,63
#undef PROG135,6266
#define PROG	136,6278
int MAIN(140,6330

apps/spkac.c,60
#undef PROG73,3084
#define PROG	74,3096
int MAIN(82,3234

apps/passwd.c,234
# define NO_MD5CRYPT_14,74
#undef PROG26,436
#define PROG 27,448
static unsigned const char cov_2char[cov_2char30,475
int MAIN(60,1580
static char *md5crypt(md5crypt310,7745
static int do_passwd(417,10801
int MAIN(507,12981

apps/winrand.c,102
const char *filename;filename67,2929
int WINAPI WinMain(69,2952
LRESULT CALLBACK WndProc(116,4217

apps/verify.c,153
#undef PROG69,3397
#define PROG	70,3409
static int v_verbose=76,3627
int MAIN(80,3689
static int check(255,7756
static int MS_CALLBACK cb(300,8638

apps/dsa.c,96
#undef PROG74,3539
#define PROG	75,3551
int MAIN(97,4328
static void *dummy=dummy373,10847

apps/s_cb.c,901
#define USE_SOCKETS114,5921
#define NON_MAIN115,5941
#undef NON_MAIN117,5976
#undef USE_SOCKETS118,5992
#define	COOKIE_SECRET_LENGTH	125,6134
int verify_depth=127,6167
int verify_error=128,6187
int verify_return_error=129,6215
unsigned char cookie_secret[cookie_secret130,6242
int cookie_initialized=131,6293
int MS_CALLBACK verify_callback(133,6320
int set_cert_stuff(198,7917
int set_cert_key_stuff(253,9131
long MS_CALLBACK bio_dump_callback(281,9763
void MS_CALLBACK apps_ssl_info_callback(305,10392
void MS_CALLBACK msg_cb(342,11188
void MS_CALLBACK tlsext_cb(656,17612
int MS_CALLBACK generate_cookie_callback(761,19581
		struct sockaddr sa;766,19778
		struct sockaddr_in s4;767,19800
		struct sockaddr_in6 s6;769,19846
int MS_CALLBACK verify_cookie_callback(849,21484
		struct sockaddr sa;854,21678
		struct sockaddr_in s4;855,21700
		struct sockaddr_in6 s6;857,21746

apps/ca.c,2260
#  define F_OK 93,3968
#  define X_OK 94,3985
#  define W_OK 95,4002
#  define R_OK 96,4019
#undef PROG99,4044
#define PROG 100,4056
#define BASE_SECTION	102,4078
#define CONFIG_FILE 103,4104
#define ENV_DEFAULT_CA	105,4139
#define STRING_MASK	107,4177
#define UTF8_IN	108,4211
#define ENV_DIR	110,4237
#define ENV_CERTS	111,4261
#define ENV_CRL_DIR	112,4288
#define ENV_CA_DB	113,4319
#define ENV_NEW_CERTS_DIR	114,4346
#define ENV_CERTIFICATE 115,4388
#define ENV_SERIAL	116,4427
#define ENV_CRLNUMBER	117,4456
#define ENV_CRL	118,4491
#define ENV_PRIVATE_KEY	119,4515
#define ENV_RANDFILE	120,4554
#define ENV_DEFAULT_DAYS 121,4587
#define ENV_DEFAULT_STARTDATE 122,4628
#define ENV_DEFAULT_ENDDATE 123,4679
#define ENV_DEFAULT_CRL_DAYS 124,4726
#define ENV_DEFAULT_CRL_HOURS 125,4775
#define ENV_DEFAULT_MD	126,4826
#define ENV_DEFAULT_EMAIL_DN	127,4863
#define ENV_PRESERVE	128,4906
#define ENV_POLICY 129,4939
#define ENV_EXTENSIONS 130,4973
#define ENV_CRLEXT 131,5020
#define ENV_MSIE_HACK	132,5062
#define ENV_NAMEOPT	133,5097
#define ENV_CERTOPT	134,5129
#define ENV_EXTCOPY	135,5161
#define ENV_UNIQUE_SUBJECT	136,5200
#define ENV_DATABASE	138,5245
#define REV_NONE	142,5326
#define REV_CRL_REASON	143,5379
#define REV_HOLD	144,5436
#define REV_KEY_COMPROMISE	145,5488
#define REV_CA_COMPROMISE	146,5557
static const char *ca_usage[ca_usage148,5624
static CONF *conf=conf236,10400
static CONF *extconf=extconf237,10424
static char *section=section238,10451
static int preserve=240,10479
static int msie_hack=241,10502
int MAIN(246,10553
#undef BSIZE319,12137
#define BSIZE 320,12150
static void lookup_fail(1568,40851
static int certify(1573,40986
static int certify_cert(1644,42823
static int do_body(1699,44365
static void write_new_certificate(2241,58028
static int certify_spkac(2265,58597
static int check_time_format(2405,62164
static int do_revoke(2410,62258
static int get_certificate_status(2528,65023
static int do_updatedb 2616,66869
static const char *crl_reasons[crl_reasons2688,68234
#define NUM_REASONS 2704,68532
char *make_revocation_str(make_revocation_str2714,68855
int make_revoked(2811,70591
int old_entry_print(2865,71742
int unpack_revinfo(2904,72653

apps/s_time.c,1255
#define NO_SHUTDOWN59,3190
#define USE_SOCKETS70,3475
#define APPS_WIN1673,3537
#undef PROG88,3816
#define PROG 89,3828
#undef ioctl91,3854
#define ioctl 92,3867
#define SSL_CONNECT_NAME	94,3894
#undef BUFSIZZ98,3997
#define BUFSIZZ 99,4012
#define MYBUFSIZ 101,4037
#undef min103,4062
#undef max104,4073
#define min(105,4084
#define max(106,4127
#undef SECONDS108,4171
#define SECONDS	109,4186
static char *host=host123,4545
static char *t_cert_file=t_cert_file124,4581
static char *t_key_file=t_key_file125,4612
static char *CApath=CApath126,4642
static char *CAfile=CAfile127,4668
static char *tm_cipher=tm_cipher128,4694
static int tm_verify 129,4723
static int maxTime 130,4763
static SSL_CTX *tm_ctx=tm_ctx131,4793
static const SSL_METHOD *s_time_meth=s_time_meth132,4822
static char *s_www_path=s_www_path133,4865
static long bytes_read=134,4895
static int st_bugs=135,4922
static int perform=136,4944
static int t_nbio=138,4981
static int exitNow 141,5034
static void s_time_init(144,5105
static void s_time_usage(172,5618
static int parseArgs(204,6917
#define START	322,9221
#define STOP	323,9237
static double tm_Time_F(325,9253
int MAIN(336,9499
static SSL *doConnection(doConnection566,14831

apps/openssl.c,818
#define OPENSSL_C 116,5885
#define USE_SOCKETS 128,6214
static LHASH_OF(141,6661
# define ARGV 219,8213
# define ARGV 221,8239
int main(224,8266
#define PROG_NAME_SIZE	227,8313
#define LIST_STANDARD_COMMANDS 455,13470
#define LIST_MESSAGE_DIGEST_COMMANDS 456,13526
#define LIST_MESSAGE_DIGEST_ALGORITHMS 457,13594
#define LIST_CIPHER_COMMANDS 458,13666
#define LIST_CIPHER_ALGORITHMS 459,13718
#define LIST_PUBLIC_KEY_ALGORITHMS 460,13774
static int do_cmd(463,13840
static int SortFnByName(615,17466
static void list_pkey(625,17687
static void list_cipher_fn(658,18544
static void list_cipher(673,18831
static void list_md_fn(678,18920
static void list_md(693,19195
static int MS_CALLBACK function_cmp(698,19272
static IMPLEMENT_LHASH_COMP_FN(702,19388
static IMPLEMENT_LHASH_HASH_FN(708,19542

apps/pkeyparam.c,40
#define PROG 65,2872
int MAIN(69,2926

apps/rsautl.c,318
#define RSA_SIGN 68,2904
#define RSA_VERIFY 69,2924
#define RSA_ENCRYPT 70,2946
#define RSA_DECRYPT 71,2969
#define KEY_PRIVKEY	73,2993
#define KEY_PUBKEY	74,3015
#define KEY_CERT	75,3036
#undef PROG79,3082
#define PROG 81,3095
int MAIN(85,3151
static void usage(320,8555
static void *dummy=dummy348,9833

apps/dsaparam.c,252
#undef OPENSSL_NO_DEPRECATED63,3410
#undef PROG80,3736
#define PROG	81,3748
static int stop_keygen_flag 99,4118
static void timebomb_sigalarm(101,4152
int MAIN(112,4314
static int MS_CALLBACK dsa_cb(454,12012
static void *dummy=dummy476,12362

apps/timeouts.h,106
#define INCLUDED_TIMEOUTS_H61,2807
#define DGRAM_RCV_TIMEOUT 64,2856
#define DGRAM_SND_TIMEOUT 65,2897

apps/req.c,971
#undef OPENSSL_NO_DEPRECATED62,3347
#define APPS_WIN1670,3485
#define SECTION	90,3899
#define BITS	92,3923
#define KEYFILE	93,3952
#define PROMPT	94,3987
#define DISTINGUISHED_NAME	95,4012
#define ATTRIBUTES	96,4060
#define V3_EXTENSIONS	97,4092
#define REQ_EXTENSIONS	98,4132
#define STRING_MASK	99,4172
#define UTF8_IN	100,4206
#define DEFAULT_KEY_LENGTH	102,4231
#define MIN_KEY_LENGTH	103,4262
#undef PROG105,4291
#define PROG	106,4303
static char *default_config_file=default_config_file151,6257
static CONF *req_conf=req_conf153,6303
static int batch=154,6331
int MAIN(158,6377
static int make_REQ(1116,29169
static int build_subject(1184,30735
static int prompt_info(1201,31026
static int auto_info(1380,35205
static EVP_PKEY_CTX *set_keygen_ctx(set_keygen_ctx1593,39615
static int genpkey_cb(1755,42817
static int do_sign_init(1773,43129
int do_X509_sign(1794,43666
int do_X509_REQ_sign(1808,43982
int do_X509_CRL_sign(1823,44314

apps/crl.c,240
#undef PROG69,3394
#define PROG	70,3406
#undef POSTFIX72,3429
#define	POSTFIX	73,3444
static const char *crl_usage[crl_usage75,3468
static BIO *bio_out=bio_out97,4349
int MAIN(101,4401
static X509_CRL *load_crl(load_crl405,10953

apps/smime.c,387
#undef PROG70,2957
#define PROG 71,2969
#define SMIME_OP	75,3110
#define SMIME_IP	76,3132
#define SMIME_SIGNERS	77,3154
#define SMIME_ENCRYPT	78,3181
#define SMIME_DECRYPT	79,3218
#define SMIME_SIGN	80,3255
#define SMIME_VERIFY	81,3305
#define SMIME_PK7OUT	82,3341
#define SMIME_RESIGN	83,3388
int MAIN(87,3477
static int save_certs(826,22161
static int smime_cb(843,22527

apps/pkcs12.c,468
#define PROG 71,3009
const EVP_CIPHER *enc;enc73,3035
#define NOKEYS	76,3060
#define NOCERTS 77,3080
#define INFO	78,3101
#define CLCERTS	79,3119
#define CACERTS	80,3140
int MAIN(95,3881
int dump_certs_keys_p12 697,21179
int dump_certs_pkeys_bags 739,22324
int dump_certs_pkeys_bag 753,22676
int get_cert_chain 827,24940
int alg_print 854,25679
int cert_load(871,26103
int print_attribs 898,26651
void hex_prin(953,28143
static int set_pbe(959,28271

apps/ciphers.c,143
#define APPS_WIN1663,3274
#undef PROG69,3369
#define PROG	70,3381
static const char *ciphers_usage[ciphers_usage72,3408
int MAIN(84,3718

apps/ts.c,1154
#undef PROG70,2956
#define PROG	71,2968
#define	NONCE_LENGTH	74,3066
#define	ENV_OID_FILE	77,3144
int MAIN(124,5103
	enum mode 130,5221
	CMD_NONE,131,5234
	CMD_NONE, CMD_QUERY,131,5234
	CMD_NONE, CMD_QUERY, CMD_REPLY,131,5234
	CMD_NONE, CMD_QUERY, CMD_REPLY, CMD_VERIFY 131,5234
static ASN1_OBJECT *txt2obj(txt2obj407,11850
static CONF *load_config_file(load_config_file417,12048
static int query_command(466,13109
static BIO *BIO_open_with_default(BIO_open_with_default525,14429
static TS_REQ *create_query(create_query533,14624
static int create_digest(598,16565
static ASN1_INTEGER *create_nonce(create_nonce643,17557
static int reply_command(673,18337
static TS_RESP *read_PKCS7(read_PKCS7762,20369
static TS_RESP *create_response(create_response800,21314
static ASN1_INTEGER * MS_CALLBACK serial_cb(878,23664
static ASN1_INTEGER *next_serial(next_serial897,24127
static int save_ts_serial(940,25075
static int verify_command(961,25521
static TS_VERIFY_CTX *create_verify_ctx(create_verify_ctx1010,26653
static X509_STORE *create_cert_store(create_cert_store1076,28222
static int MS_CALLBACK verify_cb(1130,29432

apps/x509.c,450
#define APPS_WIN1664,3291
#undef PROG83,3679
#define PROG 84,3691
#undef POSTFIX86,3715
#define	POSTFIX	87,3730
#define DEF_DAYS	88,3753
static const char *x509_usage[x509_usage90,3774
static int reqfile=165,7562
int MAIN(169,7610
static ASN1_INTEGER *x509_load_serial(x509_load_serial1107,28795
static int x509_certify(1147,29656
static int MS_CALLBACK callb(1222,31633
static int sign(1254,32563
static int purpose_print(1295,33694

apps/asn1pars.c,94
#undef PROG80,3764
#define PROG	81,3776
int MAIN(87,3908
static int do_generate(387,10756

apps/cms.c,1056
#undef PROG73,2952
#define PROG 74,2964
#define SMIME_OP	82,3315
#define SMIME_IP	83,3337
#define SMIME_SIGNERS	84,3359
#define SMIME_ENCRYPT	85,3386
#define SMIME_DECRYPT	86,3424
#define SMIME_SIGN	87,3462
#define SMIME_VERIFY	88,3513
#define SMIME_CMSOUT	89,3550
#define SMIME_RESIGN	90,3598
#define SMIME_DATAOUT	91,3662
#define SMIME_DATA_CREATE	92,3700
#define SMIME_DIGEST_VERIFY	93,3741
#define SMIME_DIGEST_CREATE	94,3784
#define SMIME_UNCOMPRESS	95,3828
#define SMIME_COMPRESS	96,3869
#define SMIME_ENCRYPTED_DECRYPT	97,3909
#define SMIME_ENCRYPTED_ENCRYPT	98,3957
#define SMIME_SIGN_RECEIPT	99,4005
#define SMIME_VERIFY_RECEIPT	100,4059
#define SMIME_TIMESTAMP_VERIFY 101,4104
#define SMIME_TIMESTAMP_CREATE 102,4152
int verify_err 104,4201
int MAIN(108,4247
static int save_certs(1347,35161
static int cms_cb(1364,35527
static void gnames_stack_print(1382,35801
static void receipt_request_print(1401,36232
static STACK_OF(1453,37581
static CMS_ReceiptRequest *make_receipt_request(make_receipt_request1492,38379

apps/rsa.c,97
#undef PROG74,3514
#define PROG	75,3526
int MAIN(100,4413
static void *dummy=dummy447,12700

apps/dh.c,95
#undef PROG74,3539
#define PROG	75,3551
int MAIN(89,3854
static void *dummy=dummy352,9477

apps/enc.c,237
#undef SIZE74,3542
#undef BSIZE75,3554
#undef PROG76,3567
#define SIZE	78,3580
#define BSIZE	79,3599
#define	PROG	80,3622
static void show_ciphers(82,3645
int MAIN(102,3940
#define PROG_NAME_SIZE 126,4646
int set_hex(698,17563

apps/ecparam.c,137
#undef PROG87,3577
#define PROG	88,3589
int MAIN(119,4999
static int ecparam_print_var(701,19279
static void *dummy=dummy728,19858

apps/vms_decc_init.c,339
# define USE_DECC_INIT 3,126
int decc_init_done 30,656
    char *name;name37,770
    int value;38,786
} decc_feat_t;39,801
decc_feat_t decc_feat_array[decc_feat_array46,932
static void decc_init(66,1401
# define PSECT_ALIGN 157,4169
# define PSECT_ALIGN 159,4198
const int spare[spare163,4306
int dmy_lib$initialize 177,4642

apps/ec.c,96
#undef PROG70,2942
#define PROG	71,2954
int MAIN(86,3496
static void *dummy=dummy403,10747

apps/s_client.c,2345
#define APPS_WIN16145,7195
#define __U_INT153,7573
typedef unsigned int u_int;154,7589
#define USE_SOCKETS157,7625
#undef FIONBIO174,8069
#undef PROG181,8152
#define PROG	182,8164
#define SSL_HOST_NAME	186,8283
#undef BUFSIZZ190,8378
#define BUFSIZZ 191,8393
static int c_nbio=198,8515
static int c_Pause=200,8543
static int c_debug=201,8565
static int c_tlsextdebug=203,8613
static int c_status_req=204,8641
static int c_msg=206,8675
static int c_showcerts=207,8695
static char *keymatexportlabel=keymatexportlabel209,8722
static int keymatexportlen=210,8759
static BIO *bio_c_out=bio_c_out217,8950
static int c_quiet=218,8978
static int c_ign_eof=219,9000
static char *psk_identity=psk_identity223,9083
static unsigned int psk_client_cb(226,9182
static void sc_usage(284,10947
typedef struct tlsextctx_st 373,16400
   BIO * biodebug;374,16430
   int ack;375,16449
} tlsextctx;376,16461
static int MS_CALLBACK ssl_servername_cb(379,16476
typedef struct srp_arg_st394,16923
	char *srppassin;srppassin396,16952
	char *srplogin;srplogin397,16970
	int msg;398,16987
	int debug;399,17021
	int amp;400,17057
	int strength 401,17093
	} SRP_ARG;402,17134
#define SRP_NUMBER_ITERATIONS_FOR_PRIME 404,17147
static int srp_Verify_N_and_g(406,17191
static int MS_CALLBACK ssl_srp_verify_param_cb(449,18470
#define PWD_STRLEN 482,19424
static char * MS_CALLBACK ssl_give_srp_client_pwd_cb(484,19449
	char *srtp_profiles srtp_profiles505,19922
typedef struct tlsextnextprotoctx_st 509,20038
	unsigned char *data;data510,20077
	unsigned short len;511,20099
	int status;512,20120
} tlsextnextprotoctx;513,20133
static tlsextnextprotoctx next_proto;515,20156
static int next_proto_cb(517,20195
	PROTO_OFF	544,20833
	PROTO_SMTP,545,20849
	PROTO_POP3,546,20862
	PROTO_IMAP,547,20875
	PROTO_FTP,548,20888
	PROTO_XMPP549,20900
int MAIN(554,20941
	width=1366,39892
	read_tty=1368,39919
	write_tty=1369,39932
	tty_on=1370,39946
	read_ssl=1371,39957
	write_ssl=1372,39970
	cbuf_len=1374,39986
	cbuf_off=1375,39999
	sbuf_len=1376,40012
	sbuf_off=1377,40025
		FD_ZERO(&readfds)readfds1492,43187
		FD_ZERO(&writefds)writefds1493,43208
			timeoutp 1499,43345
		else1506,43461
		ssl_pending 1553,44550
	ret=1880,52503
static void print_stuff(1913,53188
static int ocsp_resp_cb(2109,58477

apps/nseq.c,60
#undef PROG65,2839
#define PROG 66,2851
int MAIN(70,2900

apps/s_apps.h,429
#define _kbhit 121,6110
#define MAX_NOFILE	127,6338
#define	NBBY	128,6360
#define	FD_SETSIZE	131,6429
#define MAXSELFD	135,6548
typedef int	fd_mask;136,6576
#define NFDBITS	137,6642
#define NFDSHIFT 138,6716
typedef fd_mask fd_set;140,6766
#define	FD_SET(141,6790
#define	FD_CLR(142,6844
#define	FD_ISSET(143,6899
#define FD_ZERO(144,6954
#define PORT 147,7018
#define PORT_STR 148,7047
#define PROTOCOL 149,7078

apps/genrsa.c,200
#undef OPENSSL_NO_DEPRECATED63,3383
#define DEFBITS	81,3747
#undef PROG82,3767
#define PROG 83,3779
int MAIN(89,3893
static int MS_CALLBACK genrsa_cb(314,9599
static void *dummy=dummy332,9893

apps/dhparam.c,165
#undef PROG130,6205
#define PROG	131,6217
#define DEFBITS	133,6244
int MAIN(150,6668
static int MS_CALLBACK dh_cb(538,15350
static void *dummy=dummy557,15640

apps/s_socket.c,1263
#define __U_INT76,3771
typedef unsigned int u_int;77,3787
#define USE_SOCKETS80,3823
#define NON_MAIN81,3843
#undef USE_SOCKETS83,3878
#undef NON_MAIN84,3897
#define SOCKET_PROTOCOL	112,4702
#define SOCKET_PROTOCOL	114,4765
static int wsa_init_done=118,4871
static struct WSAData wsa_state;122,4934
static int wsa_init_done=123,4967
static HWND topWnd=126,5021
static FARPROC lpTopWndProc=127,5043
static FARPROC lpTopHookProc=128,5077
static LONG FAR PASCAL topHookProc(131,5174
static BOOL CALLBACK enumproc(148,5525
static void ssl_sock_cleanup(158,5709
static void sock_cleanup(170,5937
static int ssl_sock_init(180,6063
int init_client(237,7371
static int init_client_ip(247,7575
int do_server(287,8608
static int init_server_long(325,9305
static int init_server(378,10483
static int do_accept(383,10595
int extract_host_port(474,12724
static int host_ip(499,13121
int extract_port(545,14018
#define GHBN_NUM	566,14361
static struct ghbn_cache_st567,14380
	char name[name569,14411
	struct hostent ent;570,14428
	unsigned long order;571,14449
	} ghbn_cache[ghbn_cache572,14471
static unsigned long ghbn_hits=574,14497
static unsigned long ghbn_miss=575,14532
static struct hostent *GetHostByName(GetHostByName577,14568

apps/pkcs7.c,60
#undef PROG71,3442
#define PROG	72,3454
int MAIN(83,3711

demos/cms/cms_ver.c,16
int main(6,117

demos/cms/cms_comp.c,16
int main(6,113

demos/cms/cms_sign2.c,16
int main(6,116

demos/cms/cms_uncomp.c,16
int main(6,118

demos/cms/cms_ddec.c,16
int main(8,185

demos/cms/cms_sign.c,16
int main(6,112

demos/cms/cms_enc.c,16
int main(6,112

demos/cms/cms_denc.c,16
int main(8,185

demos/cms/cms_dec.c,16
int main(6,115

demos/b64.c,178
#undef SIZE70,3432
#undef BSIZE71,3444
#undef PROG72,3457
#define SIZE	74,3470
#define BSIZE	75,3489
#define	PROG	76,3512
int main(78,3535
#define PROG_NAME_SIZE 93,3904

demos/spkigen.c,166
#define PEM_write_SPKI(18,434
#define RSA_F4	25,720
#define EVP_PKEY_assign_RSA(26,743
int main(29,840
int EVP_PKEY_assign(93,2313
int SPKI_set_pubkey(118,2908

demos/x509/mkreq.c,87
int main(18,411
static void callback(48,918
int mkreq(59,1084
int add_ext(151,3354

demos/x509/mkcert.c,88
int main(19,389
static void callback(50,945
int mkcert(61,1111
int add_ext(153,3193

demos/engines/zencod/hw_zencod_err.h,873
#define HEADER_ZENCOD_ERR_H56,2663
#define ZENCODerr(69,3078
#define ZENCOD_F_ZENCOD_BN_MOD_EXP	74,3213
#define ZENCOD_F_ZENCOD_CTRL	75,3255
#define ZENCOD_F_ZENCOD_DH_COMPUTE	76,3292
#define ZENCOD_F_ZENCOD_DH_GENERATE	77,3334
#define ZENCOD_F_ZENCOD_DSA_DO_SIGN	78,3377
#define ZENCOD_F_ZENCOD_DSA_DO_VERIFY	79,3420
#define ZENCOD_F_ZENCOD_FINISH	80,3465
#define ZENCOD_F_ZENCOD_INIT	81,3504
#define ZENCOD_F_ZENCOD_RAND	82,3541
#define ZENCOD_F_ZENCOD_RSA_MOD_EXP	83,3578
#define ZENCOD_F_ZENCOD_RSA_MOD_EXP_CRT	84,3621
#define ZENCOD_R_ALREADY_LOADED	87,3689
#define ZENCOD_R_BAD_KEY_COMPONENTS	88,3729
#define ZENCOD_R_BN_EXPAND_FAIL	89,3772
#define ZENCOD_R_CTRL_COMMAND_NOT_IMPLEMENTED	90,3812
#define ZENCOD_R_DSO_FAILURE	91,3864
#define ZENCOD_R_NOT_LOADED	92,3901
#define ZENCOD_R_REQUEST_FAILED	93,3937
#define ZENCOD_R_UNIT_FAILURE	94,3977

demos/engines/zencod/hw_zencod.h,1795
#define	_HW_ZENCOD_H_9,280
#define ZENBRIDGE_MAX_KEYSIZE_RSA	17,381
#define ZENBRIDGE_MAX_KEYSIZE_RSA_CRT	18,420
#define ZENBRIDGE_MAX_KEYSIZE_DSA_SIGN	19,463
#define ZENBRIDGE_MAX_KEYSIZE_DSA_VRFY	20,507
#define	ZENBRIDGE_VERSION_MAJOR(23,586
#define	ZENBRIDGE_VERSION_MINOR(24,642
#define	ZENBRIDGE_VERSION_PATCH(25,698
#define	ZENBRIDGE_VERSION(26,754
typedef struct zencod_number_s 31,842
	unsigned long len;32,875
	unsigned char *data;data33,895
} zen_nb_t;34,917
#define KEY	36,930
typedef int t_zencod_lib_version 42,968
typedef int t_zencod_hw_version 43,1009
typedef int t_zencod_test 44,1049
typedef int t_zencod_dump_key 45,1083
typedef KEY *t_zencod_new_number t_zencod_new_number51,1183
typedef int t_zencod_init_number 52,1258
typedef unsigned long t_zencod_bytes2bits 53,1341
typedef unsigned long t_zencod_bits2bytes 54,1424
typedef int t_zencod_rsa_mod_exp 61,1557
typedef int t_zencod_rsa_mod_exp_crt 63,1742
typedef int t_zencod_dsa_do_sign 70,1869
typedef int t_zencod_dsa_do_verify 72,2003
typedef int t_zencod_dh_generate_key 81,2223
typedef int t_zencod_dh_compute_key 82,2305
#define ZENBRIDGE_RNG_DIRECT	88,2395
#define ZENBRIDGE_RNG_SHA1	89,2427
typedef int t_zencod_rand_bytes 90,2457
typedef int t_zencod_math_mod_exp 96,2543
typedef struct ZEN_data_st105,2691
	unsigned int HashBufferSize 107,2720
	unsigned char *HashBuffer HashBuffer108,2751
} ZEN_MD_DATA 109,2780
typedef int t_zencod_md5_init 121,3172
typedef int t_zencod_md5_update 122,3226
typedef int t_zencod_md5_do_final 123,3300
typedef int t_zencod_sha1_init 125,3372
typedef int t_zencod_sha1_update 126,3427
typedef int t_zencod_sha1_do_final 127,3502
typedef int t_zencod_rc4_cipher 139,3949
typedef int t_zencod_xdes_cipher 150,4409
#undef KEY154,4561

demos/engines/zencod/hw_zencod_err.c,417
static ERR_STRING_DATA ZENCOD_str_functs[ZENCOD_str_functs67,2971
static ERR_STRING_DATA ZENCOD_str_reasons[ZENCOD_str_reasons83,3725
static ERR_STRING_DATA ZENCOD_lib_name[ZENCOD_lib_name99,4315
static int ZENCOD_lib_error_code=107,4411
static int ZENCOD_error_init=108,4447
static void ERR_load_ZENCOD_strings(110,4480
static void ERR_unload_ZENCOD_strings(130,4959
static void ERR_ZENCOD_error(146,5299

demos/engines/zencod/hw_zencod.c,6475
#define ZENCOD_LIB_NAME 81,3207
#define FAIL_TO_SOFTWARE	84,3275
#define	ZEN_LIBRARY	86,3306
#  define PERROR(89,3345
#  define CHEESE(90,3375
#  define PERROR(92,3454
#  define CHEESE(93,3474
static inline void esrever 99,3531
static inline void ypcmem 104,3647
static __inline void esrever 109,3761
static __inline void ypcmem 114,3879
#define BIGNUM2ZEN(121,3998
#define ZEN_BITS(125,4138
#define ZEN_BYTES(126,4237
#define ZENCOD_CMD_SO_PATH	175,6078
static const ENGINE_CMD_DEFN zencod_cmd_defns 176,6123
static RSA_METHOD zencod_rsa 188,6443
static DSA_METHOD zencod_dsa 208,6739
static DH_METHOD zencod_dh 225,7024
static RAND_METHOD zencod_rand 239,7275
static const char *engine_zencod_id engine_zencod_id251,7470
static const char *engine_zencod_name engine_zencod_name252,7518
static int bind_helper 258,7710
static ENGINE *ENGINE_zencod ENGINE_zencod369,10975
void ENGINE_load_zencod 389,11219
static DSO *zencod_dso zencod_dso406,11727
static t_zencod_test *ptr_zencod_test ptr_zencod_test408,11760
static t_zencod_bytes2bits *ptr_zencod_bytes2bits ptr_zencod_bytes2bits409,11807
static t_zencod_bits2bytes *ptr_zencod_bits2bytes ptr_zencod_bits2bytes410,11866
static t_zencod_new_number *ptr_zencod_new_number ptr_zencod_new_number411,11925
static t_zencod_init_number *ptr_zencod_init_number ptr_zencod_init_number412,11984
static t_zencod_rsa_mod_exp *ptr_zencod_rsa_mod_exp ptr_zencod_rsa_mod_exp414,12046
static t_zencod_rsa_mod_exp_crt *ptr_zencod_rsa_mod_exp_crt ptr_zencod_rsa_mod_exp_crt415,12107
static t_zencod_dsa_do_sign *ptr_zencod_dsa_do_sign ptr_zencod_dsa_do_sign416,12176
static t_zencod_dsa_do_verify *ptr_zencod_dsa_do_verify ptr_zencod_dsa_do_verify417,12237
static t_zencod_dh_generate_key *ptr_zencod_dh_generate_key ptr_zencod_dh_generate_key418,12302
static t_zencod_dh_compute_key *ptr_zencod_dh_compute_key ptr_zencod_dh_compute_key419,12371
static t_zencod_rand_bytes *ptr_zencod_rand_bytes ptr_zencod_rand_bytes420,12438
static t_zencod_math_mod_exp *ptr_zencod_math_mod_exp ptr_zencod_math_mod_exp421,12497
static t_zencod_md5_init *ptr_zencod_md5_init ptr_zencod_md5_init423,12561
static t_zencod_md5_update *ptr_zencod_md5_update ptr_zencod_md5_update424,12616
static t_zencod_md5_do_final *ptr_zencod_md5_do_final ptr_zencod_md5_do_final425,12675
static t_zencod_sha1_init *ptr_zencod_sha1_init ptr_zencod_sha1_init426,12738
static t_zencod_sha1_update *ptr_zencod_sha1_update ptr_zencod_sha1_update427,12795
static t_zencod_sha1_do_final *ptr_zencod_sha1_do_final ptr_zencod_sha1_do_final428,12856
static t_zencod_xdes_cipher *ptr_zencod_xdes_cipher ptr_zencod_xdes_cipher430,12922
static t_zencod_rc4_cipher *ptr_zencod_rc4_cipher ptr_zencod_rc4_cipher431,12983
static const char *ZENCOD_LIBNAME ZENCOD_LIBNAME436,13155
static const char *ZENCOD_Fct_0 ZENCOD_Fct_0438,13206
static const char *ZENCOD_Fct_1 ZENCOD_Fct_1439,13256
static const char *ZENCOD_Fct_2 ZENCOD_Fct_2440,13315
static const char *ZENCOD_Fct_3 ZENCOD_Fct_3441,13374
static const char *ZENCOD_Fct_4 ZENCOD_Fct_4442,13433
static const char *ZENCOD_Fct_exp_1 ZENCOD_Fct_exp_1444,13494
static const char *ZENCOD_Fct_exp_2 ZENCOD_Fct_exp_2445,13558
static const char *ZENCOD_Fct_dsa_1 ZENCOD_Fct_dsa_1446,13626
static const char *ZENCOD_Fct_dsa_2 ZENCOD_Fct_dsa_2447,13690
static const char *ZENCOD_Fct_dh_1 ZENCOD_Fct_dh_1448,13756
static const char *ZENCOD_Fct_dh_2 ZENCOD_Fct_dh_2449,13823
static const char *ZENCOD_Fct_rand_1 ZENCOD_Fct_rand_1450,13889
static const char *ZENCOD_Fct_math_1 ZENCOD_Fct_math_1451,13953
static const char *ZENCOD_Fct_md5_1 ZENCOD_Fct_md5_1453,14020
static const char *ZENCOD_Fct_md5_2 ZENCOD_Fct_md5_2454,14081
static const char *ZENCOD_Fct_md5_3 ZENCOD_Fct_md5_3455,14144
static const char *ZENCOD_Fct_sha1_1 ZENCOD_Fct_sha1_1456,14209
static const char *ZENCOD_Fct_sha1_2 ZENCOD_Fct_sha1_2457,14272
static const char *ZENCOD_Fct_sha1_3 ZENCOD_Fct_sha1_3458,14337
static const char *ZENCOD_Fct_xdes_1 ZENCOD_Fct_xdes_1460,14405
static const char *ZENCOD_Fct_rc4_1 ZENCOD_Fct_rc4_1461,14470
static int zencod_destroy 465,14601
static int zencod_init 476,14746
static int zencod_finish 615,20100
static int zencod_ctrl 661,21212
static int zencod_bn_mod_exp 696,21925
static int RSA_zencod_rsa_mod_exp 738,22880
static int RSA_zencod_bn_mod_exp 789,24231
static DSA_SIG *DSA_zencod_do_sign DSA_zencod_do_sign835,25296
static int DSA_zencod_do_verify 910,27166
static int DSA_zencod_bn_mod_exp 958,28472
static int DH_zencod_generate_key 971,28760
static int DH_zencod_compute_key 1048,30430
static int DH_zencod_bn_mod_exp 1089,31497
static void RAND_zencod_seed 1101,31767
static int RAND_zencod_rand_bytes 1107,31913
static int RAND_zencod_rand_status 1130,32339
static int bind_fn 1142,32546
IMPLEMENT_DYNAMIC_CHECK_FN 1155,32733
static int engine_digest_nids_num 1182,33476
static int engine_cipher_nids 1184,33615
static int engine_cipher_nids_num 1185,33687
static const EVP_MD engine_sha1_md 1219,35217
static const EVP_MD engine_md5_md 1240,35825
#define EVP_RC4_KEY_SIZE	1262,36428
	unsigned int len 1267,36507
	unsigned int first 1268,36527
	unsigned char rc4_state 1269,36549
} NEW_ZEN_RC4_KEY 1270,36584
#define rc4_data(1272,36605
static const EVP_CIPHER engine_rc4 1274,36672
static const EVP_CIPHER engine_rc4_40 1291,37001
	unsigned char des_key 1312,37307
	unsigned char des_iv 1313,37339
} ZEN_DES_KEY 1314,37369
static const EVP_CIPHER engine_des_cbc 1316,37386
	unsigned char des3_key 1336,37714
	unsigned char des3_iv 1337,37747
} ZEN_3DES_KEY 1338,37778
#define des_data(1340,37796
static const EVP_CIPHER engine_des_ede3_cbc 1342,37864
static int engine_digests 1359,38201
static int engine_sha1_init 1388,38796
static int engine_sha1_update 1401,39028
static int engine_sha1_final 1419,39439
static int engine_md5_init 1440,39849
static int engine_md5_update 1453,40079
static int engine_md5_final 1471,40488
static int engine_md_cleanup 1489,40868
static int engine_md_copy 1504,41147
static int engine_ciphers 1517,41556
static int engine_rc4_init_key 1547,42160
static int engine_rc4_cipher 1570,42751
static int engine_des_init_key 1600,43611
static int engine_des_cbc_cipher 1618,44098
static int engine_des_ede3_init_key 1663,45530
static int engine_des_ede3_cbc_cipher 1679,45921
static int engine_cipher_cleanup 1723,47275

demos/engines/rsaref/rsaref_err.h,1269
#define HEADER_RSAREF_ERR_H57,2682
#define RSAREFerr(70,3097
#define RSAREF_F_BNREF_MOD_EXP	74,3231
#define RSAREF_F_CIPHER_DES_CBC_CODE	75,3270
#define RSAREF_F_RSAREF_BN2BIN	76,3314
#define RSAREF_F_RSAREF_MOD_EXP	77,3353
#define RSAREF_F_RSAREF_PRIVATE_DECRYPT	78,3393
#define RSAREF_F_RSAREF_PRIVATE_ENCRYPT	79,3440
#define RSAREF_F_RSAREF_PUBLIC_DECRYPT	80,3487
#define RSAREF_F_RSAREF_PUBLIC_ENCRYPT	81,3533
#define RSAREF_F_RSA_BN2BIN	82,3579
#define RSAREF_F_RSA_PRIVATE_DECRYPT	83,3615
#define RSAREF_F_RSA_PRIVATE_ENCRYPT	84,3659
#define RSAREF_F_RSA_PUBLIC_DECRYPT	85,3703
#define RSAREF_F_RSA_PUBLIC_ENCRYPT	86,3746
#define RSAREF_R_CONTENT_ENCODING	89,3810
#define RSAREF_R_DATA	90,3851
#define RSAREF_R_DIGEST_ALGORITHM	91,3882
#define RSAREF_R_ENCODING	92,3923
#define RSAREF_R_ENCRYPTION_ALGORITHM	93,3957
#define RSAREF_R_KEY	94,4002
#define RSAREF_R_KEY_ENCODING	95,4032
#define RSAREF_R_LEN	96,4070
#define RSAREF_R_LENGTH_NOT_BLOCK_ALIGNED	97,4100
#define RSAREF_R_MODULUS_LEN	98,4148
#define RSAREF_R_NEED_RANDOM	99,4185
#define RSAREF_R_PRIVATE_KEY	100,4222
#define RSAREF_R_PUBLIC_KEY	101,4259
#define RSAREF_R_SIGNATURE	102,4295
#define RSAREF_R_SIGNATURE_ENCODING	103,4330
#define RSAREF_R_UNKNOWN_FAULT	104,4373

demos/engines/rsaref/rsaref_err.c,418
static ERR_STRING_DATA RSAREF_str_functs[RSAREF_str_functs67,2960
static ERR_STRING_DATA RSAREF_str_reasons[RSAREF_str_reasons85,3882
static ERR_STRING_DATA RSAREF_lib_name[RSAREF_lib_name109,4916
static int RSAREF_lib_error_code=117,5012
static int RSAREF_error_init=118,5048
static void ERR_load_RSAREF_strings(120,5081
static void ERR_unload_RSAREF_strings(140,5560
static void ERR_RSAREF_error(156,5900

demos/engines/rsaref/rsaref.c,2369
#define OPENSSL_NO_MD212,367
#define OPENSSL_NO_MD513,390
#define RSAREF_LIB_NAME 18,491
static const char *engine_rsaref_id engine_rsaref_id28,922
static const char *engine_rsaref_name engine_rsaref_name29,970
static const ENGINE_CMD_DEFN rsaref_cmd_defns[rsaref_cmd_defns44,1456
static RSA_METHOD rsaref_rsa 66,2380
static int rsaref_cipher_nids[rsaref_cipher_nids91,2938
static int rsaref_digest_nids[rsaref_digest_nids93,3025
static const EVP_CIPHER cipher_des_cbc 118,4155
static const EVP_CIPHER cipher_des_ede3_cbc 133,4368
static const EVP_CIPHER cipher_desx_cbc 148,4608
static const EVP_MD digest_md2 178,5421
static const EVP_MD digest_md5 194,5623
static int bind_rsaref(218,6183
static int bind_helper(239,6851
IMPLEMENT_DYNAMIC_CHECK_FN(247,7017
void ENGINE_load_rsaref(263,7266
static int rsaref_init(275,7543
static int rsaref_finish(281,7673
static int rsaref_destroy(287,7793
static int rsaref_mod_exp(297,7980
static int bnref_mod_exp(303,8135
static int RSAref_bn2bin(311,8384
static BIGNUM *RSAref_bin2bn(RSAref_bin2bn330,8720
static int RSAref_Public_ref2eay(342,8918
static int RSAref_Public_eay2ref(351,9163
static int RSAref_Private_ref2eay(360,9440
static int RSAref_Private_eay2ref(384,10204
static int rsaref_private_decrypt(398,10938
static int rsaref_private_encrypt(416,11387
static int rsaref_public_decrypt(439,11964
static int rsaref_public_encrypt(457,12408
static int rsaref_ciphers(500,13474
static int rsaref_digests(526,14063
#undef data554,14667
#define data(555,14679
static int cipher_des_cbc_init(556,14733
static int cipher_des_cbc_code(562,14936
static int cipher_des_cbc_clean(578,15356
#undef data584,15473
#define data(585,15485
static int cipher_des_ede3_cbc_init(586,15540
static int cipher_des_ede3_cbc_code(593,15751
static int cipher_des_ede3_cbc_clean(609,16177
#undef data615,16299
#define data(616,16311
static int cipher_desx_cbc_init(617,16366
static int cipher_desx_cbc_code(624,16573
static int cipher_desx_cbc_clean(640,16995
#undef data649,17213
#define data(650,17225
static int digest_md2_init(651,17271
static int digest_md2_update(656,17353
static int digest_md2_final(662,17522
#undef data668,17629
#define data(669,17641
static int digest_md5_init(670,17687
static int digest_md5_update(675,17769
static int digest_md5_final(681,17938

demos/engines/ibmca/ica_openssl_api.h,2408
#define __ICA_OPENSSL_API_H__3,31
#define ICA_ADAPTER_HANDLE 9,104
#define ICA_CALL 12,173
#define ICA_CALL 16,237
 #define MAX_EXP_SIZE 27,534
 #define MAX_MODULUS_SIZE 28,560
 #define MAX_MODEXP_SIZE 29,590
 #define MAX_OPERAND_SIZE 31,651
 typedef unsigned char ICA_KEY_RSA_MODEXPO_REC[ICA_KEY_RSA_MODEXPO_REC33,692
 #define MAX_BP_SIZE 40,948
 #define MAX_BQ_SIZE 41,973
 #define MAX_NP_SIZE 42,998
 #define MAX_NQ_SIZE 43,1023
 #define MAX_QINV_SIZE 44,1048
 #define MAX_RSACRT_SIZE 45,1075
#define RSA_GEN_OPERAND_MAX 47,1165
typedef unsigned char ICA_KEY_RSA_CRT_REC[ICA_KEY_RSA_CRT_REC49,1212
#define  RSA_PUBLIC_MODULUS_EXPONENT 54,1430
#define  RSA_PKCS_PRIVATE_CHINESE_REMAINDER 55,1476
#define KEYTYPE_MODEXPO 57,1523
#define KEYTYPE_PKCSCRT 58,1557
typedef struct _ICA_KEY_RSA_MODEXPO71,1918
{   unsigned int  keyType;72,1954
    unsigned int  keyLength;73,2027
    unsigned int  modulusBitLength;74,2100
    unsigned int  nLength;76,2246
    unsigned int  expLength;77,2319
    unsigned int  nOffset;80,2538
    unsigned int  expOffset;81,2611
    unsigned char reserved[reserved82,2684
    ICA_KEY_RSA_MODEXPO_REC keyRecord;85,2903
} ICA_KEY_RSA_MODEXPO;86,2942
#define SZ_HEADER_MODEXPO 87,2965
typedef struct _ICA_KEY_RSA_CRT95,3219
{   unsigned int  keyType;96,3251
    unsigned int  keyLength;97,3324
    unsigned int  modulusBitLength;98,3397
    unsigned int  nLength;101,3552
    unsigned int  pLength;103,3632
    unsigned int  qLength;104,3705
    unsigned int  dpLength;105,3778
    unsigned int  dqLength;106,3851
    unsigned int  qInvLength;107,3924
    unsigned int  nOffset;110,4079
    unsigned int  pOffset;112,4159
    unsigned int  qOffset;113,4232
    unsigned int  dpOffset;114,4305
    unsigned int  dqOffset;115,4378
    unsigned int  qInvOffset;116,4451
    unsigned char reserved[reserved118,4533
    unsigned char reserved[reserved120,4612
    ICA_KEY_RSA_CRT_REC keyRecord;124,4838
} ICA_KEY_RSA_CRT;125,4873
#define SZ_HEADER_CRT 126,4892
static const char *IBMCA_LIBNAME IBMCA_LIBNAME160,5962
static const char *IBMCA_LIBNAME IBMCA_LIBNAME162,6035
static const char *IBMCA_LIBNAME IBMCA_LIBNAME164,6088
#define CORRECT_ENDIANNESS(173,6251
#define CRT_KEY_TYPE 179,6625
#define ME_KEY_TYPE 180,6683
#define CORRECT_ENDIANNESS(182,6740
#define CRT_KEY_TYPE 183,6774
#define ME_KEY_TYPE 184,6817

demos/engines/ibmca/hw_ibmca.c,1735
#define IBMCA_LIB_NAME 75,3136
static const char *IBMCA_F1 IBMCA_F183,3390
static const char *IBMCA_F2 IBMCA_F284,3439
static const char *IBMCA_F3 IBMCA_F385,3489
static const char *IBMCA_F4 IBMCA_F486,3537
static const char *IBMCA_F5 IBMCA_F587,3595
ICA_ADAPTER_HANDLE handle=89,3641
#define IBMCA_CMD_SO_PATH	134,5200
static const ENGINE_CMD_DEFN ibmca_cmd_defns[ibmca_cmd_defns135,5244
static RSA_METHOD ibmca_rsa 145,5528
static DSA_METHOD ibmca_dsa 165,5907
static DH_METHOD ibmca_dh 182,6383
static RAND_METHOD ibmca_rand 195,6586
static const char *engine_ibmca_id engine_ibmca_id207,6854
static const char *engine_ibmca_name engine_ibmca_name208,6901
static int bind_helper(212,7085
static ENGINE *engine_ibmca(engine_ibmca278,9099
void ENGINE_load_ibmca(294,9333
static int ibmca_destroy(305,9597
static DSO *ibmca_dso ibmca_dso321,10201
static int get_context(333,10672
static void release_context(344,10937
static int ibmca_init(350,11090
static int ibmca_finish(424,13594
static int ibmca_ctrl(442,14068
static int ibmca_mod_exp(468,14612
        publKey->modulusBitLength modulusBitLength559,17410
        publKey->nOffset nOffset560,17489
        publKey->expOffset expOffset563,17590
	tmpLen 566,17698
	publKey->expLength expLength567,17717
	inLen 575,17948
        to_return 592,18450
static int ibmca_rsa_mod_exp(599,18565
static int ibmca_mod_exp_crt(629,19544
static int ibmca_dsa_mod_exp(828,26189
static int ibmca_mod_exp_dsa(849,26804
static int ibmca_mod_exp_mont(858,27105
static int ibmca_mod_exp_dh(866,27411
static int ibmca_rand_bytes(875,27664
static int ibmca_rand_status(898,28276
static int bind_fn(906,28489
IMPLEMENT_DYNAMIC_CHECK_FN(914,28666

demos/engines/ibmca/hw_ibmca_err.c,407
static ERR_STRING_DATA IBMCA_str_functs[IBMCA_str_functs67,2969
static ERR_STRING_DATA IBMCA_str_reasons[IBMCA_str_reasons79,3429
static ERR_STRING_DATA IBMCA_lib_name[IBMCA_lib_name102,4466
static int IBMCA_lib_error_code=110,4560
static int IBMCA_error_init=111,4595
static void ERR_load_IBMCA_strings(113,4627
static void ERR_unload_IBMCA_strings(133,5093
static void ERR_IBMCA_error(149,5424

demos/engines/ibmca/hw_ibmca_err.h,969
#define HEADER_IBMCA_ERR_H56,2662
#define IBMCAerr(69,3073
#define IBMCA_F_IBMCA_CTRL	74,3205
#define IBMCA_F_IBMCA_FINISH	75,3240
#define IBMCA_F_IBMCA_INIT	76,3277
#define IBMCA_F_IBMCA_MOD_EXP	77,3312
#define IBMCA_F_IBMCA_MOD_EXP_CRT	78,3350
#define IBMCA_F_IBMCA_RAND_BYTES	79,3391
#define IBMCA_F_IBMCA_RSA_MOD_EXP	80,3431
#define IBMCA_R_ALREADY_LOADED	83,3493
#define IBMCA_R_BN_CTX_FULL	84,3532
#define IBMCA_R_BN_EXPAND_FAIL	85,3568
#define IBMCA_R_CTRL_COMMAND_NOT_IMPLEMENTED	86,3607
#define IBMCA_R_DSO_FAILURE	87,3658
#define IBMCA_R_MEXP_LENGTH_TO_LARGE	88,3694
#define IBMCA_R_MISSING_KEY_COMPONENTS	89,3738
#define IBMCA_R_NOT_INITIALISED	90,3784
#define IBMCA_R_NOT_LOADED	91,3824
#define IBMCA_R_OPERANDS_TO_LARGE	92,3859
#define IBMCA_R_OUTLEN_TO_LARGE	93,3900
#define IBMCA_R_REQUEST_FAILED	94,3940
#define IBMCA_R_UNDERFLOW_CONDITION	95,3979
#define IBMCA_R_UNDERFLOW_KEYRECORD	96,4022
#define IBMCA_R_UNIT_FAILURE	97,4065

demos/engines/cluster_labs/hw_cluster_labs_err.h,866
#define HEADER_CL_ERR_H56,2659
#define CLerr(69,3058
#define CL_F_CLUSTER_LABS_CTRL	74,3181
#define CL_F_CLUSTER_LABS_DSA_SIGN	75,3220
#define CL_F_CLUSTER_LABS_DSA_VERIFY	76,3262
#define CL_F_CLUSTER_LABS_FINISH	77,3306
#define CL_F_CLUSTER_LABS_INIT	78,3346
#define CL_F_CLUSTER_LABS_MOD_EXP	79,3385
#define CL_F_CLUSTER_LABS_MOD_EXP_CRT	80,3426
#define CL_F_CLUSTER_LABS_RAND_BYTES	81,3471
#define CL_F_CLUSTER_LABS_RSA_MOD_EXP	82,3515
#define CL_F_CLUSTER_LABS_RSA_PRIV_DEC	83,3560
#define CL_F_CLUSTER_LABS_RSA_PRIV_ENC	84,3606
#define CL_F_CLUSTER_LABS_RSA_PUB_DEC	85,3652
#define CL_F_CLUSTER_LABS_RSA_PUB_ENC	86,3697
#define CL_R_ALREADY_LOADED	89,3763
#define CL_R_COMMAND_NOT_IMPLEMENTED	90,3799
#define CL_R_DSO_FAILURE	91,3843
#define CL_R_FUNCTION_NOT_BINDED	92,3876
#define CL_R_INIT_FAILED	93,3916
#define CL_R_NOT_LOADED	94,3949

demos/engines/cluster_labs/hw_cluster_labs_err.c,373
static ERR_STRING_DATA CL_str_functs[CL_str_functs67,2983
static ERR_STRING_DATA CL_str_reasons[CL_str_reasons85,3963
static ERR_STRING_DATA CL_lib_name[CL_lib_name99,4418
static int CL_lib_error_code=107,4506
static int CL_error_init=108,4538
static void ERR_load_CL_strings(110,4567
static void ERR_unload_CL_strings(130,4994
static void ERR_CL_error(146,5298

demos/engines/cluster_labs/cluster_labs.h,1125
typedef int cl_engine_init(1,0
typedef int cl_mod_exp(2,34
typedef int cl_mod_exp_crt(4,136
typedef int cl_rsa_mod_exp(7,297
typedef int cl_rsa_pub_enc(8,364
typedef int cl_rsa_pub_dec(10,477
typedef int cl_rsa_priv_enc(12,590
typedef int cl_rsa_priv_dec(14,701
typedef int cl_rand_bytes(16,814
typedef DSA_SIG *cl_dsa_sign(cl_dsa_sign17,870
typedef int cl_dsa_verify(18,947
static const char *CLUSTER_LABS_LIB_NAME CLUSTER_LABS_LIB_NAME22,1045
static const char *CLUSTER_LABS_F1	CLUSTER_LABS_F123,1104
static const char *CLUSTER_LABS_F2	CLUSTER_LABS_F224,1160
static const char *CLUSTER_LABS_F3	CLUSTER_LABS_F325,1212
static const char *CLUSTER_LABS_F4	CLUSTER_LABS_F426,1268
static const char *CLUSTER_LABS_F5	CLUSTER_LABS_F527,1324
static const char *CLUSTER_LABS_F6	CLUSTER_LABS_F628,1381
static const char *CLUSTER_LABS_F7	CLUSTER_LABS_F729,1438
static const char *CLUSTER_LABS_F8	CLUSTER_LABS_F830,1494
static const char *CLUSTER_LABS_F20	CLUSTER_LABS_F2031,1550
static const char *CLUSTER_LABS_F30	CLUSTER_LABS_F3032,1606
static const char *CLUSTER_LABS_F31	CLUSTER_LABS_F3133,1660

demos/engines/cluster_labs/hw_cluster_labs.c,2342
#define MSC_VER 59,2770
#define CL_LIB_NAME 76,3078
#define CLUSTER_LABS_CMD_SO_PATH	128,5171
static const ENGINE_CMD_DEFN cluster_labs_cmd_defns[cluster_labs_cmd_defns129,5221
static RSA_METHOD cluster_labs_rsa 141,5521
static DSA_METHOD cluster_labs_dsa 161,6097
static DH_METHOD cluster_labs_dh 178,6561
static RAND_METHOD cluster_labs_rand 191,6827
static const char *engine_cluster_labs_id engine_cluster_labs_id202,7079
static const char *engine_cluster_labs_name engine_cluster_labs_name203,7139
static int bind_helper(207,7282
static ENGINE *engine_cluster_labs(engine_cluster_labs234,8092
void ENGINE_load_cluster_labs(251,8318
static int cluster_labs_destroy(263,8550
static DSO *cluster_labs_dso cluster_labs_dso277,8931
static cl_engine_init	  	*p_cl_engine_init p_cl_engine_init281,9073
static cl_mod_exp	 	*p_cl_mod_exp p_cl_mod_exp282,9127
static cl_mod_exp_crt		*p_cl_mod_exp_crt p_cl_mod_exp_crt283,9173
static cl_rsa_mod_exp		*p_cl_rsa_mod_exp p_cl_rsa_mod_exp284,9225
static cl_rsa_priv_enc		*p_cl_rsa_priv_enc p_cl_rsa_priv_enc285,9277
static cl_rsa_priv_dec		*p_cl_rsa_priv_dec p_cl_rsa_priv_dec286,9331
static cl_rsa_pub_enc		*p_cl_rsa_pub_enc p_cl_rsa_pub_enc287,9385
static cl_rsa_pub_dec		*p_cl_rsa_pub_dec p_cl_rsa_pub_dec288,9437
static cl_rand_bytes		*p_cl_rand_bytes	p_cl_rand_bytes289,9489
static cl_dsa_sign		*p_cl_dsa_sign	p_cl_dsa_sign290,9539
static cl_dsa_verify		*p_cl_dsa_verify	p_cl_dsa_verify291,9586
int cluster_labs_init(294,9638
static int cluster_labs_finish(395,12187
static int cluster_labs_ctrl(426,12796
static int cluster_labs_mod_exp(453,13337
static int cluster_labs_mod_exp_crt(472,13706
static int cluster_labs_rsa_mod_exp(492,14173
static DSA_SIG *cluster_labs_dsa_sign(cluster_labs_dsa_sign510,14524
static int cluster_labs_dsa_verify(528,14879
static int cluster_labs_dsa_mod_exp(548,15274
static int cluster_labs_mod_exp_dsa(570,15769
static int cluster_labs_mod_exp_mont(578,16037
static int cluster_labs_mod_exp_dh(586,16301
static int cluster_labs_rsa_pub_enc(593,16503
static int cluster_labs_rsa_pub_dec(612,16930
static int cluster_labs_rsa_priv_enc(632,17352
static int cluster_labs_rsa_priv_dec(652,17775
static int cluster_labs_rand_bytes(680,18615
static int bind_fn(701,19079
IMPLEMENT_DYNAMIC_CHECK_FN(715,19435

demos/asn1/ocsp.c,2264
DECLARE_STACK_OF(174,6887
	ASN1_INTEGER *version;version177,6931
	GENERAL_NAME *requestorName;requestorName178,6955
	STACK_OF(179,6985
} TBSRequest;181,7064
	X509_ALGOR *signatureAlgorithm;signatureAlgorithm184,7096
	ASN1_BIT_STRING *signature;signature185,7129
	STACK_OF(186,7158
} Signature;187,7182
	TBSRequest *tbsRequest;tbsRequest190,7213
	Signature *optionalSignature;optionalSignature191,7238
} OCSPRequest;192,7269
	X509_ALGOR *hashAlgorithm;hashAlgorithm195,7302
	ASN1_OCTET_STRING *issuerNameHash;issuerNameHash196,7330
	ASN1_OCTET_STRING *issuerKeyHash;issuerKeyHash197,7366
	ASN1_INTEGER *certificateSerialNumber;certificateSerialNumber198,7401
} CertID;199,7441
	CertID *reqCert;reqCert202,7469
	STACK_OF(203,7487
} Request;204,7539
	ASN1_OBJECT *responseType;responseType209,7595
	ASN1_OCTET_STRING *response;response210,7623
} ResponseBytes;211,7653
	ASN1_ENUMERATED *responseStatus;responseStatus214,7688
	ResponseBytes *responseBytes;responseBytes215,7722
} OCSPResponse;216,7753
	int type;219,7787
	   X509_NAME *byName;byName221,7807
	   ASN1_OCTET_STRING *byKey;byKey222,7830
	}d;d223,7860
} ResponderID;224,7865
	   ASN1_INTEGER *version;version227,7898
	   ResponderID *responderID;responderID228,7925
	   ASN1_GENERALIZEDTIME *producedAt;producedAt229,7955
	   STACK_OF(230,7993
} ResponseData;232,8084
	   ResponseData *tbsResponseData;tbsResponseData235,8118
	   X509_ALGOR *signatureAlgorithm;signatureAlgorithm236,8153
	   ASN1_BIT_STRING *signature;signature237,8189
	   STACK_OF(238,8221
} BasicOCSPResponse;239,8248
	ASN1_GENERALIZEDTIME *revocationTime;revocationTime242,8287
	ASN1_ENUMERATED * revocationReason;243,8326
} RevokedInfo;244,8363
	int type;247,8396
	    ASN1_NULL *good;good249,8416
	    RevokedInfo *revoked;revoked250,8438
	    ASN1_NULL *unknown;unknown251,8465
	} d;252,8490
} CertStatus;253,8496
	   CertID *certID;certID256,8528
	   CertStatus *certStatus;certStatus257,8548
	   ASN1_GENERALIZEDTIME *thisUpdate;thisUpdate258,8576
	   ASN1_GENERALIZEDTIME *nextUpdate;nextUpdate259,8614
	   STACK_OF(260,8652
} SingleResponse;261,8700
    X509_NAME *issuer;issuer265,8737
    STACK_OF(266,8760
} ServiceLocator;267,8803

demos/easy_tls/test.c,103
#define L_PORT 4,71
#define C_PORT 5,91
test_process_init(24,415
test_errflush(30,582
main(37,686

demos/easy_tls/test.h,102
#define TLS_APP_PROCESS_INIT 6,132
#undef TLS_CUMULATE_ERRORS8,180
#define TLS_APP_ERRFLUSH 11,281

demos/easy_tls/easy-tls.h,563
#define HEADER_TLS_H11,231
typedef struct ssl_ctx_st SSL_CTX;14,274
#define TLS_INFO_SIZE 17,317
struct tls_create_ctx_args 29,793
    int client_p;31,823
    const char *certificate_file;certificate_file32,841
    const char *key_file;key_file33,875
    const char *ca_file;ca_file34,901
    int verify_depth;35,926
    int fail_unless_verified;36,948
    int export_p;37,978
struct tls_start_proxy_args44,1275
    int fd;46,1305
    int client_p;47,1317
    SSL_CTX *ctx;ctx48,1335
    pid_t *pid;pid49,1353
    int *infofd;infofd50,1369

demos/easy_tls/easy-tls.c,2004
static char const rcsid[rcsid75,3165
# define TLS_APP_PROCESS_INIT(135,4609
# define TLS_ERROR_BUFSIZ 139,4705
# define TLS_APP_ERRFLUSH 146,4862
tls_app_errflush(148,4917
# define DEBUG_MSG(157,5124
# define DEBUG_MSG2(158,5173
static int tls_loop_count 159,5232
static int tls_select_count 160,5263
# define DEBUG_MSG(162,5302
# define DEBUG_MSG2(163,5332
static int tls_child_p 170,5549
static void *tls_child_apparg;tls_child_apparg171,5577
tls_start_proxy_defaultargs(175,5638
tls_start_proxy(197,6052
static char errbuf[errbuf289,7934
static size_t errbuf_i 290,7972
tls_errflush(293,8013
tls_errprintf(313,8518
tls_openssl_errors(347,9251
static int tls_init_done 406,10837
tls_init(409,10879
tls_rand_seed_uniquely(427,11272
	pid_t pid;430,11316
	time_t time;431,11328
	void *stack;stack432,11342
tls_rand_seed(443,11512
	struct utsname uname;446,11547
	int uname_1;447,11570
	int uname_2;448,11584
	uid_t uid;449,11598
	uid_t euid;450,11610
	gid_t gid;451,11623
	gid_t egid;452,11635
static int tls_rand_seeded_p 467,11969
#define my_MIN_SEED_BYTES 469,12004
tls_rand_seed_from_file(471,12079
tls_rand_seed_from_memory(502,13013
struct tls_x509_name_string 518,13357
    char str[str519,13387
tls_get_x509_subject_name_oneline(523,13422
no_passphrase_callback(565,14590
verify_dont_fail_cb(572,14724
static DH *tls_dhe1024 tls_dhe1024593,15191
tls_set_dhe1024(596,15285
tls_create_ctx_defaultargs(635,16304
tls_create_ctx(651,16566
tls_socket_nonblocking(785,20361
max(805,20728
tls_sockets_select(811,20789
#define TUNNELBUFSIZE 866,22258
struct tunnelbuf 867,22290
    char buf[buf868,22309
    size_t len;869,22338
    size_t offset;870,22354
static void write_info(885,23114
tls_proxy(925,24114
tls_get_error(1076,28166
tls_connect_attempt(1108,28676
tls_accept_attempt(1122,29065
tls_write_attempt(1136,29449
tls_read_attempt(1158,30019
get_error(1179,30643
static int write_attempt(1200,31007
read_attempt(1222,31539

demos/pkcs12/pkread.c,17
int main(11,168

demos/pkcs12/pkwrite.c,17
int main(11,170

demos/smime/smenc.c,16
int main(6,114

demos/smime/smdec.c,16
int main(6,114

demos/smime/smsign.c,16
int main(6,114

demos/smime/smsign2.c,16
int main(6,138

demos/smime/smver.c,16
int main(6,119

demos/prime/prime.c,41
void callback(63,3264
int main(75,3453

demos/eay/loadrsa.c,34
void callback(9,245
main(22,420

demos/eay/base64.c,12
main(8,172

demos/eay/conn.c,17
int main(16,291

demos/tunala/tunala.h,935
#define _TUNALA_H18,904
#define HAVE_SELECT28,1142
#define HAVE_SOCKET31,1192
#define HAVE_UNISTD_H34,1244
#define HAVE_FCNTL_H37,1297
#define HAVE_LIMITS_H40,1350
#define HAVE_STRSTR44,1417
#define HAVE_STRTOUL47,1468
#define MAX_DATA_SIZE 84,2336
typedef struct _buffer_t 85,2364
	unsigned char data[data86,2391
	unsigned int used;87,2427
	unsigned long total_in,90,2570
	unsigned long total_in, total_out;90,2570
} buffer_t;91,2606
typedef struct _state_machine_t 160,5638
	SSL *ssl;ssl161,5672
	BIO *bio_intossl;bio_intossl162,5683
	BIO *bio_fromssl;bio_fromssl163,5702
	buffer_t clean_in,164,5721
	buffer_t clean_in, clean_out;164,5721
	buffer_t dirty_in,165,5752
	buffer_t dirty_in, dirty_out;165,5752
} state_machine_t;166,5783
	SM_CLEAN_IN,168,5817
	SM_CLEAN_IN, SM_CLEAN_OUT,168,5817
	SM_DIRTY_IN,169,5845
	SM_DIRTY_IN, SM_DIRTY_OUT169,5845
} sm_buffer_t;170,5872
#define int_strstr 210,7931

demos/tunala/breakage.c,58
int int_strtoul(3,21
char *int_strstr(int_strstr41,784

demos/tunala/ip.c,316
#define IP_LISTENER_BACKLOG 5,36
int ip_initialise(9,237
int ip_create_listener_split(21,423
int ip_create_connection_split(51,1234
static char all_local_ip[all_local_ip79,1967
int ip_parse_address(81,2020
int ip_create_listener(120,2981
int ip_create_connection(130,3174
int ip_accept_connection(140,3371

demos/tunala/sm.c,337
void state_machine_init(5,40
void state_machine_close(15,308
buffer_t *state_machine_get_buffer(state_machine_get_buffer34,806
SSL *state_machine_get_SSL(state_machine_get_SSL53,1177
int state_machine_set_SSL(58,1257
int state_machine_churn(82,2146
int state_machine_close_clean(116,3389
int state_machine_close_dirty(136,4101

demos/tunala/tunala.c,3135
typedef struct _tunala_item_t 17,603
	state_machine_t sm;20,777
	int dirty_read,24,957
	int dirty_read, dirty_send;24,957
	int clean_read,28,1159
	int clean_read, clean_send;28,1159
} tunala_item_t;29,1188
typedef struct _select_sets_t 36,1550
	int max;37,1582
	fd_set reads,38,1644
	fd_set reads, sends,38,1644
	fd_set reads, sends, excepts;38,1644
} select_sets_t;39,1703
typedef struct _tunala_selector_t 40,1720
	select_sets_t last_selected;41,1756
	select_sets_t next_select;42,1821
} tunala_selector_t;43,1881
typedef struct _tunala_world_t 48,2125
	int listen_fd;50,2220
	tunala_item_t *tunnels;tunnels52,2264
	unsigned int tunnels_used,54,2353
	unsigned int tunnels_used, tunnels_size;54,2353
	tunala_selector_t selector;56,2435
	SSL_CTX *ssl_ctx;ssl_ctx59,2596
	int server_mode;62,2717
} tunala_world_t;63,2735
static const char *def_proxyhost def_proxyhost91,4083
static const char *def_listenhost def_listenhost92,4135
static int def_max_tunnels 93,4189
static const char *def_cacert def_cacert94,4222
static const char *def_cert def_cert95,4260
static const char *def_key def_key96,4296
static const char *def_dcert def_dcert97,4331
static const char *def_dkey def_dkey98,4368
static const char *def_engine_id def_engine_id99,4404
static int def_server_mode 100,4445
static int def_flipped 101,4477
static const char *def_cipher_list def_cipher_list102,4505
static const char *def_dh_file def_dh_file103,4548
static const char *def_dh_special def_dh_special104,4587
static int def_tmp_rsa 105,4629
static int def_ctx_options 106,4657
static int def_verify_mode 107,4689
static unsigned int def_verify_depth 108,4721
static int def_out_state 109,4764
static unsigned int def_out_verify 110,4794
static int def_out_totals 111,4834
static int def_out_conns 112,4865
static const char *helpstring helpstring114,4896
static unsigned char dh512_p[dh512_p173,8543
static unsigned char dh512_g[dh512_g181,8912
static DH *get_dh512(get_dh512187,9061
static int usage(200,9367
static int err_str0(210,9603
static int err_str1(216,9689
static int parse_max_tunnels(223,9813
static int parse_server_mode(235,10097
static int parse_dh_special(247,10354
static int parse_verify_level(258,10646
static int parse_verify_depth(270,10921
static const char *io_stats_dirty io_stats_dirty283,11268
static const char *io_stats_clean io_stats_clean285,11358
int main(288,11449
static int ctx_set_cert(607,21468
static int ctx_set_dh(677,23203
static SSL_CTX *initialise_ssl_ctx(initialise_ssl_ctx730,24560
static void selector_sets_init(838,27462
static void selector_init(845,27593
#define SEL_EXCEPTS 851,27745
#define SEL_READS 852,27770
#define SEL_SENDS 853,27795
static void selector_add_raw_fd(854,27820
static void selector_add_listener(866,28142
static void selector_add_tunala(871,28265
static int selector_select(899,29210
static int selector_get_listener(912,29674
static int tunala_world_make_room(927,30042
static int tunala_world_new_item(950,30679
static void tunala_world_del_item(993,32073
static int tunala_item_io(1017,32840

demos/tunala/buffer.c,643
void buffer_init(5,40
void buffer_close(11,130
unsigned int buffer_used(18,296
unsigned int buffer_unused(20,359
int buffer_full(22,442
int buffer_notfull(24,523
int buffer_empty(26,606
int buffer_notempty(28,676
unsigned long buffer_total_in(30,748
unsigned long buffer_total_out(32,820
static unsigned int buffer_adddata(40,1178
static unsigned int buffer_tobuffer(54,1496
static unsigned int buffer_takedata(69,1822
int buffer_from_fd(88,2207
int buffer_to_fd(102,2496
static void int_ssl_check(120,2844
void buffer_from_SSL(151,3865
void buffer_to_SSL(165,4133
void buffer_from_BIO(179,4396
void buffer_to_BIO(191,4624

demos/tunala/cb.c,778
static FILE *fp_cb_ssl_info fp_cb_ssl_info6,113
static FILE *fp_cb_ssl_verify fp_cb_ssl_verify7,149
static unsigned int cb_ssl_verify_level 13,320
static int int_verify_depth 16,427
void cb_ssl_info(20,573
void cb_ssl_info_set_output(49,1449
static const char *int_reason_no_issuer int_reason_no_issuer54,1514
static const char *int_reason_not_yet int_reason_not_yet55,1596
static const char *int_reason_before int_reason_before56,1669
static const char *int_reason_expired int_reason_expired57,1753
static const char *int_reason_after int_reason_after58,1824
int cb_ssl_verify(61,1981
void cb_ssl_verify_set_output(116,3616
void cb_ssl_verify_set_depth(121,3685
void cb_ssl_verify_set_level(126,3780
RSA *cb_generate_tmp_rsa(cb_generate_tmp_rsa132,3880

demos/state_machine/state_machine.c,568
#define die_unless(89,3808
    SSL_CTX *pCtx;pCtx93,3862
    BIO *pbioRead;pbioRead94,3881
    BIO *pbioWrite;pbioWrite95,3900
    SSL *pSSL;pSSL96,3920
    } SSLStateMachine;97,3935
void SSLStateMachine_print_error(99,3959
SSLStateMachine *SSLStateMachine_new(SSLStateMachine_new113,4242
void SSLStateMachine_read_inject(145,5067
int SSLStateMachine_read_extract(157,5523
int SSLStateMachine_write_can_extract(203,6480
int SSLStateMachine_write_extract(214,6769
void SSLStateMachine_write_inject(224,7034
int OpenSocket(236,7490
int main(288,8421

demos/bio/saccept.c,84
#define CERT_FILE	18,374
BIO *in=in20,406
void close_up(22,421
int main(28,477

demos/bio/sconnect.c,17
int main(18,408

demos/selfsign.c,184
int main(13,265
#  define MS_CALLBACK 46,850
#  define MS_FAR 47,887
#  define MS_CALLBACK49,922
#  define MS_FAR50,944
static void MS_CALLBACK callback(53,969
int mkit(67,1158

demos/maurice/example3.c,243
#define STDIN 16,279
#define STDOUT 17,300
#define BUFLEN	18,321
#define INIT_VECTOR 19,344
#define ENCRYPT	20,376
#define DECRYPT 21,395
#define ALG	22,421
static const char *usage usage24,454
int main(28,546
void do_cipher(47,792

demos/maurice/example1.c,204
#define PUBFILE 26,480
#define PRIVFILE 27,509
#define STDIN 29,542
#define STDOUT 30,562
static const char *usage usage35,635
int main(37,689
void main_encrypt(59,939
void main_decrypt(127,2191

demos/maurice/loadkeys.h,31
#define LOADKEYS_H_SEEN11,197

demos/maurice/example2.c,111
#define PUBFILE 23,437
#define PRIVFILE 24,466
#define STDIN 25,498
#define STDOUT 26,518
int main(28,540

demos/maurice/example4.c,171
#define STDIN 16,279
#define STDOUT 17,300
#define BUFLEN	18,321
static const char *usage usage20,345
int main(25,444
void do_encode(44,660
void do_decode(78,1150

demos/maurice/loadkeys.c,81
EVP_PKEY * ReadPublicKey(25,478
EVP_PKEY *ReadPrivateKey(ReadPrivateKey54,909

demos/sign/sign.c,18
int main 77,3682

engines/e_aep.c,2858
typedef int pid_t;65,2866
#define getpid 69,2951
#define getpid 72,3055
#define AEP_LIB_NAME 97,3484
#define FAIL_TO_SW 98,3518
#define AEP_CMD_SO_PATH	165,5785
static const ENGINE_CMD_DEFN aep_cmd_defns[aep_cmd_defns166,5826
static RSA_METHOD aep_rsa 178,6099
static DSA_METHOD aep_dsa 199,6727
static DH_METHOD aep_dh 218,7291
static RAND_METHOD aep_random 234,7487
static AEP_CONNECTION_ENTRY aep_app_conn_table[aep_app_conn_table247,7674
static pid_t    recorded_pid 250,7795
static AEP_U8   rand_block[rand_block253,7845
static AEP_U32  rand_block_bytes 254,7888
static const char *engine_aep_id engine_aep_id258,7980
static const char *engine_aep_name engine_aep_name259,8022
static int max_key_len 261,8091
static int bind_aep(266,8229
static int bind_helper(343,10359
IMPLEMENT_DYNAMIC_CHECK_FN(351,10519
void ENGINE_load_aep(367,10762
static DSO *aep_dso aep_dso383,11235
static const char *AEP_LIBNAME AEP_LIBNAME388,11376
static const char *get_AEP_LIBNAME(get_AEP_LIBNAME389,11415
static void free_AEP_LIBNAME(395,11516
static long set_AEP_LIBNAME(401,11631
static const char *AEP_F1 AEP_F1407,11765
static const char *AEP_F2 AEP_F2408,11810
static const char *AEP_F3 AEP_F3410,11873
static const char *AEP_F4 AEP_F4412,11928
static const char *AEP_F5 AEP_F5413,11975
static const char *AEP_F6 AEP_F6414,12024
static const char *AEP_F7 AEP_F7415,12077
static const char *AEP_F8 AEP_F8416,12130
static t_AEP_OpenConnection    *p_AEP_OpenConnection p_AEP_OpenConnection420,12289
static t_AEP_CloseConnection   *p_AEP_CloseConnection p_AEP_CloseConnection421,12351
static t_AEP_ModExp            *p_AEP_ModExp p_AEP_ModExp422,12413
static t_AEP_ModExpCrt         *p_AEP_ModExpCrt p_AEP_ModExpCrt423,12475
static t_AEP_GenRandom         *p_AEP_GenRandom p_AEP_GenRandom425,12552
static t_AEP_Initialize        *p_AEP_Initialize p_AEP_Initialize427,12621
static t_AEP_Finalize          *p_AEP_Finalize p_AEP_Finalize428,12683
static t_AEP_SetBNCallBacks    *p_AEP_SetBNCallBacks p_AEP_SetBNCallBacks429,12745
static int aep_init(432,12844
static int aep_destroy(515,14819
static int aep_finish(522,14921
static int aep_ctrl(575,15900
static int aep_mod_exp(601,16414
static AEP_RV aep_mod_exp_crt(650,17579
static int aep_rand(690,18548
static int aep_rand_status(761,20099
static int aep_rsa_mod_exp(768,20178
static int aep_dsa_mod_exp(814,21066
static int aep_mod_exp_dsa(834,21542
static int aep_mod_exp_mont(844,21821
static int aep_mod_exp_dh(853,22093
static AEP_RV aep_get_connection(861,22282
static AEP_RV aep_return_connection(968,24809
static AEP_RV aep_close_connection(989,25255
static AEP_RV aep_close_all_connections(1015,25875
static AEP_RV GetBigNumSize(1048,26692
static AEP_RV MakeAEPBigNum(1066,27081
static AEP_RV ConvertAEPBigNum(1100,27825

engines/e_cswift.c,2064
#define CSWIFT_LIB_NAME 98,3882
#define DECIMAL_SIZE(101,3949
#define CSWIFT_CMD_SO_PATH	148,5615
static const ENGINE_CMD_DEFN cswift_cmd_defns[cswift_cmd_defns149,5659
static RSA_METHOD cswift_rsa 159,5934
static DSA_METHOD cswift_dsa 180,6204
static DH_METHOD cswift_dh 199,6596
static RAND_METHOD cswift_random 213,6731
static const char *engine_cswift_id engine_cswift_id226,6964
static const char *engine_cswift_name engine_cswift_name227,7012
static int bind_helper(231,7200
static ENGINE *engine_cswift(engine_cswift286,8880
void ENGINE_load_cswift(299,9055
static DSO *cswift_dso cswift_dso315,9542
t_swAcquireAccContext *p_CSwift_AcquireAccContext p_CSwift_AcquireAccContext319,9678
t_swAttachKeyParam *p_CSwift_AttachKeyParam p_CSwift_AttachKeyParam320,9736
t_swSimpleRequest *p_CSwift_SimpleRequest p_CSwift_SimpleRequest321,9788
t_swReleaseAccContext *p_CSwift_ReleaseAccContext p_CSwift_ReleaseAccContext322,9838
static const char *CSWIFT_LIBNAME CSWIFT_LIBNAME325,9931
static const char *get_CSWIFT_LIBNAME(get_CSWIFT_LIBNAME326,9973
static void free_CSWIFT_LIBNAME(332,10085
static long set_CSWIFT_LIBNAME(338,10212
static const char *CSWIFT_F1 CSWIFT_F1343,10356
static const char *CSWIFT_F2 CSWIFT_F2344,10410
static const char *CSWIFT_F3 CSWIFT_F3345,10461
static const char *CSWIFT_F4 CSWIFT_F4346,10511
static int get_context(355,10888
static void release_context(366,11125
static int cswift_destroy(372,11289
static int cswift_init(380,11434
static int cswift_finish(440,12965
static int cswift_ctrl(461,13407
static int cswift_mod_exp(486,13964
int cswift_bn_32copy(584,16796
static int cswift_mod_exp_crt(609,17221
static int cswift_rsa_mod_exp(742,21028
static int cswift_mod_exp_mont(780,21980
static DSA_SIG *cswift_dsa_sign(cswift_dsa_sign808,22614
static int cswift_dsa_verify(917,25632
static int cswift_mod_exp_dh(1032,28860
static int cswift_rand_bytes(1041,29085
static int cswift_rand_status(1107,30963
static int bind_fn(1116,31151
IMPLEMENT_DYNAMIC_CHECK_FN(1124,31313

engines/e_aep_err.c,461
#define ERR_FUNC(68,2964
#define ERR_REASON(69,3006
static ERR_STRING_DATA AEPHK_str_functs[AEPHK_str_functs71,3055
static ERR_STRING_DATA AEPHK_str_reasons[AEPHK_str_reasons84,3509
static ERR_STRING_DATA AEPHK_lib_name[AEPHK_lib_name109,4712
static int AEPHK_lib_error_code=117,4806
static int AEPHK_error_init=118,4841
static void ERR_load_AEPHK_strings(120,4873
static void ERR_unload_AEPHK_strings(140,5339
static void ERR_AEPHK_error(156,5670

engines/e_nuron_err.c,460
#define ERR_FUNC(68,2968
#define ERR_REASON(69,3010
static ERR_STRING_DATA NURON_str_functs[NURON_str_functs71,3059
static ERR_STRING_DATA NURON_str_reasons[NURON_str_reasons80,3313
static ERR_STRING_DATA NURON_lib_name[NURON_lib_name94,3794
static int NURON_lib_error_code=102,3888
static int NURON_error_init=103,3923
static void ERR_load_NURON_strings(105,3955
static void ERR_unload_NURON_strings(125,4421
static void ERR_NURON_error(141,4752

engines/e_cswift_err.h,820
#define HEADER_CSWIFT_ERR_H56,2658
#define CSWIFTerr(69,3073
#define CSWIFT_F_CSWIFT_CTRL	74,3208
#define CSWIFT_F_CSWIFT_DSA_SIGN	75,3245
#define CSWIFT_F_CSWIFT_DSA_VERIFY	76,3285
#define CSWIFT_F_CSWIFT_FINISH	77,3327
#define CSWIFT_F_CSWIFT_INIT	78,3366
#define CSWIFT_F_CSWIFT_MOD_EXP	79,3403
#define CSWIFT_F_CSWIFT_MOD_EXP_CRT	80,3443
#define CSWIFT_F_CSWIFT_RAND_BYTES	81,3486
#define CSWIFT_F_CSWIFT_RSA_MOD_EXP	82,3528
#define CSWIFT_R_ALREADY_LOADED	85,3592
#define CSWIFT_R_BAD_KEY_SIZE	86,3632
#define CSWIFT_R_BN_CTX_FULL	87,3670
#define CSWIFT_R_BN_EXPAND_FAIL	88,3707
#define CSWIFT_R_CTRL_COMMAND_NOT_IMPLEMENTED	89,3747
#define CSWIFT_R_MISSING_KEY_COMPONENTS	90,3799
#define CSWIFT_R_NOT_LOADED	91,3846
#define CSWIFT_R_REQUEST_FAILED	92,3882
#define CSWIFT_R_UNIT_FAILURE	93,3922

engines/e_ubsec_err.h,949
#define HEADER_UBSEC_ERR_H56,2657
#define UBSECerr(69,3068
#define UBSEC_F_UBSEC_CTRL	74,3200
#define UBSEC_F_UBSEC_DH_COMPUTE_KEY	75,3235
#define UBSEC_F_UBSEC_DH_GENERATE_KEY	76,3279
#define UBSEC_F_UBSEC_DSA_DO_SIGN	77,3324
#define UBSEC_F_UBSEC_DSA_VERIFY	78,3365
#define UBSEC_F_UBSEC_FINISH	79,3405
#define UBSEC_F_UBSEC_INIT	80,3442
#define UBSEC_F_UBSEC_MOD_EXP	81,3477
#define UBSEC_F_UBSEC_MOD_EXP_CRT	82,3515
#define UBSEC_F_UBSEC_RAND_BYTES	83,3556
#define UBSEC_F_UBSEC_RSA_MOD_EXP	84,3596
#define UBSEC_F_UBSEC_RSA_MOD_EXP_CRT	85,3637
#define UBSEC_R_ALREADY_LOADED	88,3703
#define UBSEC_R_BN_EXPAND_FAIL	89,3742
#define UBSEC_R_CTRL_COMMAND_NOT_IMPLEMENTED	90,3781
#define UBSEC_R_DSO_FAILURE	91,3832
#define UBSEC_R_MISSING_KEY_COMPONENTS	92,3868
#define UBSEC_R_NOT_LOADED	93,3914
#define UBSEC_R_REQUEST_FAILED	94,3949
#define UBSEC_R_SIZE_TOO_LARGE_OR_TOO_SMALL	95,3988
#define UBSEC_R_UNIT_FAILURE	96,4038

engines/e_ubsec.c,3423
#define UBSEC_LIB_NAME 87,3265
#define FAIL_TO_SOFTWARE 90,3329
#define UBSEC_CMD_SO_PATH	132,5011
static const ENGINE_CMD_DEFN ubsec_cmd_defns[ubsec_cmd_defns133,5054
static RSA_METHOD ubsec_rsa 143,5326
static DSA_METHOD ubsec_dsa 164,5587
static DH_METHOD ubsec_dh 183,6059
static const char *engine_ubsec_id engine_ubsec_id198,6265
static const char *engine_ubsec_name engine_ubsec_name199,6311
static int bind_helper(203,6491
static ENGINE *engine_ubsec(engine_ubsec261,8211
void ENGINE_load_ubsec(274,8385
static DSO *ubsec_dso ubsec_dso291,8865
static t_UBSEC_ubsec_bytes_to_bits *p_UBSEC_ubsec_bytes_to_bits p_UBSEC_ubsec_bytes_to_bits296,9001
static t_UBSEC_ubsec_bits_to_bytes *p_UBSEC_ubsec_bits_to_bytes p_UBSEC_ubsec_bits_to_bytes297,9073
static t_UBSEC_ubsec_open *p_UBSEC_ubsec_open p_UBSEC_ubsec_open298,9145
static t_UBSEC_ubsec_close *p_UBSEC_ubsec_close p_UBSEC_ubsec_close299,9199
	*p_UBSEC_diffie_hellman_generate_ioctl p_UBSEC_diffie_hellman_generate_ioctl302,9323
static t_UBSEC_diffie_hellman_agree_ioctl *p_UBSEC_diffie_hellman_agree_ioctl p_UBSEC_diffie_hellman_agree_ioctl303,9371
static t_UBSEC_rsa_mod_exp_ioctl *p_UBSEC_rsa_mod_exp_ioctl p_UBSEC_rsa_mod_exp_ioctl306,9487
static t_UBSEC_rsa_mod_exp_crt_ioctl *p_UBSEC_rsa_mod_exp_crt_ioctl p_UBSEC_rsa_mod_exp_crt_ioctl307,9555
static t_UBSEC_dsa_sign_ioctl *p_UBSEC_dsa_sign_ioctl p_UBSEC_dsa_sign_ioctl310,9661
static t_UBSEC_dsa_verify_ioctl *p_UBSEC_dsa_verify_ioctl p_UBSEC_dsa_verify_ioctl311,9723
static t_UBSEC_math_accelerate_ioctl *p_UBSEC_math_accelerate_ioctl p_UBSEC_math_accelerate_ioctl313,9796
static t_UBSEC_rng_ioctl *p_UBSEC_rng_ioctl p_UBSEC_rng_ioctl314,9872
static t_UBSEC_max_key_len_ioctl *p_UBSEC_max_key_len_ioctl p_UBSEC_max_key_len_ioctl315,9924
static int max_key_len 317,9993
static const char *UBSEC_LIBNAME UBSEC_LIBNAME324,10154
static const char *get_UBSEC_LIBNAME(get_UBSEC_LIBNAME325,10195
static void free_UBSEC_LIBNAME(331,10304
static long set_UBSEC_LIBNAME(337,10427
static const char *UBSEC_F1 UBSEC_F1342,10568
static const char *UBSEC_F2 UBSEC_F2343,10621
static const char *UBSEC_F3 UBSEC_F3344,10674
static const char *UBSEC_F4 UBSEC_F4345,10718
static const char *UBSEC_F5 UBSEC_F5347,10785
static const char *UBSEC_F6 UBSEC_F6348,10848
static const char *UBSEC_F7 UBSEC_F7351,10944
static const char *UBSEC_F8 UBSEC_F8352,10995
static const char *UBSEC_F9 UBSEC_F9355,11086
static const char *UBSEC_F10 UBSEC_F10356,11134
static const char *UBSEC_F11 UBSEC_F11358,11192
static const char *UBSEC_F12 UBSEC_F12359,11248
static const char *UBSEC_F13 UBSEC_F13360,11292
static int ubsec_destroy(363,11415
static int ubsec_init(371,11557
static int ubsec_finish(496,15179
static int ubsec_ctrl(532,16031
static int ubsec_mod_exp(556,16550
static int ubsec_rsa_mod_exp(604,17773
static int ubsec_mod_exp_crt(628,18363
static int ubsec_dsa_mod_exp(676,19699
static int ubsec_mod_exp_dsa(696,20182
static int ubsec_mod_exp_mont(710,20476
static int ubsec_mod_exp_dh(732,21082
static DSA_SIG *ubsec_dsa_do_sign(ubsec_dsa_do_sign741,21300
static int ubsec_dsa_verify(818,23361
static int ubsec_dh_compute_key(875,24948
static int ubsec_dh_generate_key(916,26418
static int ubsec_rand_bytes(1001,29318
static int ubsec_rand_status(1047,30640
static int bind_fn(1056,30835
IMPLEMENT_DYNAMIC_CHECK_FN(1064,30989

engines/e_gmp_err.h,271
#define HEADER_GMP_ERR_H56,2660
#define GMPerr(69,3063
#define GMP_F_E_GMP_CTRL	74,3189
#define GMP_F_E_GMP_RSA_MOD_EXP	75,3222
#define GMP_R_CTRL_COMMAND_NOT_IMPLEMENTED	78,3283
#define GMP_R_KEY_CONTEXT_ERROR	79,3332
#define GMP_R_MISSING_KEY_COMPONENTS	80,3372

engines/e_ubsec_err.c,461
#define ERR_FUNC(68,2968
#define ERR_REASON(69,3010
static ERR_STRING_DATA UBSEC_str_functs[UBSEC_str_functs71,3059
static ERR_STRING_DATA UBSEC_str_reasons[UBSEC_str_reasons88,3811
static ERR_STRING_DATA UBSEC_lib_name[UBSEC_lib_name105,4494
static int UBSEC_lib_error_code=113,4588
static int UBSEC_error_init=114,4623
static void ERR_load_UBSEC_strings(116,4655
static void ERR_unload_UBSEC_strings(136,5121
static void ERR_UBSEC_error(152,5452

engines/e_sureware_err.h,1122
#define HEADER_SUREWARE_ERR_H56,2660
#define SUREWAREerr(69,3083
#define SUREWARE_F_SUREWAREHK_CTRL	74,3224
#define SUREWARE_F_SUREWAREHK_DH_EX_FREE	75,3266
#define SUREWARE_F_SUREWAREHK_DSA_DO_SIGN	76,3313
#define SUREWARE_F_SUREWAREHK_EX_FREE	77,3361
#define SUREWARE_F_SUREWAREHK_FINISH	78,3406
#define SUREWARE_F_SUREWAREHK_INIT	79,3450
#define SUREWARE_F_SUREWAREHK_LOAD_PRIVKEY	80,3492
#define SUREWARE_F_SUREWAREHK_LOAD_PUBKEY	81,3541
#define SUREWARE_F_SUREWAREHK_MODEXP	82,3589
#define SUREWARE_F_SUREWAREHK_RAND_BYTES	83,3633
#define SUREWARE_F_SUREWAREHK_RAND_SEED	84,3680
#define SUREWARE_F_SUREWAREHK_RSA_PRIV_DEC	85,3727
#define SUREWARE_F_SUREWAREHK_RSA_SIGN	86,3776
#define SUREWARE_F_SUREWARE_LOAD_PUBLIC	87,3822
#define SUREWARE_R_BIO_WAS_FREED	90,3890
#define SUREWARE_R_MISSING_KEY_COMPONENTS	91,3930
#define SUREWARE_R_PADDING_CHECK_FAILED	92,3978
#define SUREWARE_R_REQUEST_FAILED	93,4025
#define SUREWARE_R_REQUEST_FALLBACK	94,4066
#define SUREWARE_R_SIZE_TOO_LARGE_OR_TOO_SMALL	95,4109
#define SUREWARE_R_UNIT_FAILURE	96,4162
#define SUREWARE_R_UNKNOWN_PADDING_TYPE	97,4202

engines/e_chil.c,4100
#define HWCRHK_LIB_NAME 93,3671
#define HWCRHK_CMD_SO_PATH	150,5782
#define HWCRHK_CMD_FORK_CHECK	151,5826
#define HWCRHK_CMD_THREAD_LOCKING	152,5879
#define HWCRHK_CMD_SET_USER_INTERFACE 153,5935
#define HWCRHK_CMD_SET_CALLBACK_DATA 154,5997
static const ENGINE_CMD_DEFN hwcrhk_cmd_defns[hwcrhk_cmd_defns155,6059
static RSA_METHOD hwcrhk_rsa 181,6867
static DH_METHOD hwcrhk_dh 202,7141
static RAND_METHOD hwcrhk_rand 216,7269
static const char *engine_hwcrhk_id engine_hwcrhk_id228,7465
static const char *engine_hwcrhk_name engine_hwcrhk_name229,7511
static const char *engine_hwcrhk_id_alt engine_hwcrhk_id_alt232,7691
struct HWCryptoHook_MutexValue240,7958
	int lockid;242,7992
struct HWCryptoHook_PassphraseContextValue248,8144
        UI_METHOD *ui_method;ui_method250,8190
	void *callback_data;callback_data251,8220
struct HWCryptoHook_CallerContextValue257,8373
	pem_password_cb *password_callback;password_callback259,8415
        UI_METHOD *ui_method;ui_method261,8559
	void *callback_data;callback_data262,8589
#define BN2MPI(267,8748
#define MPI2BN(269,8850
static BIO *logstream logstream272,8954
static int disable_mutex_callbacks 273,8984
static HWCryptoHook_CallerContext password_context 288,10022
static HWCryptoHook_InitInfo hwcrhk_globals 291,10146
static int bind_helper(335,11709
static ENGINE *engine_chil(engine_chil389,13445
void ENGINE_load_chil(402,13618
static DSO *hwcrhk_dso hwcrhk_dso418,14102
static HWCryptoHook_ContextHandle hwcrhk_context 419,14133
static int hndidx_rsa 421,14210
static HWCryptoHook_Init_t *p_hwcrhk_Init p_hwcrhk_Init426,14402
static HWCryptoHook_Finish_t *p_hwcrhk_Finish p_hwcrhk_Finish427,14452
static HWCryptoHook_ModExp_t *p_hwcrhk_ModExp p_hwcrhk_ModExp428,14506
static HWCryptoHook_RSA_t *p_hwcrhk_RSA p_hwcrhk_RSA430,14583
static HWCryptoHook_RandomBytes_t *p_hwcrhk_RandomBytes p_hwcrhk_RandomBytes432,14638
static HWCryptoHook_RSALoadKey_t *p_hwcrhk_RSALoadKey p_hwcrhk_RSALoadKey434,14725
static HWCryptoHook_RSAGetPublicKey_t *p_hwcrhk_RSAGetPublicKey p_hwcrhk_RSAGetPublicKey435,14787
static HWCryptoHook_RSAUnloadKey_t *p_hwcrhk_RSAUnloadKey p_hwcrhk_RSAUnloadKey436,14859
static HWCryptoHook_ModExpCRT_t *p_hwcrhk_ModExpCRT p_hwcrhk_ModExpCRT438,14932
static const char *HWCRHK_LIBNAME HWCRHK_LIBNAME441,15027
static void free_HWCRHK_LIBNAME(442,15069
static const char *get_HWCRHK_LIBNAME(get_HWCRHK_LIBNAME448,15196
static long set_HWCRHK_LIBNAME(454,15311
static const char *n_hwcrhk_Init n_hwcrhk_Init459,15455
static const char *n_hwcrhk_Finish n_hwcrhk_Finish460,15511
static const char *n_hwcrhk_ModExp n_hwcrhk_ModExp461,15571
static const char *n_hwcrhk_RSA n_hwcrhk_RSA463,15654
static const char *n_hwcrhk_RandomBytes n_hwcrhk_RandomBytes465,15715
static const char *n_hwcrhk_RSALoadKey n_hwcrhk_RSALoadKey467,15808
static const char *n_hwcrhk_RSAGetPublicKey n_hwcrhk_RSAGetPublicKey468,15876
static const char *n_hwcrhk_RSAUnloadKey n_hwcrhk_RSAUnloadKey469,15954
static const char *n_hwcrhk_ModExpCRT n_hwcrhk_ModExpCRT471,16033
static int get_context(479,16422
static void release_context(496,16804
static int hwcrhk_destroy(502,16957
static int hwcrhk_init(510,17102
static int hwcrhk_finish(621,20246
static int hwcrhk_ctrl(656,20968
static EVP_PKEY *hwcrhk_load_privkey(hwcrhk_load_privkey748,23543
static EVP_PKEY *hwcrhk_load_pubkey(hwcrhk_load_pubkey851,25870
static int hwcrhk_mod_exp(895,26716
static int hwcrhk_rsa_mod_exp(952,28130
static int hwcrhk_mod_exp_mont(1071,31016
static int hwcrhk_rsa_finish(1077,31192
static int hwcrhk_mod_exp_dh(1095,31607
static int hwcrhk_rand_bytes(1104,31832
static int hwcrhk_rand_status(1144,32689
static int hwcrhk_mutex_init(1153,32886
static int hwcrhk_mutex_lock(1162,33097
static void hwcrhk_mutex_unlock(1168,33196
static void hwcrhk_mutex_destroy(1173,33290
static int hwcrhk_get_pass(1178,33393
static int hwcrhk_insert_card(1255,35540
static void hwcrhk_log_message(1325,37154
static int bind_fn(1342,37559
IMPLEMENT_DYNAMIC_CHECK_FN(1351,37767

engines/e_gmp_err.c,436
#define ERR_FUNC(68,2964
#define ERR_REASON(69,3006
static ERR_STRING_DATA GMP_str_functs[GMP_str_functs71,3055
static ERR_STRING_DATA GMP_str_reasons[GMP_str_reasons78,3215
static ERR_STRING_DATA GMP_lib_name[GMP_lib_name89,3516
static int GMP_lib_error_code=97,3606
static int GMP_error_init=98,3639
static void ERR_load_GMP_strings(100,3669
static void ERR_unload_GMP_strings(120,4109
static void ERR_GMP_error(136,4422

engines/e_cswift_err.c,472
#define ERR_FUNC(68,2970
#define ERR_REASON(69,3012
static ERR_STRING_DATA CSWIFT_str_functs[CSWIFT_str_functs71,3061
static ERR_STRING_DATA CSWIFT_str_reasons[CSWIFT_str_reasons85,3633
static ERR_STRING_DATA CSWIFT_lib_name[CSWIFT_lib_name102,4298
static int CSWIFT_lib_error_code=110,4394
static int CSWIFT_error_init=111,4430
static void ERR_load_CSWIFT_strings(113,4463
static void ERR_unload_CSWIFT_strings(133,4942
static void ERR_CSWIFT_error(149,5282

engines/e_padlock.c,2700
#    define DYNAMIC_ENGINE86,3433
#    define DYNAMIC_ENGINE90,3547
#undef COMPILE_HW_PADLOCK102,3919
#  define COMPILE_HW_PADLOCK106,4121
void ENGINE_load_padlock 115,4271
#  define alloca 136,4722
#  define alloca(140,4795
static RAND_METHOD padlock_rand;149,4988
static const char *padlock_id padlock_id157,5184
static char padlock_name[padlock_name158,5227
static int padlock_use_ace 161,5284
static int padlock_use_rng 162,5351
static int padlock_aes_align_required 164,5436
padlock_bind_helper(171,5599
ENGINE_padlock(206,6479
padlock_init(226,6711
padlock_bind_fn(236,6921
IMPLEMENT_DYNAMIC_CHECK_FN(249,7089
#define AES_BLOCK_SIZE	257,7295
#define AES_KEY_SIZE_128	258,7322
#define AES_KEY_SIZE_192	259,7350
#define AES_KEY_SIZE_256	260,7378
struct padlock_cipher_data269,7649
	unsigned char iv[iv271,7678
	union {	unsigned int pad[pad272,7741
			int rounds:rounds274,7782
			int dgst:dgst275,7799
			int align:align276,7830
			int ciphr:ciphr277,7862
			unsigned int keygen:keygen278,7894
			int interm:interm279,7920
			unsigned int encdec:encdec280,7937
			int ksize:ksize281,7963
		} b;282,7979
	} cword;283,7986
	AES_KEY ks;284,8016
static volatile struct padlock_cipher_data *padlock_saved_context;padlock_saved_context293,8282
padlock_insn_cpuid_available(317,9165
padlock_available(344,9730
padlock_bswapl(389,10860
padlock_reload_key(405,11211
padlock_verify_context(421,11708
#define PADLOCK_XCRYPT_ASM(443,12181
PADLOCK_XCRYPT_ASM(460,12685
padlock_memcpy(492,13897
#define REP_XCRYPT(511,14389
#define PADLOCK_XCRYPT_ASM(521,14624
PADLOCK_XCRYPT_ASM(533,14897
padlock_reload_key(545,15235
padlock_verify_context(549,15312
padlock_available(564,15529
padlock_bswapl(613,16164
#define padlock_memcpy(631,16447
#define NID_aes_128_cfb	638,16659
#define NID_aes_128_ofb	642,16773
#define NID_aes_192_cfb	646,16887
#define NID_aes_192_ofb	650,17001
#define NID_aes_256_cfb	654,17115
#define NID_aes_256_ofb	658,17229
static int padlock_cipher_nids[padlock_cipher_nids662,17313
static int padlock_cipher_nids_num 678,17571
#define NEAREST_ALIGNED(687,17952
#define ALIGNED_CIPHER_DATA(689,18057
#define EVP_CIPHER_block_size_ECB	692,18160
#define EVP_CIPHER_block_size_CBC	693,18209
#define EVP_CIPHER_block_size_OFB	694,18258
#define EVP_CIPHER_block_size_CFB	695,18294
#define	DECLARE_AES_EVP(699,18441
padlock_ciphers 732,19252
padlock_aes_init_key 792,20612
padlock_aes_cipher_omnivorous(862,22575
# define PADLOCK_CHUNK	904,23643
padlock_aes_cipher(913,23959
padlock_rand_bytes(1182,30953
padlock_rand_status(1213,31835
static RAND_METHOD padlock_rand 1219,31918
int bind_engine(1233,32296

engines/e_nuron.c,1299
#define NURON_LIB_NAME 79,3164
static const char *NURON_LIBNAME NURON_LIBNAME82,3228
static const char *get_NURON_LIBNAME(get_NURON_LIBNAME83,3269
static void free_NURON_LIBNAME(89,3381
static long set_NURON_LIBNAME(95,3504
static const char *NURON_F1 NURON_F1100,3645
#define NURON_CMD_SO_PATH	103,3760
static const ENGINE_CMD_DEFN nuron_cmd_defns[nuron_cmd_defns104,3803
typedef int tfnModExp(112,3997
static tfnModExp *pfnModExp pfnModExp113,4079
static DSO *pvDSOHandle pvDSOHandle115,4116
static int nuron_destroy(117,4149
static int nuron_init(124,4255
static int nuron_finish(150,4760
static int nuron_ctrl(168,5072
static int nuron_mod_exp(192,5592
static int nuron_rsa_mod_exp(204,5843
static int nuron_dsa_mod_exp(218,6494
static int nuron_mod_exp_dsa(242,6996
static int nuron_mod_exp_mont(252,7290
static int nuron_mod_exp_dh(261,7574
static RSA_METHOD nuron_rsa 270,7792
static DSA_METHOD nuron_dsa 290,7995
static DH_METHOD nuron_dh 308,8363
static const char *engine_nuron_id engine_nuron_id323,8536
static const char *engine_nuron_name engine_nuron_name324,8582
static int bind_helper(328,8762
static ENGINE *engine_nuron(engine_nuron394,10689
void ENGINE_load_nuron(407,10863
static int bind_fn(421,11198
IMPLEMENT_DYNAMIC_CHECK_FN(429,11359

engines/e_sureware_err.c,494
#define ERR_FUNC(68,2974
#define ERR_REASON(69,3016
static ERR_STRING_DATA SUREWARE_str_functs[SUREWARE_str_functs71,3065
static ERR_STRING_DATA SUREWARE_str_reasons[SUREWARE_str_reasons90,4080
static ERR_STRING_DATA SUREWARE_lib_name[SUREWARE_lib_name106,4718
static int SUREWARE_lib_error_code=114,4818
static int SUREWARE_error_init=115,4856
static void ERR_load_SUREWARE_strings(117,4891
static void ERR_unload_SUREWARE_strings(137,5396
static void ERR_SUREWARE_error(153,5754

engines/e_atalla_err.c,471
#define ERR_FUNC(68,2970
#define ERR_REASON(69,3012
static ERR_STRING_DATA ATALLA_str_functs[ATALLA_str_functs71,3061
static ERR_STRING_DATA ATALLA_str_reasons[ATALLA_str_reasons81,3391
static ERR_STRING_DATA ATALLA_lib_name[ATALLA_lib_name97,3997
static int ATALLA_lib_error_code=105,4093
static int ATALLA_error_init=106,4129
static void ERR_load_ATALLA_strings(108,4162
static void ERR_unload_ATALLA_strings(128,4641
static void ERR_ATALLA_error(144,4981

engines/e_chil_err.c,472
#define ERR_FUNC(68,2966
#define ERR_REASON(69,3008
static ERR_STRING_DATA HWCRHK_str_functs[HWCRHK_str_functs71,3057
static ERR_STRING_DATA HWCRHK_str_reasons[HWCRHK_str_reasons86,3696
static ERR_STRING_DATA HWCRHK_lib_name[HWCRHK_lib_name108,4684
static int HWCRHK_lib_error_code=116,4780
static int HWCRHK_error_init=117,4816
static void ERR_load_HWCRHK_strings(119,4849
static void ERR_unload_HWCRHK_strings(139,5328
static void ERR_HWCRHK_error(155,5668

engines/e_capi_err.c,450
#define ERR_FUNC(68,2966
#define ERR_REASON(69,3008
static ERR_STRING_DATA CAPI_str_functs[CAPI_str_functs71,3057
static ERR_STRING_DATA CAPI_str_reasons[CAPI_str_reasons95,4175
static ERR_STRING_DATA CAPI_lib_name[CAPI_lib_name132,6357
static int CAPI_lib_error_code=140,6449
static int CAPI_error_init=141,6483
static void ERR_load_CAPI_strings(143,6514
static void ERR_unload_CAPI_strings(163,6967
static void ERR_CAPI_error(179,7289

engines/e_atalla.c,1674
#define ATALLA_LIB_NAME 85,3223
#define ATALLA_CMD_SO_PATH	124,4595
static const ENGINE_CMD_DEFN atalla_cmd_defns[atalla_cmd_defns125,4639
static RSA_METHOD atalla_rsa 135,4913
static DSA_METHOD atalla_dsa 156,5178
static DH_METHOD atalla_dh 175,5607
static const char *engine_atalla_id engine_atalla_id190,5783
static const char *engine_atalla_name engine_atalla_name191,5831
static int bind_helper(195,6014
static ENGINE *engine_atalla(engine_atalla261,7987
void ENGINE_load_atalla(274,8162
static DSO *atalla_dso atalla_dso290,8644
static tfnASI_GetHardwareConfig *p_Atalla_GetHardwareConfig p_Atalla_GetHardwareConfig294,8780
static tfnASI_RSAPrivateKeyOpFn *p_Atalla_RSAPrivateKeyOpFn p_Atalla_RSAPrivateKeyOpFn295,8848
static tfnASI_GetPerformanceStatistics *p_Atalla_GetPerformanceStatistics p_Atalla_GetPerformanceStatistics296,8916
static const char *ATALLA_LIBNAME ATALLA_LIBNAME306,9576
static const char *get_ATALLA_LIBNAME(get_ATALLA_LIBNAME307,9618
static void free_ATALLA_LIBNAME(313,9733
static long set_ATALLA_LIBNAME(319,9863
static const char *ATALLA_F1 ATALLA_F1324,10007
static const char *ATALLA_F2 ATALLA_F2325,10063
static const char *ATALLA_F3 ATALLA_F3326,10119
static int atalla_destroy(329,10248
static int atalla_init(340,10606
static int atalla_finish(400,12461
static int atalla_ctrl(420,12881
static int atalla_mod_exp(444,13415
static int atalla_rsa_mod_exp(516,15634
static int atalla_dsa_mod_exp(544,16558
static int atalla_mod_exp_dsa(564,17044
static int atalla_mod_exp_mont(574,17328
static int atalla_mod_exp_dh(583,17607
static int bind_fn(594,17939
IMPLEMENT_DYNAMIC_CHECK_FN(602,18094

engines/ccgost/gost_params.c,687
R3410_params R3410_paramset[R3410_paramset14,736
{NID_id_GostR3410_94_CryptoPro_C_ParamSet,NID_id_GostR3410_94_CryptoPro_C_ParamSet46,2350
{NID_id_GostR3410_94_CryptoPro_D_ParamSet,NID_id_GostR3410_94_CryptoPro_D_ParamSet62,3135
{NID_id_GostR3410_94_CryptoPro_XchA_ParamSet,NID_id_GostR3410_94_CryptoPro_XchA_ParamSet79,3920
{NID_id_GostR3410_94_CryptoPro_XchB_ParamSet,NID_id_GostR3410_94_CryptoPro_XchB_ParamSet93,4702
{NID_id_GostR3410_94_CryptoPro_XchC_ParamSet,NID_id_GostR3410_94_CryptoPro_XchC_ParamSet107,5483
{NID_undef,NID_undef123,6266
{NID_undef,NULL,123,6266
{NID_undef,NULL, NULL,123,6266
R3410_2001_params R3410_2001_paramset[R3410_2001_paramset126,6300

engines/ccgost/gost_lcl.h,2818
#define GOST_TOOLS_H2,21
#define GOST_PARAM_CRYPT_PARAMS 22,935
#define GOST_PARAM_MAX 23,969
#define GOST_CTRL_CRYPT_PARAMS 24,994
#define param_ctrl_string 39,1616
#define EVP_PKEY_CTRL_GOST_PARAMSET 40,1653
#define key_ctrl_string 42,1736
#define hexkey_ctrl_string 43,1766
#define EVP_PKEY_CTRL_GOST_MAC_HEXKEY 44,1802
	struct gost_pmeth_data 46,1898
   	    int sign_param_nid;47,1924
		EVP_MD *md;md48,2003
		unsigned char *shared_ukm;shared_ukm49,2017
		int peer_key_used;50,2046
	struct gost_mac_pmeth_data 53,2072
		int key_set;54,2102
		EVP_MD *md;md55,2117
		unsigned char key[key56,2131
	ASN1_OCTET_STRING *encrypted_key;encrypted_key62,2216
	ASN1_OCTET_STRING *imit;imit63,2251
} GOST_KEY_INFO;64,2277
DECLARE_ASN1_FUNCTIONS(66,2295
	ASN1_OBJECT *cipher;cipher69,2351
	X509_PUBKEY *ephem_key;ephem_key70,2373
	ASN1_OCTET_STRING *eph_iv;eph_iv71,2398
} GOST_KEY_AGREEMENT_INFO;72,2426
DECLARE_ASN1_FUNCTIONS(74,2454
	GOST_KEY_INFO *key_info;key_info77,2521
	GOST_KEY_AGREEMENT_INFO *key_agreement_info;key_agreement_info78,2547
} GOST_KEY_TRANSPORT;79,2593
DECLARE_ASN1_FUNCTIONS(81,2616
	GOST_KEY_TRANSPORT *gkt;gkt84,2700
} GOST_CLIENT_KEY_EXCHANGE_PARAMS;85,2726
#undef GOST_CLIENT_KEY_EXCHANGE_PARAMS_it92,3008
#define GOST_CLIENT_KEY_EXCHANGE_PARAMS_it	93,3050
#undef GOST_CLIENT_KEY_EXCHANGE_PARAMS_new94,3123
#define GOST_CLIENT_KEY_EXCHANGE_PARAMS_new	95,3166
#undef GOST_CLIENT_KEY_EXCHANGE_PARAMS_free96,3241
#define GOST_CLIENT_KEY_EXCHANGE_PARAMS_free	97,3285
#undef d2i_GOST_CLIENT_KEY_EXCHANGE_PARAMS98,3362
#define d2i_GOST_CLIENT_KEY_EXCHANGE_PARAMS	99,3405
#undef i2d_GOST_CLIENT_KEY_EXCHANGE_PARAMS100,3480
#define i2d_GOST_CLIENT_KEY_EXCHANGE_PARAMS	101,3523
DECLARE_ASN1_FUNCTIONS(103,3623
	ASN1_OBJECT *key_params;key_params105,3696
	ASN1_OBJECT *hash_params;hash_params106,3722
	ASN1_OBJECT *cipher_params;cipher_params107,3749
} GOST_KEY_PARAMS;108,3778
DECLARE_ASN1_FUNCTIONS(110,3798
	ASN1_OCTET_STRING *iv;iv113,3856
	ASN1_OBJECT *enc_param_set;enc_param_set114,3880
} GOST_CIPHER_PARAMS;115,3909
DECLARE_ASN1_FUNCTIONS(117,3933
struct ossl_gost_digest_ctx 128,4431
	gost_hash_ctx dctx;129,4461
	gost_ctx cctx;130,4482
struct ossl_gost_cipher_ctx 137,4699
	int paramNID;138,4729
	off_t count;139,4744
	int key_meshing;140,4758
	gost_ctx cctx;141,4776
struct gost_cipher_info 144,4844
	int nid;145,4870
	gost_subst_block *sblock;sblock146,4880
	int key_meshing;147,4907
struct ossl_gost_imit_ctx 150,4950
	gost_ctx cctx;151,4978
	unsigned char buffer[buffer152,4994
	unsigned char partial_block[partial_block153,5020
	off_t count;154,5053
	int key_meshing;155,5067
	int bytes_left;156,5085
	int key_set;157,5102
#define EVP_MD_CTRL_KEY_LEN 166,5473
#define EVP_MD_CTRL_SET_KEY 167,5526

engines/ccgost/e_gost_err.h,3545
#define HEADER_GOST_ERR_H56,2661
#define GOSTerr(69,3047
#define GOST_F_DECODE_GOST_ALGOR_PARAMS	74,3176
#define GOST_F_ENCODE_GOST_ALGOR_PARAMS	75,3222
#define GOST_F_FILL_GOST2001_PARAMS	76,3269
#define GOST_F_FILL_GOST94_PARAMS	77,3312
#define GOST_F_GET_ENCRYPTION_PARAMS	78,3353
#define GOST_F_GOST2001_COMPUTE_PUBLIC	79,3397
#define GOST_F_GOST2001_DO_SIGN	80,3443
#define GOST_F_GOST2001_DO_VERIFY	81,3483
#define GOST_F_GOST2001_KEYGEN	82,3524
#define GOST_F_GOST89_GET_ASN1_PARAMETERS	83,3563
#define GOST_F_GOST89_SET_ASN1_PARAMETERS	84,3611
#define GOST_F_GOST94_COMPUTE_PUBLIC	85,3659
#define GOST_F_GOST_CIPHER_CTL	86,3703
#define GOST_F_GOST_DO_SIGN	87,3742
#define GOST_F_GOST_DO_VERIFY	88,3778
#define GOST_F_GOST_IMIT_CTRL	89,3816
#define GOST_F_GOST_IMIT_FINAL	90,3854
#define GOST_F_GOST_IMIT_UPDATE	91,3893
#define GOST_F_PARAM_COPY_GOST01	92,3933
#define GOST_F_PARAM_COPY_GOST94	93,3973
#define GOST_F_PKEY_GOST01CP_DECRYPT	94,4013
#define GOST_F_PKEY_GOST01CP_ENCRYPT	95,4057
#define GOST_F_PKEY_GOST01CP_KEYGEN	96,4101
#define GOST_F_PKEY_GOST01_PARAMGEN	97,4144
#define GOST_F_PKEY_GOST2001_DERIVE	98,4187
#define GOST_F_PKEY_GOST94CP_DECRYPT	99,4230
#define GOST_F_PKEY_GOST94CP_ENCRYPT	100,4274
#define GOST_F_PKEY_GOST94CP_KEYGEN	101,4318
#define GOST_F_PKEY_GOST94_PARAMGEN	102,4361
#define GOST_F_PKEY_GOST_CTRL	103,4404
#define GOST_F_PKEY_GOST_CTRL01_STR	104,4442
#define GOST_F_PKEY_GOST_CTRL94_STR	105,4485
#define GOST_F_PKEY_GOST_MAC_CTRL	106,4528
#define GOST_F_PKEY_GOST_MAC_CTRL_STR	107,4569
#define GOST_F_PKEY_GOST_MAC_KEYGEN	108,4614
#define GOST_F_PRINT_GOST_01	109,4657
#define GOST_F_PRIV_DECODE_GOST	110,4694
#define GOST_F_PUB_DECODE_GOST01	111,4734
#define GOST_F_PUB_DECODE_GOST94	112,4774
#define GOST_F_PUB_ENCODE_GOST01	113,4814
#define GOST_F_UNPACK_CC_SIGNATURE	114,4854
#define GOST_F_UNPACK_CP_SIGNATURE	115,4896
#define GOST_R_BAD_KEY_PARAMETERS_FORMAT	118,4959
#define GOST_R_BAD_PKEY_PARAMETERS_FORMAT	119,5005
#define GOST_R_CANNOT_PACK_EPHEMERAL_KEY	120,5053
#define GOST_R_CTRL_CALL_FAILED	121,5100
#define GOST_R_ERROR_COMPUTING_SHARED_KEY	122,5140
#define GOST_R_ERROR_PACKING_KEY_TRANSPORT_INFO	123,5188
#define GOST_R_ERROR_PARSING_KEY_TRANSPORT_INFO	124,5242
#define GOST_R_INCOMPATIBLE_ALGORITHMS	125,5296
#define GOST_R_INCOMPATIBLE_PEER_KEY	126,5342
#define GOST_R_INVALID_CIPHER_PARAMS	127,5386
#define GOST_R_INVALID_CIPHER_PARAM_OID	128,5430
#define GOST_R_INVALID_DIGEST_TYPE	129,5477
#define GOST_R_INVALID_GOST94_PARMSET	130,5519
#define GOST_R_INVALID_IV_LENGTH	131,5564
#define GOST_R_INVALID_MAC_KEY_LENGTH	132,5604
#define GOST_R_INVALID_PARAMSET	133,5649
#define GOST_R_KEY_IS_NOT_INITALIZED	134,5689
#define GOST_R_KEY_IS_NOT_INITIALIZED	135,5733
#define GOST_R_KEY_PARAMETERS_MISSING	136,5778
#define GOST_R_MAC_KEY_NOT_SET	137,5823
#define GOST_R_MALLOC_FAILURE	138,5862
#define GOST_R_NO_MEMORY	139,5900
#define GOST_R_NO_PARAMETERS_SET	140,5933
#define GOST_R_NO_PEER_KEY	141,5973
#define GOST_R_NO_PRIVATE_PART_OF_NON_EPHEMERAL_KEYPAIR	142,6008
#define GOST_R_PUBLIC_KEY_UNDEFINED	143,6069
#define GOST_R_RANDOM_GENERATOR_ERROR	144,6112
#define GOST_R_RANDOM_GENERATOR_FAILURE	145,6157
#define GOST_R_RANDOM_NUMBER_GENERATOR_FAILED	146,6204
#define GOST_R_SIGNATURE_MISMATCH	147,6256
#define GOST_R_SIGNATURE_PARTS_GREATER_THAN_Q	148,6297
#define GOST_R_UKM_NOT_SET	149,6349
#define GOST_R_UNSUPPORTED_CIPHER_CTL_COMMAND	150,6384
#define GOST_R_UNSUPPORTED_PARAMETER_SET	151,6436

engines/ccgost/gost_eng.c,809
static const char *engine_gost_id engine_gost_id18,850
static const char *engine_gost_name engine_gost_name19,894
static int gost_cipher_nids[gost_cipher_nids35,1408
static int gost_digest_nids[gost_digest_nids38,1486
static int gost_pkey_meth_nids[gost_pkey_meth_nids41,1570
static EVP_PKEY_METHOD *pmeth_GostR3410_94 pmeth_GostR3410_9445,1684
static EVP_PKEY_ASN1_METHOD *ameth_GostR3410_94 ameth_GostR3410_9449,1798
static int gost_engine_init(54,1917
static int gost_engine_finish(59,1975
static int gost_engine_destroy(64,2035
static int bind_gost 70,2116
IMPLEMENT_DYNAMIC_BIND_FN(152,4398
static int gost_ciphers 182,4927
static int gost_pkey_meths 208,5333
static int gost_pkey_asn1_meths 229,5772
static ENGINE *engine_gost(engine_gost251,6255
void ENGINE_load_gost(264,6446

engines/ccgost/gost_md.c,184
EVP_MD digest_gost=21,1037
int gost_digest_init(40,1337
int gost_digest_update(49,1576
int gost_digest_final(54,1717
int gost_digest_copy(60,1838
int gost_digest_cleanup(70,2125

engines/ccgost/gosthash.h,362
#define GOSTHASH_H10,596
typedef __int64 ghosthash_len;15,722
typedef long ghosthash_len;17,779
typedef long long ghosthash_len;19,813
typedef struct gost_hash_ctx 22,854
		ghosthash_len len;23,885
		gost_ctx *cipher_ctx;cipher_ctx24,906
		int left;25,930
		byte H[H26,942
		byte S[S27,956
		byte remainder[remainder28,970
} gost_hash_ctx;29,992

engines/ccgost/gost_crypt.c,940
EVP_CIPHER cipher_gost 32,1586
EVP_CIPHER cipher_gost_cpacnt 50,1999
EVP_MD imit_gost_cpa 81,3037
struct gost_cipher_info gost_cipher_list[gost_cipher_list106,3467
const struct gost_cipher_info *get_encryption_params(get_encryption_params122,4352
static int gost_cipher_set_param(155,5086
static int gost_cipher_init_param(169,5475
static int gost_cipher_init_cpa(184,5963
int gost_cipher_init(198,6439
static void gost_crypt_mesh 206,6726
static void gost_cnt_next 217,6994
int	gost_cipher_do_cfb(255,7956
static int gost_cipher_do_cnt(317,9310
int gost_cipher_cleanup(372,10336
int gost_cipher_ctl(380,10536
int gost89_set_asn1_parameters(409,11120
int  gost89_get_asn1_parameters(457,12351
int gost_imit_init_cpa(495,13149
static void mac_block_mesh(507,13453
int gost_imit_update(522,13933
int gost_imit_final(561,14604
int gost_imit_ctrl(581,14987
int gost_imit_copy(605,15465
int gost_imit_cleanup(612,15635

engines/ccgost/gost89.c,939
gost_subst_block GostR3411_94_TestParamSet 22,957
gost_subst_block GostR3411_94_CryptoProParamSet=33,1616
gost_subst_block Gost28147_TestParamSet 45,2252
gost_subst_block Gost28147_CryptoProParamSetA=61,2871
gost_subst_block Gost28147_CryptoProParamSetB=72,3490
gost_subst_block Gost28147_CryptoProParamSetC=84,4111
gost_subst_block Gost28147_CryptoProParamSetD=97,4734
const byte CryptoProKeyMeshingKey[CryptoProKeyMeshingKey110,5333
static void kboxinit(117,5633
static word32 f(132,6021
void gostcrypt(140,6275
void gostdecrypt(173,7671
void gost_enc(206,8925
void gost_dec(217,9140
void gost_enc_cfb(229,9380
void gost_dec_cfb(247,9796
void gost_enc_with_key(266,10199
void gost_key(273,10368
void gost_get_key(283,10562
void gost_init(296,10865
void gost_destroy(306,11028
void mac_block(318,11307
void get_mac(347,12390
int gost_mac(359,12740
int gost_mac_iv(378,13207
void cryptopro_key_meshing(398,13708

engines/ccgost/gost_params.h,361
#define GOST_PARAMSET_H12,746
typedef struct R3410 13,770
		int nid;14,793
		char *a;a15,804
		char *p;p16,815
		char *q;q17,826
} R3410_params;18,837
typedef struct R3410_2001 22,893
		int nid;23,921
		char *a;a24,932
		char *b;b25,943
		char *p;p26,954
		char *q;q27,965
		char *x;x28,976
		char *y;y29,987
} R3410_2001_params;30,998

engines/ccgost/gost_ctl.c,312
static char *gost_params[gost_params17,761
static const char *gost_envnames[gost_envnames18,812
const ENGINE_CMD_DEFN gost_cmds[gost_cmds19,865
void gost_param_free(39,1258
int gost_control_func(51,1428
const char *get_gost_engine_param(get_gost_engine_param60,1657
int gost_set_default_param(78,2045

engines/ccgost/gost_keywrap.c,97
void keyDiversifyCryptoPro(22,967
int keyWrapCryptoPro(70,2189
int keyUnwrapCryptoPro(92,2989

engines/ccgost/gost89.h,581
#define GOST89_H11,678
typedef unsigned int u4;15,770
typedef unsigned long u4;17,803
typedef unsigned char byte;20,879
		byte k8[k824,984
		byte k7[k725,999
		byte k6[k626,1014
		byte k5[k527,1029
		byte k4[k428,1044
		byte k3[k329,1059
		byte k2[k230,1074
		byte k1[k131,1089
} gost_subst_block;32,1104
		u4 k[k37,1217
		u4 k87[k8739,1281
		u4 k87[256],k65[k6539,1281
		u4 k87[256],k65[256],k43[k4339,1281
		u4 k87[256],k65[256],k43[256],k21[k2139,1281
} gost_ctx;40,1324
typedef unsigned int word32;91,4022
typedef unsigned long word32;93,4059

engines/ccgost/gost_keywrap.h,30
#define GOST_KEYWRAP_H11,672

engines/ccgost/gostsum.c,160
#define BUF_SIZE 17,789
void help(21,986
#define O_BINARY 34,1450
int main(37,1477
int hash_file(149,3487
int hash_stream(166,3739
int get_line(188,4101

engines/ccgost/gost_ameth.c,1601
int gost94_nid_by_params(23,928
static ASN1_STRING  *encode_gost_algor_params(encode_gost_algor_params40,1241
static int decode_gost_algor_params(92,2670
static int gost_set_priv_key(151,3979
BIGNUM* gost_get0_priv_key(184,4687
static int pkey_ctrl_gost(215,5230
static void pkey_free_gost94(292,7184
static void pkey_free_gost01(300,7292
static int priv_decode_gost(309,7479
static int priv_encode_gost(365,8752
static int print_gost_94(384,9337
static int param_print_gost94(419,10117
static int pub_print_gost94(425,10267
static int priv_print_gost94(430,10412
static int print_gost_01(436,10557
static int param_print_gost01(495,12072
static int pub_print_gost01(500,12219
static int priv_print_gost01(505,12364
static int param_missing_gost94(511,12583
static int param_missing_gost01(519,12748
static int param_copy_gost94(527,12929
#define COPYBIGNUM(548,13425
static int param_copy_gost01(557,13642
static int param_cmp_gost94(586,14287
static int param_cmp_gost01(594,14503
static int pub_decode_gost94(606,14844
static int pub_encode_gost94(639,15714
static int pub_decode_gost01(673,16661
static int pub_encode_gost01(733,18086
static int pub_cmp_gost94(789,19542
static int pub_cmp_gost01(801,19824
static int pkey_size_gost(818,20230
static int pkey_bits_gost(823,20295
static void  mackey_free_gost(828,20435
static int mac_ctrl_gost(834,20543
static int gost94_param_encode(845,20748
static int gost2001_param_encode(850,20944
static int gost94_param_decode(856,21167
static int gost2001_param_decode(875,21596
int register_ameth_gost 898,22116

engines/ccgost/gost_asn1.c,203
} ASN1_NDEF_SEQUENCE_END(17,852
} ASN1_NDEF_SEQUENCE_END(24,1107
} ASN1_NDEF_SEQUENCE_END(32,1429
} ASN1_NDEF_SEQUENCE_END(40,1740
} ASN1_NDEF_SEQUENCE_END(47,1988
} ASN1_NDEF_SEQUENCE_END(53,2228

engines/ccgost/gosthash.c,436
#  define MYALLOC(21,822
#  define MYFREE(22,867
#  define MYALLOC(24,914
#  define MYFREE(25,951
static void swap_bytes 30,1095
static void circle_xor8 40,1233
static void transform_3 51,1405
static int add_blocks(62,1716
static void xor_blocks 77,1973
static int hash_step(87,2191
int init_gost_hash_ctx(138,3572
void done_gost_hash_ctx(156,4022
int start_hash(166,4262
int hash_block(181,4475
int finish_hash(226,5497

engines/ccgost/gost94_keyx.c,184
static int compute_pair_key_le(30,1204
static int make_cp_exchange_key(47,1592
int pkey_gost94_derive(73,2309
int pkey_GOST94cp_encrypt(88,2695
int pkey_GOST94cp_decrypt(212,5770

engines/ccgost/gost_pmeth.c,1082
static int pkey_gost_init(22,1048
static int pkey_gost_copy(47,1763
static void pkey_gost_cleanup 64,2146
static int pkey_gost_ctrl(72,2417
static int pkey_gost_ctrl94_str(120,3628
static int pkey_gost_ctrl01_str(195,5192
static int pkey_gost_paramgen_init(269,6760
static int pkey_gost94_paramgen(272,6830
static int pkey_gost01_paramgen(291,7278
static int pkey_gost94cp_keygen(314,7785
static int pkey_gost01cp_keygen(324,8053
static int pkey_gost94_cp_sign(337,8325
static int pkey_gost01_cp_sign(356,8808
static int pkey_gost94_cp_verify(377,9360
static int pkey_gost01_cp_verify(390,9734
static int pkey_gost_encrypt_init(411,10364
static int pkey_gost_derive_init(416,10504
static int pkey_gost_mac_init(421,10641
static void pkey_gost_mac_cleanup 430,10911
static int pkey_gost_mac_copy(435,11057
static int pkey_gost_mac_ctrl(448,11348
static int pkey_gost_mac_ctrl_str(508,12658
static int pkey_gost_mac_keygen(542,13426
static int pkey_gost_mac_signctx_init(557,13834
static int pkey_gost_mac_signctx(562,13926
int register_pmeth_gost(576,14342

engines/ccgost/gost2001.c,247
#define dump_signature(22,903
#define dump_dsa_sig(23,933
int fill_GOST2001_params(34,1227
DSA_SIG *gost2001_do_sign(gost2001_do_sign94,2543
int gost2001_do_verify(184,4624
int gost2001_compute_public(276,6734
int gost2001_keygen(321,7620

engines/ccgost/e_gost_err.c,430
#define ERR_FUNC(68,2966
#define ERR_REASON(69,3008
static ERR_STRING_DATA GOST_str_functs[GOST_str_functs71,3057
static ERR_STRING_DATA GOST_str_reasons[GOST_str_reasons118,5742
static ERR_STRING_DATA GOST_lib_name[GOST_lib_name160,8280
static int GOST_lib_error_code=168,8372
static int GOST_error_init=169,8406
void ERR_load_GOST_strings(171,8437
void ERR_unload_GOST_strings(191,8883
void ERR_GOST_error(207,9198

engines/ccgost/gost_sign.c,520
void dump_signature(21,860
void dump_dsa_sig(33,1160
#define dump_signature(44,1368
#define dump_dsa_sig(45,1398
DSA_SIG *gost_do_sign(gost_do_sign51,1497
int pack_sign_cp(119,3050
int gost_do_verify(135,3379
int gost94_compute_public(194,4632
int fill_GOST94_params(215,5116
#define dump_signature(224,5384
int gost_sign_keygen(242,5723
DSA_SIG *unpack_cp_signature(unpack_cp_signature266,6275
BIGNUM *hashsum2bn(hashsum2bn282,6628
BIGNUM *getbnfrombuf(getbnfrombuf294,6851
int store_bignum(314,7166

engines/ccgost/gost2001_keyx.c,141
static int VKO_compute_key(24,952
int pkey_gost2001_derive(75,2413
int pkey_GOST01cp_encrypt(117,3480
int pkey_GOST01cp_decrypt(228,6406

engines/e_capi_err.h,2217
#define HEADER_CAPI_ERR_H56,2661
#define CAPIerr(69,3068
#define CAPI_F_CAPI_CERT_GET_FNAME	74,3197
#define CAPI_F_CAPI_CTRL	75,3238
#define CAPI_F_CAPI_CTX_NEW	76,3271
#define CAPI_F_CAPI_CTX_SET_PROVNAME	77,3307
#define CAPI_F_CAPI_DSA_DO_SIGN	78,3351
#define CAPI_F_CAPI_GET_KEY	79,3391
#define CAPI_F_CAPI_GET_PKEY	80,3427
#define CAPI_F_CAPI_GET_PROVNAME	81,3464
#define CAPI_F_CAPI_GET_PROV_INFO	82,3504
#define CAPI_F_CAPI_INIT	83,3545
#define CAPI_F_CAPI_LIST_CONTAINERS	84,3578
#define CAPI_F_CAPI_LOAD_PRIVKEY	85,3621
#define CAPI_F_CAPI_OPEN_STORE	86,3661
#define CAPI_F_CAPI_RSA_PRIV_DEC	87,3700
#define CAPI_F_CAPI_RSA_PRIV_ENC	88,3740
#define CAPI_F_CAPI_RSA_SIGN	89,3780
#define CAPI_F_CERT_SELECT_DIALOG	90,3817
#define CAPI_F_CLIENT_CERT_SELECT	91,3858
#define CAPI_F_WIDE_TO_ASC	92,3899
#define CAPI_R_CANT_CREATE_HASH_OBJECT	95,3955
#define CAPI_R_CANT_FIND_CAPI_CONTEXT	96,4000
#define CAPI_R_CANT_GET_KEY	97,4045
#define CAPI_R_CANT_SET_HASH_VALUE	98,4081
#define CAPI_R_CRYPTACQUIRECONTEXT_ERROR	99,4123
#define CAPI_R_CRYPTENUMPROVIDERS_ERROR	100,4170
#define CAPI_R_DECRYPT_ERROR	101,4217
#define CAPI_R_ENGINE_NOT_INITIALIZED	102,4254
#define CAPI_R_ENUMCONTAINERS_ERROR	103,4299
#define CAPI_R_ERROR_ADDING_CERT	104,4342
#define CAPI_R_ERROR_CREATING_STORE	105,4382
#define CAPI_R_ERROR_GETTING_FRIENDLY_NAME	106,4425
#define CAPI_R_ERROR_GETTING_KEY_PROVIDER_INFO	107,4474
#define CAPI_R_ERROR_OPENING_STORE	108,4527
#define CAPI_R_ERROR_SIGNING_HASH	109,4569
#define CAPI_R_FUNCTION_NOT_SUPPORTED	110,4610
#define CAPI_R_GETUSERKEY_ERROR	111,4655
#define CAPI_R_INVALID_DIGEST_LENGTH	112,4695
#define CAPI_R_INVALID_DSA_PUBLIC_KEY_BLOB_MAGIC_NUMBER	113,4739
#define CAPI_R_INVALID_LOOKUP_METHOD	114,4800
#define CAPI_R_INVALID_PUBLIC_KEY_BLOB	115,4844
#define CAPI_R_INVALID_RSA_PUBLIC_KEY_BLOB_MAGIC_NUMBER	116,4890
#define CAPI_R_PUBKEY_EXPORT_ERROR	117,4951
#define CAPI_R_PUBKEY_EXPORT_LENGTH_ERROR	118,4993
#define CAPI_R_UNKNOWN_COMMAND	119,5041
#define CAPI_R_UNSUPPORTED_ALGORITHM_NID	120,5080
#define CAPI_R_UNSUPPORTED_PADDING	121,5127
#define CAPI_R_UNSUPPORTED_PUBLIC_KEY_ALGORITHM	122,5169
#define CAPI_R_WIN32_ERROR	123,5223

engines/e_aep_err.h,1096
#define HEADER_AEPHK_ERR_H56,2657
#define AEPHKerr(69,3068
#define AEPHK_F_AEP_CTRL	74,3200
#define AEPHK_F_AEP_FINISH	75,3233
#define AEPHK_F_AEP_GET_CONNECTION	76,3268
#define AEPHK_F_AEP_INIT	77,3310
#define AEPHK_F_AEP_MOD_EXP	78,3343
#define AEPHK_F_AEP_MOD_EXP_CRT	79,3379
#define AEPHK_F_AEP_RAND	80,3419
#define AEPHK_F_AEP_RSA_MOD_EXP	81,3452
#define AEPHK_R_ALREADY_LOADED	84,3513
#define AEPHK_R_CLOSE_HANDLES_FAILED	85,3552
#define AEPHK_R_CONNECTIONS_IN_USE	86,3596
#define AEPHK_R_CTRL_COMMAND_NOT_IMPLEMENTED	87,3638
#define AEPHK_R_FINALIZE_FAILED	88,3689
#define AEPHK_R_GET_HANDLE_FAILED	89,3729
#define AEPHK_R_GET_RANDOM_FAILED	90,3770
#define AEPHK_R_INIT_FAILURE	91,3811
#define AEPHK_R_MISSING_KEY_COMPONENTS	92,3848
#define AEPHK_R_MOD_EXP_CRT_FAILED	93,3894
#define AEPHK_R_MOD_EXP_FAILED	94,3936
#define AEPHK_R_NOT_LOADED	95,3975
#define AEPHK_R_OK	96,4010
#define AEPHK_R_RETURN_CONNECTION_FAILED	97,4038
#define AEPHK_R_SETBNCALLBACK_FAILURE	98,4085
#define AEPHK_R_SIZE_TOO_LARGE_OR_TOO_SMALL	99,4130
#define AEPHK_R_UNIT_FAILURE	100,4180

engines/e_gmp.c,1173
#define E_GMP_LIB_NAME 98,4385
static const ENGINE_CMD_DEFN e_gmp_cmd_defns[e_gmp_cmd_defns114,4912
static RSA_METHOD e_gmp_rsa 126,5197
static const char *engine_e_gmp_id engine_e_gmp_id148,5631
static const char *engine_e_gmp_name engine_e_gmp_name149,5675
static int bind_helper(153,5842
static ENGINE *engine_gmp(engine_gmp184,6722
void ENGINE_load_gmp(197,6894
static int hndidx_rsa 209,7160
static int e_gmp_destroy(212,7196
static int e_gmp_init(219,7313
static int e_gmp_finish(232,7544
static int e_gmp_ctrl(237,7597
static int bn2gmp(261,8068
static int gmp2bn(287,8624
typedef struct st_e_gmp_rsa_ctx316,9292
	int public_only;318,9327
	mpz_t n;319,9345
	mpz_t d;320,9355
	mpz_t e;321,9365
	mpz_t p;322,9375
	mpz_t q;323,9385
	mpz_t dmp1;324,9395
	mpz_t dmq1;325,9408
	mpz_t iqmp;326,9421
	mpz_t r0,327,9434
	mpz_t r0, r1,327,9434
	mpz_t r0, r1, I0,327,9434
	mpz_t r0, r1, I0, m1;327,9434
	} E_GMP_RSA_CTX;328,9457
static E_GMP_RSA_CTX *e_gmp_get_rsa(e_gmp_get_rsa330,9476
static int e_gmp_rsa_finish(381,10838
static int e_gmp_rsa_mod_exp(402,11299
IMPLEMENT_DYNAMIC_CHECK_FN(461,12729
IMPLEMENT_DYNAMIC_BIND_FN(471,12942

engines/e_sureware.c,3859
#define SUREWARE_LIB_NAME 80,3053
static int surewarehk_mod_exp_mont(117,4505
static RSA_METHOD surewarehk_rsa 124,4744
static int surewarehk_modexp_dh(146,5312
static DH_METHOD surewarehk_dh 152,5503
static RAND_METHOD surewarehk_rand 166,5714
static int surewarehk_dsa_mod_exp(180,6050
static DSA_METHOD surewarehk_dsa 199,6542
static const char *engine_sureware_id engine_sureware_id216,6796
static const char *engine_sureware_name engine_sureware_name217,6848
static int bind_sureware(223,7084
static int bind_helper(297,9121
IMPLEMENT_DYNAMIC_CHECK_FN(305,9291
void ENGINE_load_sureware(321,9544
static DSO *surewarehk_dso surewarehk_dso337,10036
static int rsaHndidx 339,10094
static int dsaHndidx 342,10200
static SureWareHook_Init_t *p_surewarehk_Init p_surewarehk_Init347,10388
static SureWareHook_Finish_t *p_surewarehk_Finish p_surewarehk_Finish348,10442
static SureWareHook_Rand_Bytes_t *p_surewarehk_Rand_Bytes p_surewarehk_Rand_Bytes349,10500
static SureWareHook_Rand_Seed_t *p_surewarehk_Rand_Seed p_surewarehk_Rand_Seed350,10566
static SureWareHook_Load_Privkey_t *p_surewarehk_Load_Privkey p_surewarehk_Load_Privkey351,10630
static SureWareHook_Info_Pubkey_t *p_surewarehk_Info_Pubkey p_surewarehk_Info_Pubkey352,10700
static SureWareHook_Load_Rsa_Pubkey_t *p_surewarehk_Load_Rsa_Pubkey p_surewarehk_Load_Rsa_Pubkey353,10768
static SureWareHook_Load_Dsa_Pubkey_t *p_surewarehk_Load_Dsa_Pubkey p_surewarehk_Load_Dsa_Pubkey354,10844
static SureWareHook_Free_t *p_surewarehk_Free=p_surewarehk_Free355,10920
static SureWareHook_Rsa_Priv_Dec_t *p_surewarehk_Rsa_Priv_Dec=p_surewarehk_Rsa_Priv_Dec356,10972
static SureWareHook_Rsa_Sign_t *p_surewarehk_Rsa_Sign=p_surewarehk_Rsa_Sign357,11040
static SureWareHook_Dsa_Sign_t *p_surewarehk_Dsa_Sign=p_surewarehk_Dsa_Sign358,11100
static SureWareHook_Mod_Exp_t *p_surewarehk_Mod_Exp=p_surewarehk_Mod_Exp359,11160
static const char *surewarehk_LIBNAME surewarehk_LIBNAME362,11253
static const char *n_surewarehk_Init n_surewarehk_Init363,11309
static const char *n_surewarehk_Finish n_surewarehk_Finish364,11369
static const char *n_surewarehk_Rand_Bytes=n_surewarehk_Rand_Bytes365,11433
static const char *n_surewarehk_Rand_Seed=n_surewarehk_Rand_Seed366,11503
static const char *n_surewarehk_Load_Privkey=n_surewarehk_Load_Privkey367,11571
static const char *n_surewarehk_Info_Pubkey=n_surewarehk_Info_Pubkey368,11645
static const char *n_surewarehk_Load_Rsa_Pubkey=n_surewarehk_Load_Rsa_Pubkey369,11717
static const char *n_surewarehk_Load_Dsa_Pubkey=n_surewarehk_Load_Dsa_Pubkey370,11797
static const char *n_surewarehk_Free=n_surewarehk_Free371,11877
static const char *n_surewarehk_Rsa_Priv_Dec=n_surewarehk_Rsa_Priv_Dec372,11935
static const char *n_surewarehk_Rsa_Sign=n_surewarehk_Rsa_Sign373,12009
static const char *n_surewarehk_Dsa_Sign=n_surewarehk_Dsa_Sign374,12075
static const char *n_surewarehk_Mod_Exp=n_surewarehk_Mod_Exp375,12141
static BIO *logstream logstream376,12205
static int threadsafe=383,12515
static int surewarehk_ctrl(384,12540
static int surewarehk_destroy(429,13757
static int surewarehk_init(436,13882
static int surewarehk_finish(546,17941
static void surewarehk_error_handling(582,18802
static int surewarehk_rand_bytes(616,19584
static void surewarehk_rand_seed(632,19962
static void surewarehk_rand_add(647,20308
static EVP_PKEY* sureware_load_public(652,20419
static EVP_PKEY *surewarehk_load_privkey(surewarehk_load_privkey772,23905
static EVP_PKEY *surewarehk_load_pubkey(surewarehk_load_pubkey800,24567
static void surewarehk_ex_free(831,25370
static void surewarehk_dh_ex_free(846,25761
static int surewarehk_rsa_priv_dec(862,26093
static int surewarehk_rsa_sign(933,28162
static	DSA_SIG * surewarehk_dsa_do_sign(968,29092
static int surewarehk_modexp(1020,30385

engines/e_chil_err.h,1078
#define HEADER_HWCRHK_ERR_H56,2658
#define HWCRHKerr(69,3073
#define HWCRHK_F_HWCRHK_CTRL	74,3208
#define HWCRHK_F_HWCRHK_FINISH	75,3245
#define HWCRHK_F_HWCRHK_GET_PASS	76,3284
#define HWCRHK_F_HWCRHK_INIT	77,3324
#define HWCRHK_F_HWCRHK_INSERT_CARD	78,3361
#define HWCRHK_F_HWCRHK_LOAD_PRIVKEY	79,3404
#define HWCRHK_F_HWCRHK_LOAD_PUBKEY	80,3448
#define HWCRHK_F_HWCRHK_MOD_EXP	81,3491
#define HWCRHK_F_HWCRHK_RAND_BYTES	82,3531
#define HWCRHK_F_HWCRHK_RSA_MOD_EXP	83,3573
#define HWCRHK_R_ALREADY_LOADED	86,3637
#define HWCRHK_R_BIO_WAS_FREED	87,3677
#define HWCRHK_R_CHIL_ERROR	88,3716
#define HWCRHK_R_CTRL_COMMAND_NOT_IMPLEMENTED	89,3752
#define HWCRHK_R_DSO_FAILURE	90,3804
#define HWCRHK_R_MISSING_KEY_COMPONENTS	91,3841
#define HWCRHK_R_NOT_INITIALISED	92,3888
#define HWCRHK_R_NOT_LOADED	93,3928
#define HWCRHK_R_NO_CALLBACK	94,3964
#define HWCRHK_R_NO_KEY	95,4001
#define HWCRHK_R_PRIVATE_KEY_ALGORITHMS_DISABLED	96,4034
#define HWCRHK_R_REQUEST_FAILED	97,4088
#define HWCRHK_R_REQUEST_FALLBACK	98,4128
#define HWCRHK_R_UNIT_FAILURE	99,4169

engines/e_capi.c,4498
#define _WIN32_WINNT 69,2801
# define __COMPILE_CAPIENG89,3615
#undef X509_EXTENSIONS96,3772
#undef X509_CERT_PAIR97,3795
#define CERT_STORE_OPEN_EXISTING_FLAG 101,3927
#define CERT_STORE_CREATE_NEW_FLAG 105,4037
#define CERT_SYSTEM_STORE_CURRENT_USER	109,4151
static const char *engine_capi_id engine_capi_id120,4344
static const char *engine_capi_name engine_capi_name121,4388
typedef struct CAPI_CTX_st CAPI_CTX;123,4447
typedef struct CAPI_KEY_st CAPI_KEY;124,4484
typedef PCCERT_CONTEXT (WINAPI *CERTDLG)CERTDLG163,6076
typedef HWND (WINAPI *GETCONSWIN)GETCONSWIN166,6188
#define CAPI_DBG_TRACE	173,6370
#define CAPI_DBG_ERROR	174,6395
struct CAPI_CTX_st 176,6421
	int debug_level;177,6442
	char *debug_file;debug_file178,6460
	DWORD keytype;180,6525
	LPSTR cspname;181,6541
	DWORD csptype;182,6557
	LPSTR storename;184,6610
	LPSTR ssl_client_store;185,6628
	DWORD store_flags;187,6679
#define CAPI_LU_SUBSTR	191,6794
#define CAPI_LU_FNAME	193,6856
#define CAPI_LU_CONTNAME	195,6925
	int lookup_method;196,6952
#define CAPI_DMP_SUMMARY	199,7050
#define CAPI_DMP_FNAME	201,7099
#define CAPI_DMP_FULL	203,7154
#define CAPI_DMP_PEM	205,7215
#define CAPI_DMP_PSKEY	207,7277
#define CAPI_DMP_PKEYINFO	209,7340
	DWORD dump_flags;211,7372
	int (*client_cert_select)client_cert_select212,7391
	CERTDLG certselectdlg;214,7464
	GETCONSWIN getconswindow;215,7488
#define CAPI_CMD_LIST_CERTS	224,7743
#define CAPI_CMD_LOOKUP_CERT	225,7788
#define CAPI_CMD_DEBUG_LEVEL	226,7840
#define CAPI_CMD_DEBUG_FILE	227,7892
#define CAPI_CMD_KEYTYPE	228,7943
#define CAPI_CMD_LIST_CSPS	229,7991
#define CAPI_CMD_SET_CSP_IDX	230,8041
#define CAPI_CMD_SET_CSP_NAME	231,8093
#define CAPI_CMD_SET_CSP_TYPE	232,8146
#define CAPI_CMD_LIST_CONTAINERS	233,8199
#define CAPI_CMD_LIST_OPTIONS	234,8254
#define CAPI_CMD_LOOKUP_METHOD	235,8308
#define CAPI_CMD_STORE_NAME	236,8363
#define CAPI_CMD_STORE_FLAGS	237,8415
static const ENGINE_CMD_DEFN capi_cmd_defns[capi_cmd_defns239,8469
static int capi_idx 301,10137
static int rsa_capi_idx 302,10163
static int dsa_capi_idx 303,10193
static int cert_capi_idx 304,10223
static int capi_ctrl(306,10255
static RSA_METHOD capi_rsa_method 407,12394
static DSA_METHOD capi_dsa_method 424,12790
static int capi_init(440,13144
static int capi_destroy(499,14759
static int capi_finish(505,14840
struct CAPI_KEY_st520,15180
	PCCERT_CONTEXT pcert;523,15249
	HCRYPTPROV hprov;524,15272
	HCRYPTKEY key;525,15291
	DWORD keyspec;526,15307
static int bind_capi(529,15328
static int bind_helper(552,16056
IMPLEMENT_DYNAMIC_CHECK_FN(560,16218
void ENGINE_load_capi(576,16463
static int lend_tobn(588,16658
static EVP_PKEY *capi_get_pkey(capi_get_pkey610,17137
static EVP_PKEY *capi_load_privkey(capi_load_privkey759,20365
int capi_rsa_priv_enc(788,20853
int capi_rsa_sign(795,21056
int capi_rsa_priv_dec(889,22919
static int capi_rsa_free(941,24106
static DSA_SIG *capi_dsa_do_sign(capi_dsa_do_sign952,24326
static int capi_dsa_free(1031,25934
static void capi_vtrace(1040,26122
static void CAPI_trace(1051,26389
static void capi_addlasterror(1059,26557
static void capi_adderror(1064,26632
static char *wide_to_asc(wide_to_asc1071,26783
static int capi_get_provname(1100,27394
static int capi_list_providers(1130,28195
static int capi_list_containers(1150,28631
CRYPT_KEY_PROV_INFO *capi_get_prov_info(capi_get_prov_info1218,30274
static void capi_dump_prov_info(1241,30876
char * capi_cert_get_fname(1264,31532
void capi_dump_cert(1287,32119
HCERTSTORE capi_open_store(1334,33256
int capi_list_certs(1354,33706
static PCCERT_CONTEXT capi_find_cert(1398,34509
static CAPI_KEY *capi_get_key(capi_get_key1432,35202
static CAPI_KEY *capi_get_cert_key(capi_get_cert_key1460,35954
CAPI_KEY *capi_find_key(capi_find_key1485,36560
void capi_free_key(1515,37146
static CAPI_CTX *capi_ctx_new(capi_ctx_new1529,37392
static void capi_ctx_free(1554,38033
static int capi_ctx_set_provname(1570,38405
static int capi_ctx_set_provname_idx(1592,38968
static int cert_issuer_match(1604,39225
static int capi_load_ssl_client_cert(1622,39587
static int cert_select_simple(1732,41819
#define CRYPTUI_SELECT_LOCATION_COLUMN 1748,42221
#define CRYPTUI_SELECT_INTENDEDUSE_COLUMN 1749,42290
#define dlg_title 1752,42367
#define dlg_prompt 1753,42441
#define dlg_columns	1754,42510
static int cert_select_dialog(1757,42603
int bind_engine(1834,44386
IMPLEMENT_DYNAMIC_CHECK_FN(1835,44467

engines/e_nuron_err.h,464
#define HEADER_NURON_ERR_H56,2657
#define NURONerr(69,3068
#define NURON_F_NURON_CTRL	74,3200
#define NURON_F_NURON_FINISH	75,3235
#define NURON_F_NURON_INIT	76,3272
#define NURON_F_NURON_MOD_EXP	77,3307
#define NURON_R_ALREADY_LOADED	80,3366
#define NURON_R_CTRL_COMMAND_NOT_IMPLEMENTED	81,3405
#define NURON_R_DSO_FAILURE	82,3456
#define NURON_R_DSO_FUNCTION_NOT_FOUND	83,3492
#define NURON_R_DSO_NOT_FOUND	84,3538
#define NURON_R_NOT_LOADED	85,3576

engines/e_4758cca.c,2326
static F_KEYRECORDREAD keyRecordRead;122,4777
static F_DIGITALSIGNATUREGENERATE digitalSignatureGenerate;123,4815
static F_DIGITALSIGNATUREVERIFY digitalSignatureVerify;124,4875
static F_PUBLICKEYEXTRACT publicKeyExtract;125,4931
static F_PKAENCRYPT pkaEncrypt;126,4975
static F_PKADECRYPT pkaDecrypt;127,5007
static F_RANDOMNUMBERGENERATE randomNumberGenerate;129,5046
static const char *CCA4758_LIB_NAME CCA4758_LIB_NAME133,5145
static const char *get_CCA4758_LIB_NAME(get_CCA4758_LIB_NAME134,5189
static void free_CCA4758_LIB_NAME(140,5312
static long set_CCA4758_LIB_NAME(146,5447
static const char* n_keyRecordRead 152,5620
static const char* n_digitalSignatureGenerate 153,5666
static const char* n_digitalSignatureVerify 154,5723
static const char* n_publicKeyExtract 155,5778
static const char* n_pkaEncrypt 156,5827
static const char* n_pkaDecrypt 157,5870
static const char* n_randomNumberGenerate 159,5920
static int hndidx 162,5997
static DSO *dso dso164,6028
#define CCA4758_CMD_SO_PATH	169,6148
static const ENGINE_CMD_DEFN	cca4758_cmd_defns[cca4758_cmd_defns170,6193
static RSA_METHOD ibm_4758_cca_rsa 179,6413
static RAND_METHOD ibm_4758_cca_rand 198,6774
static const char *engine_4758_cca_id engine_4758_cca_id209,7042
static const char *engine_4758_cca_name engine_4758_cca_name210,7093
static const char *engine_4758_cca_id_alt engine_4758_cca_id_alt213,7283
static int bind_helper(218,7403
static ENGINE *engine_4758_cca(engine_4758_cca242,8219
void ENGINE_load_4758cca(255,8396
static int ibm_4758_cca_destroy(265,8566
static int ibm_4758_cca_init(272,8684
static int ibm_4758_cca_finish(338,10471
static int ibm_4758_cca_ctrl(367,11172
#define MAX_CCA_PKA_TOKEN_SIZE 396,11769
static EVP_PKEY *ibm_4758_load_privkey(ibm_4758_load_privkey398,11806
static EVP_PKEY *ibm_4758_load_pubkey(ibm_4758_load_pubkey488,14167
static int cca_rsa_pub_enc(562,16106
static int cca_rsa_priv_dec(591,16969
#define SSL_SIG_LEN 618,17780
static int cca_rsa_verify(620,17804
#define SSL_SIG_LEN 742,20467
static int cca_rsa_sign(744,20491
static int getModulusAndExponent(867,23186
static int cca_random_status(925,24310
static int cca_get_random_bytes(930,24363
static void cca_ex_free(963,25046
static int bind_fn(973,25278
IMPLEMENT_DYNAMIC_CHECK_FN(982,25490

engines/e_4758cca_err.h,854
#define HEADER_CCA4758_ERR_H56,2659
#define CCA4758err(69,3078
#define CCA4758_F_CCA_RSA_SIGN	74,3216
#define CCA4758_F_CCA_RSA_VERIFY	75,3255
#define CCA4758_F_IBM_4758_CCA_CTRL	76,3295
#define CCA4758_F_IBM_4758_CCA_FINISH	77,3338
#define CCA4758_F_IBM_4758_CCA_INIT	78,3383
#define CCA4758_F_IBM_4758_LOAD_PRIVKEY	79,3426
#define CCA4758_F_IBM_4758_LOAD_PUBKEY	80,3473
#define CCA4758_R_ALREADY_LOADED	83,3540
#define CCA4758_R_ASN1_OID_UNKNOWN_FOR_MD	84,3580
#define CCA4758_R_COMMAND_NOT_IMPLEMENTED	85,3628
#define CCA4758_R_DSO_FAILURE	86,3676
#define CCA4758_R_FAILED_LOADING_PRIVATE_KEY	87,3714
#define CCA4758_R_FAILED_LOADING_PUBLIC_KEY	88,3765
#define CCA4758_R_NOT_LOADED	89,3815
#define CCA4758_R_SIZE_TOO_LARGE_OR_TOO_SMALL	90,3852
#define CCA4758_R_UNIT_FAILURE	91,3904
#define CCA4758_R_UNKNOWN_ALGORITHM_TYPE	92,3943

engines/e_4758cca_err.c,483
#define ERR_FUNC(68,2972
#define ERR_REASON(69,3014
static ERR_STRING_DATA CCA4758_str_functs[CCA4758_str_functs71,3063
static ERR_STRING_DATA CCA4758_str_reasons[CCA4758_str_reasons83,3561
static ERR_STRING_DATA CCA4758_lib_name[CCA4758_lib_name101,4357
static int CCA4758_lib_error_code=109,4455
static int CCA4758_error_init=110,4492
static void ERR_load_CCA4758_strings(112,4526
static void ERR_unload_CCA4758_strings(132,5018
static void ERR_CCA4758_error(148,5367

engines/vendor_defns/hw_4758_cca.h,1057
#define __HW_4758_CCA__10,536
  #define CCA_LIB_NAME 17,619
  #define CSNDPKX 19,654
  #define CSNDKRR 20,687
  #define CSNDPKE 21,720
  #define CSNDPKD 22,753
  #define CSNDDSV 23,786
  #define CSNDDSG 24,819
  #define CSNBRNG 25,852
  #define SECURITYAPI 27,886
  #define CCA_LIB_NAME 32,1021
  #define CSNDPKX 34,1056
  #define CSNDKRR 35,1086
  #define CSNDPKE 36,1116
  #define CSNDPKD 37,1146
  #define CSNDDSV 38,1176
  #define CSNDDSG 39,1206
  #define CSNBRNG 40,1236
  #define SECURITYAPI42,1267
typedef void (SECURITYAPI *F_KEYRECORDREAD)F_KEYRECORDREAD50,1358
typedef void (SECURITYAPI *F_RANDOMNUMBERGENERATE)F_RANDOMNUMBERGENERATE62,1828
typedef void (SECURITYAPI *F_DIGITALSIGNATUREGENERATE)F_DIGITALSIGNATUREGENERATE71,2170
typedef void (SECURITYAPI *F_DIGITALSIGNATUREVERIFY)F_DIGITALSIGNATUREVERIFY87,2862
typedef void (SECURITYAPI *F_PUBLICKEYEXTRACT)F_PUBLICKEYEXTRACT102,3497
typedef void   (SECURITYAPI *F_PKAENCRYPT)F_PKAENCRYPT115,4046
typedef void    (SECURITYAPI *F_PKADECRYPT)F_PKADECRYPT132,4806

engines/vendor_defns/cswift.h,4219
typedef long              SW_STATUS;25,1032
typedef unsigned char     SW_BYTE;26,1105
typedef unsigned short    SW_U16;27,1178
typedef __uint32_t        SW_U32;30,1291
typedef unsigned long     SW_U32;32,1331
  typedef struct _SW_U64 36,1444
      SW_U32 low32;37,1471
      SW_U32 high32;38,1491
  } SW_U64;39,1512
  typedef struct _SW_U64 43,1684
      SW_U32 low32;44,1711
      SW_U32 high32;45,1731
  } SW_U64;46,1752
#define SW_OK 50,1854
#define SW_ERR_BASE 51,1889
#define SW_ERR_NO_CARD 52,1929
#define SW_ERR_CARD_NOT_READY 53,2007
#define SW_ERR_TIME_OUT 55,2163
#define SW_ERR_NO_EXECUTE 57,2319
#define SW_ERR_INPUT_NULL_PTR 59,2475
#define SW_ERR_INPUT_SIZE 61,2631
#define SW_ERR_INVALID_HANDLE 63,2787
#define SW_ERR_PENDING 65,2943
#define SW_ERR_AVAILABLE 68,3177
#define SW_ERR_NO_PENDING 69,3255
#define SW_ERR_NO_MEMORY 70,3333
#define SW_ERR_BAD_ALGORITHM 71,3411
#define SW_ERR_MISSING_KEY 73,3567
#define SW_ERR_KEY_CMD_MISMATCH 77,3879
#define SW_ERR_NOT_IMPLEMENTED 84,4381
#define SW_ERR_BAD_COMMAND 86,4492
#define SW_ERR_BAD_ITEM_SIZE 87,4570
#define SW_ERR_BAD_ACCNUM 90,4804
#define SW_ERR_SELFTEST_FAIL 91,4882
#define SW_ERR_MISALIGN 96,5272
#define SW_ERR_OUTPUT_NULL_PTR 100,5584
#define SW_ERR_OUTPUT_SIZE 103,5773
#define SW_ERR_FIRMWARE_CHECKSUM 106,5958
#define SW_ERR_UNKNOWN_FIRMWARE 109,6149
#define SW_ERR_INTERRUPT 111,6261
#define SW_ERR_NVWRITE_FAIL 114,6495
#define SW_ERR_NVWRITE_RANGE 116,6651
#define SW_ERR_RNG_ERROR 118,6807
#define SW_ERR_DSS_FAILURE 120,6963
#define SW_ERR_MODEXP_FAILURE 121,7041
#define SW_ERR_ONBOARD_MEMORY 123,7197
#define SW_ERR_FIRMWARE_VERSION 125,7353
#define SW_ERR_ZERO_WORKING_ACCELERATOR 128,7543
#define SW_ALG_CRT 133,7688
#define SW_ALG_EXP 134,7718
#define SW_ALG_DSA 135,7748
#define SW_ALG_NVDATA 136,7778
#define SW_CMD_MODEXP_CRT 139,7830
#define SW_CMD_MODEXP 141,7978
#define SW_CMD_DSS_SIGN 142,8052
#define SW_CMD_DSS_VERIFY 143,8126
#define SW_CMD_RAND 144,8200
#define SW_CMD_NVREAD 145,8274
#define SW_CMD_NVWRITE 146,8348
typedef SW_U32            SW_ALGTYPE;148,8423
typedef SW_U32            SW_STATE;149,8496
typedef SW_U32            SW_COMMAND_CODE;150,8569
typedef SW_U32            SW_COMMAND_BITMAP[SW_COMMAND_BITMAP151,8642
typedef struct _SW_LARGENUMBER 153,8716
    SW_U32    nbytes;154,8749
    SW_BYTE*  value;155,8822
} SW_LARGENUMBER;157,8968
    typedef HANDLE          SW_OSHANDLE;161,9058
    #define SW_OS_INVALID_HANDLE 162,9138
    #define SW_CALLCONV 163,9193
    #define SW_MAC_CALLBACK_LEVEL_NO 167,9336
    #define SW_MAC_CALLBACK_LEVEL_HARDWARE 168,9385
    #define SW_MAC_CALLBACK_LEVEL_SECONDARY 169,9460
    typedef int             SW_MAC_CALLBACK_LEVEL;170,9530
    typedef int             SW_OSHANDLE;171,9581
    #define SW_OS_INVALID_HANDLE 172,9622
    #define SW_CALLCONV173,9661
    typedef int             SW_OSHANDLE;175,9711
    #define SW_OS_INVALID_HANDLE 176,9784
    #define SW_CALLCONV177,9823
typedef struct _SW_CRT 180,9856
    SW_LARGENUMBER  p;181,9881
    SW_LARGENUMBER  q;182,9954
    SW_LARGENUMBER  dmp1;183,10027
    SW_LARGENUMBER  dmq1;184,10100
    SW_LARGENUMBER  iqmp;185,10173
} SW_CRT;186,10246
typedef struct _SW_EXP 188,10257
    SW_LARGENUMBER  modulus;189,10282
    SW_LARGENUMBER  exponent;190,10356
} SW_EXP;191,10430
typedef struct _SW_DSA 193,10441
    SW_LARGENUMBER  p;194,10466
    SW_LARGENUMBER  q;195,10539
    SW_LARGENUMBER  g;196,10612
    SW_LARGENUMBER  key;197,10685
} SW_DSA;198,10758
typedef struct _SW_NVDATA 200,10769
    SW_U32 accnum;201,10797
    SW_U32 offset;202,10870
} SW_NVDATA;203,10943
typedef struct _SW_PARAM 205,10957
    SW_ALGTYPE    type;206,10984
        SW_CRT    crt;208,11069
        SW_EXP    exp;209,11092
        SW_DSA    dsa;210,11115
        SW_NVDATA nvdata;211,11138
    } up;212,11164
} SW_PARAM;213,11174
typedef SW_U32 SW_CONTEXT_HANDLE;215,11187
typedef SW_STATUS SW_CALLCONV t_swAcquireAccContext(220,11388
typedef SW_STATUS SW_CALLCONV t_swAttachKeyParam(221,11465
typedef SW_STATUS SW_CALLCONV t_swSimpleRequest(223,11608
typedef SW_STATUS SW_CALLCONV t_swReleaseAccContext(229,11953

engines/vendor_defns/atalla.h,526
typedef struct ItemStr15,619
	unsigned char *data;data17,645
	int len;18,667
	} Item;19,677
typedef struct RSAPrivateKeyStr21,687
	void *reserved;reserved23,722
	Item version;24,739
	Item modulus;25,754
	Item publicExponent;26,769
	Item privateExponent;27,791
	Item prime[prime28,814
	Item exponent[exponent29,830
	Item coefficient;30,849
	} RSAPrivateKey;31,868
typedef int tfnASI_GetPerformanceStatistics(39,1155
typedef int tfnASI_GetHardwareConfig(42,1245
typedef int tfnASI_RSAPrivateKeyOpFn(44,1322

engines/vendor_defns/aep.h,2718
#define AEP_R_OK 13,223
#define AEP_R_GENERAL_ERROR 16,327
#define AEP_R_HOST_MEMORY 19,416
#define AEP_R_FUNCTION_FAILED 21,476
#define AEP_R_ARGUMENTS_BAD 24,575
#define AEP_R_NO_TARGET_RESOURCES	26,635
#define AEP_R_SOCKERROR	29,723
#define AEP_R_SOCKEOF	32,811
#define AEP_R_CONNECTION_HANDLE_INVALID 35,871
#define AEP_R_TRANSACTION_HANDLE_INVALID	37,931
#define AEP_R_TRANSACTION_NOT_READY	40,1039
#define AEP_R_TRANSACTION_CLAIMED	43,1148
#define AEP_R_TIMED_OUT	46,1227
#define AEP_R_FXN_NOT_IMPLEMENTED	48,1269
#define AEP_R_TARGET_ERROR	50,1318
#define AEP_R_DAEMON_ERROR	53,1398
#define AEP_R_INVALID_CTX_ID	56,1461
#define AEP_R_NO_KEY_MANAGER	58,1506
#define AEP_R_MUTEX_BAD 61,1579
#define AEP_R_AEPAPI_NOT_INITIALIZED	64,1697
#define AEP_R_AEPAPI_ALREADY_INITIALIZED	67,1791
#define AEP_R_NO_MORE_CONNECTION_HNDLS	70,1897
typedef unsigned char				AEP_U8;79,2023
typedef char					AEP_CHAR;82,2091
typedef AEP_U8					AEP_BBOOL;85,2151
typedef unsigned short				AEP_U16;88,2224
typedef unsigned int				AEP_U32;92,2334
typedef unsigned long				AEP_U32;94,2373
typedef unsigned long				AEP_U64;98,2442
typedef struct { unsigned long l1,100,2482
typedef struct { unsigned long l1, l2;100,2482
typedef struct { unsigned long l1, l2; }	AEP_U64;100,2482
typedef AEP_U32			AEP_FLAGS;104,2591
typedef AEP_U8	    	*AEP_U8_PTR;AEP_U8_PTR106,2621
typedef AEP_CHAR    	*AEP_CHAR_PTR;AEP_CHAR_PTR107,2654
typedef AEP_U32			*AEP_U32_PTR;AEP_U32_PTR108,2690
typedef AEP_U64			*AEP_U64_PTR;AEP_U64_PTR109,2722
typedef void        	*AEP_VOID_PTR;AEP_VOID_PTR110,2754
typedef AEP_VOID_PTR 	*AEP_VOID_PTR_PTR;AEP_VOID_PTR_PTR113,2858
typedef AEP_U32					AEP_CONNECTION_HNDL;116,2946
typedef AEP_CONNECTION_HNDL 	*AEP_CONNECTION_HNDL_PTR;AEP_CONNECTION_HNDL_PTR119,3028
typedef AEP_U32					AEP_TRANSACTION_ID;123,3192
typedef AEP_TRANSACTION_ID 		*AEP_TRANSACTION_ID_PTR;AEP_TRANSACTION_ID_PTR126,3287
typedef AEP_U32					AEP_RV;129,3364
#define MAX_PROCESS_CONNECTIONS 131,3393
#define RAND_BLK_SIZE 133,3430
        NotConnected=136,3472
        Connected=137,3499
        InUse=138,3534
} AEP_CONNECTION_STATE;139,3568
typedef struct AEP_CONNECTION_ENTRY{AEP_CONNECTION_ENTRY142,3594
        AEP_CONNECTION_STATE    conn_state;143,3631
        AEP_CONNECTION_HNDL     conn_hndl;144,3675
} AEP_CONNECTION_ENTRY;145,3718
typedef AEP_RV t_AEP_OpenConnection(148,3744
typedef AEP_RV t_AEP_CloseConnection(149,3819
typedef AEP_RV t_AEP_ModExp(151,3891
typedef AEP_RV t_AEP_ModExpCrt(157,4087
typedef AEP_RV t_AEP_GenRandom(166,4393
typedef AEP_RV t_AEP_Initialize(173,4587
typedef AEP_RV t_AEP_Finalize(174,4644
typedef AEP_RV t_AEP_SetBNCallBacks(175,4681

engines/vendor_defns/hwcryptohook.h,2442
#define HWCRYPTOHOOK_H72,3265
#define HWCRYPTOHOOK_DECLARE_APPTYPES 78,3370
#define HWCRYPTOHOOK_ERROR_FAILED 81,3418
#define HWCRYPTOHOOK_ERROR_FALLBACK 82,3457
#define HWCRYPTOHOOK_ERROR_MPISIZE 83,3496
typedef struct HWCryptoHook_MutexValue HWCryptoHook_Mutex;96,4060
typedef struct HWCryptoHook_CondVarValue HWCryptoHook_CondVar;97,4119
typedef struct HWCryptoHook_PassphraseContextValue HWCryptoHook_PassphraseContext;98,4182
typedef struct HWCryptoHook_CallerContextValue HWCryptoHook_CallerContext;99,4265
typedef struct HWCryptoHook_Context *HWCryptoHook_ContextHandle;HWCryptoHook_ContextHandle107,4545
typedef struct HWCryptoHook_RSAKey *HWCryptoHook_RSAKeyHandle;HWCryptoHook_RSAKeyHandle108,4610
  char *buf;buf111,4691
  size_t size;112,4704
} HWCryptoHook_ErrMsgBuf;113,4719
typedef struct HWCryptoHook_MPIStruct 129,5430
  unsigned char *buf;buf130,5470
  size_t size;131,5492
} HWCryptoHook_MPI;132,5507
#define HWCryptoHook_InitFlags_FallbackModExp 144,5999
#define HWCryptoHook_InitFlags_FallbackRSAImmed 145,6057
#define HWCryptoHook_InitFlags_SimpleForkCheck 156,6631
  unsigned long flags;170,7212
  void *logstream;logstream171,7235
  size_t limbsize;173,7290
  int mslimbfirst;174,7370
  int msbytefirst;175,7402
  int maxmutexes;202,8706
  int maxsimultaneous;203,8724
  size_t mutexsize;204,8747
  int (*mutex_init)mutex_init205,8767
  int (*mutex_acquire)mutex_acquire206,8844
  void (*mutex_release)mutex_release207,8889
  void (*mutex_destroy)mutex_destroy208,8935
  size_t condvarsize;215,9224
  int (*condvar_init)condvar_init216,9246
  int (*condvar_wait)condvar_wait217,9327
  void (*condvar_signal)condvar_signal218,9394
  void (*condvar_broadcast)condvar_broadcast219,9443
  void (*condvar_destroy)condvar_destroy220,9495
  int (*getpassphrase)getpassphrase233,10099
  int (*getphystoken)getphystoken250,10954
  void (*logmessage)logmessage287,12818
} HWCryptoHook_InitInfo;319,14526
HWCryptoHook_ContextHandle HWCryptoHook_Init_t(322,14560
void HWCryptoHook_Finish_t(355,16059
int HWCryptoHook_RandomBytes_t(360,16255
int HWCryptoHook_ModExp_t(366,16522
int HWCryptoHook_RSAImmedPub_t(375,16891
int HWCryptoHook_ModExpCRT_t(384,17300
int HWCryptoHook_RSAImmedPriv_t(396,17849
int HWCryptoHook_RSALoadKey_t(423,19086
int HWCryptoHook_RSAGetPublicKey_t(447,20357
int HWCryptoHook_RSAUnloadKey_t(473,21564
int HWCryptoHook_RSA_t(479,21845

engines/vendor_defns/hw_ubsec.h,1390
#define MAX_PUBLIC_KEY_BITS 22,420
#define MAX_PUBLIC_KEY_BYTES 23,455
#define SHA_BIT_SIZE 24,493
#define MAX_CRYPTO_KEY_LENGTH 25,521
#define MAX_MAC_KEY_LENGTH 26,554
#define UBSEC_CRYPTO_DEVICE_NAME 27,584
#define UBSEC_KEY_DEVICE_NAME 28,652
#define UBSEC_MATH_MODADD 31,742
#define UBSEC_MATH_MODSUB 32,775
#define UBSEC_MATH_MODMUL 33,808
#define UBSEC_MATH_MODEXP 34,841
#define UBSEC_MATH_MODREM 35,874
#define UBSEC_MATH_MODINV 36,907
typedef long ubsec_MathCommand_t;38,941
typedef long ubsec_RNGCommand_t;39,975
typedef struct ubsec_crypto_context_s 41,1009
	unsigned int	flags;42,1049
	unsigned char	crypto[crypto43,1070
	unsigned char 	auth[auth44,1116
} ubsec_crypto_context_t, *ubsec_crypto_context_p;ubsec_crypto_context_p45,1158
typedef int t_UBSEC_ubsec_bytes_to_bits(51,1299
typedef int t_UBSEC_ubsec_bits_to_bytes(53,1370
typedef int t_UBSEC_ubsec_open(55,1422
typedef int t_UBSEC_ubsec_close(57,1478
typedef int t_UBSEC_diffie_hellman_generate_ioctl 59,1520
typedef int t_UBSEC_diffie_hellman_agree_ioctl 64,1757
typedef int t_UBSEC_rsa_mod_exp_ioctl 68,1935
typedef int t_UBSEC_rsa_mod_exp_crt_ioctl 72,2103
typedef int t_UBSEC_dsa_sign_ioctl 78,2378
typedef int t_UBSEC_dsa_verify_ioctl 85,2694
typedef int t_UBSEC_math_accelerate_ioctl(92,3000
typedef int t_UBSEC_rng_ioctl(97,3277
typedef int t_UBSEC_max_key_len_ioctl(100,3386

engines/vendor_defns/sureware.h,1006
#define SW_EXPORT	21,1003
#define SW_EXPORT23,1052
#define SUREWAREHOOK_ERROR_FAILED	29,1118
#define SUREWAREHOOK_ERROR_FALLBACK	30,1156
#define SUREWAREHOOK_ERROR_UNIT_FAILURE 31,1196
#define SUREWAREHOOK_ERROR_DATA_SIZE 32,1239
#define SUREWAREHOOK_ERROR_INVALID_PAD 33,1279
typedef int SureWareHook_Init_t(45,1702
typedef void SureWareHook_Finish_t(50,1855
typedef int SureWareHook_Rand_Bytes_t(68,2527
typedef int SureWareHook_Rand_Seed_t(83,3123
typedef int SureWareHook_Load_Privkey_t(98,3691
typedef int SureWareHook_Info_Pubkey_t(113,4306
typedef int SureWareHook_Load_Rsa_Pubkey_t(129,4904
typedef int SureWareHook_Load_Dsa_Pubkey_t(147,5655
typedef void SureWareHook_Free_t(156,6004
#define SUREWARE_PKCS1_PAD 159,6116
#define SUREWARE_ISO9796_PAD 160,6145
#define SUREWARE_NO_PAD 161,6176
typedef int SureWareHook_Rsa_Priv_Dec_t(179,6864
typedef int SureWareHook_Rsa_Sign_t(200,7753
typedef int SureWareHook_Dsa_Sign_t(217,8465
typedef int SureWareHook_Mod_Exp_t(234,9037

engines/e_atalla_err.h,606
#define HEADER_ATALLA_ERR_H56,2658
#define ATALLAerr(69,3073
#define ATALLA_F_ATALLA_CTRL	74,3208
#define ATALLA_F_ATALLA_FINISH	75,3245
#define ATALLA_F_ATALLA_INIT	76,3284
#define ATALLA_F_ATALLA_MOD_EXP	77,3321
#define ATALLA_F_ATALLA_RSA_MOD_EXP	78,3361
#define ATALLA_R_ALREADY_LOADED	81,3425
#define ATALLA_R_BN_CTX_FULL	82,3465
#define ATALLA_R_BN_EXPAND_FAIL	83,3502
#define ATALLA_R_CTRL_COMMAND_NOT_IMPLEMENTED	84,3542
#define ATALLA_R_MISSING_KEY_COMPONENTS	85,3594
#define ATALLA_R_NOT_LOADED	86,3641
#define ATALLA_R_REQUEST_FAILED	87,3677
#define ATALLA_R_UNIT_FAILURE	88,3717

e_os.h,7197
#define HEADER_E_OS_H60,3205
#undef REF_PRINT75,3569
#define REF_PRINT(76,3586
#define DEVRANDOM 82,3831
#define DEVRANDOM_EGD 88,4132
#  define NO_SYS_PARAM_H92,4262
#  define NO_CHMOD93,4287
#  define NO_SYSLOG94,4306
#    define MAC_OS_pre_X100,4426
#    define NO_SYS_TYPES_H101,4451
#  define NO_SYS_PARAM_H103,4487
#  define NO_CHMOD104,4512
#  define NO_SYSLOG105,4531
#  undef  DEVRANDOM106,4551
#  define GETPID_IS_MEANINGLESS107,4571
#  define MS_STATIC	117,4943
#  define MS_STATIC119,4976
#  define WIN32123,5054
#  define WINDOWS126,5131
#  define MSDOS129,5206
#  define GETPID_IS_MEANINGLESS133,5284
#define get_last_sys_error(137,5337
#define clear_sys_error(138,5381
#define WIN_CONSOLE_BUG140,5443
#define get_last_sys_error(143,5480
#define clear_sys_error(144,5515
#define get_last_socket_error(148,5578
#define clear_socket_error(149,5628
#define readsocket(150,5676
#define writesocket(151,5722
#define WATT32153,5794
#define get_last_socket_error(154,5809
#define clear_socket_error(155,5847
#define closesocket(156,5884
#define readsocket(157,5919
#define writesocket(158,5959
#define get_last_socket_error(160,6028
#define clear_socket_error(161,6066
#define closesocket(162,6103
#define readsocket(163,6146
#define writesocket(164,6205
#define get_last_socket_error(166,6291
#define clear_socket_error(167,6329
#define ioctlsocket(168,6369
#define closesocket(169,6414
#define readsocket(170,6455
#define writesocket(171,6507
#define get_last_socket_error(173,6594
#define clear_socket_error(174,6632
#define ioctlsocket(175,6669
#define closesocket(176,6724
#define readsocket(177,6761
#define writesocket(178,6809
#define get_last_socket_error(180,6902
#define clear_socket_error(181,6940
#define FIONBIO 182,6980
#define ioctlsocket(183,7008
#define readsocket(184,7086
#define writesocket(185,7138
#define get_last_socket_error(188,7254
#define clear_socket_error(189,7292
#define closesocket(190,7332
#define ioctlsocket(191,7373
#define readsocket(193,7444
#define writesocket(194,7496
#define readsocket(196,7554
#define writesocket(197,7613
#define get_last_socket_error(200,7685
#define clear_socket_error(201,7735
#define readsocket(202,7783
#define writesocket(203,7830
#define get_last_socket_error(206,7891
#define clear_socket_error(207,7929
#define ioctlsocket(208,7966
#define closesocket(209,8006
#define readsocket(210,8039
#define writesocket(211,8083
#  define MS_CALLBACK	215,8171
#  define MS_FAR	216,8206
#  define MS_CALLBACK218,8234
#  define MS_FAR219,8256
#  undef OPENSSL_NO_FP_API223,8305
#  define OPENSSL_NO_FP_API224,8332
#    define _setmode 235,8551
#    define _O_TEXT 236,8580
#    define _O_BINARY 237,8607
#    undef DEVRANDOM238,8638
#    define DEVRANDOM 239,8659
#    define S_IFDIR	243,8744
#    define S_IFMT	247,8800
#    define NO_SYSLOG251,8882
#  define NO_DIRENT253,8913
#      define _WIN32_WINNT 271,9802
#      define strlen(291,10548
static unsigned int _strlen31(293,10610
#      undef isspace303,10917
#      undef isdigit304,10938
#      undef isalnum305,10959
#      undef isupper306,10980
#      undef isxdigit307,11001
#        undef stdin311,11121
#        undef stdout312,11142
#        undef stderr313,11164
#        define stdin 315,11215
#        define stdout 316,11257
#        define stderr 317,11299
#        undef stdin319,11386
#        undef stdout320,11407
#        undef stderr321,11429
#        define stdin 329,11822
#        define stdout 330,11862
#        define stderr 331,11902
#    define OPENSSL_NO_POSIX_IO339,12042
#    define _setmode 343,12113
#    define _O_TEXT 344,12142
#    define _O_BINARY 345,12169
#    define _int64 346,12200
#    define _kbhit 347,12227
#  define EXIT(350,12262
#  define LIST_SEPARATOR_CHAR 351,12288
#    define X_OK	353,12337
#    define W_OK	356,12380
#    define R_OK	359,12423
#  define OPENSSL_CONF	361,12451
#  define SSLEAY_CONF	362,12488
#  define NUL_DEV	363,12523
#  define RFILE	364,12547
#    define DEFAULT_HOME 366,12598
#    define DEFAULT_HOME 368,12635
#    define VMS 374,12738
#    define OPENSSL_CONF	383,12981
#    define SSLEAY_CONF	384,13020
#    define RFILE	385,13058
#    define LIST_SEPARATOR_CHAR 386,13084
#    define NUL_DEV	387,13120
#    undef DEVRANDOM389,13218
#    define EXIT(405,14044
#    define NO_SYS_PARAM_H412,14340
#    define NO_SYS_TYPES_H417,14452
#    undef  DEVRANDOM418,14479
#      define getpid 420,14525
#    define NO_SYSLOG427,14704
#    define _setmode 428,14726
#    define _kbhit 429,14755
#    define _O_TEXT 430,14780
#    define _O_BINARY 431,14807
#    define OPENSSL_CONF 432,14838
#    define SSLEAY_CONF 433,14879
#    define RFILE 434,14919
#    define LIST_SEPARATOR_CHAR 435,14947
#    define EXIT(436,14983
#      define NO_SYS_PARAM_H441,15115
#      define pid_t 452,15377
#      define setvbuf(457,15653
       typedef unsigned long clock_t;458,15712
#    define OPENSSL_CONF	465,15856
#    define SSLEAY_CONF	466,15895
#    define RFILE	467,15933
#    define LIST_SEPARATOR_CHAR 468,15959
#    define NUL_DEV	469,15995
#    define EXIT(470,16028
#  define SSLeay_getpid(473,16067
#      define SSLeay_Write(485,16243
#      define SSLeay_Read(486,16282
#      define SHUTDOWN(487,16320
#      define SHUTDOWN2(488,16358
#        define getservbyname 491,16475
#        undef getservbyname498,16702
#        define socket(509,17084
#        define accept(510,17135
#      define SSLeay_Write(512,17199
#      define SSLeay_Read(513,17253
#      define SHUTDOWN(514,17306
#      define SHUTDOWN2(515,17373
#      define SSLeay_Write(517,17451
#      define SSLeay_Read(518,17502
#      define SHUTDOWN(519,17549
#      define SHUTDOWN2(520,17589
#    define SSLeay_Write(526,17700
#    define SSLeay_Read(527,17761
#    define SHUTDOWN(528,17826
#    define SHUTDOWN2(529,17872
#        define INVALID_SOCKET 543,18320
#      define SSLeay_Write(547,18416
#      define SSLeay_Read(548,18472
#      define SHUTDOWN(549,18525
#      define SHUTDOWN2(550,18594
#    define SSLeay_Read(612,20047
#    define SSLeay_Write(613,20100
#    define SHUTDOWN(614,20154
#    define SHUTDOWN2(615,20223
#    define INVALID_SOCKET	617,20319
#      define OPENSSL_USE_IPV6 626,20597
#      define OPENSSL_USE_IPV6 628,20640
# define memmove(639,20938
# define strtoul(640,20985
# define strerror(642,21099
# define memcmp 646,21290
#  define OPENSSL_EXIT(651,21396
#  define OPENSSL_EXIT(653,21439
#define DG_GCC_BUG	659,21568
#define IRIX_CC_BUG	662,21625
#define IRIX_CC_BUG	665,21723
#  define strcasecmp 669,21844
#  define strncasecmp 670,21874
#  define strcasecmp 674,22012
#  define strncasecmp 675,22052
#  define OPENSSL_IMPLEMENTS_strncasecmp676,22094
#  define strcasecmp 678,22186
#  define strncasecmp 679,22215
#    define strcasecmp 683,22331
#    define strncasecmp 684,22362
# define NO_SYSLOG691,22517
#define TTY_STRUCT 700,22652
#define sleep(702,22676
#define getpid 708,22791
#define SO_ERROR 722,23211
#define NO_SYS_UN723,23230
#define IPPROTO_IP 724,23248

bugs/stream.c,49
main(71,3422
int des(79,3508
int rc4(107,4107

bugs/dggccbug.c,30
void inc(24,738
main(30,774

bugs/alpha.c,55
#define TYPE 70,3490
void func(72,3520
main(79,3615

bugs/ultrixcc.c,27
main(14,294
int f(20,322

bugs/sgiccbug.c,128
static unsigned long a[a20,444
static unsigned long b[b21,517
static unsigned long c[c22,590
main(24,664
int sub(34,996

MacOS/Randomizer.h,503
class CRandomizer7,103
	bool		mSupportsLargeVolumes;CRandomizer::mSupportsLargeVolumes31,617
	bool		mIsPowerPC;CRandomizer::mIsPowerPC32,647
	bool		mIs601;CRandomizer::mIs60133,666
	double		mTimebaseTicksPerMillisec;CRandomizer::mTimebaseTicksPerMillisec36,697
	unsigned long	mLastPeriodicTicks;CRandomizer::mLastPeriodicTicks37,733
	long		mSamplePeriod;CRandomizer::mSamplePeriod40,785
	Point		mLastMouse;CRandomizer::mLastMouse41,807
	long		mMouseStill;CRandomizer::mMouseStill42,827

MacOS/buildinf.h,69
#  define CFLAGS	2,20
#  define PLATFORM	3,50
#  define DATE	4,77

MacOS/_MWERKS_GUSI_prefix.h,77
#define B_ENDIAN2,24
#define MAC_OS_GUSI_SOURCE7,93
#define MONOLITH9,127

MacOS/GetHTTPS.src/MacSocket.h,108
	kMacSocket_TimeoutErr 12,64
typedef OSErr (*MacSocket_IdleWaitCallback)MacSocket_IdleWaitCallback18,166

MacOS/_MWERKS_prefix.h,77
#define B_ENDIAN2,24
#define MAC_OS_GUSI_SOURCE7,93
#define MONOLITH9,127

MacOS/opensslconf.h,714
#define OPENSSLDIR 5,157
#define IDEA_INT 10,257
#define MD2_INT 14,342
#define RC2_INT 19,475
#define RC4_INT 31,894
#define RC4_CHUNK 38,1084
#define DES_LONG 46,1320
#define CONFIG_HEADER_BN_H51,1423
#  define BN_LLONG53,1473
#  undef BN_LLONG55,1498
#undef SIXTY_FOUR_BIT_LONG64,1770
#undef SIXTY_FOUR_BIT65,1797
#define THIRTY_TWO_BIT66,1819
#undef SIXTEEN_BIT67,1842
#undef EIGHT_BIT68,1861
#define CONFIG_HEADER_RC4_LOCL_H72,1955
#undef RC4_INDEX75,2079
#define CONFIG_HEADER_BF_LOCL_H79,2171
#define BF_PTR80,2203
#define CONFIG_HEADER_DES_LOCL_H84,2318
#define DES_PTR88,2466
#define DES_RISC195,2668
#undef DES_RISC299,2712
#define DES_UNROLL109,2968
#define MD32_XARRAY115,3047

ssl/s3_pkt.c,403
#define USE_SOCKETS114,5861
int ssl3_read_n(124,6139
static int ssl3_get_record(284,10333
int ssl3_do_uncompress(535,17201
int ssl3_do_compress(553,17498
int ssl3_write_bytes(576,17938
static int do_ssl3_write(628,18866
int ssl3_write_pending(854,24311
int ssl3_read_bytes(936,26881
int ssl3_do_change_cipher_spec(1416,39898
int ssl3_send_alert(1463,41006
int ssl3_dispatch_alert(1484,41760

ssl/ssl3.h,13913
#define HEADER_SSL3_H 118,6113
#define SSL3_CK_SCSV	132,6392
#define SSL3_CK_RSA_NULL_MD5	134,6428
#define SSL3_CK_RSA_NULL_SHA	135,6470
#define SSL3_CK_RSA_RC4_40_MD5 136,6512
#define SSL3_CK_RSA_RC4_128_MD5	137,6557
#define SSL3_CK_RSA_RC4_128_SHA	138,6602
#define SSL3_CK_RSA_RC2_40_MD5	139,6647
#define SSL3_CK_RSA_IDEA_128_SHA	140,6691
#define SSL3_CK_RSA_DES_40_CBC_SHA	141,6736
#define SSL3_CK_RSA_DES_64_CBC_SHA	142,6783
#define SSL3_CK_RSA_DES_192_CBC3_SHA	143,6830
#define SSL3_CK_DH_DSS_DES_40_CBC_SHA	145,6880
#define SSL3_CK_DH_DSS_DES_64_CBC_SHA	146,6930
#define SSL3_CK_DH_DSS_DES_192_CBC3_SHA 147,6980
#define SSL3_CK_DH_RSA_DES_40_CBC_SHA	148,7032
#define SSL3_CK_DH_RSA_DES_64_CBC_SHA	149,7082
#define SSL3_CK_DH_RSA_DES_192_CBC3_SHA 150,7132
#define SSL3_CK_EDH_DSS_DES_40_CBC_SHA	152,7185
#define SSL3_CK_EDH_DSS_DES_64_CBC_SHA	153,7236
#define SSL3_CK_EDH_DSS_DES_192_CBC3_SHA	154,7287
#define SSL3_CK_EDH_RSA_DES_40_CBC_SHA	155,7339
#define SSL3_CK_EDH_RSA_DES_64_CBC_SHA	156,7390
#define SSL3_CK_EDH_RSA_DES_192_CBC3_SHA	157,7441
#define SSL3_CK_ADH_RC4_40_MD5	159,7494
#define SSL3_CK_ADH_RC4_128_MD5	160,7538
#define SSL3_CK_ADH_DES_40_CBC_SHA	161,7583
#define SSL3_CK_ADH_DES_64_CBC_SHA	162,7630
#define SSL3_CK_ADH_DES_192_CBC_SHA	163,7677
	#define SSL3_CK_FZA_DMS_NULL_SHA	166,7732
	#define SSL3_CK_FZA_DMS_FZA_SHA	167,7778
	#define SSL3_CK_FZA_DMS_RC4_SHA	171,7996
#define SSL3_CK_KRB5_DES_64_CBC_SHA	177,8101
#define SSL3_CK_KRB5_DES_192_CBC3_SHA	178,8149
#define SSL3_CK_KRB5_RC4_128_SHA	179,8199
#define SSL3_CK_KRB5_IDEA_128_CBC_SHA	180,8244
#define SSL3_CK_KRB5_DES_64_CBC_MD5 181,8301
#define SSL3_CK_KRB5_DES_192_CBC3_MD5 182,8355
#define SSL3_CK_KRB5_RC4_128_MD5	183,8411
#define SSL3_CK_KRB5_IDEA_128_CBC_MD5 184,8463
#define SSL3_CK_KRB5_DES_40_CBC_SHA 186,8515
#define SSL3_CK_KRB5_RC2_40_CBC_SHA 187,8564
#define SSL3_CK_KRB5_RC4_40_SHA	188,8613
#define SSL3_CK_KRB5_DES_40_CBC_MD5 189,8659
#define SSL3_CK_KRB5_RC2_40_CBC_MD5 190,8708
#define SSL3_CK_KRB5_RC4_40_MD5	191,8757
#define SSL3_TXT_RSA_NULL_MD5	193,8804
#define SSL3_TXT_RSA_NULL_SHA	194,8847
#define SSL3_TXT_RSA_RC4_40_MD5 195,8890
#define SSL3_TXT_RSA_RC4_128_MD5	196,8938
#define SSL3_TXT_RSA_RC4_128_SHA	197,8982
#define SSL3_TXT_RSA_RC2_40_MD5	198,9026
#define SSL3_TXT_RSA_IDEA_128_SHA	199,9078
#define SSL3_TXT_RSA_DES_40_CBC_SHA	200,9128
#define SSL3_TXT_RSA_DES_64_CBC_SHA	201,9183
#define SSL3_TXT_RSA_DES_192_CBC3_SHA	202,9234
#define SSL3_TXT_DH_DSS_DES_40_CBC_SHA	204,9289
#define SSL3_TXT_DH_DSS_DES_64_CBC_SHA	205,9354
#define SSL3_TXT_DH_DSS_DES_192_CBC3_SHA 206,9415
#define SSL3_TXT_DH_RSA_DES_40_CBC_SHA	207,9479
#define SSL3_TXT_DH_RSA_DES_64_CBC_SHA	208,9544
#define SSL3_TXT_DH_RSA_DES_192_CBC3_SHA 209,9605
#define SSL3_TXT_EDH_DSS_DES_40_CBC_SHA	211,9670
#define SSL3_TXT_EDH_DSS_DES_64_CBC_SHA	212,9737
#define SSL3_TXT_EDH_DSS_DES_192_CBC3_SHA	213,9800
#define SSL3_TXT_EDH_RSA_DES_40_CBC_SHA	214,9865
#define SSL3_TXT_EDH_RSA_DES_64_CBC_SHA	215,9932
#define SSL3_TXT_EDH_RSA_DES_192_CBC3_SHA	216,9995
#define SSL3_TXT_ADH_RC4_40_MD5	218,10061
#define SSL3_TXT_ADH_RC4_128_MD5	219,10113
#define SSL3_TXT_ADH_DES_40_CBC_SHA	220,10161
#define SSL3_TXT_ADH_DES_64_CBC_SHA	221,10220
#define SSL3_TXT_ADH_DES_192_CBC_SHA	222,10275
	#define SSL3_TXT_FZA_DMS_NULL_SHA	225,10339
	#define SSL3_TXT_FZA_DMS_FZA_SHA	226,10390
	#define SSL3_TXT_FZA_DMS_RC4_SHA	227,10443
#define SSL3_TXT_KRB5_DES_64_CBC_SHA	230,10500
#define SSL3_TXT_KRB5_DES_192_CBC3_SHA	231,10557
#define SSL3_TXT_KRB5_RC4_128_SHA	232,10617
#define SSL3_TXT_KRB5_IDEA_128_CBC_SHA	233,10667
#define SSL3_TXT_KRB5_DES_64_CBC_MD5 234,10734
#define SSL3_TXT_KRB5_DES_192_CBC3_MD5 235,10797
#define SSL3_TXT_KRB5_RC4_128_MD5	236,10863
#define SSL3_TXT_KRB5_IDEA_128_CBC_MD5 237,10913
#define SSL3_TXT_KRB5_DES_40_CBC_SHA 239,10975
#define SSL3_TXT_KRB5_RC2_40_CBC_SHA 240,11037
#define SSL3_TXT_KRB5_RC4_40_SHA	241,11099
#define SSL3_TXT_KRB5_DES_40_CBC_MD5 242,11153
#define SSL3_TXT_KRB5_RC2_40_CBC_MD5 243,11215
#define SSL3_TXT_KRB5_RC4_40_MD5	244,11277
#define SSL3_SSL_SESSION_ID_LENGTH	246,11332
#define SSL3_MAX_SSL_SESSION_ID_LENGTH	247,11371
#define SSL3_MASTER_SECRET_SIZE	249,11415
#define SSL3_RANDOM_SIZE	250,11452
#define SSL3_SESSION_ID_SIZE	251,11482
#define SSL3_RT_HEADER_LENGTH	252,11516
# define SSL3_ALIGN_PAYLOAD	261,11981
#  undef SSL3_ALIGN_PAYLOAD265,12108
#define SSL3_RT_MAX_MD_SIZE	274,12326
#define	SSL_RT_MAX_CIPHER_BLOCK_SIZE	279,12435
#define SSL3_RT_MAX_EXTRA	281,12477
#define SSL3_RT_MAX_PLAIN_LENGTH	284,12575
#define SSL3_RT_MAX_COMPRESSED_OVERHEAD	286,12680
#define SSL3_RT_MAX_ENCRYPTED_OVERHEAD	292,12923
#define SSL3_RT_SEND_MAX_ENCRYPTED_OVERHEAD 298,13101
#define SSL3_RT_MAX_COMPRESSED_LENGTH	304,13299
#define SSL3_RT_MAX_COMPRESSED_LENGTH	306,13369
#define SSL3_RT_MAX_ENCRYPTED_LENGTH	309,13477
#define SSL3_RT_MAX_PACKET_SIZE	311,13581
#define SSL3_MD_CLIENT_FINISHED_CONST	314,13672
#define SSL3_MD_SERVER_FINISHED_CONST	315,13729
#define SSL3_VERSION	317,13787
#define SSL3_VERSION_MAJOR	318,13817
#define SSL3_VERSION_MINOR	319,13850
#define SSL3_RT_CHANGE_CIPHER_SPEC	321,13884
#define SSL3_RT_ALERT	322,13922
#define SSL3_RT_HANDSHAKE	323,13949
#define SSL3_RT_APPLICATION_DATA	324,13979
#define TLS1_RT_HEARTBEAT	325,14015
#define SSL3_AL_WARNING	327,14046
#define SSL3_AL_FATAL	328,14074
#define SSL3_AD_CLOSE_NOTIFY	330,14101
#define SSL3_AD_UNEXPECTED_MESSAGE	331,14134
#define SSL3_AD_BAD_RECORD_MAC	332,14184
#define SSL3_AD_DECOMPRESSION_FAILURE	333,14231
#define SSL3_AD_HANDSHAKE_FAILURE	334,14284
#define SSL3_AD_NO_CERTIFICATE	335,14333
#define SSL3_AD_BAD_CERTIFICATE	336,14368
#define SSL3_AD_UNSUPPORTED_CERTIFICATE	337,14404
#define SSL3_AD_CERTIFICATE_REVOKED	338,14447
#define SSL3_AD_CERTIFICATE_EXPIRED	339,14486
#define SSL3_AD_CERTIFICATE_UNKNOWN	340,14525
#define SSL3_AD_ILLEGAL_PARAMETER	341,14564
#define TLS1_HB_REQUEST	343,14614
#define TLS1_HB_RESPONSE	344,14641
typedef struct ssl3_record_st348,14701
/*r */	int type;350,14734
/*rw*/	unsigned int length;351,14786
/*r */	unsigned int off;352,14848
/*rw*/	unsigned char *data;data353,14914
/*rw*/	unsigned char *input;input354,14978
/*r */	unsigned char *comp;comp355,15042
/*r */  unsigned long epoch;356,15121
/*r */  unsigned char seq_num[seq_num357,15189
	} SSL3_RECORD;358,15262
typedef struct ssl3_buffer_st360,15279
	unsigned char *buf;buf362,15312
	size_t len;364,15436
	int offset;365,15479
	int left;366,15531
	} SSL3_BUFFER;367,15582
#define SSL3_CT_RSA_SIGN	371,15607
#define SSL3_CT_DSS_SIGN	372,15636
#define SSL3_CT_RSA_FIXED_DH	373,15665
#define SSL3_CT_DSS_FIXED_DH	374,15698
#define SSL3_CT_RSA_EPHEMERAL_DH	375,15731
#define SSL3_CT_DSS_EPHEMERAL_DH	376,15767
#define SSL3_CT_FORTEZZA_DMS	377,15803
#define SSL3_CT_NUMBER	382,15985
#define SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS	385,16014
#define SSL3_FLAGS_DELAY_CLIENT_FINISHED	386,16063
#define SSL3_FLAGS_POP_BUFFER	387,16111
#define TLS1_FLAGS_TLS_PADDING_BUG	388,16150
#define TLS1_FLAGS_SKIP_CERT_VERIFY	389,16193
#define TLS1_FLAGS_KEEP_HANDSHAKE	390,16237
#define SSL3_FLAGS_SGC_RESTART_DONE	401,16736
typedef struct ssl3_state_st405,16812
	long flags;407,16844
	int delay_buf_pop_ret;408,16857
	unsigned char read_sequence[read_sequence410,16882
	int read_mac_secret_size;411,16915
	unsigned char read_mac_secret[read_mac_secret412,16942
	unsigned char write_sequence[write_sequence413,16991
	int write_mac_secret_size;414,17025
	unsigned char write_mac_secret[write_mac_secret415,17053
	unsigned char server_random[server_random417,17104
	unsigned char client_random[client_random418,17152
	int need_empty_fragments;421,17259
	int empty_fragment_done;422,17286
	int init_extra;425,17375
	SSL3_BUFFER rbuf;427,17393
	SSL3_BUFFER wbuf;428,17441
	SSL3_RECORD rrec;430,17491
	SSL3_RECORD wrec;431,17549
	unsigned char alert_fragment[alert_fragment435,17698
	unsigned int alert_fragment_len;436,17732
	unsigned char handshake_fragment[handshake_fragment437,17766
	unsigned int handshake_fragment_len;438,17804
	unsigned int wnum;441,17890
	int wpend_tot;442,17944
	int wpend_type;443,17988
	int wpend_ret;444,18005
	const unsigned char *wpend_buf;wpend_buf445,18054
	BIO *handshake_buffer;handshake_buffer448,18153
	EVP_MD_CTX **handshake_dgst;handshake_dgst452,18328
	int change_cipher_spec;455,18467
	int warn_alert;457,18493
	int fatal_alert;458,18510
	int alert_dispatch;461,18638
	unsigned char send_alert[send_alert462,18659
	int renegotiate;466,18817
	int total_renegotiations;467,18835
	int num_renegotiations;468,18862
	int in_read_app_data;470,18888
	void *client_opaque_prf_input;client_opaque_prf_input475,19118
	size_t client_opaque_prf_input_len;476,19150
	void *server_opaque_prf_input;server_opaque_prf_input477,19187
	size_t server_opaque_prf_input_len;478,19219
		unsigned char cert_verify_md[cert_verify_md482,19307
		unsigned char finish_md[finish_md485,19423
		int finish_md_len;486,19469
		unsigned char peer_finish_md[peer_finish_md487,19490
		int peer_finish_md_len;488,19541
		unsigned long message_size;490,19568
		int message_type;491,19598
		const SSL_CIPHER *new_cipher;new_cipher494,19675
		DH *dh;dh496,19729
		EC_KEY *ecdh;ecdh500,19771
		int next_state;504,19875
		int reuse_message;506,19897
		int cert_req;509,19957
		int ctype_num;510,19973
		char ctype[ctype511,19990
		STACK_OF(512,20020
	} SSL3_STATE;542,20858
#define SSL3_ST_CW_FLUSH	549,20924
#define DTLS1_SCTP_ST_CW_WRITE_SOCK	551,20997
#define DTLS1_SCTP_ST_CR_READ_SOCK	552,21058
#define SSL3_ST_CW_CLNT_HELLO_A	555,21148
#define SSL3_ST_CW_CLNT_HELLO_B	556,21204
#define SSL3_ST_CR_SRVR_HELLO_A	558,21283
#define SSL3_ST_CR_SRVR_HELLO_B	559,21339
#define DTLS1_ST_CR_HELLO_VERIFY_REQUEST_A 560,21395
#define DTLS1_ST_CR_HELLO_VERIFY_REQUEST_B 561,21461
#define SSL3_ST_CR_CERT_A	562,21527
#define SSL3_ST_CR_CERT_B	563,21577
#define SSL3_ST_CR_KEY_EXCH_A	564,21627
#define SSL3_ST_CR_KEY_EXCH_B	565,21681
#define SSL3_ST_CR_CERT_REQ_A	566,21735
#define SSL3_ST_CR_CERT_REQ_B	567,21789
#define SSL3_ST_CR_SRVR_DONE_A	568,21843
#define SSL3_ST_CR_SRVR_DONE_B	569,21898
#define SSL3_ST_CW_CERT_A	571,21975
#define SSL3_ST_CW_CERT_B	572,22025
#define SSL3_ST_CW_CERT_C	573,22075
#define SSL3_ST_CW_CERT_D	574,22125
#define SSL3_ST_CW_KEY_EXCH_A	575,22175
#define SSL3_ST_CW_KEY_EXCH_B	576,22229
#define SSL3_ST_CW_CERT_VRFY_A	577,22283
#define SSL3_ST_CW_CERT_VRFY_B	578,22338
#define SSL3_ST_CW_CHANGE_A	579,22393
#define SSL3_ST_CW_CHANGE_B	580,22445
#define SSL3_ST_CW_NEXT_PROTO_A	581,22497
#define SSL3_ST_CW_NEXT_PROTO_B	582,22553
#define SSL3_ST_CW_FINISHED_A	583,22609
#define SSL3_ST_CW_FINISHED_B	584,22663
#define SSL3_ST_CR_CHANGE_A	586,22740
#define SSL3_ST_CR_CHANGE_B	587,22792
#define SSL3_ST_CR_FINISHED_A	588,22844
#define SSL3_ST_CR_FINISHED_B	589,22898
#define SSL3_ST_CR_SESSION_TICKET_A	590,22952
#define SSL3_ST_CR_SESSION_TICKET_B	591,23011
#define SSL3_ST_CR_CERT_STATUS_A	592,23070
#define SSL3_ST_CR_CERT_STATUS_B	593,23126
#define SSL3_ST_SW_FLUSH	597,23214
#define DTLS1_SCTP_ST_SW_WRITE_SOCK	599,23286
#define DTLS1_SCTP_ST_SR_READ_SOCK	600,23346
#define SSL3_ST_SR_CLNT_HELLO_A	604,23490
#define SSL3_ST_SR_CLNT_HELLO_B	605,23545
#define SSL3_ST_SR_CLNT_HELLO_C	606,23600
#define DTLS1_ST_SW_HELLO_VERIFY_REQUEST_A 608,23677
#define DTLS1_ST_SW_HELLO_VERIFY_REQUEST_B 609,23742
#define SSL3_ST_SW_HELLO_REQ_A	610,23807
#define SSL3_ST_SW_HELLO_REQ_B	611,23861
#define SSL3_ST_SW_HELLO_REQ_C	612,23915
#define SSL3_ST_SW_SRVR_HELLO_A	613,23969
#define SSL3_ST_SW_SRVR_HELLO_B	614,24024
#define SSL3_ST_SW_CERT_A	615,24079
#define SSL3_ST_SW_CERT_B	616,24128
#define SSL3_ST_SW_KEY_EXCH_A	617,24177
#define SSL3_ST_SW_KEY_EXCH_B	618,24230
#define SSL3_ST_SW_CERT_REQ_A	619,24283
#define SSL3_ST_SW_CERT_REQ_B	620,24336
#define SSL3_ST_SW_SRVR_DONE_A	621,24389
#define SSL3_ST_SW_SRVR_DONE_B	622,24443
#define SSL3_ST_SR_CERT_A	624,24520
#define SSL3_ST_SR_CERT_B	625,24569
#define SSL3_ST_SR_KEY_EXCH_A	626,24618
#define SSL3_ST_SR_KEY_EXCH_B	627,24671
#define SSL3_ST_SR_CERT_VRFY_A	628,24724
#define SSL3_ST_SR_CERT_VRFY_B	629,24778
#define SSL3_ST_SR_CHANGE_A	630,24832
#define SSL3_ST_SR_CHANGE_B	631,24883
#define SSL3_ST_SR_NEXT_PROTO_A	632,24934
#define SSL3_ST_SR_NEXT_PROTO_B	633,24989
#define SSL3_ST_SR_FINISHED_A	634,25044
#define SSL3_ST_SR_FINISHED_B	635,25097
#define SSL3_ST_SW_CHANGE_A	637,25172
#define SSL3_ST_SW_CHANGE_B	638,25223
#define SSL3_ST_SW_FINISHED_A	639,25274
#define SSL3_ST_SW_FINISHED_B	640,25327
#define SSL3_ST_SW_SESSION_TICKET_A	641,25380
#define SSL3_ST_SW_SESSION_TICKET_B	642,25438
#define SSL3_ST_SW_CERT_STATUS_A	643,25496
#define SSL3_ST_SW_CERT_STATUS_B	644,25551
#define SSL3_MT_HELLO_REQUEST	646,25607
#define SSL3_MT_CLIENT_HELLO	647,25641
#define SSL3_MT_SERVER_HELLO	648,25674
#define	SSL3_MT_NEWSESSION_TICKET	649,25707
#define SSL3_MT_CERTIFICATE	650,25744
#define SSL3_MT_SERVER_KEY_EXCHANGE	651,25777
#define SSL3_MT_CERTIFICATE_REQUEST	652,25817
#define SSL3_MT_SERVER_DONE	653,25857
#define SSL3_MT_CERTIFICATE_VERIFY	654,25890
#define SSL3_MT_CLIENT_KEY_EXCHANGE	655,25929
#define SSL3_MT_FINISHED	656,25969
#define SSL3_MT_CERTIFICATE_STATUS	657,25999
#define SSL3_MT_NEXT_PROTO	658,26038
#define DTLS1_MT_HELLO_VERIFY_REQUEST 659,26070
#define SSL3_MT_CCS	662,26115
#define SSL3_CC_READ	665,26197
#define SSL3_CC_WRITE	666,26224
#define SSL3_CC_CLIENT	667,26252
#define SSL3_CC_SERVER	668,26281
#define SSL3_CHANGE_CIPHER_CLIENT_WRITE	669,26310
#define SSL3_CHANGE_CIPHER_SERVER_READ	670,26382
#define SSL3_CHANGE_CIPHER_CLIENT_READ	671,26451
#define SSL3_CHANGE_CIPHER_SERVER_WRITE	672,26520

ssl/tls_srp.c,987
int SSL_CTX_SRP_CTX_free(66,2987
int SSL_SRP_CTX_free(98,3832
int SSL_SRP_CTX_init(130,4615
int SSL_CTX_SRP_CTX_init(198,6716
int SSL_srp_server_param_with_username(228,7467
int SSL_set_srp_server_param_pw(256,8324
int SSL_set_srp_server_param(277,8836
int SRP_generate_server_master_secret(343,9872
int SRP_generate_client_master_secret(373,10610
int SRP_Calc_A_param(410,11735
BIGNUM *SSL_get_srp_g(SSL_get_srp_g435,12414
BIGNUM *SSL_get_srp_N(SSL_get_srp_N442,12528
char *SSL_get_srp_username(SSL_get_srp_username449,12642
char *SSL_get_srp_userinfo(SSL_get_srp_userinfo456,12773
#define tls1_ctx_ctrl 463,12901
#define tls1_ctx_callback_ctrl 464,12937
int SSL_CTX_set_srp_username(466,12992
int SSL_CTX_set_srp_password(471,13122
int SSL_CTX_set_srp_strength(476,13260
int SSL_CTX_set_srp_verify_param_callback(482,13411
int SSL_CTX_set_srp_cb_arg(488,13599
int SSL_CTX_set_srp_username_callback(493,13713
int SSL_CTX_set_srp_client_pwd_callback(500,13917

ssl/ssl.h,49771
#define HEADER_SSL_H 144,7331
#define SSL_SESSION_ASN1_VERSION 177,8012
#define SSL_TXT_NULL_WITH_MD5	180,8088
#define SSL_TXT_RC4_128_WITH_MD5	181,8145
#define SSL_TXT_RC4_128_EXPORT40_WITH_MD5 182,8206
#define SSL_TXT_RC2_128_CBC_WITH_MD5	183,8284
#define SSL_TXT_RC2_128_CBC_EXPORT40_WITH_MD5 184,8353
#define SSL_TXT_IDEA_128_CBC_WITH_MD5	185,8439
#define SSL_TXT_DES_64_CBC_WITH_MD5	186,8510
#define SSL_TXT_DES_64_CBC_WITH_SHA	187,8577
#define SSL_TXT_DES_192_EDE3_CBC_WITH_MD5 188,8644
#define SSL_TXT_DES_192_EDE3_CBC_WITH_SHA 189,8722
#define SSL_TXT_KRB5_DES_64_CBC_SHA 193,8844
#define SSL_TXT_KRB5_DES_192_CBC3_SHA 194,8911
#define SSL_TXT_KRB5_RC4_128_SHA 195,8980
#define SSL_TXT_KRB5_IDEA_128_CBC_SHA 196,9044
#define SSL_TXT_KRB5_DES_64_CBC_MD5 197,9113
#define SSL_TXT_KRB5_DES_192_CBC3_MD5 198,9187
#define SSL_TXT_KRB5_RC4_128_MD5 199,9263
#define SSL_TXT_KRB5_IDEA_128_CBC_MD5 200,9327
#define SSL_TXT_KRB5_DES_40_CBC_SHA 202,9398
#define SSL_TXT_KRB5_RC2_40_CBC_SHA 203,9466
#define SSL_TXT_KRB5_RC4_40_SHA	204,9534
#define SSL_TXT_KRB5_DES_40_CBC_MD5 205,9597
#define SSL_TXT_KRB5_RC2_40_CBC_MD5 206,9665
#define SSL_TXT_KRB5_RC4_40_MD5	207,9733
#define SSL_TXT_KRB5_DES_40_CBC_SHA 209,9797
#define SSL_TXT_KRB5_DES_40_CBC_MD5 210,9864
#define SSL_TXT_KRB5_DES_64_CBC_SHA 211,9931
#define SSL_TXT_KRB5_DES_64_CBC_MD5 212,9998
#define SSL_TXT_KRB5_DES_192_CBC3_SHA 213,10065
#define SSL_TXT_KRB5_DES_192_CBC3_MD5 214,10134
#define SSL_MAX_KRB5_PRINCIPAL_LENGTH 215,10203
#define SSL_MAX_SSL_SESSION_ID_LENGTH	217,10247
#define SSL_MAX_SID_CTX_LENGTH	218,10289
#define SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES	220,10326
#define SSL_MAX_KEY_ARG_LENGTH	221,10378
#define SSL_MAX_MASTER_KEY_LENGTH	222,10413
#define SSL_TXT_EXP40	227,10522
#define SSL_TXT_EXP56	228,10556
#define SSL_TXT_LOW	229,10590
#define SSL_TXT_MEDIUM	230,10617
#define SSL_TXT_HIGH	231,10650
#define SSL_TXT_FIPS	232,10679
#define SSL_TXT_kFZA	234,10709
#define	SSL_TXT_aFZA	235,10752
#define SSL_TXT_eFZA	236,10795
#define SSL_TXT_FZA	237,10838
#define	SSL_TXT_aNULL	239,10881
#define	SSL_TXT_eNULL	240,10912
#define	SSL_TXT_NULL	241,10943
#define SSL_TXT_kRSA	243,10973
#define SSL_TXT_kDHr	244,11002
#define SSL_TXT_kDHd	245,11069
#define SSL_TXT_kDH 246,11136
#define SSL_TXT_kEDH	247,11203
#define SSL_TXT_kKRB5 248,11232
#define SSL_TXT_kECDHr	249,11267
#define SSL_TXT_kECDHe	250,11300
#define SSL_TXT_kECDH	251,11333
#define SSL_TXT_kEECDH	252,11364
#define SSL_TXT_kPSK 253,11397
#define SSL_TXT_kGOST	254,11436
#define SSL_TXT_kSRP	255,11467
#define	SSL_TXT_aRSA	257,11497
#define	SSL_TXT_aDSS	258,11526
#define	SSL_TXT_aDH	259,11555
#define	SSL_TXT_aECDH	260,11620
#define SSL_TXT_aKRB5 261,11651
#define SSL_TXT_aECDSA	262,11686
#define SSL_TXT_aPSK 263,11719
#define SSL_TXT_aGOST94	264,11758
#define SSL_TXT_aGOST01 265,11792
#define SSL_TXT_aGOST 266,11826
#define	SSL_TXT_DSS	268,11858
#define SSL_TXT_DH	269,11885
#define SSL_TXT_EDH	270,11910
#define SSL_TXT_ADH	271,11963
#define SSL_TXT_RSA	272,11990
#define SSL_TXT_ECDH	273,12017
#define SSL_TXT_EECDH	274,12046
#define SSL_TXT_AECDH	275,12107
#define SSL_TXT_ECDSA	276,12138
#define SSL_TXT_KRB5 277,12169
#define SSL_TXT_PSK 278,12203
#define SSL_TXT_SRP	279,12241
#define SSL_TXT_DES	281,12269
#define SSL_TXT_3DES	282,12296
#define SSL_TXT_RC4	283,12325
#define SSL_TXT_RC2	284,12352
#define SSL_TXT_IDEA	285,12379
#define SSL_TXT_SEED	286,12408
#define SSL_TXT_AES128	287,12437
#define SSL_TXT_AES256	288,12470
#define SSL_TXT_AES	289,12503
#define SSL_TXT_AES_GCM	290,12530
#define SSL_TXT_CAMELLIA128	291,12564
#define SSL_TXT_CAMELLIA256	292,12606
#define SSL_TXT_CAMELLIA	293,12648
#define SSL_TXT_MD5	295,12685
#define SSL_TXT_SHA1	296,12712
#define SSL_TXT_SHA	297,12741
#define SSL_TXT_GOST94	298,12789
#define SSL_TXT_GOST89MAC	299,12823
#define SSL_TXT_SHA256	300,12863
#define SSL_TXT_SHA384	301,12896
#define SSL_TXT_SSLV2	303,12930
#define SSL_TXT_SSLV3	304,12961
#define SSL_TXT_TLSV1	305,12992
#define SSL_TXT_TLSV1_1	306,13023
#define SSL_TXT_TLSV1_2	307,13058
#define SSL_TXT_EXP	309,13094
#define SSL_TXT_EXPORT	310,13121
#define SSL_TXT_ALL	312,13155
#define SSL_TXT_CMPALL	328,13889
#define SSL_TXT_CMPDEF	329,13931
#define SSL_DEFAULT_CIPHER_LIST	334,14129
#define SSL_SENT_SHUTDOWN	343,14541
#define SSL_RECEIVED_SHUTDOWN	344,14569
#define OPENSSL_NO_SSL2355,14758
#define SSL_FILETYPE_ASN1	358,14790
#define SSL_FILETYPE_PEM	359,14835
typedef struct ssl_st *ssl_crock_st;ssl_crock_st364,15024
typedef struct tls_session_ticket_ext_st TLS_SESSION_TICKET_EXT;365,15061
typedef struct ssl_method_st SSL_METHOD;366,15126
typedef struct ssl_cipher_st SSL_CIPHER;367,15167
typedef struct ssl_session_st SSL_SESSION;368,15208
DECLARE_STACK_OF(370,15252
typedef struct srtp_protection_profile_st373,15359
       const char *name;name375,15410
       unsigned long id;376,15435
       } SRTP_PROTECTION_PROFILE;377,15460
DECLARE_STACK_OF(379,15495
typedef int (*tls_session_ticket_ext_cb_fn)tls_session_ticket_ext_cb_fn381,15538
typedef int (*tls_session_secret_cb_fn)tls_session_secret_cb_fn382,15638
struct ssl_cipher_st388,15874
	int valid;390,15898
	const char *name;name391,15910
	unsigned long id;392,15946
	unsigned long algorithm_mkey;395,16090
	unsigned long algorithm_auth;396,16150
	unsigned long algorithm_enc;397,16209
	unsigned long algorithm_mac;398,16266
	unsigned long algorithm_ssl;399,16327
	unsigned long algo_strength;401,16389
	unsigned long algorithm2;402,16451
	int strength_bits;403,16496
	int alg_bits;404,16550
struct ssl_method_st409,16672
	int version;411,16696
	int (*ssl_new)ssl_new412,16710
	void (*ssl_clear)ssl_clear413,16735
	void (*ssl_free)ssl_free414,16763
	int (*ssl_accept)ssl_accept415,16790
	int (*ssl_connect)ssl_connect416,16818
	int (*ssl_read)ssl_read417,16847
	int (*ssl_peek)ssl_peek418,16891
	int (*ssl_write)ssl_write419,16935
	int (*ssl_shutdown)ssl_shutdown420,16986
	int (*ssl_renegotiate)ssl_renegotiate421,17016
	int (*ssl_renegotiate_check)ssl_renegotiate_check422,17049
	long (*ssl_get_message)ssl_get_message423,17088
	int (*ssl_read_bytes)ssl_read_bytes425,17169
	int (*ssl_write_bytes)ssl_write_bytes427,17253
	int (*ssl_dispatch_alert)ssl_dispatch_alert428,17323
	long (*ssl_ctrl)ssl_ctrl429,17359
	long (*ssl_ctx_ctrl)ssl_ctx_ctrl430,17415
	const SSL_CIPHER *(*get_cipher_by_char)get_cipher_by_char431,17481
	int (*put_cipher_by_char)put_cipher_by_char432,17549
	int (*ssl_pending)ssl_pending433,17622
	int (*num_ciphers)num_ciphers434,17657
	const SSL_CIPHER *(*get_cipher)get_cipher435,17684
	const struct ssl_method_st *(*get_ssl_method)get_ssl_method436,17736
	long (*get_timeout)get_timeout437,17797
	struct ssl3_enc_method *ssl3_enc;ssl3_enc438,17825
	int (*ssl_version)ssl_version439,17888
	long (*ssl_callback_ctrl)ssl_callback_ctrl440,17915
	long (*ssl_ctx_callback_ctrl)ssl_ctx_callback_ctrl441,17980
struct ssl_session_st469,19559
	int ssl_version;471,19584
	unsigned int key_arg_length;475,19702
	unsigned char key_arg[key_arg476,19732
	int master_key_length;477,19780
	unsigned char master_key[master_key478,19804
	unsigned int session_id_length;480,19885
	unsigned char session_id[session_id481,19918
	unsigned int sid_ctx_length;485,20134
	unsigned char sid_ctx[sid_ctx486,20164
        unsigned int krb5_client_princ_len;489,20237
        unsigned char krb5_client_princ[krb5_client_princ490,20281
	char *psk_identity_hint;psk_identity_hint493,20405
	char *psk_identity;psk_identity494,20431
	int not_resumable;496,20459
	struct sess_cert_st /* SESS_CERT */ *sess_cert;sess_cert499,20549
	X509 *peer;peer505,20831
	long verify_result;508,20984
	int references;510,21029
	long timeout;511,21046
	long time;512,21061
	unsigned int compress_meth;514,21074
	const SSL_CIPHER *cipher;cipher516,21136
	unsigned long cipher_id;517,21163
	STACK_OF(521,21284
#define SSL_OP_MICROSOFT_SESS_ID_BUG	548,22112
#define SSL_OP_NETSCAPE_CHALLENGE_BUG	549,22163
#define SSL_OP_LEGACY_SERVER_CONNECT	551,22279
#define SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG	552,22330
#define SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG	553,22391
#define SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER	554,22447
#define SSL_OP_MSIE_SSLV2_RSA_PADDING	555,22502
#define SSL_OP_SSLEAY_080_CLIENT_DH_BUG	556,22594
#define SSL_OP_TLS_D5_BUG	557,22648
#define SSL_OP_TLS_BLOCK_PADDING_BUG	558,22689
#define SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS 565,23043
#define SSL_OP_ALL	569,23265
#define SSL_OP_NO_QUERY_MTU 572,23320
#define SSL_OP_COOKIE_EXCHANGE 574,23432
#define SSL_OP_NO_TICKET	576,23529
#define SSL_OP_CISCO_ANYCONNECT	578,23643
#define SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION	581,23755
#define SSL_OP_NO_COMPRESSION	583,23867
#define SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION	585,23953
#define SSL_OP_SINGLE_ECDH_USE	587,24083
#define SSL_OP_SINGLE_DH_USE	589,24196
#define SSL_OP_EPHEMERAL_RSA	592,24349
#define SSL_OP_CIPHER_SERVER_PREFERENCE	595,24476
#define SSL_OP_TLS_ROLLBACK_BUG	600,24800
#define SSL_OP_NO_SSLv2	602,24848
#define SSL_OP_NO_SSLv3	603,24888
#define SSL_OP_NO_TLSv1	604,24928
#define SSL_OP_NO_TLSv1_2	605,24968
#define SSL_OP_NO_TLSv1_1	606,25009
#define SSL_OP_PKCS1_CHECK_1	613,25257
#define SSL_OP_PKCS1_CHECK_2	614,25293
#define SSL_OP_NETSCAPE_CA_DN_BUG	616,25330
#define SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG	617,25378
#define SSL_OP_CRYPTOPRO_TLSEXT_BUG	622,25621
#define SSL_MODE_ENABLE_PARTIAL_WRITE 626,25798
#define SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER 631,26091
#define SSL_MODE_AUTO_RETRY 634,26228
#define SSL_MODE_NO_AUTO_CHAIN 636,26329
#define SSL_MODE_RELEASE_BUFFERS 640,26603
#define SSL_CTX_set_options(645,26762
#define SSL_CTX_clear_options(647,26848
#define SSL_CTX_get_options(649,26942
#define SSL_set_options(651,27022
#define SSL_clear_options(653,27100
#define SSL_get_options(655,27186
#define SSL_CTX_set_mode(658,27266
#define SSL_CTX_clear_mode(660,27346
#define SSL_CTX_get_mode(662,27434
#define SSL_clear_mode(664,27508
#define SSL_set_mode(666,27588
#define SSL_get_mode(668,27660
#define SSL_set_mtu(670,27733
#define SSL_get_secure_renegotiation_support(673,27818
#define SSL_heartbeat(677,27952
#define SSL_CTX_set_msg_callback_arg(683,28346
#define SSL_set_msg_callback_arg(684,28454
typedef struct srp_ctx_st690,28610
	void *SRP_cb_arg;SRP_cb_arg693,28674
	int (*TLS_ext_srp_username_callback)TLS_ext_srp_username_callback695,28732
	int (*SRP_verify_param_callback)SRP_verify_param_callback697,28844
	char *(*SRP_give_srp_client_pwd_callback)SRP_give_srp_client_pwd_callback699,28932
	char *login;login701,28992
	BIGNUM *N,N702,29006
	BIGNUM *N,*g,g702,29006
	BIGNUM *N,*g,*s,s702,29006
	BIGNUM *N,*g,*s,*B,B702,29006
	BIGNUM *N,*g,*s,*B,*A;A702,29006
	BIGNUM *a,a703,29030
	BIGNUM *a,*b,b703,29030
	BIGNUM *a,*b,*v;v703,29030
	char *info;info704,29048
	int strength;705,29061
	unsigned long srp_Mask;707,29077
	} SRP_CTX;708,29102
#define SSL_MAX_CERT_LIST_DEFAULT 725,29589
#define SSL_MAX_CERT_LIST_DEFAULT 727,29665
#define SSL_SESSION_CACHE_MAX_SIZE_DEFAULT	730,29745
typedef int (*GEN_SESSION_CB)GEN_SESSION_CB745,30694
typedef struct ssl_comp_st SSL_COMP;748,30787
struct ssl_comp_st752,30856
	int id;754,30878
	const char *name;name755,30887
	COMP_METHOD *method;method757,30930
	char *method;method759,30958
DECLARE_STACK_OF(763,30985
struct ssl_ctx_st766,31044
	const SSL_METHOD *method;method768,31065
	STACK_OF(770,31093
		int sess_connect;809,32646
		int sess_connect_renegotiate;810,32695
		int sess_connect_good;811,32754
		int sess_accept;812,32816
		int sess_accept_renegotiate;813,32866
		int sess_accept_good;814,32924
		int sess_miss;815,32982
		int sess_timeout;816,33029
		int sess_cache_full;817,33090
		int sess_hit;818,33153
		int sess_cb_hit;819,33204
		} stats;825,33437
	int references;827,33449
	int (*app_verify_callback)app_verify_callback830,33530
	void *app_verify_arg;app_verify_arg831,33585
	pem_password_cb *default_passwd_callback;default_passwd_callback836,33763
	void *default_passwd_callback_userdata;default_passwd_callback_userdata839,33851
	int (*client_cert_cb)client_cert_cb842,33925
    int (*app_gen_cookie_cb)app_gen_cookie_cb845,34025
    int (*app_verify_cookie_cb)app_verify_cookie_cb849,34157
	CRYPTO_EX_DATA ex_data;852,34258
	const EVP_MD *rsa_md5;rsa_md5854,34284
	const EVP_MD *md5;md5855,34344
	const EVP_MD *sha1;sha1856,34397
	STACK_OF(858,34456
#define SSL_MAX_BUF_FREELIST_LEN_DEFAULT 945,37169
#define SSL_SESS_CACHE_OFF	980,38327
#define SSL_SESS_CACHE_CLIENT	981,38363
#define SSL_SESS_CACHE_SERVER	982,38402
#define SSL_SESS_CACHE_BOTH	983,38441
#define SSL_SESS_CACHE_NO_AUTO_CLEAR	984,38515
#define SSL_SESS_CACHE_NO_INTERNAL_LOOKUP	986,38632
#define SSL_SESS_CACHE_NO_INTERNAL_STORE	987,38681
#define SSL_SESS_CACHE_NO_INTERNAL 988,38729
#define SSL_CTX_sess_number(992,38892
#define SSL_CTX_sess_connect(994,38974
#define SSL_CTX_sess_connect_good(996,39058
#define SSL_CTX_sess_connect_renegotiate(998,39152
#define SSL_CTX_sess_accept(1000,39260
#define SSL_CTX_sess_accept_renegotiate(1002,39342
#define SSL_CTX_sess_accept_good(1004,39448
#define SSL_CTX_sess_hits(1006,39540
#define SSL_CTX_sess_cb_hits(1008,39617
#define SSL_CTX_sess_misses(1010,39700
#define SSL_CTX_sess_timeouts(1012,39782
#define SSL_CTX_sess_cache_full(1014,39868
#define OPENSSL_NPN_UNSUPPORTED	1054,42103
#define OPENSSL_NPN_NEGOTIATED	1055,42137
#define OPENSSL_NPN_NO_OVERLAP	1056,42170
#define PSK_MAX_IDENTITY_LEN 1062,42333
#define PSK_MAX_PSK_LEN 1063,42366
#define SSL_NOTHING	1084,43404
#define SSL_WRITING	1085,43426
#define SSL_READING	1086,43448
#define SSL_X509_LOOKUP	1087,43470
#define SSL_want_nothing(1090,43554
#define SSL_want_read(1091,43611
#define SSL_want_write(1092,43665
#define SSL_want_x509_lookup(1093,43720
#define SSL_MAC_FLAG_READ_MAC_STREAM 1095,43786
#define SSL_MAC_FLAG_WRITE_MAC_STREAM 1096,43825
struct ssl_st1100,43897
	int version;1105,44009
	int type;1106,44023
	const SSL_METHOD *method;method1108,44073
	BIO *rbio;rbio1115,44278
	BIO *wbio;wbio1116,44313
	BIO *bbio;bbio1117,44349
	char *rbio;rbio1120,44434
	char *wbio;wbio1121,44470
	char *bbio;bbio1122,44507
	int rwstate;1128,44739
	int in_handshake;1131,44820
	int (*handshake_func)handshake_func1132,44839
	int server;1142,45186
	int new_session;1144,45256
	int quiet_shutdown;1148,45551
	int shutdown;1149,45605
	int state;1151,45687
	int rstate;1152,45718
	BUF_MEM *init_buf;init_buf1154,45764
	void *init_msg;init_msg1155,45814
	int init_num;1156,45901
	int init_off;1157,45943
	unsigned char *packet;packet1160,46034
	unsigned int packet_length;1161,46058
	struct ssl2_state_st *s2;s21163,46088
	struct ssl3_state_st *s3;s31164,46137
	struct dtls1_state_st *d1;d11165,46186
	int read_ahead;1167,46238
	void (*msg_callback)msg_callback1171,46417
	void *msg_callback_arg;msg_callback_arg1172,46534
	int hit;1174,46560
	X509_VERIFY_PARAM *param;param1176,46605
	int purpose;1179,46639
	int trust;1180,46676
	STACK_OF(1184,46731
#define session_ctx 1327,51551
#define session_ctx 1340,52190
#define SSL_set_app_data(1370,52873
#define SSL_get_app_data(1371,52941
#define SSL_SESSION_set_app_data(1372,52993
#define SSL_SESSION_get_app_data(1373,53072
#define SSL_CTX_get_app_data(1374,53139
#define SSL_CTX_set_app_data(1375,53202
#define SSL_ST_CONNECT	1384,53634
#define SSL_ST_ACCEPT	1385,53666
#define SSL_ST_MASK	1386,53697
#define SSL_ST_INIT	1387,53726
#define SSL_ST_BEFORE	1388,53779
#define SSL_ST_OK	1389,53810
#define SSL_ST_RENEGOTIATE	1390,53835
#define SSL_CB_LOOP	1392,53883
#define SSL_CB_EXIT	1393,53910
#define SSL_CB_READ	1394,53937
#define SSL_CB_WRITE	1395,53964
#define SSL_CB_ALERT	1396,53992
#define SSL_CB_READ_ALERT	1397,54045
#define SSL_CB_WRITE_ALERT	1398,54099
#define SSL_CB_ACCEPT_LOOP	1399,54155
#define SSL_CB_ACCEPT_EXIT	1400,54211
#define SSL_CB_CONNECT_LOOP	1401,54267
#define SSL_CB_CONNECT_EXIT	1402,54325
#define SSL_CB_HANDSHAKE_START	1403,54383
#define SSL_CB_HANDSHAKE_DONE	1404,54420
#define SSL_get_state(1407,54498
#define SSL_is_init_finished(1408,54537
#define SSL_in_init(1409,54598
#define SSL_in_before(1410,54650
#define SSL_in_connect_init(1411,54705
#define SSL_in_accept_init(1412,54767
#define SSL_ST_READ_HEADER	1416,54927
#define SSL_ST_READ_BODY	1417,54961
#define SSL_ST_READ_DONE	1418,54993
#define SSL_VERIFY_NONE	1429,55497
#define SSL_VERIFY_PEER	1430,55528
#define SSL_VERIFY_FAIL_IF_NO_PEER_CERT	1431,55559
#define SSL_VERIFY_CLIENT_ONCE	1432,55604
#define OpenSSL_add_ssl_algorithms(1434,55642
#define SSLeay_add_ssl_algorithms(1435,55698
#define SSL_CTX_set_default_verify(1439,55818
#define SSL_set_pref_cipher(1440,55886
#define SSL_add_session(1441,55944
#define SSL_remove_session(1442,56013
#define SSL_flush_sessions(1443,56078
#define SSL_get_cipher(1446,56184
#define SSL_get_cipher_bits(1448,56261
#define SSL_get_cipher_version(1450,56349
#define SSL_get_cipher_name(1452,56437
#define SSL_get_time(1454,56519
#define SSL_set_time(1455,56568
#define SSL_get_timeout(1456,56624
#define SSL_set_timeout(1457,56678
#define d2i_SSL_SESSION_bio(1459,56741
#define i2d_SSL_SESSION_bio(1460,56847
#define SSL_AD_REASON_OFFSET	1464,56980
#define SSL_AD_CLOSE_NOTIFY	1467,57116
#define SSL_AD_UNEXPECTED_MESSAGE	1468,57166
#define SSL_AD_BAD_RECORD_MAC	1469,57239
#define SSL_AD_DECRYPTION_FAILED	1470,57309
#define SSL_AD_RECORD_OVERFLOW	1471,57368
#define SSL_AD_DECOMPRESSION_FAILURE	1472,57424
#define SSL_AD_HANDSHAKE_FAILURE	1473,57502
#define SSL_AD_NO_CERTIFICATE	1474,57572
#define SSL_AD_BAD_CERTIFICATE	1475,57644
#define SSL_AD_UNSUPPORTED_CERTIFICATE	1476,57700
#define SSL_AD_CERTIFICATE_REVOKED	1477,57771
#define SSL_AD_CERTIFICATE_EXPIRED	1478,57834
#define SSL_AD_CERTIFICATE_UNKNOWN	1479,57897
#define SSL_AD_ILLEGAL_PARAMETER	1480,57960
#define SSL_AD_UNKNOWN_CA	1481,58033
#define SSL_AD_ACCESS_DENIED	1482,58091
#define SSL_AD_DECODE_ERROR	1483,58155
#define SSL_AD_DECRYPT_ERROR	1484,58217
#define SSL_AD_EXPORT_RESTRICTION	1485,58269
#define SSL_AD_PROTOCOL_VERSION	1486,58341
#define SSL_AD_INSUFFICIENT_SECURITY	1487,58411
#define SSL_AD_INTERNAL_ERROR	1488,58489
#define SSL_AD_USER_CANCELLED	1489,58555
#define SSL_AD_NO_RENEGOTIATION	1490,58609
#define SSL_AD_UNSUPPORTED_EXTENSION	1491,58667
#define SSL_AD_CERTIFICATE_UNOBTAINABLE 1492,58734
#define SSL_AD_UNRECOGNIZED_NAME	1493,58807
#define SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE 1494,58866
#define SSL_AD_BAD_CERTIFICATE_HASH_VALUE 1495,58953
#define SSL_AD_UNKNOWN_PSK_IDENTITY 1496,59030
#define SSL_ERROR_NONE	1498,59112
#define SSL_ERROR_SSL	1499,59139
#define SSL_ERROR_WANT_READ	1500,59165
#define SSL_ERROR_WANT_WRITE	1501,59196
#define SSL_ERROR_WANT_X509_LOOKUP	1502,59228
#define SSL_ERROR_SYSCALL	1503,59265
#define SSL_ERROR_ZERO_RETURN	1504,59339
#define SSL_ERROR_WANT_CONNECT	1505,59372
#define SSL_ERROR_WANT_ACCEPT	1506,59406
#define SSL_CTRL_NEED_TMP_RSA	1508,59440
#define SSL_CTRL_SET_TMP_RSA	1509,59474
#define SSL_CTRL_SET_TMP_DH	1510,59507
#define SSL_CTRL_SET_TMP_ECDH	1511,59539
#define SSL_CTRL_SET_TMP_RSA_CB	1512,59573
#define SSL_CTRL_SET_TMP_DH_CB	1513,59609
#define SSL_CTRL_SET_TMP_ECDH_CB	1514,59644
#define SSL_CTRL_GET_SESSION_REUSED	1516,59681
#define SSL_CTRL_GET_CLIENT_CERT_REQUEST	1517,59720
#define SSL_CTRL_GET_NUM_RENEGOTIATIONS	1518,59763
#define SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS	1519,59807
#define SSL_CTRL_GET_TOTAL_RENEGOTIATIONS	1520,59852
#define SSL_CTRL_GET_FLAGS	1521,59897
#define SSL_CTRL_EXTRA_CHAIN_CERT	1522,59929
#define SSL_CTRL_SET_MSG_CALLBACK 1524,59968
#define SSL_CTRL_SET_MSG_CALLBACK_ARG 1525,60019
#define SSL_CTRL_SET_MTU 1528,60114
#define SSL_CTRL_SESS_NUMBER	1530,60169
#define SSL_CTRL_SESS_CONNECT	1531,60203
#define SSL_CTRL_SESS_CONNECT_GOOD	1532,60238
#define SSL_CTRL_SESS_CONNECT_RENEGOTIATE	1533,60277
#define SSL_CTRL_SESS_ACCEPT	1534,60322
#define SSL_CTRL_SESS_ACCEPT_GOOD	1535,60356
#define SSL_CTRL_SESS_ACCEPT_RENEGOTIATE	1536,60394
#define SSL_CTRL_SESS_HIT	1537,60438
#define SSL_CTRL_SESS_CB_HIT	1538,60469
#define SSL_CTRL_SESS_MISSES	1539,60503
#define SSL_CTRL_SESS_TIMEOUTS	1540,60537
#define SSL_CTRL_SESS_CACHE_FULL	1541,60573
#define SSL_CTRL_OPTIONS	1542,60610
#define SSL_CTRL_MODE	1543,60640
#define SSL_CTRL_GET_READ_AHEAD	1545,60669
#define SSL_CTRL_SET_READ_AHEAD	1546,60706
#define SSL_CTRL_SET_SESS_CACHE_SIZE	1547,60743
#define SSL_CTRL_GET_SESS_CACHE_SIZE	1548,60784
#define SSL_CTRL_SET_SESS_CACHE_MODE	1549,60825
#define SSL_CTRL_GET_SESS_CACHE_MODE	1550,60866
#define SSL_CTRL_GET_MAX_CERT_LIST	1552,60908
#define SSL_CTRL_SET_MAX_CERT_LIST	1553,60947
#define SSL_CTRL_SET_MAX_SEND_FRAGMENT	1555,60987
#define SSL_CTRL_SET_TLSEXT_SERVERNAME_CB	1559,61100
#define SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG	1560,61145
#define SSL_CTRL_SET_TLSEXT_HOSTNAME	1561,61191
#define SSL_CTRL_SET_TLSEXT_DEBUG_CB	1562,61232
#define SSL_CTRL_SET_TLSEXT_DEBUG_ARG	1563,61273
#define SSL_CTRL_GET_TLSEXT_TICKET_KEYS	1564,61315
#define SSL_CTRL_SET_TLSEXT_TICKET_KEYS	1565,61359
#define SSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT	1566,61403
#define SSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT_CB	1567,61451
#define SSL_CTRL_SET_TLSEXT_OPAQUE_PRF_INPUT_CB_ARG 1568,61502
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB	1569,61557
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG	1570,61602
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE	1571,61651
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS	1572,61698
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS	1573,61745
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS	1574,61792
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS	1575,61838
#define SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP	1576,61884
#define SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP	1577,61936
#define SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB	1579,61989
#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME_CB	1581,62035
#define SSL_CTRL_SET_SRP_VERIFY_PARAM_CB	1582,62083
#define SSL_CTRL_SET_SRP_GIVE_CLIENT_PWD_CB	1583,62128
#define SSL_CTRL_SET_SRP_ARG	1585,62177
#define SSL_CTRL_SET_TLS_EXT_SRP_USERNAME	1586,62210
#define SSL_CTRL_SET_TLS_EXT_SRP_STRENGTH	1587,62256
#define SSL_CTRL_SET_TLS_EXT_SRP_PASSWORD	1588,62302
#define SSL_CTRL_TLS_EXT_SEND_HEARTBEAT	1590,62378
#define SSL_CTRL_GET_TLS_EXT_HEARTBEAT_PENDING	1591,62424
#define SSL_CTRL_SET_TLS_EXT_HEARTBEAT_NO_REQUESTS	1592,62475
#define DTLS_CTRL_GET_TIMEOUT	1596,62544
#define DTLS_CTRL_HANDLE_TIMEOUT	1597,62578
#define DTLS_CTRL_LISTEN	1598,62614
#define SSL_CTRL_GET_RI_SUPPORT	1600,62645
#define SSL_CTRL_CLEAR_OPTIONS	1601,62682
#define SSL_CTRL_CLEAR_MODE	1602,62718
#define SSL_CTRL_GET_EXTRA_CHAIN_CERTS	1604,62752
#define SSL_CTRL_CLEAR_EXTRA_CHAIN_CERTS	1605,62795
#define DTLSv1_get_timeout(1607,62840
#define DTLSv1_handle_timeout(1609,62931
#define DTLSv1_listen(1611,63016
#define SSL_session_reused(1614,63100
#define SSL_num_renegotiations(1616,63186
#define SSL_clear_num_renegotiations(1618,63280
#define SSL_total_renegotiations(1620,63382
#define SSL_CTX_need_tmp_RSA(1623,63481
#define SSL_CTX_set_tmp_rsa(1625,63565
#define SSL_CTX_set_tmp_dh(1627,63658
#define SSL_CTX_set_tmp_ecdh(1629,63747
#define SSL_need_tmp_RSA(1632,63845
#define SSL_set_tmp_rsa(1634,63921
#define SSL_set_tmp_dh(1636,64006
#define SSL_set_tmp_ecdh(1638,64087
#define SSL_CTX_add_extra_chain_cert(1641,64177
#define SSL_CTX_get_extra_chain_certs(1643,64286
#define SSL_CTX_clear_extra_chain_certs(1645,64395
#define SSL_get0_session 1929,75745
#define SSL_CTX_sess_set_cache_size(1960,77136
#define SSL_CTX_sess_get_cache_size(1962,77236
#define SSL_CTX_set_session_cache_mode(1964,77334
#define SSL_CTX_get_session_cache_mode(1966,77437
#define SSL_CTX_get_default_read_ahead(1969,77539
#define SSL_CTX_set_default_read_ahead(1970,77611
#define SSL_CTX_get_read_ahead(1971,77687
#define SSL_CTX_set_read_ahead(1973,77775
#define SSL_CTX_get_max_cert_list(1975,77865
#define SSL_CTX_set_max_cert_list(1977,77959
#define SSL_get_max_cert_list(1979,78055
#define SSL_set_max_cert_list(1981,78141
#define SSL_CTX_set_max_send_fragment(1984,78230
#define SSL_set_max_send_fragment(1986,78334
#define SSL_F_CLIENT_CERTIFICATE	2051,80523
#define SSL_F_CLIENT_FINISHED	2052,80563
#define SSL_F_CLIENT_HELLO	2053,80601
#define SSL_F_CLIENT_MASTER_KEY	2054,80636
#define SSL_F_D2I_SSL_SESSION	2055,80676
#define SSL_F_DO_DTLS1_WRITE	2056,80714
#define SSL_F_DO_SSL3_WRITE	2057,80751
#define SSL_F_DTLS1_ACCEPT	2058,80787
#define SSL_F_DTLS1_ADD_CERT_TO_BUF	2059,80822
#define SSL_F_DTLS1_BUFFER_RECORD	2060,80865
#define SSL_F_DTLS1_CHECK_TIMEOUT_NUM	2061,80906
#define SSL_F_DTLS1_CLIENT_HELLO	2062,80951
#define SSL_F_DTLS1_CONNECT	2063,80991
#define SSL_F_DTLS1_ENC	2064,81027
#define SSL_F_DTLS1_GET_HELLO_VERIFY	2065,81060
#define SSL_F_DTLS1_GET_MESSAGE	2066,81104
#define SSL_F_DTLS1_GET_MESSAGE_FRAGMENT	2067,81144
#define SSL_F_DTLS1_GET_RECORD	2068,81191
#define SSL_F_DTLS1_HANDLE_TIMEOUT	2069,81230
#define SSL_F_DTLS1_HEARTBEAT	2070,81272
#define SSL_F_DTLS1_OUTPUT_CERT_CHAIN	2071,81310
#define SSL_F_DTLS1_PREPROCESS_FRAGMENT	2072,81355
#define SSL_F_DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE	2073,81402
#define SSL_F_DTLS1_PROCESS_RECORD	2074,81455
#define SSL_F_DTLS1_READ_BYTES	2075,81497
#define SSL_F_DTLS1_READ_FAILED	2076,81536
#define SSL_F_DTLS1_SEND_CERTIFICATE_REQUEST	2077,81576
#define SSL_F_DTLS1_SEND_CLIENT_CERTIFICATE	2078,81627
#define SSL_F_DTLS1_SEND_CLIENT_KEY_EXCHANGE	2079,81677
#define SSL_F_DTLS1_SEND_CLIENT_VERIFY	2080,81728
#define SSL_F_DTLS1_SEND_HELLO_VERIFY_REQUEST	2081,81774
#define SSL_F_DTLS1_SEND_SERVER_CERTIFICATE	2082,81826
#define SSL_F_DTLS1_SEND_SERVER_HELLO	2083,81876
#define SSL_F_DTLS1_SEND_SERVER_KEY_EXCHANGE	2084,81921
#define SSL_F_DTLS1_WRITE_APP_DATA_BYTES	2085,81972
#define SSL_F_GET_CLIENT_FINISHED	2086,82019
#define SSL_F_GET_CLIENT_HELLO	2087,82060
#define SSL_F_GET_CLIENT_MASTER_KEY	2088,82099
#define SSL_F_GET_SERVER_FINISHED	2089,82142
#define SSL_F_GET_SERVER_HELLO	2090,82183
#define SSL_F_GET_SERVER_VERIFY	2091,82222
#define SSL_F_I2D_SSL_SESSION	2092,82262
#define SSL_F_READ_N	2093,82300
#define SSL_F_REQUEST_CERTIFICATE	2094,82330
#define SSL_F_SERVER_FINISH	2095,82371
#define SSL_F_SERVER_HELLO	2096,82407
#define SSL_F_SERVER_VERIFY	2097,82442
#define SSL_F_SSL23_ACCEPT	2098,82478
#define SSL_F_SSL23_CLIENT_HELLO	2099,82513
#define SSL_F_SSL23_CONNECT	2100,82553
#define SSL_F_SSL23_GET_CLIENT_HELLO	2101,82589
#define SSL_F_SSL23_GET_SERVER_HELLO	2102,82633
#define SSL_F_SSL23_PEEK	2103,82677
#define SSL_F_SSL23_READ	2104,82710
#define SSL_F_SSL23_WRITE	2105,82743
#define SSL_F_SSL2_ACCEPT	2106,82777
#define SSL_F_SSL2_CONNECT	2107,82811
#define SSL_F_SSL2_ENC_INIT	2108,82846
#define SSL_F_SSL2_GENERATE_KEY_MATERIAL	2109,82882
#define SSL_F_SSL2_PEEK	2110,82929
#define SSL_F_SSL2_READ	2111,82962
#define SSL_F_SSL2_READ_INTERNAL	2112,82995
#define SSL_F_SSL2_SET_CERTIFICATE	2113,83035
#define SSL_F_SSL2_WRITE	2114,83077
#define SSL_F_SSL3_ACCEPT	2115,83110
#define SSL_F_SSL3_ADD_CERT_TO_BUF	2116,83144
#define SSL_F_SSL3_CALLBACK_CTRL	2117,83186
#define SSL_F_SSL3_CHANGE_CIPHER_STATE	2118,83226
#define SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM	2119,83272
#define SSL_F_SSL3_CHECK_CLIENT_HELLO	2120,83322
#define SSL_F_SSL3_CLIENT_HELLO	2121,83367
#define SSL_F_SSL3_CONNECT	2122,83407
#define SSL_F_SSL3_CTRL	2123,83442
#define SSL_F_SSL3_CTX_CTRL	2124,83475
#define SSL_F_SSL3_DIGEST_CACHED_RECORDS	2125,83511
#define SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC	2126,83558
#define SSL_F_SSL3_ENC	2127,83605
#define SSL_F_SSL3_GENERATE_KEY_BLOCK	2128,83637
#define SSL_F_SSL3_GET_CERTIFICATE_REQUEST	2129,83682
#define SSL_F_SSL3_GET_CERT_STATUS	2130,83731
#define SSL_F_SSL3_GET_CERT_VERIFY	2131,83773
#define SSL_F_SSL3_GET_CLIENT_CERTIFICATE	2132,83815
#define SSL_F_SSL3_GET_CLIENT_HELLO	2133,83863
#define SSL_F_SSL3_GET_CLIENT_KEY_EXCHANGE	2134,83906
#define SSL_F_SSL3_GET_FINISHED	2135,83955
#define SSL_F_SSL3_GET_KEY_EXCHANGE	2136,83995
#define SSL_F_SSL3_GET_MESSAGE	2137,84038
#define SSL_F_SSL3_GET_NEW_SESSION_TICKET	2138,84077
#define SSL_F_SSL3_GET_NEXT_PROTO	2139,84125
#define SSL_F_SSL3_GET_RECORD	2140,84166
#define SSL_F_SSL3_GET_SERVER_CERTIFICATE	2141,84204
#define SSL_F_SSL3_GET_SERVER_DONE	2142,84252
#define SSL_F_SSL3_GET_SERVER_HELLO	2143,84294
#define SSL_F_SSL3_HANDSHAKE_MAC	2144,84337
#define SSL_F_SSL3_NEW_SESSION_TICKET	2145,84377
#define SSL_F_SSL3_OUTPUT_CERT_CHAIN	2146,84422
#define SSL_F_SSL3_PEEK	2147,84466
#define SSL_F_SSL3_READ_BYTES	2148,84499
#define SSL_F_SSL3_READ_N	2149,84537
#define SSL_F_SSL3_SEND_CERTIFICATE_REQUEST	2150,84571
#define SSL_F_SSL3_SEND_CLIENT_CERTIFICATE	2151,84621
#define SSL_F_SSL3_SEND_CLIENT_KEY_EXCHANGE	2152,84670
#define SSL_F_SSL3_SEND_CLIENT_VERIFY	2153,84720
#define SSL_F_SSL3_SEND_SERVER_CERTIFICATE	2154,84765
#define SSL_F_SSL3_SEND_SERVER_HELLO	2155,84814
#define SSL_F_SSL3_SEND_SERVER_KEY_EXCHANGE	2156,84858
#define SSL_F_SSL3_SETUP_KEY_BLOCK	2157,84908
#define SSL_F_SSL3_SETUP_READ_BUFFER	2158,84950
#define SSL_F_SSL3_SETUP_WRITE_BUFFER	2159,84994
#define SSL_F_SSL3_WRITE_BYTES	2160,85039
#define SSL_F_SSL3_WRITE_PENDING	2161,85078
#define SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT	2162,85118
#define SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT	2163,85173
#define SSL_F_SSL_ADD_CLIENTHELLO_USE_SRTP_EXT	2164,85220
#define SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK	2165,85273
#define SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK	2166,85327
#define SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT	2167,85382
#define SSL_F_SSL_ADD_SERVERHELLO_TLSEXT	2168,85437
#define SSL_F_SSL_ADD_SERVERHELLO_USE_SRTP_EXT	2169,85484
#define SSL_F_SSL_BAD_METHOD	2170,85537
#define SSL_F_SSL_BYTES_TO_CIPHER_LIST	2171,85574
#define SSL_F_SSL_CERT_DUP	2172,85620
#define SSL_F_SSL_CERT_INST	2173,85655
#define SSL_F_SSL_CERT_INSTANTIATE	2174,85691
#define SSL_F_SSL_CERT_NEW	2175,85733
#define SSL_F_SSL_CHECK_PRIVATE_KEY	2176,85768
#define SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT	2177,85811
#define SSL_F_SSL_CHECK_SRVR_ECC_CERT_AND_ALG	2178,85860
#define SSL_F_SSL_CIPHER_PROCESS_RULESTR	2179,85912
#define SSL_F_SSL_CIPHER_STRENGTH_SORT	2180,85959
#define SSL_F_SSL_CLEAR	2181,86005
#define SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD	2182,86038
#define SSL_F_SSL_CREATE_CIPHER_LIST	2183,86090
#define SSL_F_SSL_CTRL	2184,86134
#define SSL_F_SSL_CTX_CHECK_PRIVATE_KEY	2185,86166
#define SSL_F_SSL_CTX_MAKE_PROFILES	2186,86213
#define SSL_F_SSL_CTX_NEW	2187,86256
#define SSL_F_SSL_CTX_SET_CIPHER_LIST	2188,86290
#define SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE	2189,86335
#define SSL_F_SSL_CTX_SET_PURPOSE	2190,86386
#define SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT	2191,86427
#define SSL_F_SSL_CTX_SET_SSL_VERSION	2192,86478
#define SSL_F_SSL_CTX_SET_TRUST	2193,86523
#define SSL_F_SSL_CTX_USE_CERTIFICATE	2194,86563
#define SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1	2195,86608
#define SSL_F_SSL_CTX_USE_CERTIFICATE_CHAIN_FILE	2196,86657
#define SSL_F_SSL_CTX_USE_CERTIFICATE_FILE	2197,86711
#define SSL_F_SSL_CTX_USE_PRIVATEKEY	2198,86760
#define SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1	2199,86804
#define SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE	2200,86852
#define SSL_F_SSL_CTX_USE_PSK_IDENTITY_HINT	2201,86900
#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY	2202,86950
#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1	2203,86997
#define SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE	2204,87048
#define SSL_F_SSL_DO_HANDSHAKE	2205,87099
#define SSL_F_SSL_GET_NEW_SESSION	2206,87138
#define SSL_F_SSL_GET_PREV_SESSION	2207,87179
#define SSL_F_SSL_GET_SERVER_SEND_CERT	2208,87221
#define SSL_F_SSL_GET_SIGN_PKEY	2209,87267
#define SSL_F_SSL_INIT_WBIO_BUFFER	2210,87307
#define SSL_F_SSL_LOAD_CLIENT_CA_FILE	2211,87349
#define SSL_F_SSL_NEW	2212,87394
#define SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT	2213,87425
#define SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT	2214,87482
#define SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT	2215,87531
#define SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT	2216,87585
#define SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT	2217,87642
#define SSL_F_SSL_PARSE_SERVERHELLO_USE_SRTP_EXT	2218,87691
#define SSL_F_SSL_PEEK	2219,87745
#define SSL_F_SSL_PREPARE_CLIENTHELLO_TLSEXT	2220,87777
#define SSL_F_SSL_PREPARE_SERVERHELLO_TLSEXT	2221,87828
#define SSL_F_SSL_READ	2222,87879
#define SSL_F_SSL_RSA_PRIVATE_DECRYPT	2223,87911
#define SSL_F_SSL_RSA_PUBLIC_ENCRYPT	2224,87956
#define SSL_F_SSL_SESSION_NEW	2225,88000
#define SSL_F_SSL_SESSION_PRINT_FP	2226,88038
#define SSL_F_SSL_SESSION_SET1_ID_CONTEXT	2227,88080
#define SSL_F_SSL_SESS_CERT_NEW	2228,88128
#define SSL_F_SSL_SET_CERT	2229,88168
#define SSL_F_SSL_SET_CIPHER_LIST	2230,88203
#define SSL_F_SSL_SET_FD	2231,88244
#define SSL_F_SSL_SET_PKEY	2232,88277
#define SSL_F_SSL_SET_PURPOSE	2233,88312
#define SSL_F_SSL_SET_RFD	2234,88350
#define SSL_F_SSL_SET_SESSION	2235,88384
#define SSL_F_SSL_SET_SESSION_ID_CONTEXT	2236,88422
#define SSL_F_SSL_SET_SESSION_TICKET_EXT	2237,88469
#define SSL_F_SSL_SET_TRUST	2238,88516
#define SSL_F_SSL_SET_WFD	2239,88552
#define SSL_F_SSL_SHUTDOWN	2240,88586
#define SSL_F_SSL_SRP_CTX_INIT	2241,88621
#define SSL_F_SSL_UNDEFINED_CONST_FUNCTION	2242,88660
#define SSL_F_SSL_UNDEFINED_FUNCTION	2243,88709
#define SSL_F_SSL_UNDEFINED_VOID_FUNCTION	2244,88753
#define SSL_F_SSL_USE_CERTIFICATE	2245,88801
#define SSL_F_SSL_USE_CERTIFICATE_ASN1	2246,88842
#define SSL_F_SSL_USE_CERTIFICATE_FILE	2247,88888
#define SSL_F_SSL_USE_PRIVATEKEY	2248,88934
#define SSL_F_SSL_USE_PRIVATEKEY_ASN1	2249,88974
#define SSL_F_SSL_USE_PRIVATEKEY_FILE	2250,89019
#define SSL_F_SSL_USE_PSK_IDENTITY_HINT	2251,89064
#define SSL_F_SSL_USE_RSAPRIVATEKEY	2252,89111
#define SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1	2253,89154
#define SSL_F_SSL_USE_RSAPRIVATEKEY_FILE	2254,89201
#define SSL_F_SSL_VERIFY_CERT_CHAIN	2255,89248
#define SSL_F_SSL_WRITE	2256,89291
#define SSL_F_TLS1_CERT_VERIFY_MAC	2257,89324
#define SSL_F_TLS1_CHANGE_CIPHER_STATE	2258,89366
#define SSL_F_TLS1_CHECK_SERVERHELLO_TLSEXT	2259,89412
#define SSL_F_TLS1_ENC	2260,89462
#define SSL_F_TLS1_EXPORT_KEYING_MATERIAL	2261,89494
#define SSL_F_TLS1_HEARTBEAT	2262,89542
#define SSL_F_TLS1_PREPARE_CLIENTHELLO_TLSEXT	2263,89579
#define SSL_F_TLS1_PREPARE_SERVERHELLO_TLSEXT	2264,89631
#define SSL_F_TLS1_PRF	2265,89683
#define SSL_F_TLS1_SETUP_KEY_BLOCK	2266,89715
#define SSL_F_WRITE_PENDING	2267,89757
#define SSL_R_APP_DATA_IN_HANDSHAKE	2270,89814
#define SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT 2271,89857
#define SSL_R_BAD_ALERT_RECORD	2272,89921
#define SSL_R_BAD_AUTHENTICATION_TYPE	2273,89960
#define SSL_R_BAD_CHANGE_CIPHER_SPEC	2274,90005
#define SSL_R_BAD_CHECKSUM	2275,90049
#define SSL_R_BAD_DATA_RETURNED_BY_CALLBACK	2276,90084
#define SSL_R_BAD_DECOMPRESSION	2277,90134
#define SSL_R_BAD_DH_G_LENGTH	2278,90174
#define SSL_R_BAD_DH_PUB_KEY_LENGTH	2279,90212
#define SSL_R_BAD_DH_P_LENGTH	2280,90255
#define SSL_R_BAD_DIGEST_LENGTH	2281,90293
#define SSL_R_BAD_DSA_SIGNATURE	2282,90333
#define SSL_R_BAD_ECC_CERT	2283,90373
#define SSL_R_BAD_ECDSA_SIGNATURE	2284,90408
#define SSL_R_BAD_ECPOINT	2285,90449
#define SSL_R_BAD_HANDSHAKE_LENGTH	2286,90483
#define SSL_R_BAD_HELLO_REQUEST	2287,90525
#define SSL_R_BAD_LENGTH	2288,90565
#define SSL_R_BAD_MAC_DECODE	2289,90598
#define SSL_R_BAD_MAC_LENGTH	2290,90635
#define SSL_R_BAD_MESSAGE_TYPE	2291,90672
#define SSL_R_BAD_PACKET_LENGTH	2292,90711
#define SSL_R_BAD_PROTOCOL_VERSION_NUMBER	2293,90751
#define SSL_R_BAD_PSK_IDENTITY_HINT_LENGTH	2294,90799
#define SSL_R_BAD_RESPONSE_ARGUMENT	2295,90848
#define SSL_R_BAD_RSA_DECRYPT	2296,90891
#define SSL_R_BAD_RSA_ENCRYPT	2297,90929
#define SSL_R_BAD_RSA_E_LENGTH	2298,90967
#define SSL_R_BAD_RSA_MODULUS_LENGTH	2299,91006
#define SSL_R_BAD_RSA_SIGNATURE	2300,91050
#define SSL_R_BAD_SIGNATURE	2301,91090
#define SSL_R_BAD_SRP_A_LENGTH	2302,91126
#define SSL_R_BAD_SRP_B_LENGTH	2303,91165
#define SSL_R_BAD_SRP_G_LENGTH	2304,91204
#define SSL_R_BAD_SRP_N_LENGTH	2305,91243
#define SSL_R_BAD_SRP_S_LENGTH	2306,91282
#define SSL_R_BAD_SRTP_MKI_VALUE	2307,91321
#define SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST	2308,91361
#define SSL_R_BAD_SSL_FILETYPE	2309,91414
#define SSL_R_BAD_SSL_SESSION_ID_LENGTH	2310,91453
#define SSL_R_BAD_STATE	2311,91500
#define SSL_R_BAD_WRITE_RETRY	2312,91533
#define SSL_R_BIO_NOT_SET	2313,91571
#define SSL_R_BLOCK_CIPHER_PAD_IS_WRONG	2314,91605
#define SSL_R_BN_LIB	2315,91652
#define SSL_R_CA_DN_LENGTH_MISMATCH	2316,91682
#define SSL_R_CA_DN_TOO_LONG	2317,91725
#define SSL_R_CCS_RECEIVED_EARLY	2318,91762
#define SSL_R_CERTIFICATE_VERIFY_FAILED	2319,91802
#define SSL_R_CERT_LENGTH_MISMATCH	2320,91849
#define SSL_R_CHALLENGE_IS_DIFFERENT	2321,91891
#define SSL_R_CIPHER_CODE_WRONG_LENGTH	2322,91935
#define SSL_R_CIPHER_OR_HASH_UNAVAILABLE	2323,91981
#define SSL_R_CIPHER_TABLE_SRC_ERROR	2324,92028
#define SSL_R_CLIENTHELLO_TLSEXT	2325,92072
#define SSL_R_COMPRESSED_LENGTH_TOO_LONG	2326,92112
#define SSL_R_COMPRESSION_DISABLED	2327,92159
#define SSL_R_COMPRESSION_FAILURE	2328,92201
#define SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE	2329,92242
#define SSL_R_COMPRESSION_LIBRARY_ERROR	2330,92301
#define SSL_R_CONNECTION_ID_IS_DIFFERENT	2331,92348
#define SSL_R_CONNECTION_TYPE_NOT_SET	2332,92395
#define SSL_R_COOKIE_MISMATCH	2333,92440
#define SSL_R_DATA_BETWEEN_CCS_AND_FINISHED	2334,92478
#define SSL_R_DATA_LENGTH_TOO_LONG	2335,92528
#define SSL_R_DECRYPTION_FAILED	2336,92570
#define SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC	2337,92610
#define SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG	2338,92665
#define SSL_R_DIGEST_CHECK_FAILED	2339,92717
#define SSL_R_DTLS_MESSAGE_TOO_BIG	2340,92758
#define SSL_R_DUPLICATE_COMPRESSION_ID	2341,92800
#define SSL_R_ECC_CERT_NOT_FOR_KEY_AGREEMENT	2342,92846
#define SSL_R_ECC_CERT_NOT_FOR_SIGNING	2343,92897
#define SSL_R_ECC_CERT_SHOULD_HAVE_RSA_SIGNATURE	2344,92943
#define SSL_R_ECC_CERT_SHOULD_HAVE_SHA1_SIGNATURE	2345,92997
#define SSL_R_ECGROUP_TOO_LARGE_FOR_CIPHER	2346,93052
#define SSL_R_EMPTY_SRTP_PROTECTION_PROFILE_LIST	2347,93101
#define SSL_R_ENCRYPTED_LENGTH_TOO_LONG	2348,93155
#define SSL_R_ERROR_GENERATING_TMP_RSA_KEY	2349,93202
#define SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST	2350,93251
#define SSL_R_EXCESSIVE_MESSAGE_SIZE	2351,93301
#define SSL_R_EXTRA_DATA_IN_MESSAGE	2352,93345
#define SSL_R_GOT_A_FIN_BEFORE_A_CCS	2353,93388
#define SSL_R_GOT_NEXT_PROTO_BEFORE_A_CCS	2354,93432
#define SSL_R_GOT_NEXT_PROTO_WITHOUT_EXTENSION	2355,93480
#define SSL_R_HTTPS_PROXY_REQUEST	2356,93533
#define SSL_R_HTTP_REQUEST	2357,93574
#define SSL_R_ILLEGAL_PADDING	2358,93609
#define SSL_R_INCONSISTENT_COMPRESSION	2359,93647
#define SSL_R_INVALID_CHALLENGE_LENGTH	2360,93693
#define SSL_R_INVALID_COMMAND	2361,93739
#define SSL_R_INVALID_COMPRESSION_ALGORITHM	2362,93777
#define SSL_R_INVALID_PURPOSE	2363,93827
#define SSL_R_INVALID_SRP_USERNAME	2364,93865
#define SSL_R_INVALID_STATUS_RESPONSE	2365,93907
#define SSL_R_INVALID_TICKET_KEYS_LENGTH	2366,93952
#define SSL_R_INVALID_TRUST	2367,93999
#define SSL_R_KEY_ARG_TOO_LONG	2368,94035
#define SSL_R_KRB5	2369,94074
#define SSL_R_KRB5_C_CC_PRINC	2370,94102
#define SSL_R_KRB5_C_GET_CRED	2371,94140
#define SSL_R_KRB5_C_INIT	2372,94178
#define SSL_R_KRB5_C_MK_REQ	2373,94212
#define SSL_R_KRB5_S_BAD_TICKET	2374,94248
#define SSL_R_KRB5_S_INIT	2375,94288
#define SSL_R_KRB5_S_RD_REQ	2376,94322
#define SSL_R_KRB5_S_TKT_EXPIRED	2377,94358
#define SSL_R_KRB5_S_TKT_NYV	2378,94398
#define SSL_R_KRB5_S_TKT_SKEW	2379,94435
#define SSL_R_LENGTH_MISMATCH	2380,94473
#define SSL_R_LENGTH_TOO_SHORT	2381,94511
#define SSL_R_LIBRARY_BUG	2382,94550
#define SSL_R_LIBRARY_HAS_NO_CIPHERS	2383,94584
#define SSL_R_MESSAGE_TOO_LONG	2384,94628
#define SSL_R_MISSING_DH_DSA_CERT	2385,94667
#define SSL_R_MISSING_DH_KEY	2386,94708
#define SSL_R_MISSING_DH_RSA_CERT	2387,94745
#define SSL_R_MISSING_DSA_SIGNING_CERT	2388,94786
#define SSL_R_MISSING_EXPORT_TMP_DH_KEY	2389,94832
#define SSL_R_MISSING_EXPORT_TMP_RSA_KEY	2390,94879
#define SSL_R_MISSING_RSA_CERTIFICATE	2391,94926
#define SSL_R_MISSING_RSA_ENCRYPTING_CERT	2392,94971
#define SSL_R_MISSING_RSA_SIGNING_CERT	2393,95019
#define SSL_R_MISSING_SRP_PARAM	2394,95065
#define SSL_R_MISSING_TMP_DH_KEY	2395,95105
#define SSL_R_MISSING_TMP_ECDH_KEY	2396,95145
#define SSL_R_MISSING_TMP_RSA_KEY	2397,95187
#define SSL_R_MISSING_TMP_RSA_PKEY	2398,95228
#define SSL_R_MISSING_VERIFY_MESSAGE	2399,95270
#define SSL_R_MULTIPLE_SGC_RESTARTS	2400,95314
#define SSL_R_NON_SSLV2_INITIAL_PACKET	2401,95357
#define SSL_R_NO_CERTIFICATES_RETURNED	2402,95403
#define SSL_R_NO_CERTIFICATE_ASSIGNED	2403,95449
#define SSL_R_NO_CERTIFICATE_RETURNED	2404,95494
#define SSL_R_NO_CERTIFICATE_SET	2405,95539
#define SSL_R_NO_CERTIFICATE_SPECIFIED	2406,95579
#define SSL_R_NO_CIPHERS_AVAILABLE	2407,95625
#define SSL_R_NO_CIPHERS_PASSED	2408,95667
#define SSL_R_NO_CIPHERS_SPECIFIED	2409,95707
#define SSL_R_NO_CIPHER_LIST	2410,95749
#define SSL_R_NO_CIPHER_MATCH	2411,95786
#define SSL_R_NO_CLIENT_CERT_METHOD	2412,95824
#define SSL_R_NO_CLIENT_CERT_RECEIVED	2413,95867
#define SSL_R_NO_COMPRESSION_SPECIFIED	2414,95912
#define SSL_R_NO_GOST_CERTIFICATE_SENT_BY_PEER	2415,95958
#define SSL_R_NO_METHOD_SPECIFIED	2416,96011
#define SSL_R_NO_PRIVATEKEY	2417,96052
#define SSL_R_NO_PRIVATE_KEY_ASSIGNED	2418,96088
#define SSL_R_NO_PROTOCOLS_AVAILABLE	2419,96133
#define SSL_R_NO_PUBLICKEY	2420,96177
#define SSL_R_NO_RENEGOTIATION	2421,96212
#define SSL_R_NO_REQUIRED_DIGEST	2422,96251
#define SSL_R_NO_SHARED_CIPHER	2423,96291
#define SSL_R_NO_SRTP_PROFILES	2424,96330
#define SSL_R_NO_VERIFY_CALLBACK	2425,96369
#define SSL_R_NULL_SSL_CTX	2426,96409
#define SSL_R_NULL_SSL_METHOD_PASSED	2427,96444
#define SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED	2428,96488
#define SSL_R_OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED 2429,96540
#define SSL_R_ONLY_TLS_ALLOWED_IN_FIPS_MODE	2430,96605
#define SSL_R_OPAQUE_PRF_INPUT_TOO_LONG	2431,96655
#define SSL_R_PACKET_LENGTH_TOO_LONG	2432,96702
#define SSL_R_PARSE_TLSEXT	2433,96746
#define SSL_R_PATH_TOO_LONG	2434,96781
#define SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE	2435,96817
#define SSL_R_PEER_ERROR	2436,96871
#define SSL_R_PEER_ERROR_CERTIFICATE	2437,96904
#define SSL_R_PEER_ERROR_NO_CERTIFICATE	2438,96948
#define SSL_R_PEER_ERROR_NO_CIPHER	2439,96995
#define SSL_R_PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE	2440,97037
#define SSL_R_PRE_MAC_LENGTH_TOO_LONG	2441,97096
#define SSL_R_PROBLEMS_MAPPING_CIPHER_FUNCTIONS	2442,97141
#define SSL_R_PROTOCOL_IS_SHUTDOWN	2443,97195
#define SSL_R_PSK_IDENTITY_NOT_FOUND	2444,97237
#define SSL_R_PSK_NO_CLIENT_CB	2445,97281
#define SSL_R_PSK_NO_SERVER_CB	2446,97320
#define SSL_R_PUBLIC_KEY_ENCRYPT_ERROR	2447,97359
#define SSL_R_PUBLIC_KEY_IS_NOT_RSA	2448,97405
#define SSL_R_PUBLIC_KEY_NOT_RSA	2449,97448
#define SSL_R_READ_BIO_NOT_SET	2450,97488
#define SSL_R_READ_TIMEOUT_EXPIRED	2451,97527
#define SSL_R_READ_WRONG_PACKET_TYPE	2452,97569
#define SSL_R_RECORD_LENGTH_MISMATCH	2453,97613
#define SSL_R_RECORD_TOO_LARGE	2454,97657
#define SSL_R_RECORD_TOO_SMALL	2455,97696
#define SSL_R_RENEGOTIATE_EXT_TOO_LONG	2456,97735
#define SSL_R_RENEGOTIATION_ENCODING_ERR	2457,97781
#define SSL_R_RENEGOTIATION_MISMATCH	2458,97828
#define SSL_R_REQUIRED_CIPHER_MISSING	2459,97872
#define SSL_R_REQUIRED_COMPRESSSION_ALGORITHM_MISSING	2460,97917
#define SSL_R_REUSE_CERT_LENGTH_NOT_ZERO	2461,97976
#define SSL_R_REUSE_CERT_TYPE_NOT_ZERO	2462,98023
#define SSL_R_REUSE_CIPHER_LIST_NOT_ZERO	2463,98069
#define SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING	2464,98116
#define SSL_R_SERVERHELLO_TLSEXT	2465,98169
#define SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED	2466,98209
#define SSL_R_SHORT_READ	2467,98262
#define SSL_R_SIGNATURE_ALGORITHMS_ERROR	2468,98295
#define SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE	2469,98342
#define SSL_R_SRP_A_CALC	2470,98399
#define SSL_R_SRTP_COULD_NOT_ALLOCATE_PROFILES	2471,98432
#define SSL_R_SRTP_PROTECTION_PROFILE_LIST_TOO_LONG	2472,98485
#define SSL_R_SRTP_UNKNOWN_PROTECTION_PROFILE	2473,98542
#define SSL_R_SSL23_DOING_SESSION_ID_REUSE	2474,98594
#define SSL_R_SSL2_CONNECTION_ID_TOO_LONG	2475,98643
#define SSL_R_SSL3_EXT_INVALID_ECPOINTFORMAT	2476,98691
#define SSL_R_SSL3_EXT_INVALID_SERVERNAME	2477,98742
#define SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE	2478,98790
#define SSL_R_SSL3_SESSION_ID_TOO_LONG	2479,98843
#define SSL_R_SSL3_SESSION_ID_TOO_SHORT	2480,98889
#define SSL_R_SSLV3_ALERT_BAD_CERTIFICATE	2481,98936
#define SSL_R_SSLV3_ALERT_BAD_RECORD_MAC	2482,98985
#define SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED	2483,99033
#define SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED	2484,99086
#define SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN	2485,99139
#define SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE	2486,99192
#define SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE	2487,99247
#define SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER	2488,99298
#define SSL_R_SSLV3_ALERT_NO_CERTIFICATE	2489,99349
#define SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE	2490,99397
#define SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE	2491,99449
#define SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION	2492,99505
#define SSL_R_SSL_HANDSHAKE_FAILURE	2493,99559
#define SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS	2494,99602
#define SSL_R_SSL_SESSION_ID_CALLBACK_FAILED	2495,99649
#define SSL_R_SSL_SESSION_ID_CONFLICT	2496,99700
#define SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG	2497,99745
#define SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH	2498,99797
#define SSL_R_SSL_SESSION_ID_IS_DIFFERENT	2499,99847
#define SSL_R_TLSV1_ALERT_ACCESS_DENIED	2500,99895
#define SSL_R_TLSV1_ALERT_DECODE_ERROR	2501,99943
#define SSL_R_TLSV1_ALERT_DECRYPTION_FAILED	2502,99990
#define SSL_R_TLSV1_ALERT_DECRYPT_ERROR	2503,100041
#define SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION	2504,100089
#define SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY	2505,100141
#define SSL_R_TLSV1_ALERT_INTERNAL_ERROR	2506,100196
#define SSL_R_TLSV1_ALERT_NO_RENEGOTIATION	2507,100244
#define SSL_R_TLSV1_ALERT_PROTOCOL_VERSION	2508,100294
#define SSL_R_TLSV1_ALERT_RECORD_OVERFLOW	2509,100344
#define SSL_R_TLSV1_ALERT_UNKNOWN_CA	2510,100393
#define SSL_R_TLSV1_ALERT_USER_CANCELLED	2511,100438
#define SSL_R_TLSV1_BAD_CERTIFICATE_HASH_VALUE	2512,100486
#define SSL_R_TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE	2513,100540
#define SSL_R_TLSV1_CERTIFICATE_UNOBTAINABLE	2514,100598
#define SSL_R_TLSV1_UNRECOGNIZED_NAME	2515,100650
#define SSL_R_TLSV1_UNSUPPORTED_EXTENSION	2516,100696
#define SSL_R_TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER	2517,100745
#define SSL_R_TLS_HEARTBEAT_PEER_DOESNT_ACCEPT	2518,100801
#define SSL_R_TLS_HEARTBEAT_PENDING	2519,100854
#define SSL_R_TLS_ILLEGAL_EXPORTER_LABEL	2520,100897
#define SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST	2521,100944
#define SSL_R_TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST 2522,100995
#define SSL_R_TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG	2523,101060
#define SSL_R_TRIED_TO_USE_UNSUPPORTED_CIPHER	2524,101119
#define SSL_R_UNABLE_TO_DECODE_DH_CERTS	2525,101171
#define SSL_R_UNABLE_TO_DECODE_ECDH_CERTS	2526,101218
#define SSL_R_UNABLE_TO_EXTRACT_PUBLIC_KEY	2527,101266
#define SSL_R_UNABLE_TO_FIND_DH_PARAMETERS	2528,101315
#define SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS	2529,101364
#define SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS	2530,101415
#define SSL_R_UNABLE_TO_FIND_SSL_METHOD	2531,101471
#define SSL_R_UNABLE_TO_LOAD_SSL2_MD5_ROUTINES	2532,101518
#define SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES	2533,101571
#define SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES	2534,101624
#define SSL_R_UNEXPECTED_MESSAGE	2535,101678
#define SSL_R_UNEXPECTED_RECORD	2536,101718
#define SSL_R_UNINITIALIZED	2537,101758
#define SSL_R_UNKNOWN_ALERT_TYPE	2538,101794
#define SSL_R_UNKNOWN_CERTIFICATE_TYPE	2539,101834
#define SSL_R_UNKNOWN_CIPHER_RETURNED	2540,101880
#define SSL_R_UNKNOWN_CIPHER_TYPE	2541,101925
#define SSL_R_UNKNOWN_DIGEST	2542,101966
#define SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE	2543,102003
#define SSL_R_UNKNOWN_PKEY_TYPE	2544,102050
#define SSL_R_UNKNOWN_PROTOCOL	2545,102090
#define SSL_R_UNKNOWN_REMOTE_ERROR_TYPE	2546,102129
#define SSL_R_UNKNOWN_SSL_VERSION	2547,102176
#define SSL_R_UNKNOWN_STATE	2548,102217
#define SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED	2549,102253
#define SSL_R_UNSUPPORTED_CIPHER	2550,102309
#define SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM	2551,102349
#define SSL_R_UNSUPPORTED_DIGEST_TYPE	2552,102403
#define SSL_R_UNSUPPORTED_ELLIPTIC_CURVE	2553,102448
#define SSL_R_UNSUPPORTED_PROTOCOL	2554,102495
#define SSL_R_UNSUPPORTED_SSL_VERSION	2555,102537
#define SSL_R_UNSUPPORTED_STATUS_TYPE	2556,102582
#define SSL_R_USE_SRTP_NOT_NEGOTIATED	2557,102627
#define SSL_R_WRITE_BIO_NOT_SET	2558,102672
#define SSL_R_WRONG_CIPHER_RETURNED	2559,102712
#define SSL_R_WRONG_MESSAGE_TYPE	2560,102755
#define SSL_R_WRONG_NUMBER_OF_KEY_BITS	2561,102795
#define SSL_R_WRONG_SIGNATURE_LENGTH	2562,102841
#define SSL_R_WRONG_SIGNATURE_SIZE	2563,102885
#define SSL_R_WRONG_SIGNATURE_TYPE	2564,102927
#define SSL_R_WRONG_SSL_VERSION	2565,102969
#define SSL_R_WRONG_VERSION_NUMBER	2566,103009
#define SSL_R_X509_LIB	2567,103051
#define SSL_R_X509_VERIFICATION_SETUP_PROBLEMS	2568,103083

ssl/ssl_task.c,668
BIO *bio_err=bio_err136,6086
BIO *bio_stdout=bio_stdout137,6105
static char *cipher=cipher140,6154
int verbose=141,6180
static int s_nbio=143,6210
#define TEST_SERVER_CERT 145,6238
struct rpc_msg 147,6364
   char channel;148,6427
   char function;149,6494
   unsigned short int length;150,6560
   char data[data151,6637
#define RPC_HDR_SIZE 153,6681
typedef unsigned short io_channel;156,6774
struct io_status 158,6810
    unsigned short status;159,6829
    unsigned short count;160,6856
    unsigned long stsval;161,6882
static int get 167,7063
static int put 178,7393
static int general_request 190,7784
int main 195,7961
int doit(257,9603

ssl/d1_srvr.c,468
static const SSL_METHOD *dtls1_get_server_method(dtls1_get_server_method132,6336
IMPLEMENT_dtls1_meth_func(140,6484
int dtls1_send_hello_request(848,23707
int dtls1_send_hello_verify_request(870,24224
int dtls1_send_server_hello(909,25211
int dtls1_send_server_done(998,27424
int dtls1_send_server_key_exchange(1022,27944
int dtls1_send_certificate_request(1468,38862
int dtls1_send_server_certificate(1569,40985
int dtls1_send_newsession_ticket(1602,41713

ssl/s3_srvr.c,809
#define REUSE_CIPHER_BUG151,7594
#define NETSCAPE_HANG_BUG152,7619
static const SSL_METHOD *ssl3_get_server_method(ssl3_get_server_method174,8092
static int ssl_check_srp_ext_ClientHello(183,8260
IMPLEMENT_ssl3_meth_func(207,8751
int ssl3_send_hello_request(846,24303
int ssl3_check_client_hello(868,24702
int ssl3_get_client_hello(914,25800
int ssl3_send_server_hello(1417,38589
int ssl3_send_server_done(1518,41208
int ssl3_send_server_key_exchange(1542,41626
int ssl3_send_certificate_request(2015,52840
int ssl3_get_client_key_exchange(2112,54598
int ssl3_get_cert_verify(2897,74622
int ssl3_get_client_certificate(3155,80335
int ssl3_send_server_certificate(3317,84284
int ssl3_send_newsession_ticket(3348,84998
int ssl3_send_cert_status(3484,88690
int ssl3_get_next_proto(3522,89812

ssl/t1_clnt.c,113
static const SSL_METHOD *tls1_get_client_method(tls1_get_client_method67,3398
IMPLEMENT_tls_meth_func(78,3658

ssl/s23_meth.c,68
static const SSL_METHOD *ssl23_get_method(ssl23_get_method64,3314

ssl/ssl23.h,284
#define HEADER_SSL23_H 60,3212
#define SSL23_ST_CW_CLNT_HELLO_A	68,3312
#define SSL23_ST_CW_CLNT_HELLO_B	69,3368
#define SSL23_ST_CR_SRVR_HELLO_A	71,3447
#define SSL23_ST_CR_SRVR_HELLO_B	72,3503
#define SSL23_ST_SR_CLNT_HELLO_A	76,3596
#define SSL23_ST_SR_CLNT_HELLO_B	77,3651

ssl/s2_srvr.c,498
#define BREAK	130,6421
static const SSL_METHOD *ssl2_get_server_method(ssl2_get_server_method132,6442
IMPLEMENT_ssl2_meth_func(140,6587
static int get_client_master_key(364,11642
static int get_client_hello(521,15832
static int server_hello(697,20484
static int get_client_finished(811,23664
static int server_verify(870,25264
static int server_finish(893,25817
static int request_certificate(920,26499
static int ssl_rsa_private_decrypt(1112,31420
static void *dummy=dummy1139,32124

ssl/kssl_lcl.h,27
#define	KSSL_LCL_H60,2800

ssl/s2_clnt.c,535
#define BREAK	130,6430
static const SSL_METHOD *ssl2_get_client_method(ssl2_get_client_method132,6451
IMPLEMENT_ssl2_meth_func(140,6596
static int get_server_hello(332,10853
static int client_hello(543,16447
static int client_master_key(611,17981
static int client_finished(723,20639
static int client_certificate(746,21193
static int get_server_verify(897,24929
static int get_server_finished(949,26305
int ssl2_set_certificate(1025,28517
static int ssl_rsa_public_encrypt(1093,30004
static void *dummy=dummy1122,30712

ssl/dtls1.h,3539
#define HEADER_DTLS1_H 61,2799
#define DTLS1_VERSION	82,3197
#define DTLS1_BAD_VER	83,3228
#define DTLS1_AD_MISSING_HANDSHAKE_MESSAGE 87,3324
#define DTLS1_COOKIE_LENGTH 91,3408
#define DTLS1_RT_HEADER_LENGTH 93,3461
#define DTLS1_HM_HEADER_LENGTH 95,3513
#define DTLS1_HM_BAD_FRAGMENT 97,3565
#define DTLS1_HM_FRAGMENT_RETRY 98,3616
#define DTLS1_CCS_HEADER_LENGTH 100,3668
#define DTLS1_AL_HEADER_LENGTH 103,3762
#define DTLS1_AL_HEADER_LENGTH 105,3819
#define DTLS1_SCTP_AUTH_LABEL	111,3933
typedef struct dtls1_bitmap_st114,3997
	unsigned long map;116,4031
	unsigned char max_seq_num[max_seq_num118,4128
	} DTLS1_BITMAP;121,4248
struct dtls1_retransmit_state123,4266
	EVP_CIPHER_CTX *enc_write_ctx;enc_write_ctx125,4299
	EVP_MD_CTX *write_hash;write_hash126,4357
	COMP_CTX *compress;compress128,4438
	char *compress;compress130,4486
	SSL_SESSION *session;session132,4511
	unsigned short epoch;133,4534
struct hm_header_st136,4562
	unsigned char type;138,4585
	unsigned long msg_len;139,4606
	unsigned short seq;140,4630
	unsigned long frag_off;141,4651
	unsigned long frag_len;142,4676
	unsigned int is_ccs;143,4701
	struct dtls1_retransmit_state saved_retransmit_state;144,4723
struct ccs_header_st147,4783
	unsigned char type;149,4807
	unsigned short seq;150,4828
struct dtls1_timeout_st153,4854
	unsigned int read_timeouts;156,4919
	unsigned int write_timeouts;159,4989
	unsigned int num_alerts;162,5061
typedef struct record_pqueue_st165,5092
	unsigned short epoch;167,5127
	pqueue q;168,5150
	} record_pqueue;169,5161
typedef struct hm_fragment_st171,5180
	struct hm_header_st msg_header;173,5213
	unsigned char *fragment;fragment174,5246
	unsigned char *reassembly;reassembly175,5272
	} hm_fragment;176,5300
typedef struct dtls1_state_st178,5317
	unsigned int send_cookie;180,5350
	unsigned char cookie[cookie181,5377
	unsigned char rcvd_cookie[rcvd_cookie182,5421
	unsigned int cookie_len;183,5470
	unsigned short r_epoch;190,5647
	unsigned short w_epoch;191,5672
	DTLS1_BITMAP bitmap;194,5749
	DTLS1_BITMAP next_bitmap;197,5830
	unsigned short handshake_write_seq;200,5891
	unsigned short next_handshake_write_seq;201,5928
	unsigned short handshake_read_seq;203,5971
	unsigned char last_write_sequence[last_write_sequence206,6061
	record_pqueue unprocessed_rcds;209,6163
	record_pqueue processed_rcds;210,6196
	pqueue buffered_messages;213,6263
	pqueue sent_messages;216,6332
	record_pqueue buffered_app_data;223,6515
	unsigned int listen;226,6619
	unsigned int mtu;228,6642
	struct hm_header_st w_msg_hdr;230,6689
	struct hm_header_st r_msg_hdr;231,6721
	struct dtls1_timeout_st timeout;233,6754
	struct timeval next_timeout;236,6865
	unsigned short timeout_duration;239,6920
	unsigned char alert_fragment[alert_fragment243,7059
	unsigned int alert_fragment_len;244,7114
	unsigned char handshake_fragment[handshake_fragment245,7148
	unsigned int handshake_fragment_len;246,7207
	unsigned int retransmitting;248,7246
	unsigned int change_cipher_spec_ok;249,7276
	int next_state;253,7382
	int shutdown_received;255,7400
	} DTLS1_STATE;258,7432
typedef struct dtls1_record_data_st260,7449
	unsigned char *packet;packet262,7488
	unsigned int   packet_length;263,7512
	SSL3_BUFFER    rbuf;264,7543
	SSL3_RECORD    rrec;265,7565
	struct bio_dgram_sctp_rcvinfo recordinfo;267,7611
	} DTLS1_RECORD_DATA;269,7661
#define DTLS1_TMO_READ_COUNT 274,7763
#define DTLS1_TMO_WRITE_COUNT 275,7815
#define DTLS1_TMO_ALERT_COUNT 277,7868

ssl/ssl_err2.c,37
void SSL_load_error_strings(63,3261

ssl/ssl_txt.c,66
int SSL_SESSION_print_fp(90,4506
int SSL_SESSION_print(107,4807

ssl/d1_both.c,1474
#define RSMBLY_BITMASK_SIZE(126,6162
#define RSMBLY_BITMASK_MARK(128,6222
#define RSMBLY_BITMASK_IS_COMPLETE(139,6677
#define RSMBLY_BITMASK_PRINT(148,7059
static unsigned char bitmask_start_values[bitmask_start_values155,7282
static unsigned char bitmask_end_values[bitmask_end_values156,7378
static unsigned int g_probable_mtu[g_probable_mtu159,7517
dtls1_hm_fragment_new(173,8094
dtls1_hm_fragment_free(215,8940
int dtls1_do_write(223,9215
long dtls1_get_message(408,14155
static int dtls1_preprocess_fragment(479,15896
dtls1_retrieve_buffered_fragment(529,17310
dtls1_reassemble_fragment(585,18444
dtls1_process_out_of_seq_message(688,21038
dtls1_get_message_fragment(773,23310
int dtls1_send_finished(898,26643
int dtls1_send_change_cipher_spec(963,28178
static int dtls1_add_cert_to_buf(995,28873
unsigned long dtls1_output_cert_chain(1013,29211
int dtls1_read_failed(1072,30547
dtls1_get_queue_priority(1116,31605
dtls1_retransmit_buffered_messages(1130,32274
dtls1_buffer_message(1156,32838
dtls1_retransmit_message(1219,34741
dtls1_clear_record_buffer(1312,37695
dtls1_set_message_header(1326,37952
dtls1_set_message_header_int(1345,38517
dtls1_fix_message_header(1359,38881
dtls1_write_message_header(1369,39109
dtls1_min_mtu(1384,39380
dtls1_guess_mtu(1391,39515
dtls1_get_message_header(1406,39794
dtls1_get_ccs_header(1418,40085
int dtls1_shutdown(1425,40248
dtls1_process_heartbeat(1448,40761
dtls1_heartbeat(1518,42327

ssl/ssl_cert.c,849
int SSL_get_ex_data_X509_STORE_CTX_idx(135,6420
static void ssl_cert_set_default_md(163,7023
CERT *ssl_cert_new(ssl_cert_new178,7414
CERT *ssl_cert_dup(ssl_cert_dup196,7734
void ssl_cert_free(360,11131
int ssl_cert_inst(404,11951
SESS_CERT *ssl_sess_cert_new(ssl_sess_cert_new433,12701
void ssl_sess_cert_free(451,13017
int ssl_set_peer_cert_type(503,14139
int ssl_verify_cert_chain(509,14237
static void set_client_CA_list(568,15725
STACK_OF(576,15920
void SSL_set_client_CA_list(595,16310
void SSL_CTX_set_client_CA_list(600,16432
STACK_OF(605,16566
STACK_OF(610,16666
static int add_client_CA(629,17027
int SSL_add_client_CA(648,17385
int SSL_CTX_add_client_CA(653,17477
static int xname_cmp(658,17577
STACK_OF(672,18125
int SSL_add_file_cert_subjects_to_stack(742,19611
int SSL_add_dir_cert_subjects_to_stack(805,21004

ssl/t1_lib.c,1742
const char tls1_version_str[tls1_version_str120,5997
SSL3_ENC_METHOD TLSv1_enc_data=128,6244
long tls1_default_timeout(143,6626
int tls1_new(150,6796
void tls1_free(157,6892
void tls1_clear(168,7075
static int nid_list[nid_list176,7179
static int pref_list[pref_list205,8181
int tls1_ec_curve_id2nid(234,9184
int tls1_ec_nid2curve_id(243,9429
#define tlsext_sigalg_rsa(311,11188
#define tlsext_sigalg_rsa(313,11230
#define tlsext_sigalg_dsa(317,11316
#define tlsext_sigalg_dsa(319,11358
#define tlsext_sigalg_ecdsa(323,11446
#define tlsext_sigalg_ecdsa(325,11490
#define tlsext_sigalg(328,11558
static unsigned char tls12_sigalgs[tls12_sigalgs333,11665
int tls12_get_req_sig_algs(350,12045
unsigned char *ssl_add_clienthello_tlsext(ssl_add_clienthello_tlsext363,12314
unsigned char *ssl_add_serverhello_tlsext(ssl_add_serverhello_tlsext678,20907
int ssl_parse_clienthello_tlsext(865,25995
static char ssl_next_proto_validate(1363,38971
int ssl_parse_serverhello_tlsext(1379,39183
int ssl_prepare_clienthello_tlsext(1642,46018
int ssl_prepare_serverhello_tlsext(1735,49054
int ssl_check_clienthello_tlsext(1766,50226
int ssl_check_serverhello_tlsext(1891,53911
int tls1_process_ticket(2036,59013
static int tls_decrypt_ticket(2138,61646
	int nid;2239,64341
	int id;2240,64351
	} tls12_lookup;2241,64360
static tls12_lookup tls12_md[tls12_md2243,64378
static tls12_lookup tls12_sig[tls12_sig2260,64742
static int tls12_find_id(2272,64991
static int tls12_find_nid(2283,65180
int tls12_get_sigandhash(2295,65370
int tls12_get_sigid(2312,65758
const EVP_MD *tls12_get_hash(tls12_get_hash2318,65893
int tls1_process_sigalgs(2356,66532
tls1_process_heartbeat(2437,68226
tls1_heartbeat(2506,69773

ssl/ssl_ciph.c,2989
#define SSL_ENC_DES_IDX	153,7503
#define SSL_ENC_3DES_IDX	154,7530
#define SSL_ENC_RC4_IDX	155,7557
#define SSL_ENC_RC2_IDX	156,7584
#define SSL_ENC_IDEA_IDX	157,7611
#define SSL_ENC_NULL_IDX	158,7638
#define SSL_ENC_AES128_IDX	159,7665
#define SSL_ENC_AES256_IDX	160,7694
#define SSL_ENC_CAMELLIA128_IDX	161,7723
#define SSL_ENC_CAMELLIA256_IDX	162,7757
#define SSL_ENC_GOST89_IDX	163,7791
#define SSL_ENC_SEED_IDX 164,7821
#define SSL_ENC_AES128GCM_IDX	165,7853
#define SSL_ENC_AES256GCM_IDX	166,7886
#define SSL_ENC_NUM_IDX	167,7919
static const EVP_CIPHER *ssl_cipher_methods[ssl_cipher_methods170,7949
#define SSL_COMP_NULL_IDX	174,8088
#define SSL_COMP_ZLIB_IDX	175,8116
#define SSL_COMP_NUM_IDX	176,8144
static STACK_OF(178,8172
#define SSL_MD_MD5_IDX	180,8223
#define SSL_MD_SHA1_IDX	181,8248
#define SSL_MD_GOST94_IDX 182,8274
#define SSL_MD_GOST89MAC_IDX 183,8302
#define SSL_MD_SHA256_IDX 184,8333
#define SSL_MD_SHA384_IDX 185,8361
#define SSL_MD_NUM_IDX	189,8492
static int  ssl_mac_pkey_id[ssl_mac_pkey_id197,8792
static int ssl_mac_secret_size[ssl_mac_secret_size202,8926
static int ssl_handshake_digest_flag[ssl_handshake_digest_flag206,8993
#define CIPHER_ADD	212,9181
#define CIPHER_KILL	213,9202
#define CIPHER_DEL	214,9224
#define CIPHER_ORD	215,9245
#define CIPHER_SPECIAL	216,9266
typedef struct cipher_order_st218,9292
	const SSL_CIPHER *cipher;cipher220,9326
	int active;221,9353
	int dead;222,9366
	struct cipher_order_st *next,next223,9377
	struct cipher_order_st *next,*prev;prev223,9377
	} CIPHER_ORDER;224,9414
static const SSL_CIPHER cipher_aliases[cipher_aliases226,9432
static int get_optional_pkey_id(334,14432
static int get_optional_pkey_id(348,14709
void ssl_load_ciphers(364,15047
static int sk_comp_cmp(434,17589
static void load_builtin_compressions(440,17704
int ssl_cipher_get_evp(486,18654
int ssl_get_handshake_digest(646,21823
#define ITEM_SEP(660,22070
static void ll_append_tail(663,22157
static void ll_append_head(679,22511
static void ssl_cipher_get_disabled(695,22865
static void ssl_cipher_collect_ciphers(775,25645
static void ssl_cipher_collect_aliases(850,27711
static void ssl_cipher_apply_rule(919,29735
static int ssl_cipher_strength_sort(1051,32967
static int ssl_cipher_process_rulestr(1102,34266
STACK_OF(1352,39792
char *SSL_CIPHER_description(SSL_CIPHER_description1534,46041
char *SSL_CIPHER_get_version(SSL_CIPHER_get_version1721,49438
const char *SSL_CIPHER_get_name(SSL_CIPHER_get_name1736,49704
int SSL_CIPHER_get_bits(1744,49860
unsigned long SSL_CIPHER_get_id(1756,50053
SSL_COMP *ssl3_comp_find(ssl3_comp_find1761,50128
void *SSL_COMP_get_compression_methods(SSL_COMP_get_compression_methods1778,50428
int SSL_COMP_add_compression_method(1782,50493
const char *SSL_COMP_get_name(SSL_COMP_get_name1787,50565
STACK_OF(1792,50639
int SSL_COMP_add_compression_method(1798,50762
const char *SSL_COMP_get_name(SSL_COMP_get_name1845,51925

ssl/ssltest.c,2951
#define _BSD_SOURCE 143,7313
#define USE_SOCKETS154,7557
#define _XOPEN_SOURCE 158,7619
#define _XOPEN_SOURCE_EXTENDED	189,8272
#  define TEST_SERVER_CERT 202,8601
#  define TEST_CLIENT_CERT 203,8658
#  define TEST_SERVER_CERT 205,8748
#  define TEST_CLIENT_CERT 206,8799
#  define TEST_SERVER_CERT 208,8885
#  define TEST_CLIENT_CERT 209,8942
#  define TEST_SERVER_CERT 211,9005
#  define TEST_CLIENT_CERT 212,9053
#define COMP_RLE	217,9247
#define COMP_ZLIB	218,9268
#define APP_CALLBACK_STRING 226,9569
struct app_verify_arg227,9622
	char *string;string229,9647
	int app_verify;230,9662
	int allow_proxy_certs;231,9679
	char *proxy_auth;proxy_auth232,9703
	char *proxy_cond;proxy_cond233,9722
static char *psk_key=psk_key243,9866
typedef struct srp_client_arg_st255,10335
	char *srppassin;srppassin257,10371
	char *srplogin;srplogin258,10389
	} SRP_CLIENT_ARG;259,10406
#define PWD_STRLEN 261,10426
static char * MS_CALLBACK ssl_give_srp_client_pwd_cb(263,10451
typedef struct srp_server_arg_st271,10720
	char *expected_user;expected_user273,10756
	char *pass;pass274,10778
	} SRP_SERVER_ARG;275,10791
static int MS_CALLBACK ssl_srp_server_param_cb(277,10811
static BIO *bio_err=bio_err295,11269
static BIO *bio_stdout=bio_stdout296,11295
static char *cipher=cipher298,11325
static int verbose=299,11351
static int debug=300,11373
static int s_nbio=304,11434
static const char rnd_seed[rnd_seed308,11470
static void sv_usage(313,11734
static void print_details(374,14570
static void lock_dbg_cb(418,15647
struct cb_info_st 482,16805
struct cb_info_st { void *input;input482,16805
struct cb_info_st { void *input; size_t len;482,16805
struct cb_info_st { void *input; size_t len; int ret;482,16805
struct cb_info_st co1 483,16862
struct cb_info_st co2 484,16941
struct cb_info_st so1 485,17013
struct cb_info_st so2 486,17092
int opaque_prf_input_cb(488,17165
int main(501,17415
int doit_biopair(1151,32334
#define W_READ	1540,41722
#define W_WRITE	1541,41739
#define C_DONE	1542,41757
#define S_DONE	1543,41774
int doit(1545,41792
static int get_proxy_auth_ex_data_idx(1839,47489
static int MS_CALLBACK verify_callback(1855,47805
static void process_proxy_debug(1991,51174
static int process_proxy_cond_val(2013,51787
static int process_proxy_cond_multipliers(2092,53137
static int process_proxy_cond_adders(2158,54276
static int process_proxy_cond(2222,55364
static int MS_CALLBACK app_verify_callback(2229,55552
static RSA *rsa_tmp=rsa_tmp2321,57568
static RSA MS_CALLBACK *tmp_rsa_cb(tmp_rsa_cb2323,57595
static void free_tmp_rsa(2351,58234
static DH *get_dh512(get_dh5122368,58621
static DH *get_dh1024(get_dh10242391,59310
static DH *get_dh1024dsa(get_dh1024dsa2419,60341
static int psk_key2bn(2461,62150
static unsigned int psk_client_callback(2487,62688
static unsigned int psk_server_callback(2507,63200
static int do_test_cipherlist(2522,63564

ssl/s3_enc.c,698
static unsigned char ssl3_pad_1[ssl3_pad_1143,7135
static unsigned char ssl3_pad_2[ssl3_pad_2151,7428
static int ssl3_generate_key_block(160,7819
int ssl3_change_cipher_state(216,9244
int ssl3_setup_key_block(388,13468
void ssl3_cleanup_key_block(457,14868
int ssl3_enc(469,15126
void ssl3_init_finished_mac(555,16908
void ssl3_free_digest_list(563,17178
void ssl3_finish_mac(578,17458
int ssl3_digest_cached_records(595,17836
int ssl3_cert_verify_mac(645,19086
int ssl3_final_finish_mac(649,19203
static int ssl3_handshake_mac(658,19430
int n_ssl3_mac(712,20771
void ssl3_record_sequence_update(771,22111
int ssl3_generate_master_secret(782,22249
int ssl3_alert_code(824,23303

ssl/s3_clnt.c,998
static const SSL_METHOD *ssl3_get_client_method(ssl3_get_client_method173,8082
IMPLEMENT_ssl3_meth_func(181,8227
int ssl3_client_hello(654,18605
int ssl3_get_server_hello(820,22906
int ssl3_get_server_certificate(1073,29228
int ssl3_get_key_exchange(1259,33666
int ssl3_get_certificate_request(1857,47654
	for (nc=0; nc<llen;llen1964,50159
		q=1976,50454
	s->s3->tmp.cert_req=cert_req2014,51207
	s->s3->tmp.ctype_num=ctype_num2015,51231
	s->s3->tmp.ca_names=ca_names2018,51359
	ca_sk=2019,51387
	ret=2021,51401
static int ca_dn_cmp(2027,51497
int ssl3_get_new_session_ticket(2032,51637
int ssl3_get_cert_status(2121,53951
int ssl3_get_server_done(2190,55488
int ssl3_send_client_key_exchange(2215,55944
int ssl3_send_client_verify(2925,74985
int ssl3_send_client_certificate(3083,78554
#define has_bits(3159,80152
int ssl3_check_cert_and_algorithm(3161,80194
int ssl3_send_next_proto(3299,83490
int ssl3_check_finished(3330,84388
int ssl_do_client_cert_cb(3355,84974

ssl/s23_pkt.c,89
#define USE_SOCKETS61,3228
int ssl23_write_bytes(66,3324
int ssl23_read_bytes(93,3757

ssl/s2_lib.c,805
const char ssl2_version_str[ssl2_version_str119,5968
#define SSL2_NUM_CIPHERS 121,6030
OPENSSL_GLOBAL const SSL_CIPHER ssl2_ciphers[ssl2_ciphers124,6151
long ssl2_default_timeout(296,8259
int ssl2_num_ciphers(301,8312
const SSL_CIPHER *ssl2_get_cipher(ssl2_get_cipher306,8373
int ssl2_pending(314,8528
int ssl2_new(319,8620
void ssl2_free(350,9388
void ssl2_clear(365,9635
long ssl2_ctrl(385,9903
long ssl2_callback_ctrl(400,10090
long ssl2_ctx_ctrl(405,10168
long ssl2_ctx_callback_ctrl(410,10252
const SSL_CIPHER *ssl2_get_cipher_by_char(ssl2_get_cipher_by_char417,10425
int ssl2_put_cipher_by_char(433,10801
int ssl2_generate_key_material(448,11098
void ssl2_return_error(503,12521
void ssl2_write_error(515,12652
int ssl2_shutdown(545,13237
static void *dummy=dummy553,13381

ssl/kssl.c,4480
#define KRB5_PRIVATE	73,3189
#define ENOMEM 84,3385
#define NO_DEF_KRB5_CCACHE105,4242
#undef  krb5_cc_get_principal106,4269
#define krb5_cc_get_principal 108,4306
#define krb5_free_data_contents 110,4367
#define krb5_free_context 111,4432
#define krb5_auth_con_free 112,4497
#define krb5_free_principal 113,4562
#define krb5_mk_req_extended 114,4627
#define krb5_get_credentials 115,4692
#define krb5_cc_default 116,4757
#define krb5_sname_to_principal 117,4822
#define krb5_init_context 118,4887
#define krb5_free_ticket 119,4952
#define krb5_rd_req 120,5017
#define krb5_kt_default 121,5082
#define krb5_kt_resolve 122,5147
#define krb5_kt_close 125,5308
#define krb5_kt_get_entry 128,5413
#define krb5_auth_con_init 130,5500
#define krb5_principal_compare 132,5566
#define krb5_decrypt_tkt_part 133,5627
#define krb5_timeofday 134,5687
#define krb5_rc_default 135,5740
#undef krb5_rc_initialize138,5821
#define krb5_rc_initialize 140,5854
#undef krb5_rc_get_lifespan143,5936
#define krb5_rc_get_lifespan 145,5971
#undef krb5_rc_destroy148,6050
#define krb5_rc_destroy 150,6080
#define valid_cksumtype 152,6131
#define krb5_checksum_size 153,6181
#define krb5_kt_free_entry 154,6234
#define krb5_auth_con_setrcache 155,6287
#define krb5_auth_con_getrcache 156,6349
#define krb5_get_server_rcache 157,6411
static int krb5_loaded 287,14345
load_krb5_dll(291,14506
kssl_krb5_free_data_contents(364,17451
kssl_krb5_mk_req_extended 374,17650
kssl_krb5_auth_con_init(390,18114
kssl_krb5_auth_con_free 402,18372
kssl_krb5_get_credentials(414,18627
kssl_krb5_sname_to_principal(429,19031
kssl_krb5_cc_default(445,19461
kssl_krb5_init_context(458,19700
kssl_krb5_free_context(470,19894
kssl_krb5_free_principal(480,20040
kssl_krb5_kt_resolve(490,20221
kssl_krb5_kt_default(504,20504
kssl_krb5_free_ticket(517,20742
kssl_krb5_rd_req(530,20984
krb5_principal_compare(545,21396
krb5_decrypt_tkt_part(558,21697
krb5_timeofday(571,21988
krb5_rc_default(583,22206
krb5_rc_initialize(595,22418
krb5_rc_get_lifespan(607,22671
krb5_rc_destroy(619,22933
krb5_checksum_size(631,23137
valid_cksumtype(643,23449
krb5_kt_free_entry(655,23725
#define krb5_x(669,24107
#define krb5_xc(670,24168
typedef	krb5_pointer	krb5_cc_cursor;673,24246
typedef struct _krb5_ccache675,24319
	krb5_magic magic;677,24350
	struct _krb5_cc_ops FAR *ops;ops678,24369
	krb5_pointer data;679,24400
	} *krb5_ccache;krb5_ccache680,24420
typedef struct _krb5_cc_ops682,24438
	krb5_magic magic;684,24469
	char  *prefix;prefix685,24488
	char 686,24504
	krb5_error_code 688,24570
	krb5_error_code 690,24661
	krb5_error_code 692,24737
	krb5_error_code 694,24823
	krb5_error_code 696,24896
	krb5_error_code 698,24967
	krb5_error_code 700,25053
	krb5_error_code 703,25171
	krb5_error_code 705,25265
	krb5_error_code 707,25359
	krb5_error_code 710,25469
	krb5_error_code 712,25561
	krb5_error_code 715,25667
	} krb5_cc_ops;717,25754
kssl_krb5_cc_get_principal721,25820
kssl_krb5_auth_con_setrcache(733,26122
kssl_krb5_get_server_rcache(743,26447
kssl_krb5_auth_con_getrcache(753,26732
kssl_krb5_kt_close(763,27012
kssl_krb5_kt_get_entry(772,27200
static void* kssl_calloc(786,27729
#define kssl_malloc(797,27880
#define kssl_realloc(798,27929
#define kssl_free(799,27988
*kstring(kstring803,28038
kssl_map_enc(816,28412
static int 	kssl_test_confound(843,29158
static size_t  *populate_cksumlens(populate_cksumlens878,30333
unsigned char	*kssl_skip_confound(kssl_skip_confound916,31356
kssl_err_set(940,31925
print_krb5_data(953,32194
print_krb5_authdata(972,32639
print_krb5_keyblock(998,33195
print_krb5_princ(1030,33971
kssl_cget_tkt(1061,35020
kssl_TKT2tkt(1229,40149
kssl_sget_tkt(1309,42724
kssl_ctx_new(1564,50646
kssl_ctx_free(1574,50837
kssl_ctx_setprinc(1596,51550
kssl_ctx_setstring(1653,52943
kssl_ctx_setkey(1688,53839
kssl_ctx_show(1740,54890
    kssl_keytab_is_available(1773,55734
kssl_tgt_is_available(1831,57411
void kssl_krb5_free_data_contents(1881,59099
static struct tm *k_gmtime(k_gmtime1906,59822
static krb5_deltat get_rc_clockskew(1932,60777
krb5_error_code  kssl_validate_times(1957,61703
krb5_error_code  kssl_check_authent(1994,62992
krb5_error_code  kssl_build_principal_2(2155,67914
void SSL_set0_kssl_ctx(2197,69200
KSSL_CTX * SSL_get0_kssl_ctx(2202,69276
char *kssl_ctx_get0_client_princ(kssl_ctx_get0_client_princ2207,69341
static void *dummy=dummy2217,69531

ssl/ssl2.h,6305
#define HEADER_SSL2_H 60,3210
#define SSL2_VERSION	67,3304
#define SSL2_VERSION_MAJOR	68,3333
#define SSL2_VERSION_MINOR	69,3365
#define SSL2_MT_ERROR	74,3509
#define SSL2_MT_CLIENT_HELLO	75,3535
#define SSL2_MT_CLIENT_MASTER_KEY	76,3567
#define SSL2_MT_CLIENT_FINISHED	77,3603
#define SSL2_MT_SERVER_HELLO	78,3638
#define SSL2_MT_SERVER_VERIFY	79,3670
#define SSL2_MT_SERVER_FINISHED	80,3703
#define SSL2_MT_REQUEST_CERTIFICATE	81,3738
#define SSL2_MT_CLIENT_CERTIFICATE	82,3776
#define SSL2_PE_UNDEFINED_ERROR	85,3840
#define SSL2_PE_NO_CIPHER	86,3880
#define SSL2_PE_NO_CERTIFICATE	87,3914
#define SSL2_PE_BAD_CERTIFICATE	88,3953
#define SSL2_PE_UNSUPPORTED_CERTIFICATE_TYPE 89,3993
#define SSL2_CK_NULL_WITH_MD5	92,4071
#define SSL2_CK_RC4_128_WITH_MD5	93,4123
#define SSL2_CK_RC4_128_EXPORT40_WITH_MD5	94,4168
#define SSL2_CK_RC2_128_CBC_WITH_MD5	95,4221
#define SSL2_CK_RC2_128_CBC_EXPORT40_WITH_MD5	96,4270
#define SSL2_CK_IDEA_128_CBC_WITH_MD5	97,4327
#define SSL2_CK_DES_64_CBC_WITH_MD5	98,4377
#define SSL2_CK_DES_64_CBC_WITH_SHA	99,4425
#define SSL2_CK_DES_192_EDE3_CBC_WITH_MD5	100,4482
#define SSL2_CK_DES_192_EDE3_CBC_WITH_SHA	101,4535
#define SSL2_CK_RC4_64_WITH_MD5	102,4597
#define SSL2_CK_DES_64_CFB64_WITH_MD5_1	104,4658
#define SSL2_CK_NULL	105,4723
#define SSL2_TXT_DES_64_CFB64_WITH_MD5_1	107,4772
#define SSL2_TXT_NULL_WITH_MD5	108,4826
#define SSL2_TXT_RC4_128_WITH_MD5	109,4870
#define SSL2_TXT_RC4_128_EXPORT40_WITH_MD5	110,4915
#define SSL2_TXT_RC2_128_CBC_WITH_MD5	111,4972
#define SSL2_TXT_RC2_128_CBC_EXPORT40_WITH_MD5	112,5025
#define SSL2_TXT_IDEA_128_CBC_WITH_MD5	113,5090
#define SSL2_TXT_DES_64_CBC_WITH_MD5	114,5145
#define SSL2_TXT_DES_64_CBC_WITH_SHA	115,5197
#define SSL2_TXT_DES_192_EDE3_CBC_WITH_MD5	116,5249
#define SSL2_TXT_DES_192_EDE3_CBC_WITH_SHA	117,5307
#define SSL2_TXT_RC4_64_WITH_MD5	118,5365
#define SSL2_TXT_NULL	120,5413
#define SSL2_CF_5_BYTE_ENC	123,5494
#define SSL2_CF_8_BYTE_ENC	124,5528
#define SSL2_CT_X509_CERTIFICATE	127,5592
#define SSL2_AT_MD5_WITH_RSA_ENCRYPTION	130,5663
#define SSL2_MAX_SSL_SESSION_ID_LENGTH	132,5710
#define SSL2_MAX_MASTER_KEY_LENGTH_IN_BITS	135,5779
#define SSL2_MAX_RECORD_LENGTH_2_BYTE_HEADER	137,5849
#define SSL2_MAX_RECORD_LENGTH_2_BYTE_HEADER	139,5907
#define SSL2_MAX_RECORD_LENGTH_3_BYTE_HEADER	141,5980
#define SSL2_CHALLENGE_LENGTH	143,6045
#define SSL2_MIN_CHALLENGE_LENGTH	145,6116
#define SSL2_MAX_CHALLENGE_LENGTH	146,6153
#define SSL2_CONNECTION_ID_LENGTH	147,6190
#define SSL2_MAX_CONNECTION_ID_LENGTH	148,6227
#define SSL2_SSL_SESSION_ID_LENGTH	149,6268
#define SSL2_MAX_CERT_CHALLENGE_LENGTH	150,6306
#define SSL2_MIN_CERT_CHALLENGE_LENGTH	151,6348
#define SSL2_MAX_KEY_MATERIAL_LENGTH	152,6390
#define  CERT	155,6457
typedef struct ssl2_state_st160,6516
	int three_byte_header;162,6548
	int clear_text;163,6572
	int escape;164,6607
	int ssl2_rollback;165,6645
	unsigned int wnum;169,6785
	int wpend_tot;170,6839
	const unsigned char *wpend_buf;wpend_buf171,6855
	int wpend_off;173,6889
	int wpend_len;174,6935
	int wpend_ret;175,6990
	int rbuf_left;178,7073
	int rbuf_offs;179,7089
	unsigned char *rbuf;rbuf180,7105
	unsigned char *wbuf;wbuf181,7127
	unsigned char *write_ptr;write_ptr183,7150
	unsigned int padding;186,7242
	unsigned int rlength;187,7265
	int ract_data_length;188,7313
	unsigned int wlength;189,7373
	int wact_data_length;190,7421
	unsigned char *ract_data;ract_data191,7481
	unsigned char *wact_data;wact_data192,7508
	unsigned char *mac_data;mac_data193,7535
	unsigned char *read_key;read_key195,7562
	unsigned char *write_key;write_key196,7588
	unsigned int challenge_length;199,7671
	unsigned char challenge[challenge200,7703
	unsigned int conn_id_length;201,7756
	unsigned char conn_id[conn_id202,7786
	unsigned int key_material_length;203,7841
	unsigned char key_material[key_material204,7876
	unsigned long read_sequence;206,7938
	unsigned long write_sequence;207,7968
		unsigned int conn_id_length;210,8010
		unsigned int cert_type;211,8041
		unsigned int cert_length;212,8068
		unsigned int csl;213,8096
		unsigned int clear;214,8117
		unsigned int enc;215,8139
		unsigned char ccl[ccl216,8160
		unsigned int cipher_spec_length;217,8213
		unsigned int session_id_length;218,8248
		unsigned int clen;219,8282
		unsigned int rlen;220,8303
		} tmp;221,8324
	} SSL2_STATE;222,8333
#define SSL2_ST_SEND_CLIENT_HELLO_A	228,8382
#define SSL2_ST_SEND_CLIENT_HELLO_B	229,8441
#define SSL2_ST_GET_SERVER_HELLO_A	230,8500
#define SSL2_ST_GET_SERVER_HELLO_B	231,8558
#define SSL2_ST_SEND_CLIENT_MASTER_KEY_A	232,8616
#define SSL2_ST_SEND_CLIENT_MASTER_KEY_B	233,8679
#define SSL2_ST_SEND_CLIENT_FINISHED_A	234,8742
#define SSL2_ST_SEND_CLIENT_FINISHED_B	235,8804
#define SSL2_ST_SEND_CLIENT_CERTIFICATE_A	236,8866
#define SSL2_ST_SEND_CLIENT_CERTIFICATE_B	237,8930
#define SSL2_ST_SEND_CLIENT_CERTIFICATE_C	238,8994
#define SSL2_ST_SEND_CLIENT_CERTIFICATE_D	239,9058
#define SSL2_ST_GET_SERVER_VERIFY_A	240,9122
#define SSL2_ST_GET_SERVER_VERIFY_B	241,9181
#define SSL2_ST_GET_SERVER_FINISHED_A	242,9240
#define SSL2_ST_GET_SERVER_FINISHED_B	243,9301
#define SSL2_ST_CLIENT_START_ENCRYPTION	244,9362
#define SSL2_ST_X509_GET_CLIENT_CERTIFICATE	245,9425
#define SSL2_ST_GET_CLIENT_HELLO_A	247,9504
#define SSL2_ST_GET_CLIENT_HELLO_B	248,9561
#define SSL2_ST_GET_CLIENT_HELLO_C	249,9618
#define SSL2_ST_SEND_SERVER_HELLO_A	250,9675
#define SSL2_ST_SEND_SERVER_HELLO_B	251,9733
#define SSL2_ST_GET_CLIENT_MASTER_KEY_A	252,9791
#define SSL2_ST_GET_CLIENT_MASTER_KEY_B	253,9853
#define SSL2_ST_SEND_SERVER_VERIFY_A	254,9915
#define SSL2_ST_SEND_SERVER_VERIFY_B	255,9974
#define SSL2_ST_SEND_SERVER_VERIFY_C	256,10033
#define SSL2_ST_GET_CLIENT_FINISHED_A	257,10092
#define SSL2_ST_GET_CLIENT_FINISHED_B	258,10152
#define SSL2_ST_SEND_SERVER_FINISHED_A	259,10212
#define SSL2_ST_SEND_SERVER_FINISHED_B	260,10273
#define SSL2_ST_SEND_REQUEST_CERTIFICATE_A	261,10334
#define SSL2_ST_SEND_REQUEST_CERTIFICATE_B	262,10398
#define SSL2_ST_SEND_REQUEST_CERTIFICATE_C	263,10462
#define SSL2_ST_SEND_REQUEST_CERTIFICATE_D	264,10526
#define SSL2_ST_SERVER_START_ENCRYPTION	265,10590
#define SSL2_ST_X509_GET_SERVER_CERTIFICATE	266,10652

ssl/ssl_algs.c,30
int SSL_library_init(64,3289

ssl/t1_meth.c,99
static const SSL_METHOD *tls1_get_method(tls1_get_method63,3261
IMPLEMENT_tls_meth_func(74,3493

ssl/s2_meth.c,100
static const SSL_METHOD *ssl2_get_method(ssl2_get_method65,3336
IMPLEMENT_ssl2_meth_func(73,3467

ssl/s3_meth.c,66
static const SSL_METHOD *ssl3_get_method(ssl3_get_method64,3312

ssl/t1_reneg.c,204
int ssl_add_clienthello_renegotiate_ext(116,5940
int ssl_parse_clienthello_renegotiate_ext(147,6768
int ssl_add_serverhello_renegotiate_ext(196,8107
int ssl_parse_serverhello_renegotiate_ext(232,9228

ssl/s23_lib.c,320
long ssl23_default_timeout(63,3261
int ssl23_num_ciphers(68,3315
const SSL_CIPHER *ssl23_get_cipher(ssl23_get_cipher77,3445
const SSL_CIPHER *ssl23_get_cipher_by_char(ssl23_get_cipher_by_char93,3761
int ssl23_put_cipher_by_char(105,3985
int ssl23_read(120,4278
int ssl23_peek(143,4642
int ssl23_write(166,5006

ssl/d1_clnt.c,331
static const SSL_METHOD *dtls1_get_client_method(dtls1_get_client_method134,6354
IMPLEMENT_dtls1_meth_func(142,6526
int dtls1_client_hello(771,20961
static int dtls1_get_hello_verify(898,23806
int dtls1_send_client_key_exchange(949,24808
int dtls1_send_client_verify(1532,40776
int dtls1_send_client_certificate(1629,42797

ssl/s23_srvr.c,156
static const SSL_METHOD *ssl23_get_server_method(ssl23_get_server_method124,6123
IMPLEMENT_ssl23_meth_func(142,6559
int ssl23_get_client_hello(238,8332

ssl/ssl_sess.c,2299
SSL_SESSION *SSL_get_session(SSL_get_session150,7403
SSL_SESSION *SSL_get1_session(SSL_get1_session156,7557
int SSL_SESSION_get_ex_new_index(171,8027
int SSL_SESSION_set_ex_data(178,8281
void *SSL_SESSION_get_ex_data(SSL_SESSION_get_ex_data183,8402
SSL_SESSION *SSL_SESSION_new(SSL_SESSION_new188,8516
const unsigned char *SSL_SESSION_get_id(SSL_SESSION_get_id227,9461
unsigned int SSL_SESSION_get_compress_id(234,9612
#define MAX_SESS_ID_ATTEMPTS 248,10338
static int def_generate_session_id(249,10370
int ssl_get_new_session(272,11146
int ssl_get_prev_session(463,16826
int SSL_CTX_add_session(633,21244
int SSL_CTX_remove_session(698,23044
static int remove_session_lock(703,23146
void SSL_SESSION_free(733,23736
int SSL_set_session(785,25266
long SSL_SESSION_set_timeout(846,26790
long SSL_SESSION_get_timeout(853,26904
long SSL_SESSION_get_time(859,27010
long SSL_SESSION_set_time(865,27110
X509 *SSL_SESSION_get0_peer(SSL_SESSION_get0_peer872,27218
int SSL_SESSION_set1_id_context(877,27286
long SSL_CTX_set_timeout(891,27636
long SSL_CTX_get_timeout(900,27782
int SSL_set_session_secret_cb(907,27914
int SSL_set_session_ticket_ext_cb(916,28235
int SSL_set_session_ticket_ext(925,28450
typedef struct timeout_param_st961,29256
	SSL_CTX *ctx;ctx963,29291
	long time;964,29306
	LHASH_OF(965,29318
	} TIMEOUT_PARAM;966,29349
static void timeout_doall_arg(968,29368
static IMPLEMENT_LHASH_DOALL_ARG_FN(983,29818
int ssl_clear_bad_session(1003,30394
static void SSL_SESSION_list_remove(1017,30679
static void SSL_SESSION_list_add(1050,31501
void SSL_CTX_sess_set_new_cb(1071,32011
int (*SSL_CTX_sess_get_new_cb(SSL_CTX_sess_get_new_cb1077,32136
void SSL_CTX_sess_set_remove_cb(1082,32246
void (*SSL_CTX_sess_get_remove_cb(SSL_CTX_sess_get_remove_cb1088,32372
void SSL_CTX_sess_set_get_cb(1093,32493
SSL_SESSION * (*SSL_CTX_sess_get_get_cb(SSL_CTX_sess_get_get_cb1100,32658
void SSL_CTX_set_info_callback(1106,32808
void (*SSL_CTX_get_info_callback(SSL_CTX_get_info_callback1112,32931
void SSL_CTX_set_client_cert_cb(1117,33047
int (*SSL_CTX_get_client_cert_cb(SSL_CTX_get_client_cert_cb1123,33177
int SSL_CTX_set_client_cert_engine(1129,33330
void SSL_CTX_set_cookie_generate_cb(1147,33715
void SSL_CTX_set_cookie_verify_cb(1153,33871

ssl/d1_lib.c,694
#define USE_SOCKETS61,2795
const char dtls1_version_str[dtls1_version_str70,3006
SSL3_ENC_METHOD DTLSv1_enc_data=73,3121
long dtls1_default_timeout(88,3508
int dtls1_new(95,3680
static void dtls1_clear_queues(133,4710
void dtls1_free(186,5977
void dtls1_clear(201,6279
long dtls1_ctrl(247,7309
const SSL_CIPHER *dtls1_get_cipher(dtls1_get_cipher280,8094
void dtls1_start_timer(293,8295
struct timeval* dtls1_get_timeout(318,8951
int dtls1_is_timer_expired(363,10087
void dtls1_double_timeout(383,10460
void dtls1_stop_timer(391,10622
int dtls1_check_timeout_num(402,10991
int dtls1_handle_timeout(422,11466
static void get_current_time(453,12023
int dtls1_listen(470,12367

ssl/t1_enc.c,426
static int tls1_P_hash(152,7347
static int tls1_PRF(246,9871
static int tls1_generate_key_block(294,11048
int tls1_change_cipher_state(319,11807
int tls1_setup_key_block(578,19187
int tls1_enc(670,21534
int tls1_cert_verify_mac(904,27347
int tls1_final_finish_mac(934,27964
int tls1_mac(988,29108
int tls1_generate_master_secret(1078,31190
int tls1_export_keying_material(1127,32854
int tls1_alert_code(1216,35492

ssl/ssl_locl.h,6505
#define HEADER_SSL_LOCL_H144,7340
# undef OPENSSL_EXTERN169,7821
# define OPENSSL_EXTERN 170,7844
#undef PKCS1_CHECK173,7891
#define c2l(175,7911
#define c2ln(181,8145
#define l2c(196,8630
#define n2l(201,8835
#define l2n(206,9012
#define l2n6(211,9217
#define n2l6(218,9519
#define l2cn(226,9802
#define n2s(240,10321
#define s2n(242,10417
#define n2l3(245,10526
#define l2n3(249,10669
#define SSL_DECRYPT	255,10843
#define SSL_ENCRYPT	256,10865
#define TWO_BYTE_BIT	258,10888
#define SEC_ESC_BIT	259,10914
#define TWO_BYTE_MASK	260,10939
#define THREE_BYTE_MASK	261,10968
#define INC32(263,11000
#define DEC32(264,11043
#define MAX_MAC_SIZE	265,11086
#define SSL_kRSA	282,11804
#define SSL_kDHr	283,11857
#define SSL_kDHd	284,11952
#define SSL_kEDH	285,12046
#define SSL_kKRB5	286,12104
#define SSL_kECDHr	287,12164
#define SSL_kECDHe	288,12225
#define SSL_kEECDH	289,12288
#define SSL_kPSK	290,12341
#define SSL_kGOST 291,12381
#define SSL_kSRP 292,12441
#define SSL_aRSA	295,12542
#define SSL_aDSS 296,12587
#define SSL_aNULL 297,12633
#define SSL_aDH 298,12703
#define SSL_aECDH 299,12806
#define SSL_aKRB5 300,12879
#define SSL_aECDSA 301,12939
#define SSL_aPSK 302,12999
#define SSL_aGOST94	303,13058
#define SSL_aGOST01 304,13130
#define SSL_DES	308,13258
#define SSL_3DES	309,13288
#define SSL_RC4	310,13318
#define SSL_RC2	311,13348
#define SSL_IDEA	312,13378
#define SSL_eNULL	313,13408
#define SSL_AES128	314,13439
#define SSL_AES256	315,13471
#define SSL_CAMELLIA128	316,13503
#define SSL_CAMELLIA256	317,13540
#define SSL_eGOST2814789CNT	318,13577
#define SSL_SEED	319,13617
#define SSL_AES128GCM	320,13647
#define SSL_AES256GCM	321,13682
#define SSL_AES 323,13718
#define SSL_CAMELLIA	324,13795
#define SSL_MD5	329,13910
#define SSL_SHA1	330,13940
#define SSL_GOST94 331,13970
#define SSL_GOST89MAC 332,14006
#define SSL_SHA256	333,14042
#define SSL_SHA384	334,14074
#define SSL_AEAD	336,14168
#define SSL_SSLV2	339,14247
#define SSL_SSLV3	340,14278
#define SSL_TLSV1	341,14309
#define SSL_TLSV1_2	342,14352
#define SSL_HANDSHAKE_MAC_MD5 347,14456
#define SSL_HANDSHAKE_MAC_SHA 348,14491
#define SSL_HANDSHAKE_MAC_GOST94 349,14526
#define SSL_HANDSHAKE_MAC_SHA256 350,14564
#define SSL_HANDSHAKE_MAC_SHA384 351,14602
#define SSL_HANDSHAKE_MAC_DEFAULT 352,14641
#define SSL_MAX_DIGEST 356,14841
#define TLS1_PRF_DGST_MASK	358,14867
#define TLS1_PRF_DGST_SHIFT 360,14925
#define TLS1_PRF_MD5 361,14956
#define TLS1_PRF_SHA1 362,15024
#define TLS1_PRF_SHA256 363,15093
#define TLS1_PRF_SHA384 364,15167
#define TLS1_PRF_GOST94 365,15241
#define TLS1_PRF 366,15315
#define TLS1_STREAM_MAC 370,15470
#define SSL_EXP_MASK	389,16332
#define SSL_STRONG_MASK	390,16366
#define SSL_NOT_EXP	392,16404
#define SSL_EXPORT	393,16437
#define SSL_STRONG_NONE	395,16470
#define SSL_EXP40	396,16507
#define SSL_MICRO	397,16538
#define SSL_EXP56	398,16569
#define SSL_MINI	399,16600
#define SSL_LOW	400,16630
#define SSL_MEDIUM	401,16660
#define SSL_HIGH	402,16692
#define SSL_FIPS	403,16722
#define SSL_IS_EXPORT(420,17431
#define SSL_IS_EXPORT56(421,17473
#define SSL_IS_EXPORT40(422,17516
#define SSL_C_IS_EXPORT(423,17559
#define SSL_C_IS_EXPORT56(424,17620
#define SSL_C_IS_EXPORT40(425,17685
#define SSL_EXPORT_KEYLENGTH(427,17751
#define SSL_EXPORT_PKEYLENGTH(429,17842
#define SSL_C_EXPORT_KEYLENGTH(430,17909
#define SSL_C_EXPORT_PKEYLENGTH(432,18010
#define SSL_PKEY_RSA_ENC	438,18114
#define SSL_PKEY_RSA_SIGN	439,18141
#define SSL_PKEY_DSA_SIGN	440,18169
#define SSL_PKEY_DH_RSA	441,18197
#define SSL_PKEY_DH_DSA	442,18224
#define SSL_PKEY_ECC 443,18251
#define SSL_PKEY_GOST94	444,18285
#define SSL_PKEY_GOST01	445,18312
#define SSL_PKEY_NUM	446,18339
#define EXPLICIT_PRIME_CURVE_TYPE 466,18815
#define EXPLICIT_CHAR2_CURVE_TYPE 467,18855
#define NAMED_CURVE_TYPE 468,18892
typedef struct cert_pkey_st471,18958
	X509 *x509;x509473,18989
	EVP_PKEY *privatekey;privatekey474,19002
	const EVP_MD *digest;digest476,19059
	} CERT_PKEY;477,19082
typedef struct cert_st479,19097
	CERT_PKEY *key;key482,19149
	int valid;488,19406
	unsigned long mask_k;489,19418
	unsigned long mask_a;490,19441
	unsigned long export_mask_k;491,19464
	unsigned long export_mask_a;492,19494
	RSA *rsa_tmp;rsa_tmp494,19547
	RSA *(*rsa_tmp_cb)rsa_tmp_cb495,19562
	DH *dh_tmp;dh_tmp498,19648
	DH *(*dh_tmp_cb)dh_tmp_cb499,19661
	EC_KEY *ecdh_tmp;ecdh_tmp502,19747
	EC_KEY *(*ecdh_tmp_cb)ecdh_tmp_cb504,19817
	CERT_PKEY pkeys[pkeys507,19886
	int references;509,19919
	} CERT;510,19981
typedef struct sess_cert_st513,19992
	STACK_OF(515,20023
	} SESS_CERT;536,20665
#define FP_ICC 550,20903
#define ssl_put_cipher_by_char(551,20956
#define ssl_get_cipher_by_char(553,21055
typedef struct ssl3_enc_method559,21301
	int (*enc)enc561,21335
	int (*mac)mac562,21360
	int (*setup_key_block)setup_key_block563,21402
	int (*generate_master_secret)generate_master_secret564,21434
	int (*change_cipher_state)change_cipher_state565,21512
	int (*final_finish_mac)final_finish_mac566,21553
	int finish_mac_length;567,21623
	int (*cert_verify_mac)cert_verify_mac568,21647
	const char *client_finished_label;client_finished_label569,21701
	int client_finished_label_len;570,21737
	const char *server_finished_label;server_finished_label571,21769
	int server_finished_label_len;572,21805
	int (*alert_value)alert_value573,21837
	int (*export_keying_material)export_keying_material574,21863
	} SSL3_ENC_METHOD;578,22027
typedef struct ssl3_comp_st582,22148
	int comp_id;584,22179
	char *name;name585,22245
	COMP_METHOD *method;method586,22304
	} SSL3_COMP;587,22347
typedef struct ssl3_buf_freelist_st591,22402
	size_t chunklen;593,22441
	unsigned int len;594,22459
	struct ssl3_buf_freelist_entry_st *head;head595,22478
	} SSL3_BUF_FREELIST;596,22520
typedef struct ssl3_buf_freelist_entry_st598,22543
	struct ssl3_buf_freelist_entry_st *next;next600,22588
	} SSL3_BUF_FREELIST_ENTRY;601,22630
OPENSSL_EXTERN const SSL_CIPHER ssl2_ciphers[ssl2_ciphers605,22712
OPENSSL_EXTERN SSL_CIPHER ssl3_ciphers[ssl3_ciphers606,22760
#define IMPLEMENT_tls_meth_func(615,22961
#define IMPLEMENT_ssl3_meth_func(653,23775
#define IMPLEMENT_ssl23_meth_func(690,24580
#define IMPLEMENT_ssl2_meth_func(727,25389
#define IMPLEMENT_dtls1_meth_func(764,26379
STACK_OF(817,27895
#define tlsext_tick_md	1102,39390
#define tlsext_tick_md	1104,39428

ssl/kssl.h,962
#define	KSSL_H64,2829
typedef unsigned char krb5_octet;83,3148
#define FAR84,3182
#define FAR88,3213
#define KRB5SVC	100,3377
#define KRB5KEYTAB	104,3427
#define KRB5SENDAUTH	108,3494
#define KRB5CHECKAUTH	112,3547
#define	KSSL_CLOCKSKEW	116,3602
#define	KSSL_ERR_MAX	119,3638
typedef struct kssl_err_st 120,3663
	int  reason;121,3693
	char text[text122,3707
	} KSSL_ERR;123,3735
typedef struct kssl_ctx_st130,3869
	char *service_name;service_name133,3980
	char *service_host;service_host134,4039
	char *client_princ;client_princ135,4096
	char *keytab_file;keytab_file136,4153
	char *cred_cache;cred_cache137,4214
	krb5_enctype enctype;138,4269
	int length;139,4292
	krb5_octet FAR *key;key140,4305
	} KSSL_CTX;141,4327
#define	KSSL_CLIENT 143,4341
#define KSSL_SERVER 144,4364
#define	KSSL_SERVICE	145,4387
#define	KSSL_KEYTAB 146,4410
#define KSSL_CTX_OK 148,4434
#define KSSL_CTX_ERR	149,4457
#define KSSL_NOMEM	150,4480

ssl/ssl_stat.c,538
const char *SSL_state_string_long(SSL_state_string_long88,4453
const char *SSL_rstate_string_long(SSL_rstate_string_long238,13532
const char *SSL_state_string(SSL_state_string252,13829
const char *SSL_alert_type_string_long(SSL_alert_type_string_long391,20009
const char *SSL_alert_type_string(SSL_alert_type_string402,20210
const char *SSL_alert_desc_string(SSL_alert_desc_string413,20390
const char *SSL_alert_desc_string_long(SSL_alert_desc_string_long454,22069
const char *SSL_rstate_string(SSL_rstate_string555,24323

ssl/s2_enc.c,110
int ssl2_enc_init(63,3255
void ssl2_enc(121,4943
void ssl2_mac(151,5400
static void *dummy=dummy190,6220

ssl/s3_lib.c,1113
const char ssl3_version_str[ssl3_version_str165,7867
#define SSL3_NUM_CIPHERS	167,7929
OPENSSL_GLOBAL SSL_CIPHER ssl3_ciphers[ssl3_ciphers170,8050
SSL3_ENC_METHOD SSLv3_enc_data=2895,49901
long ssl3_default_timeout(2912,50356
int ssl3_num_ciphers(2919,50526
const SSL_CIPHER *ssl3_get_cipher(ssl3_get_cipher2924,50587
int ssl3_pending(2932,50742
int ssl3_new(2940,50911
void ssl3_free(2960,51267
void ssl3_clear(3002,52296
static char * MS_CALLBACK srp_password_from_info_cb(3080,54064
long ssl3_ctrl(3086,54187
long ssl3_callback_ctrl(3359,60391
long ssl3_ctx_ctrl(3416,61426
long ssl3_ctx_callback_ctrl(3646,66179
const SSL_CIPHER *ssl3_get_cipher_by_char(ssl3_get_cipher_by_char3720,67957
int ssl3_put_cipher_by_char(3738,68425
SSL_CIPHER *ssl3_choose_cipher(ssl3_choose_cipher3752,68683
int ssl3_get_req_cert_type(4026,77010
int ssl3_shutdown(4092,78336
int ssl3_write(4147,79690
static int ssl3_read_internal(4200,80919
int ssl3_read(4225,81717
int ssl3_peek(4230,81810
int ssl3_renegotiate(4235,81903
int ssl3_renegotiate_check(4247,82089
long ssl_get_algorithm2(4274,82662

ssl/t1_srvr.c,113
static const SSL_METHOD *tls1_get_server_method(tls1_get_server_method68,3424
IMPLEMENT_tls_meth_func(79,3684

ssl/ssl_lib.c,6838
const char *SSL_version_str=SSL_version_str163,7727
SSL3_ENC_METHOD ssl3_undef_enc_method=165,7778
int SSL_clear(185,8653
int SSL_CTX_set_ssl_version(258,10197
SSL *SSL_new(SSL_new275,10634
int SSL_CTX_set_session_id_context(397,13671
int SSL_set_session_id_context(411,14037
int SSL_CTX_set_generate_session_id(425,14397
int SSL_set_generate_session_id(433,14592
int SSL_has_matching_session_id(441,14771
int SSL_CTX_set_purpose(475,15997
int SSL_set_purpose(480,16111
int SSL_CTX_set_trust(485,16217
int SSL_set_trust(490,16323
int SSL_CTX_set1_param(495,16421
int SSL_set1_param(500,16538
void SSL_free(505,16647
void SSL_set_bio(606,19109
BIO *SSL_get_rbio(SSL_get_rbio626,19544
BIO *SSL_get_wbio(SSL_get_wbio629,19599
int SSL_get_fd(632,19654
int SSL_get_rfd(637,19715
int SSL_get_wfd(649,19892
int SSL_set_fd(662,20093
int SSL_set_wfd(681,20355
int SSL_set_rfd(703,20810
size_t SSL_get_finished(731,21352
size_t SSL_get_peer_finished(746,21669
int SSL_get_verify_mode(761,21928
int SSL_get_verify_depth(766,21998
int (*SSL_get_verify_callback(SSL_get_verify_callback771,22091
int SSL_CTX_get_verify_mode(776,22194
int SSL_CTX_get_verify_depth(781,22276
int (*SSL_CTX_get_verify_callback(SSL_CTX_get_verify_callback786,22381
void SSL_set_verify(791,22504
void SSL_set_verify_depth(799,22675
void SSL_set_read_ahead(804,22773
int SSL_get_read_ahead(809,22840
int SSL_pending(814,22908
X509 *SSL_get_peer_certificate(SSL_get_peer_certificate826,23332
STACK_OF(842,23566
void SSL_copy_session_id(859,24047
int SSL_CTX_check_private_key(888,24741
int SSL_check_private_key(906,25261
int SSL_accept(932,25870
int SSL_connect(941,26029
long SSL_get_default_timeout(950,26191
int SSL_read(955,26276
int SSL_peek(971,26550
int SSL_write(986,26798
int SSL_shutdown(1003,27132
int SSL_renegotiate(1023,27605
int SSL_renegotiate_abbreviated(1033,27747
int SSL_renegotiate_pending(1043,27901
long SSL_ctrl(1050,28072
long SSL_callback_ctrl(1108,29305
LHASH_OF(1121,29629
long SSL_CTX_ctrl(1126,29713
long SSL_CTX_callback_ctrl(1205,31842
int ssl_cipher_id_cmp(1218,32184
int ssl_cipher_ptr_id_cmp(1229,32338
STACK_OF(1243,32614
STACK_OF(1262,32977
const char *SSL_get_cipher_list(SSL_get_cipher_list1280,33341
int SSL_CTX_set_cipher_list(1295,33707
int SSL_set_cipher_list(1319,34465
char *SSL_get_shared_ciphers(SSL_get_shared_ciphers1337,34892
int ssl_cipher_list_to_bytes(1372,35420
STACK_OF(1425,36859
const char *SSL_get_servername(SSL_get_servername1497,38455
int SSL_get_servername_type(1507,38677
int SSL_select_next_proto(1545,40280
void SSL_get0_next_proto_negotiated(1589,41584
void SSL_CTX_set_next_protos_advertised_cb(1608,42338
void SSL_CTX_set_next_proto_select_cb(1624,43142
int SSL_export_keying_material(1632,43418
static unsigned long ssl_session_hash(1644,43753
static int ssl_session_cmp(1661,44360
static IMPLEMENT_LHASH_HASH_FN(1674,44852
#define eng_strx(1848,49361
#define eng_str(1849,49384
static void SSL_COMP_free(1879,50078
ssl_buf_freelist_free(1885,50201
void SSL_CTX_free(1897,50411
void SSL_CTX_set_default_passwd_cb(1980,52534
void SSL_CTX_set_default_passwd_cb_userdata(1985,52645
void SSL_CTX_set_cert_verify_callback(1990,52760
void SSL_CTX_set_verify(1996,52922
void SSL_CTX_set_verify_depth(2002,53067
void ssl_set_cert_masks(2007,53177
#define ku_reject(2213,58262
int ssl_check_srvr_ecc_cert_and_alg(2218,58382
X509 *ssl_get_server_send_cert(ssl_get_server_send_cert2290,60308
EVP_PKEY *ssl_get_sign_pkey(ssl_get_sign_pkey2353,61748
void ssl_update_cache(2385,62521
const SSL_METHOD *SSL_get_ssl_method(SSL_get_ssl_method2417,63466
int SSL_set_ssl_method(2422,63538
int SSL_get_error(2449,64037
int SSL_do_handshake(2536,66266
void SSL_set_accept_state(2557,66665
void SSL_set_connect_state(2569,66948
int ssl_undefined_function(2581,67234
int ssl_undefined_void_function(2587,67361
int ssl_undefined_const_function(2593,67496
SSL_METHOD *ssl_bad_method(ssl_bad_method2599,67641
const char *SSL_get_version(SSL_get_version2605,67764
SSL *SSL_dup(SSL_dup2621,68123
void ssl_clear_cipher_ctx(2752,71252
X509 *SSL_get_certificate(SSL_get_certificate2781,71834
EVP_PKEY *SSL_get_privatekey(SSL_get_privatekey2790,72023
const SSL_CIPHER *SSL_get_current_cipher(SSL_get_current_cipher2798,72147
const void *SSL_get_current_compression(SSL_get_current_compression2805,72335
const void *SSL_get_current_expansion(SSL_get_current_expansion2809,72403
const COMP_METHOD *SSL_get_current_compression(SSL_get_current_compression2815,72476
const COMP_METHOD *SSL_get_current_expansion(SSL_get_current_expansion2822,72608
int ssl_init_wbio_buffer(2830,72741
void ssl_free_wbio_buffer(2866,73338
void SSL_CTX_set_quiet_shutdown(2882,73665
int SSL_CTX_get_quiet_shutdown(2887,73754
void SSL_set_quiet_shutdown(2892,73842
int SSL_get_quiet_shutdown(2897,73919
void SSL_set_shutdown(2902,73995
int SSL_get_shutdown(2907,74060
int SSL_version(2912,74124
SSL_CTX *SSL_get_SSL_CTX(SSL_get_SSL_CTX2917,74182
SSL_CTX *SSL_set_SSL_CTX(SSL_set_SSL_CTX2922,74249
int SSL_CTX_set_default_verify_paths(2941,74708
int SSL_CTX_load_verify_locations(2946,74822
void SSL_set_info_callback(2953,74993
void (*SSL_get_info_callback(SSL_get_info_callback2961,75199
int SSL_state(2966,75326
void SSL_set_state(2971,75384
void SSL_set_verify_result(2976,75452
long SSL_get_verify_result(2981,75530
int SSL_get_ex_new_index(2986,75609
int SSL_set_ex_data(2993,75843
void *SSL_get_ex_data(SSL_get_ex_data2998,75946
int SSL_CTX_get_ex_new_index(3003,76043
int SSL_CTX_set_ex_data(3010,76289
void *SSL_CTX_get_ex_data(SSL_CTX_get_ex_data3015,76400
int ssl_ok(3020,76505
X509_STORE *SSL_CTX_get_cert_store(SSL_CTX_get_cert_store3025,76543
void SSL_CTX_set_cert_store(3030,76631
int SSL_want(3037,76788
void SSL_CTX_set_tmp_rsa_callback(3049,76994
void SSL_set_tmp_rsa_callback(3056,77199
RSA *cb(cb3075,77787
void SSL_CTX_set_tmp_dh_callback(3086,77997
void SSL_set_tmp_dh_callback(3092,78227
void SSL_CTX_set_tmp_ecdh_callback(3100,78468
void SSL_set_tmp_ecdh_callback(3106,78718
int SSL_CTX_use_psk_identity_hint(3114,78978
int SSL_use_psk_identity_hint(3134,79499
const char *SSL_get_psk_identity_hint(SSL_get_psk_identity_hint3160,80147
const char *SSL_get_psk_identity(SSL_get_psk_identity3167,80299
void SSL_set_psk_client_callback(3174,80441
void SSL_CTX_set_psk_client_callback(3182,80710
void SSL_set_psk_server_callback(3190,80991
void SSL_CTX_set_psk_server_callback(3197,81194
void SSL_CTX_set_msg_callback(3205,81416
void SSL_set_msg_callback(3209,81648
EVP_MD_CTX *ssl_replace_hash(ssl_replace_hash3220,82114
void ssl_clear_hash_ctx(3227,82299
void SSL_set_debug(3234,82401
int SSL_cache_hit(3239,82465
IMPLEMENT_STACK_OF(3248,82609

ssl/d1_enc.c,24
int dtls1_enc(129,6196

ssl/srtp.h,289
#define HEADER_D1_SRTP_H119,5976
#define SRTP_AES128_CM_SHA1_80 126,6049
#define SRTP_AES128_CM_SHA1_32 127,6087
#define SRTP_AES128_F8_SHA1_80 128,6125
#define SRTP_AES128_F8_SHA1_32 129,6163
#define SRTP_NULL_SHA1_80 130,6201
#define SRTP_NULL_SHA1_32 131,6239
STACK_OF(137,6473

ssl/d1_srtp.c,595
static SRTP_PROTECTION_PROFILE srtp_known_profiles[srtp_known_profiles126,6068
static int find_profile_by_name(149,6421
static int find_profile_by_num(170,6739
static int ssl_ctx_make_profiles(189,7000
int SSL_CTX_set_tlsext_use_srtp(227,7748
int SSL_set_tlsext_use_srtp(232,7883
STACK_OF(238,8007
SRTP_PROTECTION_PROFILE *SSL_get_selected_srtp_profile(SSL_get_selected_srtp_profile256,8295
int ssl_add_clienthello_use_srtp_ext(263,8472
int ssl_parse_clienthello_use_srtp_ext(305,9340
int ssl_add_serverhello_use_srtp_ext(405,11514
int ssl_parse_serverhello_use_srtp_ext(430,11999

ssl/ssl_rsa.c,838
int SSL_use_certificate(69,3458
int SSL_use_certificate_file(85,3783
int SSL_use_certificate_ASN1(134,4699
int SSL_use_RSAPrivateKey(152,5011
static int ssl_set_pkey(182,5552
int SSL_use_RSAPrivateKey_file(229,6550
int SSL_use_RSAPrivateKey_ASN1(276,7487
int SSL_use_PrivateKey(295,7850
int SSL_use_PrivateKey_file(314,8206
int SSL_use_PrivateKey_ASN1(361,9139
int SSL_CTX_use_certificate(379,9496
static int ssl_set_cert(394,9813
int SSL_CTX_use_certificate_file(454,11161
int SSL_CTX_use_certificate_ASN1(503,12095
int SSL_CTX_use_RSAPrivateKey(521,12423
int SSL_CTX_use_RSAPrivateKey_file(551,13003
int SSL_CTX_use_RSAPrivateKey_ASN1(598,13958
int SSL_CTX_use_PrivateKey(617,14343
int SSL_CTX_use_PrivateKey_file(633,14694
int SSL_CTX_use_PrivateKey_ASN1(680,15645
int SSL_CTX_use_certificate_chain_file(705,16233

ssl/tls1.h,19624
#define HEADER_TLS1_H 152,7578
#define TLS1_ALLOW_EXPERIMENTAL_CIPHERSUITES	160,7672
#define TLS1_2_VERSION	162,7720
#define TLS1_2_VERSION_MAJOR	163,7752
#define TLS1_2_VERSION_MINOR	164,7787
#define TLS1_1_VERSION	166,7823
#define TLS1_1_VERSION_MAJOR	167,7855
#define TLS1_1_VERSION_MINOR	168,7890
#define TLS1_VERSION	170,7926
#define TLS1_VERSION_MAJOR	171,7956
#define TLS1_VERSION_MINOR	172,7989
#define TLS1_get_version(174,8023
#define TLS1_get_client_version(177,8115
#define TLS1_AD_DECRYPTION_FAILED	180,8228
#define TLS1_AD_RECORD_OVERFLOW	181,8265
#define TLS1_AD_UNKNOWN_CA	182,8301
#define TLS1_AD_ACCESS_DENIED	183,8344
#define TLS1_AD_DECODE_ERROR	184,8390
#define TLS1_AD_DECRYPT_ERROR	185,8435
#define TLS1_AD_EXPORT_RESTRICTION	186,8469
#define TLS1_AD_PROTOCOL_VERSION	187,8519
#define TLS1_AD_INSUFFICIENT_SECURITY	188,8567
#define TLS1_AD_INTERNAL_ERROR	189,8620
#define TLS1_AD_USER_CANCELLED	190,8667
#define TLS1_AD_NO_RENEGOTIATION	191,8702
#define TLS1_AD_UNSUPPORTED_EXTENSION	193,8776
#define TLS1_AD_CERTIFICATE_UNOBTAINABLE 194,8818
#define TLS1_AD_UNRECOGNIZED_NAME 195,8863
#define TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE 196,8902
#define TLS1_AD_BAD_CERTIFICATE_HASH_VALUE 197,8954
#define TLS1_AD_UNKNOWN_PSK_IDENTITY	198,9001
#define TLSEXT_TYPE_server_name	201,9115
#define TLSEXT_TYPE_max_fragment_length	202,9151
#define TLSEXT_TYPE_client_certificate_url	203,9194
#define TLSEXT_TYPE_trusted_ca_keys	204,9239
#define TLSEXT_TYPE_truncated_hmac	205,9278
#define TLSEXT_TYPE_status_request	206,9316
#define TLSEXT_TYPE_user_mapping	208,9394
#define TLSEXT_TYPE_client_authz	211,9471
#define TLSEXT_TYPE_server_authz	212,9507
#define TLSEXT_TYPE_cert_type	215,9584
#define TLSEXT_TYPE_elliptic_curves	218,9658
#define TLSEXT_TYPE_ec_point_formats	219,9698
#define TLSEXT_TYPE_srp	222,9779
#define TLSEXT_TYPE_signature_algorithms	225,9850
#define TLSEXT_TYPE_use_srtp	228,9934
#define TLSEXT_TYPE_heartbeat	231,10006
#define TLSEXT_TYPE_session_ticket	234,10079
# define TLSEXT_TYPE_opaque_prf_input	240,10372
#define TLSEXT_TYPE_renegotiate 244,10456
#define TLSEXT_TYPE_next_proto_neg	248,10595
#define TLSEXT_NAMETYPE_host_name 252,10680
#define TLSEXT_STATUSTYPE_ocsp 254,10757
#define TLSEXT_ECPOINTFORMAT_first	257,10845
#define TLSEXT_ECPOINTFORMAT_uncompressed	258,10884
#define TLSEXT_ECPOINTFORMAT_ansiX962_compressed_prime	259,10929
#define TLSEXT_ECPOINTFORMAT_ansiX962_compressed_char2	260,10986
#define TLSEXT_ECPOINTFORMAT_last	261,11043
#define TLSEXT_signature_anonymous	265,11133
#define TLSEXT_signature_rsa	266,11172
#define TLSEXT_signature_dsa	267,11206
#define TLSEXT_signature_ecdsa	268,11240
#define TLSEXT_hash_none	270,11277
#define TLSEXT_hash_md5	271,11307
#define TLSEXT_hash_sha1	272,11337
#define TLSEXT_hash_sha224	273,11367
#define TLSEXT_hash_sha256	274,11399
#define TLSEXT_hash_sha384	275,11431
#define TLSEXT_hash_sha512	276,11463
#define TLSEXT_MAXLEN_host_name 280,11523
#define SSL_set_tlsext_host_name(295,12167
#define SSL_set_tlsext_debug_callback(298,12291
#define SSL_set_tlsext_debug_arg(301,12412
#define SSL_set_tlsext_status_type(304,12517
#define SSL_get_tlsext_status_exts(307,12627
#define SSL_set_tlsext_status_exts(310,12740
#define SSL_get_tlsext_status_ids(313,12853
#define SSL_set_tlsext_status_ids(316,12964
#define SSL_get_tlsext_status_ocsp_resp(319,13075
#define SSL_set_tlsext_status_ocsp_resp(322,13198
#define SSL_CTX_set_tlsext_servername_callback(325,13334
#define SSL_TLSEXT_ERR_OK 328,13473
#define SSL_TLSEXT_ERR_ALERT_WARNING 329,13501
#define SSL_TLSEXT_ERR_ALERT_FATAL 330,13540
#define SSL_TLSEXT_ERR_NOACK 331,13577
#define SSL_CTX_set_tlsext_servername_arg(333,13609
#define SSL_CTX_get_tlsext_ticket_keys(336,13732
#define SSL_CTX_set_tlsext_ticket_keys(338,13861
#define SSL_CTX_set_tlsext_status_cb(341,13991
#define SSL_CTX_set_tlsext_status_arg(344,14120
#define SSL_set_tlsext_opaque_prf_input(347,14242
#define SSL_CTX_set_tlsext_opaque_prf_input_callback(349,14356
#define SSL_CTX_set_tlsext_opaque_prf_input_callback_arg(351,14507
#define SSL_CTX_set_tlsext_ticket_key_cb(354,14647
#define SSL_TLSEXT_HB_ENABLED	358,14810
#define SSL_TLSEXT_HB_DONT_SEND_REQUESTS	359,14848
#define SSL_TLSEXT_HB_DONT_RECV_REQUESTS	360,14894
#define SSL_get_tlsext_heartbeat_pending(362,14941
#define SSL_set_tlsext_heartbeat_no_requests(364,15059
#define TLS1_CK_PSK_WITH_RC4_128_SHA 370,15240
#define TLS1_CK_PSK_WITH_3DES_EDE_CBC_SHA 371,15307
#define TLS1_CK_PSK_WITH_AES_128_CBC_SHA 372,15374
#define TLS1_CK_PSK_WITH_AES_256_CBC_SHA 373,15441
#define TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_MD5	380,15832
#define TLS1_CK_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5	381,15907
#define TLS1_CK_RSA_EXPORT1024_WITH_DES_CBC_SHA	382,15985
#define TLS1_CK_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA	383,16045
#define TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_SHA	384,16108
#define TLS1_CK_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA	385,16167
#define TLS1_CK_DHE_DSS_WITH_RC4_128_SHA	386,16229
#define TLS1_CK_RSA_WITH_AES_128_SHA	390,16320
#define TLS1_CK_DH_DSS_WITH_AES_128_SHA	391,16370
#define TLS1_CK_DH_RSA_WITH_AES_128_SHA	392,16423
#define TLS1_CK_DHE_DSS_WITH_AES_128_SHA	393,16476
#define TLS1_CK_DHE_RSA_WITH_AES_128_SHA	394,16529
#define TLS1_CK_ADH_WITH_AES_128_SHA	395,16582
#define TLS1_CK_RSA_WITH_AES_256_SHA	397,16633
#define TLS1_CK_DH_DSS_WITH_AES_256_SHA	398,16683
#define TLS1_CK_DH_RSA_WITH_AES_256_SHA	399,16736
#define TLS1_CK_DHE_DSS_WITH_AES_256_SHA	400,16789
#define TLS1_CK_DHE_RSA_WITH_AES_256_SHA	401,16842
#define TLS1_CK_ADH_WITH_AES_256_SHA	402,16895
#define TLS1_CK_RSA_WITH_NULL_SHA256	405,16974
#define TLS1_CK_RSA_WITH_AES_128_SHA256	406,17024
#define TLS1_CK_RSA_WITH_AES_256_SHA256	407,17077
#define TLS1_CK_DH_DSS_WITH_AES_128_SHA256	408,17130
#define TLS1_CK_DH_RSA_WITH_AES_128_SHA256	409,17185
#define TLS1_CK_DHE_DSS_WITH_AES_128_SHA256	410,17240
#define TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA	413,17338
#define TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA	414,17396
#define TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA	415,17456
#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA	416,17516
#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA	417,17577
#define TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA	418,17638
#define TLS1_CK_DHE_RSA_WITH_AES_128_SHA256	421,17725
#define TLS1_CK_DH_DSS_WITH_AES_256_SHA256	422,17781
#define TLS1_CK_DH_RSA_WITH_AES_256_SHA256	423,17836
#define TLS1_CK_DHE_DSS_WITH_AES_256_SHA256	424,17891
#define TLS1_CK_DHE_RSA_WITH_AES_256_SHA256	425,17947
#define TLS1_CK_ADH_WITH_AES_128_SHA256	426,18003
#define TLS1_CK_ADH_WITH_AES_256_SHA256	427,18056
#define TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA	430,18151
#define TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA	431,18209
#define TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA	432,18269
#define TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA	433,18329
#define TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA	434,18390
#define TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA	435,18451
#define TLS1_CK_RSA_WITH_SEED_SHA 438,18547
#define TLS1_CK_DH_DSS_WITH_SEED_SHA 439,18614
#define TLS1_CK_DH_RSA_WITH_SEED_SHA 440,18681
#define TLS1_CK_DHE_DSS_WITH_SEED_SHA 441,18748
#define TLS1_CK_DHE_RSA_WITH_SEED_SHA 442,18815
#define TLS1_CK_ADH_WITH_SEED_SHA 443,18882
#define TLS1_CK_RSA_WITH_AES_128_GCM_SHA256	446,18989
#define TLS1_CK_RSA_WITH_AES_256_GCM_SHA384	447,19045
#define TLS1_CK_DHE_RSA_WITH_AES_128_GCM_SHA256	448,19101
#define TLS1_CK_DHE_RSA_WITH_AES_256_GCM_SHA384	449,19161
#define TLS1_CK_DH_RSA_WITH_AES_128_GCM_SHA256	450,19221
#define TLS1_CK_DH_RSA_WITH_AES_256_GCM_SHA384	451,19280
#define TLS1_CK_DHE_DSS_WITH_AES_128_GCM_SHA256	452,19339
#define TLS1_CK_DHE_DSS_WITH_AES_256_GCM_SHA384	453,19399
#define TLS1_CK_DH_DSS_WITH_AES_128_GCM_SHA256	454,19459
#define TLS1_CK_DH_DSS_WITH_AES_256_GCM_SHA384	455,19518
#define TLS1_CK_ADH_WITH_AES_128_GCM_SHA256	456,19577
#define TLS1_CK_ADH_WITH_AES_256_GCM_SHA384	457,19633
#define TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA 460,19780
#define TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA 461,19847
#define TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA 462,19914
#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA 463,19981
#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA 464,20048
#define TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA 466,20116
#define TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA 467,20183
#define TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA 468,20250
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 469,20317
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 470,20384
#define TLS1_CK_ECDH_RSA_WITH_NULL_SHA 472,20452
#define TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA 473,20519
#define TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA 474,20586
#define TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA 475,20653
#define TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA 476,20720
#define TLS1_CK_ECDHE_RSA_WITH_NULL_SHA 478,20788
#define TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA 479,20855
#define TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA 480,20922
#define TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA 481,20989
#define TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA 482,21056
#define TLS1_CK_ECDH_anon_WITH_NULL_SHA 484,21124
#define TLS1_CK_ECDH_anon_WITH_RC4_128_SHA 485,21191
#define TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA 486,21258
#define TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA 487,21325
#define TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA 488,21392
#define TLS1_CK_SRP_SHA_WITH_3DES_EDE_CBC_SHA	491,21497
#define TLS1_CK_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA	492,21555
#define TLS1_CK_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA	493,21616
#define TLS1_CK_SRP_SHA_WITH_AES_128_CBC_SHA	494,21677
#define TLS1_CK_SRP_SHA_RSA_WITH_AES_128_CBC_SHA	495,21734
#define TLS1_CK_SRP_SHA_DSS_WITH_AES_128_CBC_SHA	496,21794
#define TLS1_CK_SRP_SHA_WITH_AES_256_CBC_SHA	497,21854
#define TLS1_CK_SRP_SHA_RSA_WITH_AES_256_CBC_SHA	498,21911
#define TLS1_CK_SRP_SHA_DSS_WITH_AES_256_CBC_SHA	499,21971
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_SHA256 503,22081
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_SHA384 504,22148
#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_SHA256 505,22215
#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_SHA384 506,22282
#define TLS1_CK_ECDHE_RSA_WITH_AES_128_SHA256 507,22349
#define TLS1_CK_ECDHE_RSA_WITH_AES_256_SHA384 508,22416
#define TLS1_CK_ECDH_RSA_WITH_AES_128_SHA256 509,22483
#define TLS1_CK_ECDH_RSA_WITH_AES_256_SHA384 510,22550
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256	513,22665
#define TLS1_CK_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384	514,22728
#define TLS1_CK_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 515,22791
#define TLS1_CK_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 516,22858
#define TLS1_CK_ECDHE_RSA_WITH_AES_128_GCM_SHA256 517,22925
#define TLS1_CK_ECDHE_RSA_WITH_AES_256_GCM_SHA384 518,22992
#define TLS1_CK_ECDH_RSA_WITH_AES_128_GCM_SHA256 519,23059
#define TLS1_CK_ECDH_RSA_WITH_AES_256_GCM_SHA384 520,23126
#define TLS1_TXT_RSA_EXPORT1024_WITH_RC4_56_MD5	529,23507
#define TLS1_TXT_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5	530,23574
#define TLS1_TXT_RSA_EXPORT1024_WITH_DES_CBC_SHA	531,23648
#define TLS1_TXT_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA	532,23719
#define TLS1_TXT_RSA_EXPORT1024_WITH_RC4_56_SHA	533,23802
#define TLS1_TXT_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA	534,23869
#define TLS1_TXT_DHE_DSS_WITH_RC4_128_SHA	535,23947
#define TLS1_TXT_RSA_WITH_AES_128_SHA	538,24045
#define TLS1_TXT_DH_DSS_WITH_AES_128_SHA	539,24098
#define TLS1_TXT_DH_RSA_WITH_AES_128_SHA	540,24160
#define TLS1_TXT_DHE_DSS_WITH_AES_128_SHA	541,24222
#define TLS1_TXT_DHE_RSA_WITH_AES_128_SHA	542,24286
#define TLS1_TXT_ADH_WITH_AES_128_SHA	543,24350
#define TLS1_TXT_RSA_WITH_AES_256_SHA	545,24408
#define TLS1_TXT_DH_DSS_WITH_AES_256_SHA	546,24461
#define TLS1_TXT_DH_RSA_WITH_AES_256_SHA	547,24523
#define TLS1_TXT_DHE_DSS_WITH_AES_256_SHA	548,24585
#define TLS1_TXT_DHE_RSA_WITH_AES_256_SHA	549,24649
#define TLS1_TXT_ADH_WITH_AES_256_SHA	550,24713
#define TLS1_TXT_ECDH_ECDSA_WITH_NULL_SHA 553,24840
#define TLS1_TXT_ECDH_ECDSA_WITH_RC4_128_SHA 554,24918
#define TLS1_TXT_ECDH_ECDSA_WITH_DES_192_CBC3_SHA 555,24995
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_CBC_SHA 556,25077
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_CBC_SHA 557,25157
#define TLS1_TXT_ECDHE_ECDSA_WITH_NULL_SHA 559,25238
#define TLS1_TXT_ECDHE_ECDSA_WITH_RC4_128_SHA 560,25317
#define TLS1_TXT_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA 561,25395
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 562,25478
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_CBC_SHA 563,25559
#define TLS1_TXT_ECDH_RSA_WITH_NULL_SHA 565,25641
#define TLS1_TXT_ECDH_RSA_WITH_RC4_128_SHA 566,25717
#define TLS1_TXT_ECDH_RSA_WITH_DES_192_CBC3_SHA 567,25792
#define TLS1_TXT_ECDH_RSA_WITH_AES_128_CBC_SHA 568,25872
#define TLS1_TXT_ECDH_RSA_WITH_AES_256_CBC_SHA 569,25950
#define TLS1_TXT_ECDHE_RSA_WITH_NULL_SHA 571,26029
#define TLS1_TXT_ECDHE_RSA_WITH_RC4_128_SHA 572,26106
#define TLS1_TXT_ECDHE_RSA_WITH_DES_192_CBC3_SHA 573,26182
#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_CBC_SHA 574,26263
#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_CBC_SHA 575,26342
#define TLS1_TXT_ECDH_anon_WITH_NULL_SHA 577,26422
#define TLS1_TXT_ECDH_anon_WITH_RC4_128_SHA 578,26495
#define TLS1_TXT_ECDH_anon_WITH_DES_192_CBC3_SHA 579,26567
#define TLS1_TXT_ECDH_anon_WITH_AES_128_CBC_SHA 580,26644
#define TLS1_TXT_ECDH_anon_WITH_AES_256_CBC_SHA 581,26719
#define TLS1_TXT_PSK_WITH_RC4_128_SHA	584,26832
#define TLS1_TXT_PSK_WITH_3DES_EDE_CBC_SHA	585,26886
#define TLS1_TXT_PSK_WITH_AES_128_CBC_SHA	586,26953
#define TLS1_TXT_PSK_WITH_AES_256_CBC_SHA	587,27017
#define TLS1_TXT_SRP_SHA_WITH_3DES_EDE_CBC_SHA	590,27118
#define TLS1_TXT_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA	591,27189
#define TLS1_TXT_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA	592,27267
#define TLS1_TXT_SRP_SHA_WITH_AES_128_CBC_SHA	593,27345
#define TLS1_TXT_SRP_SHA_RSA_WITH_AES_128_CBC_SHA	594,27414
#define TLS1_TXT_SRP_SHA_DSS_WITH_AES_128_CBC_SHA	595,27490
#define TLS1_TXT_SRP_SHA_WITH_AES_256_CBC_SHA	596,27566
#define TLS1_TXT_SRP_SHA_RSA_WITH_AES_256_CBC_SHA	597,27635
#define TLS1_TXT_SRP_SHA_DSS_WITH_AES_256_CBC_SHA	598,27711
#define TLS1_TXT_RSA_WITH_CAMELLIA_128_CBC_SHA	601,27829
#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_128_CBC_SHA	602,27895
#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_128_CBC_SHA	603,27970
#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA	604,28045
#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA	605,28122
#define TLS1_TXT_ADH_WITH_CAMELLIA_128_CBC_SHA	606,28199
#define TLS1_TXT_RSA_WITH_CAMELLIA_256_CBC_SHA	608,28270
#define TLS1_TXT_DH_DSS_WITH_CAMELLIA_256_CBC_SHA	609,28336
#define TLS1_TXT_DH_RSA_WITH_CAMELLIA_256_CBC_SHA	610,28411
#define TLS1_TXT_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA	611,28486
#define TLS1_TXT_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA	612,28563
#define TLS1_TXT_ADH_WITH_CAMELLIA_256_CBC_SHA	613,28640
#define TLS1_TXT_RSA_WITH_SEED_SHA 616,28748
#define TLS1_TXT_DH_DSS_WITH_SEED_SHA 617,28815
#define TLS1_TXT_DH_RSA_WITH_SEED_SHA 618,28889
#define TLS1_TXT_DHE_DSS_WITH_SEED_SHA 619,28963
#define TLS1_TXT_DHE_RSA_WITH_SEED_SHA 620,29038
#define TLS1_TXT_ADH_WITH_SEED_SHA 621,29113
#define TLS1_TXT_RSA_WITH_NULL_SHA256	624,29213
#define TLS1_TXT_RSA_WITH_AES_128_SHA256	625,29267
#define TLS1_TXT_RSA_WITH_AES_256_SHA256	626,29325
#define TLS1_TXT_DH_DSS_WITH_AES_128_SHA256	627,29383
#define TLS1_TXT_DH_RSA_WITH_AES_128_SHA256	628,29451
#define TLS1_TXT_DHE_DSS_WITH_AES_128_SHA256	629,29519
#define TLS1_TXT_DHE_RSA_WITH_AES_128_SHA256	630,29589
#define TLS1_TXT_DH_DSS_WITH_AES_256_SHA256	631,29659
#define TLS1_TXT_DH_RSA_WITH_AES_256_SHA256	632,29727
#define TLS1_TXT_DHE_DSS_WITH_AES_256_SHA256	633,29795
#define TLS1_TXT_DHE_RSA_WITH_AES_256_SHA256	634,29865
#define TLS1_TXT_ADH_WITH_AES_128_SHA256	635,29935
#define TLS1_TXT_ADH_WITH_AES_256_SHA256	636,29997
#define TLS1_TXT_RSA_WITH_AES_128_GCM_SHA256	639,30105
#define TLS1_TXT_RSA_WITH_AES_256_GCM_SHA384	640,30171
#define TLS1_TXT_DHE_RSA_WITH_AES_128_GCM_SHA256	641,30237
#define TLS1_TXT_DHE_RSA_WITH_AES_256_GCM_SHA384	642,30314
#define TLS1_TXT_DH_RSA_WITH_AES_128_GCM_SHA256	643,30391
#define TLS1_TXT_DH_RSA_WITH_AES_256_GCM_SHA384	644,30467
#define TLS1_TXT_DHE_DSS_WITH_AES_128_GCM_SHA256	645,30543
#define TLS1_TXT_DHE_DSS_WITH_AES_256_GCM_SHA384	646,30620
#define TLS1_TXT_DH_DSS_WITH_AES_128_GCM_SHA256	647,30697
#define TLS1_TXT_DH_DSS_WITH_AES_256_GCM_SHA384	648,30773
#define TLS1_TXT_ADH_WITH_AES_128_GCM_SHA256	649,30849
#define TLS1_TXT_ADH_WITH_AES_256_GCM_SHA384	650,30919
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_SHA256 654,31039
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_SHA384 655,31119
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_SHA256 656,31199
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_SHA384 657,31278
#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_SHA256 658,31357
#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_SHA384 659,31435
#define TLS1_TXT_ECDH_RSA_WITH_AES_128_SHA256 660,31513
#define TLS1_TXT_ECDH_RSA_WITH_AES_256_SHA384 661,31590
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 664,31715
#define TLS1_TXT_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 665,31803
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 666,31891
#define TLS1_TXT_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 667,31978
#define TLS1_TXT_ECDHE_RSA_WITH_AES_128_GCM_SHA256 668,32065
#define TLS1_TXT_ECDHE_RSA_WITH_AES_256_GCM_SHA384 669,32151
#define TLS1_TXT_ECDH_RSA_WITH_AES_128_GCM_SHA256 670,32237
#define TLS1_TXT_ECDH_RSA_WITH_AES_256_GCM_SHA384 671,32322
#define TLS_CT_RSA_SIGN	673,32408
#define TLS_CT_DSS_SIGN	674,32436
#define TLS_CT_RSA_FIXED_DH	675,32464
#define TLS_CT_DSS_FIXED_DH	676,32495
#define TLS_CT_ECDSA_SIGN	677,32526
#define TLS_CT_RSA_FIXED_ECDH	678,32556
#define TLS_CT_ECDSA_FIXED_ECDH 679,32590
#define TLS_CT_GOST94_SIGN	680,32626
#define TLS_CT_GOST01_SIGN	681,32657
#define TLS_CT_NUMBER	684,32784
#define TLS1_FINISH_MAC_LENGTH	686,32811
#define TLS_MD_MAX_CONST_SIZE	688,32847
#define TLS_MD_CLIENT_FINISH_CONST	689,32882
#define TLS_MD_CLIENT_FINISH_CONST_SIZE	690,32936
#define TLS_MD_SERVER_FINISH_CONST	691,32980
#define TLS_MD_SERVER_FINISH_CONST_SIZE	692,33034
#define TLS_MD_SERVER_WRITE_KEY_CONST	693,33078
#define TLS_MD_SERVER_WRITE_KEY_CONST_SIZE	694,33136
#define TLS_MD_KEY_EXPANSION_CONST	695,33182
#define TLS_MD_KEY_EXPANSION_CONST_SIZE	696,33234
#define TLS_MD_CLIENT_WRITE_KEY_CONST	697,33278
#define TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE	698,33336
#define TLS_MD_SERVER_WRITE_KEY_CONST	699,33382
#define TLS_MD_SERVER_WRITE_KEY_CONST_SIZE	700,33440
#define TLS_MD_IV_BLOCK_CONST	701,33486
#define TLS_MD_IV_BLOCK_CONST_SIZE	702,33529
#define TLS_MD_MASTER_SECRET_CONST	703,33567
#define TLS_MD_MASTER_SECRET_CONST_SIZE	704,33619
#undef TLS_MD_CLIENT_FINISH_CONST707,33686
#define TLS_MD_CLIENT_FINISH_CONST 708,33720
#undef TLS_MD_SERVER_FINISH_CONST709,33842
#define TLS_MD_SERVER_FINISH_CONST 710,33876
#undef TLS_MD_SERVER_WRITE_KEY_CONST711,33998
#define TLS_MD_SERVER_WRITE_KEY_CONST 712,34035
#undef TLS_MD_KEY_EXPANSION_CONST713,34162
#define TLS_MD_KEY_EXPANSION_CONST 714,34196
#undef TLS_MD_CLIENT_WRITE_KEY_CONST715,34308
#define TLS_MD_CLIENT_WRITE_KEY_CONST 716,34345
#undef TLS_MD_SERVER_WRITE_KEY_CONST717,34472
#define TLS_MD_SERVER_WRITE_KEY_CONST 718,34509
#undef TLS_MD_IV_BLOCK_CONST719,34636
#define TLS_MD_IV_BLOCK_CONST 720,34665
#undef TLS_MD_MASTER_SECRET_CONST721,34752
#define TLS_MD_MASTER_SECRET_CONST 722,34786
struct tls_session_ticket_ext_st726,34948
	unsigned short length;728,34984
	void *data;data729,35008

ssl/s23_clnt.c,247
static const SSL_METHOD *ssl23_get_client_method(ssl23_get_client_method122,6116
IMPLEMENT_ssl23_meth_func(140,6552
static int ssl23_no_ssl2_ciphers(257,8819
static int ssl23_client_hello(272,9127
static int ssl23_get_server_hello(588,16887

ssl/d1_meth.c,68
static const SSL_METHOD *dtls1_get_method(dtls1_get_method65,2900

ssl/ssl_asn1.c,892
typedef struct ssl_session_asn1_st92,4558
	ASN1_INTEGER version;94,4596
	ASN1_INTEGER ssl_version;95,4619
	ASN1_OCTET_STRING cipher;96,4646
	ASN1_OCTET_STRING comp_id;97,4673
	ASN1_OCTET_STRING master_key;98,4701
	ASN1_OCTET_STRING session_id;99,4732
	ASN1_OCTET_STRING session_id_context;100,4763
	ASN1_OCTET_STRING key_arg;101,4802
        ASN1_OCTET_STRING krb5_princ;103,4854
	ASN1_INTEGER time;105,4921
	ASN1_INTEGER timeout;106,4941
	ASN1_INTEGER verify_result;107,4964
	ASN1_OCTET_STRING tlsext_hostname;109,5019
	ASN1_INTEGER tlsext_tick_lifetime;110,5055
	ASN1_OCTET_STRING tlsext_tick;111,5091
	ASN1_OCTET_STRING psk_identity_hint;114,5177
	ASN1_OCTET_STRING psk_identity;115,5215
	ASN1_OCTET_STRING srp_username;118,5299
	} SSL_SESSION_ASN1;120,5360
int i2d_SSL_SESSION(122,5382
#define LSIZE2 124,5442
SSL_SESSION *d2i_SSL_SESSION(d2i_SSL_SESSION379,13724

ssl/ssl_err.c,219
#define ERR_FUNC(68,2968
#define ERR_REASON(69,3020
static ERR_STRING_DATA SSL_str_functs[SSL_str_functs71,3079
static ERR_STRING_DATA SSL_str_reasons[SSL_str_reasons293,17307
void ERR_load_SSL_strings(599,39331

ssl/s2_pkt.c,377
#define USE_SOCKETS116,5907
static int ssl2_read_internal(127,6322
int ssl2_read(309,10985
int ssl2_peek(314,11078
static int read_n(319,11171
int ssl2_write(418,13129
static int write_pending(469,13876
static int n_do_ssl_write(516,14827
int ssl2_part_read(657,18405
int ssl2_do_write(696,19285
static int ssl_mt_error(714,19658
static void *dummy=dummy741,20170

ssl/bio_ssl.c,805
typedef struct bio_ssl_st75,3711
	SSL *ssl;ssl77,3740
	int num_renegotiates;79,3846
	unsigned long renegotiate_count;80,3869
	unsigned long byte_count;81,3903
	unsigned long renegotiate_timeout;82,3930
	unsigned long last_time;83,3966
	} BIO_SSL;84,3992
static BIO_METHOD methods_sslp=86,4005
BIO_METHOD *BIO_f_ssl(BIO_f_ssl99,4175
static int ssl_new(104,4234
static int ssl_free(121,4507
static int ssl_read(140,4821
static int ssl_write(228,6406
static long ssl_ctrl(296,7692
static long ssl_callback_ctrl(487,12073
static int ssl_puts(511,12521
BIO *BIO_new_buffer_ssl_connect(BIO_new_buffer_ssl_connect520,12643
BIO *BIO_new_ssl_connect(BIO_new_ssl_connect539,13031
BIO *BIO_new_ssl(BIO_new_ssl557,13374
int BIO_ssl_copy_session_id(578,13706
void BIO_ssl_shutdown(591,14052

ssl/d1_pkt.c,812
#define USE_SOCKETS118,5983
static int satsub64be(126,6208
dtls1_copy_record(185,7799
dtls1_buffer_record(207,8364
dtls1_retrieve_buffered_record(268,9902
#define dtls1_get_unprocessed_record(289,10281
#define dtls1_get_processed_record(294,10512
dtls1_process_buffered_records(299,10668
dtls1_get_buffered_record(333,11553
dtls1_process_record(376,12587
int dtls1_get_record(534,16765
int dtls1_read_bytes(731,22274
dtls1_write_app_data_bytes(1364,39196
have_handshake_fragment(1402,40115
int dtls1_write_bytes(1436,40902
int do_dtls1_write(1446,41111
static int dtls1_record_replay_check(1656,46277
static void dtls1_record_bitmap_update(1679,46803
int dtls1_dispatch_alert(1703,47287
dtls1_get_bitmap(1769,48859
dtls1_record_needs_buffering(1792,49430
dtls1_reset_seq_numbers(1856,51060

ssl/s3_both.c,681
int ssl3_do_write(128,6408
int ssl3_send_finished(151,7037
static void ssl3_take_mac(207,8613
int ssl3_get_finished(227,9079
int ssl3_send_change_cipher_spec(304,11032
static int ssl3_add_cert_to_buf(322,11332
unsigned long ssl3_output_cert_chain(341,11672
long ssl3_get_message(417,13309
int ssl_cert_type(559,16794
int ssl_verify_alarm_type(598,17439
freelist_extract(679,20263
freelist_insert(703,20801
#define freelist_extract(728,21366
#define freelist_insert(729,21419
int ssl3_setup_read_buffer(732,21478
int ssl3_setup_write_buffer(774,22456
int ssl3_setup_buffers(815,23417
int ssl3_release_write_buffer(824,23557
int ssl3_release_read_buffer(834,23741

test/rc5test.c,16
int main(9,162

test/asn1test.c,73
typedef struct X4,57
    STACK_OF(6,80
    } X;7,115
int main(10,201

test/dummytest.c,16
int main(9,162

test/methtest.c,18
int main(66,3326

test/md2test.c,16
int main(9,162

test/igetest.c,877
#define TEST_SIZE	58,2623
#define BIG_TEST_SIZE 59,2645
static void hexdump(61,2674
#define MAX_VECTOR_SIZE	75,2928
struct ige_test77,2956
	const unsigned char key[key79,2975
	const unsigned char iv[iv80,3005
	const unsigned char in[in81,3034
	const unsigned char out[out82,3076
	const size_t length;83,3119
	const int encrypt;84,3141
static struct ige_test const ige_test_vectors[ige_test_vectors87,3166
struct bi_ige_test121,4853
	const unsigned char key1[key1123,4875
	const unsigned char key2[key2124,4906
	const unsigned char iv[iv125,4937
	const unsigned char in[in126,4966
	const unsigned char out[out127,5008
	const size_t keysize;128,5051
	const size_t length;129,5074
	const int encrypt;130,5096
static struct bi_ige_test const bi_ige_test_vectors[bi_ige_test_vectors133,5121
static int run_test_vectors(191,8006
int main(283,10538

test/jpaketest.c,16
int main(9,162

ms/tlhelp32.h,3248
#define _TLHELP32_H14,370
#define HF32_DEFAULT	18,429
#define HF32_SHARED	19,452
#define LF32_FIXED	20,474
#define LF32_FREE	21,497
#define LF32_MOVEABLE	22,519
#define MAX_MODULE_NAME32	23,545
#define TH32CS_SNAPHEAPLIST	24,575
#define TH32CS_SNAPPROCESS	25,607
#define TH32CS_SNAPTHREAD	26,638
#define TH32CS_SNAPMODULE	27,668
#define TH32CS_SNAPALL	28,698
#define TH32CS_INHERIT	29,798
typedef struct tagHEAPLIST32 30,832
	DWORD dwSize;31,863
	DWORD th32ProcessID;32,878
	DWORD th32HeapID;33,900
	DWORD dwFlags;34,919
} HEAPLIST32,*PHEAPLIST32,*LPHEAPLIST32;LPHEAPLIST3235,935
typedef struct tagHEAPENTRY32 36,976
	DWORD dwSize;37,1008
	HANDLE hHandle;38,1023
	DWORD dwAddress;39,1040
	DWORD dwBlockSize;40,1058
	DWORD dwFlags;41,1078
	DWORD dwLockCount;42,1094
	DWORD dwResvd;43,1114
	DWORD th32ProcessID;44,1130
	DWORD th32HeapID;45,1152
} HEAPENTRY32,*PHEAPENTRY32,*LPHEAPENTRY32;LPHEAPENTRY3246,1171
typedef struct tagPROCESSENTRY32W 47,1215
	DWORD dwSize;48,1251
	DWORD cntUsage;49,1266
	DWORD th32ProcessID;50,1283
	DWORD th32DefaultHeapID;51,1305
	DWORD th32ModuleID;52,1331
	DWORD cntThreads;53,1352
	DWORD th32ParentProcessID;54,1371
	LONG pcPriClassBase;55,1399
	DWORD dwFlags;56,1421
	WCHAR szExeFile[szExeFile57,1437
} PROCESSENTRY32W,*PPROCESSENTRY32W,*LPPROCESSENTRY32W;LPPROCESSENTRY32W58,1465
typedef struct tagPROCESSENTRY32 59,1521
	DWORD dwSize;60,1556
	DWORD cntUsage;61,1571
	DWORD th32ProcessID;62,1588
	DWORD th32DefaultHeapID;63,1610
	DWORD th32ModuleID;64,1636
	DWORD cntThreads;65,1657
	DWORD th32ParentProcessID;66,1676
	LONG pcPriClassBase;67,1704
	DWORD dwFlags;68,1726
	CHAR  szExeFile[szExeFile69,1742
} PROCESSENTRY32,*PPROCESSENTRY32,*LPPROCESSENTRY32;LPPROCESSENTRY3270,1770
typedef struct tagTHREADENTRY32 71,1823
	DWORD dwSize;72,1857
	DWORD cntUsage;73,1872
	DWORD th32ThreadID;74,1889
	DWORD th32OwnerProcessID;75,1910
	LONG tpBasePri;76,1937
	LONG tpDeltaPri;77,1954
	DWORD dwFlags;78,1972
} THREADENTRY32,*PTHREADENTRY32,*LPTHREADENTRY32;LPTHREADENTRY3279,1988
typedef struct tagMODULEENTRY32W 80,2038
	DWORD dwSize;81,2073
	DWORD th32ModuleID;82,2088
	DWORD th32ProcessID;83,2109
	DWORD GlblcntUsage;84,2131
	DWORD ProccntUsage;85,2152
	BYTE *modBaseAddr;modBaseAddr86,2173
	DWORD modBaseSize;87,2193
	HMODULE hModule;88,2213
	WCHAR szModule[szModule89,2232
	WCHAR szExePath[szExePath90,2272
} MODULEENTRY32W,*PMODULEENTRY32W,*LPMODULEENTRY32W;LPMODULEENTRY32W91,2300
typedef struct tagMODULEENTRY32 92,2353
	DWORD dwSize;93,2387
	DWORD th32ModuleID;94,2402
	DWORD th32ProcessID;95,2423
	DWORD GlblcntUsage;96,2445
	DWORD ProccntUsage;97,2466
	BYTE *modBaseAddr;modBaseAddr98,2487
	DWORD modBaseSize;99,2507
	HMODULE hModule;100,2527
	char szModule[szModule101,2545
	char szExePath[szExePath102,2584
} MODULEENTRY32,*PMODULEENTRY32,*LPMODULEENTRY32;LPMODULEENTRY32103,2611
#define LPMODULEENTRY32 121,3517
#define LPPROCESSENTRY32 122,3558
#define MODULEENTRY32 123,3601
#define Module32First 124,3638
#define Module32Next 125,3675
#define PMODULEENTRY32 126,3710
#define PPROCESSENTRY32 127,3749
#define PROCESSENTRY32 128,3790
#define Process32First 129,3829
#define Process32Next 130,3868

ms/uplink.h,594
#define APPMACROS_ONLY1,0
#define UP_stdin 6,82
#define UP_stdout 7,157
#define UP_stderr 8,233
#define UP_fprintf 9,309
#define UP_fgets 10,402
#define UP_fread 11,488
#define UP_fwrite 12,585
#define UP_fsetmod 13,689
#define UP_feof 14,770
#define UP_fclose 15,842
#define UP_fopen 17,917
#define UP_fseek 18,1011
#define UP_ftell 19,1093
#define UP_fflush 20,1167
#define UP_ferror 21,1241
#define UP_clearerr 22,1315
#define UP_fileno 23,1394
#define UP_open 25,1469
#define UP_read 26,1555
#define UP_write 27,1647
#define UP_lseek 28,1746
#define UP_close 29,1826

ms/uplink.c,209
#define UNICODE2,66
#define _UNICODE5,132
#define UNICODE8,199
static TCHAR msg[msg17,345
static void unimplemented 19,369
void OPENSSL_Uplink 24,497
#define LAZY(88,2371
LAZY(100,2669
main(116,3158

ms/applink.c,997
#define APPLINK_STDIN	1,0
#define APPLINK_STDOUT	2,24
#define APPLINK_STDERR	3,49
#define APPLINK_FPRINTF	4,74
#define APPLINK_FGETS	5,100
#define APPLINK_FREAD	6,124
#define APPLINK_FWRITE	7,148
#define APPLINK_FSETMOD	8,173
#define APPLINK_FEOF	9,199
#define APPLINK_FCLOSE 10,222
#define APPLINK_FOPEN	12,275
#define APPLINK_FSEEK	13,330
#define APPLINK_FTELL	14,355
#define APPLINK_FFLUSH	15,380
#define APPLINK_FERROR	16,406
#define APPLINK_CLEARERR 17,432
#define APPLINK_FILENO	18,460
#define APPLINK_OPEN	20,515
#define APPLINK_READ	21,587
#define APPLINK_WRITE	22,611
#define APPLINK_LSEEK	23,636
#define APPLINK_CLOSE	24,661
#define APPLINK_MAX	25,686
static void *app_stdin(app_stdin32,820
static void *app_stdout(app_stdout33,869
static void *app_stderr(app_stderr34,919
static int   app_feof(35,969
static int   app_ferror(36,1023
static void  app_clearerr(37,1080
static int   app_fileno(38,1134
static int   app_fsetmod(39,1192
__declspec(46,1339

test/r160test.c,0

engines/ccgost/gost2001_keyx.h,0

crypto/whrlpool/wp_locl.h,0

crypto/rsa/rsa_locl.h,0

crypto/pkcs7/pk7_dgst.c,0

crypto/pkcs7/pk7_enc.c,0

crypto/pkcs7/example.h,0

crypto/pem/pem_x509.c,0

crypto/pem/pem2.h,0

crypto/dsa/dsa_locl.h,0
